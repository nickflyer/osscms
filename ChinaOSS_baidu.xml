<?xml version="1.0" encoding="utf-8"?>
<document>
<webSite>http://oss.org.cn</webSite>
<webMaster>oss@csip.org.cn</webMaster>
<updatePeri>15</updatePeri>
<item>
<title>实用php性能分析工具XHProf（facebook）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64849</link>
<text>一，什么是XHProf
XHProf是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。一个函数的开销，可细
分成调用者和被调用者的开销，XHProf数据收集阶段，它记录调用次数的追踪和包容性的指标弧在动态callgraph的一个程序。它独有的数据计算的
报告/后处理阶段。在数据收集时，XHProfd通过检测循环来处理递归的函数调用，并通过给递归调用中每个深度的调用一个有用的命名来避开死循环。
XHProf分析报告有助于理解被执行的代码的结构，它有一个简单的HTML的用户界面（ 
PHP写成的）。基于浏览器的性能分析用户界面能更容易查看，或是与同行们分享成果。也能绘制调用关系图。

二，安装XHProf扩展模块
1，安装

wget&amp;nbsp;http://pecl.php.net/get/xhprof-0.9.2.tgztar&amp;nbsp;zxvf&amp;nbsp;&amp;nbsp;xhprof-0.9.2.tgzcp&amp;nbsp;./xhprof-0.9.2.tgz&amp;nbsp;./www&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//xhprof自身带有一个web版的分析页面，放到我的web服务器下面cd&amp;nbsp;xhprof-0.9.2/extension/usr/local/php/bin/phpize./configure&amp;nbsp;–enable-xhprof&amp;nbsp;–with-php-config=/usr/local/php/bin/php-configmake&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;make&amp;nbsp;install

wget http://pecl.php.net/get/xhprof-0.9.2.tgz  tar zxvf&amp;nbsp; xhprof-0.9.2.tgz  cp ./xhprof-0.9.2.tgz ./www&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //xhprof自身带有一个web版的分析页面，放到我的web服务器下面  cd xhprof-0.9.2/extension  /usr/local/php/bin/phpize  ./configure --enable-xhprof --with-php-config=/usr/local/php/bin/php-config  make &amp;amp;&amp;amp; make install
2，配置

[xhprof]&amp;nbsp;extension=xhprof.so&amp;nbsp;xhprof.output_dir=/home/zhangy/xhprof&amp;nbsp;&amp;nbsp;//如果不加存放目录的话，默认是放在/tmp下面

[xhprof]   extension=xhprof.so   xhprof.output_dir=/home/zhangy/xhprof&amp;nbsp; //如果不加存放目录的话，默认是放在/tmp下面
三，XHProf测试
前面我们说过了，XHProf自身带有一个web版的测试工具，里面还有一个小例子。看一下这个例子,我做了一点修改和注释

&amp;lt;?phpfunction&amp;nbsp;bar($x)&amp;nbsp;{&amp;nbsp;if&amp;nbsp;($x&amp;nbsp;&amp;gt;&amp;nbsp;0)&amp;nbsp;{&amp;nbsp;bar($x&amp;nbsp;-1);&amp;nbsp;}}function&amp;nbsp;foo()&amp;nbsp;{&amp;nbsp;for&amp;nbsp;($idx&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;$idx&amp;nbsp;&amp;lt;&amp;nbsp;5;&amp;nbsp;$idx++)&amp;nbsp;{&amp;nbsp;bar($idx);&amp;nbsp;$x&amp;nbsp;=&amp;nbsp;strlen(“abc”);&amp;nbsp;}}//启动xhprofxhprof_enable(XHPROF_FLAGS_CPU&amp;nbsp;+&amp;nbsp;XHPROF_FLAGS_MEMORY);//调用foo函数，也是我们要分析的函数foo();//停止xhprof$xhprof_data&amp;nbsp;=&amp;nbsp;xhprof_disable();//取得统计数据print_r($xhprof_data);$XHPROF_ROOT&amp;nbsp;=&amp;nbsp;realpath(dirname(__FILE__)&amp;nbsp;.&amp;nbsp;’/..’);include_once&amp;nbsp;$XHPROF_ROOT&amp;nbsp;.&amp;nbsp;”/xhprof_lib/utils/xhprof_lib.php”;include_once&amp;nbsp;$XHPROF_ROOT&amp;nbsp;.&amp;nbsp;”/xhprof_lib/utils/xhprof_runs.php”;//保存统计数据，生成统计ID和source名称$xhprof_runs&amp;nbsp;=&amp;nbsp;new&amp;nbsp;XHProfRuns_Default();$run_id&amp;nbsp;=&amp;nbsp;$xhprof_runs-&amp;gt;save_run($xhprof_data,&amp;nbsp;”xhprof_foo”);&amp;nbsp;//source名称是xhprof_foo//弹出一个统计窗口，查看统计信息echo&amp;nbsp;”&amp;lt;script&amp;nbsp;language=’javascript’&amp;gt;window.open(‘../xhprof_html/index.php?run=”&amp;nbsp;.&amp;nbsp;$run_id&amp;nbsp;.&amp;nbsp;”&amp;amp;source=xhprof_foo’);&amp;lt;/script&amp;gt;”;?&amp;gt;

&amp;lt;?php  function bar($x) {   if ($x &amp;gt; 0) {   bar($x -1);   }  }  function foo() {   for ($idx = 0; $idx &amp;lt; 5; $idx++) {   bar($idx);   $x = strlen(&quot;abc&quot;);   }  }    //启动xhprof  xhprof_enable(XHPROF_FLAGS_CPU + XHPROF_FLAGS_MEMORY);    //调用foo函数，也是我们要分析的函数  foo();    //停止xhprof  $xhprof_data = xhprof_disable();    //取得统计数据  print_r($xhprof_data);    $XHPROF_ROOT = realpath(dirname(__FILE__) . '/..');  include_once $XHPROF_ROOT . &quot;/xhprof_lib/utils/xhprof_lib.php&quot;;  include_once $XHPROF_ROOT . &quot;/xhprof_lib/utils/xhprof_runs.php&quot;;    //保存统计数据，生成统计ID和source名称  $xhprof_runs = new XHProfRuns_Default();  $run_id = $xhprof_runs-&amp;gt;save_run($xhprof_data, &quot;xhprof_foo&quot;); //source名称是xhprof_foo    //弹出一个统计窗口，查看统计信息  echo &quot;&amp;lt;script language='javascript'&amp;gt;window.open('../xhprof_html/index.php?run=&quot; . $run_id . &quot;&amp;amp;source=xhprof_foo');&amp;lt;/script&amp;gt;&quot;;  ?&amp;gt;
以下是部分的结果：

[foo==&amp;gt;bar]&amp;nbsp;=&amp;gt;&amp;nbsp;Array&amp;nbsp;(&amp;nbsp;[ct]&amp;nbsp;=&amp;gt;&amp;nbsp;5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//bar()这个函数被调用了5次&amp;nbsp;[wt]&amp;nbsp;=&amp;gt;&amp;nbsp;63&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//每次运行bar()所要的时间，不知道这个是不是平均值&amp;nbsp;[cpu]&amp;nbsp;=&amp;gt;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//每次运行bar()，cpu运算时间&amp;nbsp;[mu]&amp;nbsp;=&amp;gt;&amp;nbsp;2860&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//每次运行bar()，php所使用内存的改变&amp;nbsp;[pmu]&amp;nbsp;=&amp;gt;&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//每次运行bar()，php在内存使用最高峰时，所使用内存的改变&amp;nbsp;)

[foo==&amp;gt;bar] =&amp;gt; Array   (   [ct] =&amp;gt; 5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //bar()这个函数被调用了5次   [wt] =&amp;gt; 63&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //每次运行bar()所要的时间，不知道这个是不是平均值   [cpu] =&amp;gt; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //每次运行bar()，cpu运算时间   [mu] =&amp;gt; 2860&amp;nbsp;&amp;nbsp;&amp;nbsp; //每次运行bar()，php所使用内存的改变   [pmu] =&amp;gt; 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //每次运行bar()，php在内存使用最高峰时，所使用内存的改变   )
个人觉得，这个工具是给变态人用的，有谁真正测试过，php代码执行效率？我估计没有，只要不随心所欲的写代码，差别不是很大，花时间在上面，还不如想想怎么提高数据库的处理能力。如果自认为其他方面都做的很好了，在这方面做做也没关系。
更详细请参考：http://mirror.facebook.net/facebook/xhprof/doc.html#introduction
XHProf是facebook开源出来的一个php性能测试工具，也可以称之为profile工具，这个词不知道怎么翻译才比较达意。跟之前一直
使用的xdebug相比，有很多类似之处。以前对xdebug有一些记录还可以供参考，但是它的缺点是对性能影响太大，即便是开启了
profiler_enable_trigger参数，用在生产环境中也是惨不忍睹，cpu立刻就飙到high。
而xhprof就显得很轻量，是否记录profile可以由程序控制，因此，用在生产环境中也就成为一种可能。在它的文档上可以看到这样一种用法：
以万分之一的几率启用xhprof，平时悄悄的不打枪。
if (mt_rand(1, 10000) == 1) {&amp;nbsp; &amp;nbsp;xhprof_enable(XHPROF_FLAGS_MEMORY);&amp;nbsp; &amp;nbsp;$xhprof_on = true;&amp;nbsp; }
在程序结尾处调用方法保存profile
if ($xhprof_on) {&amp;nbsp; &amp;nbsp;// stop profiler&amp;nbsp; &amp;nbsp;$xhprof_data = xhprof_disable();&amp;nbsp; &amp;nbsp; &amp;nbsp;// save $xhprof_data somewhere (say a central DB)&amp;nbsp; &amp;nbsp;...&amp;nbsp; }
也可以用register_shutdown_function方法指定在程序结束时保存xhprof信息，这样就免去了结尾处判断，给个改写的不完整例子：
if (mt_rand(1, 10000) == 1) {&amp;nbsp; &amp;nbsp;xhprof_enable(XHPROF_FLAGS_MEMORY);&amp;nbsp; &amp;nbsp;register_shutdown_function(create_funcion('', &quot;$xhprof_data = xhprof_disable(); save $xhprof_data;&quot;));&amp;nbsp; }
至于日志，我暂时用的是最土的文件形式保存，定期清除即可。
BTW:xhprof生成的图形方式profile真是酷毙了，哪段代码成为瓶颈，一目了然。
&amp;nbsp;资源下载：
xhprofhttp://mirror.facebook.net/facebook/xhprof/doc.html
https://github.com/facebook/xhprof
                   
            
		            
                        

  

转载请注明出处：http://www.onexin.net/php-practical-performance-analysis-tools-xhprof-facebook/
  
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 15:12:41</pubDate>
</item>
<item>
<title>获取搜索引擎spider痕迹</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64848</link>
<text>如何分析网站日志中的搜索引擎爬虫轨迹？
　　首先，加入你要搜索百度的爬虫，那么就直接在保存记录的文本文档上搜索”Baiduspider”，我们节选以下一行来做详细的分析：

　　2010-07-19 13:02:40 W3SVC321 219.148.111.205 GET /index.html – 80 – 
61.135.168.39 Baiduspider+(+http://www.baidu.com/search/spider.htm) 200 0
 64- – www.onexin.net
　　这段IIS日志代码表示：在2010-07-19 
13:02:40这个时间，百度搜索引擎的蜘蛛（ip地址为61.135.168.39，后面的http://www.baidu.com/search
/spider.htm是关于Baiduspider+的相关问题）访问了服务器ip为219.148.111.205的网站
www.onexin.net，并且抓取了首页/index.html，该日志记录保存在 W3SVC321文件夹。
01//获取蜘蛛爬虫名或防采集02function isSpider(){03&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$bots = array(04&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Google'&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'googlebot',05&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Baidu'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'baiduspider',06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Yahoo'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'yahoo slurp',07&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Soso'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'sosospider',08&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Msn'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'msnbot',09&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Altavista'&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'scooter ',10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Sogou'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'sogou spider',11&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Yodao'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; =&amp;gt; 'yodaobot'12&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;);13&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$userAgent = strtolower($_SERVER['HTTP_USER_AGENT']);14&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foreach ($bots as $k =&amp;gt; $v){15&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (strstr($v,$userAgent)){16&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return $k;17&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;18&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}19&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}20&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;21}
获取哪种蜘蛛爬虫后保存蜘蛛痕迹。根据采集的时候HTTP_USER_AGENT为空可以来防止采集
01//抓蜘蛛爬虫02$spi&amp;nbsp;&amp;nbsp;&amp;nbsp; = isSpider();03if($spi){04&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$tlc_thispage&amp;nbsp;&amp;nbsp;&amp;nbsp; = addslashes($_SERVER['HTTP_USER_AGENT']);05&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$file&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; = 'robot.txt';06&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$time&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; = date('Y-m-d H:i:s',mktime());07&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$handle&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; = fopen($file,'a+');08&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$PR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; = $_SERVER['REQUEST_URI'];09&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fwrite($handle, &quot;Time:{$time} ROBOT:{$spi} AGENT:{$tlc_thispage} URL:{$PR} \n\r&quot;);10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fclose($handle);11}
其中，两个地方值得说明：
　　一是代码中的200表示搜索引擎蜘蛛爬行后返回HTTP的状态代码，代表成功爬行并抓取。
HTTP的状态代码的具体意思参见如下：
　　2xx 成功
　　200 正常;请求已完成。
　　201 正常;紧接 POST 命令。
　　202 正常;已接受用于处理，但处理尚未完成。
　　203 正常;部分信息 — 返回的信息只是一部分。
　　204 正常;无响应 — 已接收请求，但不存在要回送的信息。
　　3xx 重定向
　　301 已移动 — 请求的数据具有新的位置且更改是永久的。
　　302 已找到 — 请求的数据临时具有不同 URI。
　　303 请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。
　　304 未修改 — 未按预期修改文档。
　　305 使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。
　　306 未使用 — 不再使用;保留此代码以便将来使用。
　　4xx 客户机中出现的错误
　　400 错误请求 — 请求中有语法问题，或不能满足请求。
　　401 未授权 — 未授权客户机访问数据。
　　402 需要付款 — 表示计费系统已有效。
　　403 禁止 — 即使有授权也不需要访问。
　　404 找不到 — 服务器找不到给定的资源;文档不存在。
　　407 代理认证请求 — 客户机首先必须使用代理认证自身。
　　410 请求的网页不存在(永久);
　　415 介质类型不受支持 — 服务器拒绝服务请求，因为不支持请求实体的格式。
　　5xx 服务器中出现的错误
　　500 内部错误 — 因为意外情况，服务器不能完成请求。
　　501 未执行 — 服务器不支持请求的工具。
　　502 错误网关 — 服务器接收到来自上游服务器的无效响应。
　　503 无法获得服务 — 由于临时过载或维护，服务器无法处理请求。
二、各大搜索引擎爬虫（蜘蛛）的名称整理如下，大家可以对号入座：
　　1. Google爬虫名称
　　1） Googlebot：从Google的网站索引和新闻索引中抓取网页
　　2） Googlebot-Mobile针对Google的移动索引抓取网页
　　3） Googlebot-Image：针对Google的图片索引抓取网页
　　4） Mediapartners-Google：抓取网页确定 AdSense 的内容。只有在你的网站上展示 AdSense 广告的情况下，Google才会使用此漫游器来抓取您的网站。
　　5） Adsbot-Google：抓取网页来衡量 AdWords 目标网页的质量。只有在你使用 Google AdWords 为你的网站做广告的情况下，Google才会使用此漫游器。
　　2. 百度（Baidu）爬虫名称：Baiduspider
　　3. 雅虎（Yahoo）爬虫名称：Yahoo Slurp
　　4. 有道（Yodao）蜘蛛名称：YodaoBot
　　5. 搜狗（sogou）蜘蛛名称：sogou spider
　　6. MSN的蜘蛛名称：Msnbot
其他的搜索引擎我们使用得很少，有兴趣您可以收集：）。
                   
            
		            
                        

  

转载请注明出处：http://www.onexin.net/get-search-engine-spider-marks/
  
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 14:56:36</pubDate>
</item>
<item>
<title>supesite远程图片本地化并作为文章附件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64847</link>
<text>*支持图片打水印，
*支持jpe/gif/png图片格式，

*不采集本站图片。
打开admin_spacenews.php文件：
查找：
1$setsqlarr = array(2'message' =&amp;gt; scensor($_POST['message'], 1),3'postip' =&amp;gt; $_SGLOBAL['onlineip'],4'customfieldid' =&amp;gt; $_POST['customfieldid'],5'customfieldtext' =&amp;gt; $setcustomfieldtext6);

下面加：
view sourceprint?01//远程图片本地化 BEGIN02include_once(S_ROOT.'./admin/admin_spacenews_pic.php');03&amp;nbsp;04$msgarr = pregmessagearray($setsqlarr['message'], $msgurl);05&amp;nbsp;06picaddtodb($msgarr, $itemid); //作为文章附件入库07&amp;nbsp;08$setsqlarr['message'] = addslashes($msgarr['message']);09&amp;nbsp;10//远程图片本地化 END

                   
            
		            
                        

  

转载请注明出处：http://www.onexin.net/supesite-remote-image-localization-and-as-a-post-attachments</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 14:50:30</pubDate>
</item>
<item>
<title>SupeSite常用sql语句高级篇(二)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64846</link>
<text>一、资讯
1、查资讯自定义字段

1SELECT i.*,n.*,c.type AS c_type,c.name AS c_name,c.displayorder AS c_displayorder,c.customfieldtext AS c_customfieldtext,c.isdefault AS c_isdefault,c.isshare AS c_isshare FROM supe_spaceitems i, supe_spacenews n, supe_customfields c WHERE i.itemid = n.itemid AND n.customfieldid = c.customfieldid AND n.customfieldid !=0
通过supe_spaceitems,supe_spacenews,supe_customfields三表联查来取得数据。

2、查资讯列表，同时查对应的图片附件
1SELECT * FROM supe_spaceitems i, supe_attachments a WHERE i.picid = a.aid
查资讯列表和内容，同时查对应的图片附件
1SELECT i.*, n.message, a.* FROM supe_spaceitems i, supe_spacenews n, supe_attachments a WHERE i.picid = a.aid AND i.itemid=n.itemid
3、资讯列表，同时查对应的图片附件（列出仅含图片的文章）
1SELECT * FROM supe_spaceitems i, supe_attachments a WHERE i.picid = a.aid LIMIT 0,10
4、资讯列表和内容，同时查对应的图片附件
1SELECT i.*, n.message, a.* FROM supe_spaceitems i, supe_spacenews n, supe_attachments a WHERE i.picid = a.aid AND i.itemid=n.itemid LIMIT 0,10
5、利用left join联合查询，得到所有文章（不含图片的输出NULL），比嵌套查询效率更高。
1SELECT i . * , n.message, a . *2FROM supe_spaceitems i3INNER JOIN supe_spacenews n ON i.itemid = n.itemid4LEFT JOIN supe_attachments a ON i.picid = a.aid5ORDER BY i.itemid DESC6LIMIT 0 , 10
二、模型
1、调用模型中图片，标题，内容数据
1SELECT * FROM supe_[模型英文ID]message m,supe_[模型英文ID]items i WHERE m.itemid=i.itemid
supe_[模型英文ID]message 与 supe_[模型英文ID]items 是存储模型信息的主表，添加的字段也会添加在 supe_[模型英文ID]message 里面，将这两个表联起来就可以查询出想要的大部分数据。
2.模型分类：
1select g.* from supe_channels c right join supe_categories g on&amp;nbsp; c.nameid=g.type where c.upnameid!=&quot;news&quot; and c.nameid=&quot;test&quot;
三、论坛
1、查询论坛中今天发帖总数与论坛总帖数
1SELECT sum(posts) AS posts , sum(todayposts) AS todayposts FROM cdb_forums
2、查询论坛主题，在设置主题分类时，显示出主题分类名称
1SELECT * FROM 数据库名.cdb_threads t, 数据库名.cdb_threadtypes y WHERE t.typeid = y.typeid
3、查询论坛的主题，并显示版块名称：
1SELECT * FROM 数据库名.cdb_threads t, 数据库名.cdb_forums f WHERE t.fid = f.fid
4、如何调用版块简介
1SELECT * FROM 数据库名.cdb_forums s,数据库名.cdb_forumfields f WHERE s.fid=f.fid
5、从SS取Discuz!含有图片附件的最新主题
1SELECT * , a.attachment AS attachment FROM cdb_threads t, cdb_attachments a, cdb_posts p WHERE t.tid = a.tid AND a.isimage =1 AND p.tid = t.tid AND p.first =1 GROUP BY t.tid ORDER BY t.dateline DESC
6、读取论坛 某个用户所收藏的主题：
1SELECT * FROM cdb_favorites f, cdb_members m, cdb_threads t WHERE f.uid = m.uid AND f.tid = t.tid
7、调用论坛中每个主题调用一张图片的SQL:
1SELECT a. * , t. * , count( DISTINCT a.tid )2FROM cdb_attachments a, cdb_threads t3WHERE a.tid = (4SELECT t.tid5FROM cdb_threads t6WHERE t.attachment =27ORDER BY dateline DESC )8GROUP BY a.tid
8、查询论坛的分类信息
论坛的分类信息是要四表联查的，并且不能一次查出来，分两次。第一次是将主题表与主题类型有联查（数据显示一次）;第二次是查询分类信息的各个选项的值，查询出来后进行循环显示
1SELECT * FROM cdb_threads t, cdb_threadtypes y WHERE t.sortid = y.typeid AND t.tid=4
1SELECT * FROM cdb_typeoptionvars v,cdb_typeoptions o WHERE o.optionid=v.optionid AND v.tid=4 AND v.sortid=1
9、从SS取Discuz!含有图片附件的最新主题
1SELECT * , a.attachment AS attachment FROM cdb_threads t, cdb_attachments a, cdb_posts p WHERE t.tid = a.tid AND a.isimage =1 AND p.tid = t.tid AND p.first =1 GROUP BY t.tid ORDER BY t.dateline DESC LIMIT 0,10</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 14:46:46</pubDate>
</item>
<item>
<title>SupeSite常用sql语句(一)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64845</link>
<text>1、清空数据表supe_robotitems和supe_robotmessages：

1TRUNCATE TABLE `supe_robotitems`;2TRUNCATE TABLE `supe_robotmessages`；

这两个表是装载采集内容的，如果要清空其它数据表可以自己更换；
2、将SupeSite中所有未审核的内容全部审核为“1级审核”
1UPDATE `supe_spaceitems` SET `grade` =1 WHERE `grade` =0 ;
这个方法对采集来几十万，几百万条的站点管理最方便；
3、删除XXX表里的ID1到ID10的行：
1delete form xxx where id between 1 and 10;
数据调用：
一、资讯
查资讯自定义字段
1SELECT i.*,n.*,c.type as c_type,c.name as c_name,c.displayorder as c_displayorder,c.customfieldtext as c_customfieldtext,c.isdefault as c_isdefault,c.isshare as c_isshare FROM supe_spaceitems i, supe_spacenews n, supe_customfields c WHERE i.itemid = n.itemid AND n.customfieldid = c.customfieldid AND n.customfieldid !=0
通过supe_spaceitems,supe_spacenews,supe_customfields三表联查来取得数据。
查资讯列表，同时查对应的图片附件
1SELECT * FROM supe_spaceitems i, supe_attachments a WHERE i.picid = a.aid
查资讯列表和内容，同时查对应的图片附件
1SELECT i.*, n.message, a.* FROM supe_spaceitems i, supe_spacenews n, supe_attachments a WHERE i.picid = a.aid AND i.itemid=n.itemid
调用模型中图片，标题，内容数据
1SELECT * FROM supe_[模型英文ID]message m,supe_[模型英文ID]items i WHERE m.itemid=i.itemid
supe_[模型英文ID]message 与 supe_[模型英文ID]items 是存储模型信息的主表，添加的字段也会添加在 supe_[模型英文ID]message 里面，将这两个表联起来就可以查询出想要的大部分数据。
二、论坛
查询论坛中今天发帖总数与论坛总帖数
1SELECT sum(posts) AS posts , sum(todayposts) AS todayposts FROM cdb_forums
查询论坛主题，在设置主题分类时，显示出主题分类名称
1SELECT * FROM cdb_threads t, cdb_threadtypes y WHERE t.typeid = y.typeid
查询论坛的主题，并显示版块名称
1SELECT * FROM cdb_threads t, cdb_forums f WHERE t.fid = f.fid
如何调用版块简介
1SELECT * FROM cdb_forums s, cdb_forumfields f WHERE s.fid=f.fid
从SS取Discuz!含有图片附件的最新主题
1SELECT * , a.attachment AS attachment FROM cdb_threads t, cdb_attachments a, cdb_posts p WHERE t.tid = a.tid AND a.isimage =1 AND p.tid = t.tid AND p.first =1 GROUP BY t.tid ORDER BY t.dateline DESC
读取论坛 某个用户所收藏的主题
1SELECT * FROM cdb_favorites f, cdb_members m, cdb_threads t WHERE f.uid = m.uid AND f.tid = t.tid
调用论坛中每个主题调用一张图片的
1SELECT a.* , t.* , count( DISTINCT a.tid )2FROM cdb_attachments a, cdb_threads t3WHERE a.tid = (4SELECT t.tid5FROM cdb_threads t6WHERE t.attachment =27ORDER BY dateline DESC )8GROUP BY a.tid
查询论坛的分类信息
论坛的分类信息是要四表联查的，并且不能一次查出来，分两次，第一次是将主题表与主题类型有联查（数据显示一次）
第二步是查询分类信息的各个选项的值，查询出来后进行循环显示
注意：因为很复杂，具体应用时，要先理解清楚，把SQL在数据库中运行一遍，想好怎么写展示代码
view sourceprint?1SELECT * FROM cdb_threads t, cdb_threadtypes y WHERE t.sortid = y.typeid AND t.tid=42SELECT * FROM cdb_typeoptionvars v,cdb_typeoptions o WHERE o.optionid=v.optionid AND v.tid=4 and v.sortid=1</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 14:45:29</pubDate>
</item>
<item>
<title>美国 NASA 放出开源项目站点</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64844</link>
<text>NASA 推出了整合旗下开源内容的网站 code.NASA，目前是 Alpha 阶段。

目前网站上有不少航空航天相关的开源项目，感兴趣的朋友们可以前去浏览。

发布公告

code.NASA 主站</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 13:52:29</pubDate>
</item>
<item>
<title>2012年展望：Ubuntu的Unity新征程</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64843</link>
<text>
			&amp;nbsp;&amp;nbsp;
展望新的一年，因为视角的不同会有不同的远景，这是常识。如果我们站在Ubuntu的立场上来观察2012年会有什么新景象（或新气象）呢？

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
现在，2011年过去了，围绕Linux桌
面争吵了又一年。一个争论焦点是：计算机键盘、鼠标还要不要？也就是说，键盘与鼠标还需要不需要保留？准确地说，在多大程度上，键盘与鼠标还需要保留？有
人会觉得这个问题问得很奇怪、很滑稽，这根本不是个问题，因为键盘与鼠标当然需要继续保留。比如，我就为键盘与鼠标的缺失苦恼了一个星期。但是，有人却不
这么想，对这个问题有不同的认识。我们将主张保留键盘与鼠标的人群称为传统派，另一派成为先锋派。这里需要说明的是，这种分类过于绝对，只是为了说明问
题、分析问题更加方便而已。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
老实说，现今国内年轻人头脑里面常常想些什么事情，我已经弄不明白了，因为
年龄相差太大。比如，让我当中学生的课外辅导员是不可能了。他们会叫我是老爷爷、老古董，或者是“废物”（也许心里面是这么想的）。对此，我并不介意。可
是，我在地铁里看见玩智能手机或平板小电脑的年轻人越来越多了，这是一个新时尚。移动上网设备是不需要键盘与鼠标的。也就是说，信息就在你的手指之间流
动，键盘与鼠标逐渐消失了。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
我认为，VMware总裁Paul Maritz是先锋派的代表人物之一。在去年8月30日，他强烈劝告广大客户“to think beyond the desktop
computer”，提醒（或督促）人们把眼光放远一点，从台式计算机再向前走一步。他认为：“Cloud
to End Computer Desktop Era“，意思是说，云计算将终结计算机的桌面时代。他预言：在未来5年之内，上网计算设备只有20%是台式计算机。这种言论不算”先锋派“主张，算什么？

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
Ubuntu奠基人Mark
Shuttleworth不仅有言论，而且有行动，是典型的先锋派人物。他亲自领导Unity“全息”移动桌面的开发、完善与推广。今年4月26日，Ubuntu
12.04 LTS版本将把Unity桌面延伸到5年之后。Unity桌面模式将用在台式机、平板、小电脑到车载设备以及智能电视，一句话，Unity将无处不在，在2012年，Unity将开始新的征程。这与曹参教授的“大一统数据论”（“Unify
Data”）不谋而合也。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
在我们国内，几乎无人看好Unity桌面，除了Canonical（中国）的那帮“小毛头”在使劲推动Unity桌面的普及。在此，我要讲一个（内蒙古）牧羊人在深圳创业的故事。三年之前，他就看准了Ubuntu普及Linux的大方向。创办深圳乌邦托（Wubuntu）公司。如今，从外表上看起来，乌邦托几乎像是一个“皮包公司”，公司规模很小，几乎为零。但是，我们不要小看这位年轻的牧羊人，小瞧他的创业意志，因为，他手中已经有了4项“云专利”（乌邦托公司是该项专利的权利人）。同时，乌邦托公司认准了Unity桌面模式，2012年必有大动作。（注：乌邦托的本意就是绝对不做“乌托邦”，寓意很深。）
							
		</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 13:45:36</pubDate>
</item>
<item>
<title>全球Linux终端用户知多少？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64842</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;
因为Linux可以随便送人，因而，全球究竟有多少Linux用户很难说清楚，只能大概地估计。但是，我们总得有个大致的概念，避免哇啦哇啦地乱说话。

根据StatCounter网站的统计数据（2011年2月至4月），当前，古巴Linux用户位居世界第一（占6.33%），其次是委内瑞拉（3.70%），第三名是乌拉圭（3.20%），第四名是津巴布韦（3.15%），其余国家的Linux用户所占比例均在3.00%以下，我国不到1.00%。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
今年元月5日，NetMarketShare网站公布一份“自动扫描”电子调查报告，发现全球Linux用户在今年下半年出现明显增长趋势，从0.96%猛增到1.41%，几乎增长50%（每月平稳增长），而在此期间，Windows用户从93.07%下降到92.23%，苹果iOS从5.96%上升至6.36%，几乎没变，由此可见，Linux抢了Windows用户。这就奇怪了，难道Linux还能抢走Windows用户？而这却是客观事实，数字说话了。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
有人也许会想，这是谷歌Abdroid的功劳（或贡献）。非也。在上述统计中，Android与Linux是分开统计的。Android属于移动操作系统，而不归于Linux桌面用户。据上述统计，全球移动用户只占7.7%的市场份额，而桌面用户占有92.0%的市场份额。在移动市场，苹果iOS占52.1%，Java ME占21.3%，Android只占16.3%，Symbian占5.8%，别整天神吹谷歌的Android了。我就是不说Android的好话！

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
去年下半年，全球桌面Linux用户数为什么会持续增长呢？这与Ubuntu大家族有某种神秘的“连带”关系。我看好Unity桌面的现实表现，过几天，从CES大展上就会有好消息传来。在此，根据上述统计，从去年2月全球移动市场只占3.88%，到了去年年底，就猛增至7.67%，全球移动市场，整个翻了一翻。足见全球移动市场增长之快。由此可见，VMware总裁的预见（几年后移动上网为”王“）是有事实根据的。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
昨天下午，一位编程高手来我家看我聊天。这小家伙竟然把互联网TCP/IP协议琢磨透了，了解得“非常彻底”，甚至会针对CPU的某个特定的针脚调试微程序（汇编语言）。他做的TOE（TCP卸载引擎）无人可比。我想，在中国年轻人里面，有不少编程高手，在软件架构师曹参的带领下，有什么软件做不出来呢？如果时光能够倒流，我定要投奔山东大学，拜曹参为师，搞集成软件，为国争光。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
说明：请见www.netmarketshare.com互联网统计网站，有关电子自动扫描的原理将一目了然也。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 13:36:04</pubDate>
</item>
<item>
<title>CES 2012：Ubuntu智能电视正式亮相</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64840</link>
<text>&amp;nbsp;&amp;nbsp;什么是“智能电视”（“SmartTV“）？准确地说，智能电视指的是“Connected TV“或”HybridTV”（混合电视），注意：”智能电视“一词不能与传统的”互联网电视“或”Web电视“混淆使用。简单地说，智能电视就是”连接后台的电视“。什么叫”后台“呢？在这里，”后台”就是类似“软件中心”的一种东西（或媒体数据库，媒体商店），智能电视机就是后台的“前端设备”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;老实说，早在2007年6月18日，微软就开始着手研发智能电视（MedisRoom）；雅虎于2011年CES上发布智能电视(GoTV)；谷歌的电智能视（Google TV）在2011年10月28日发布。实际上，当今世界各大跨国巨头都在争抢全球的智能电视市场。一般而言，智能电视应该具备以下基本特征（或最低要求）：：　　1、具备宽带互联网接入能力；　　2、可以接收并回放从互联网获得的各种影像、音乐等数据流；　　3、可以下载并执行各种专门开发的应用程序，包括网络游戏；　　4、具有网络通信功能（妙也）；　　5、具备全新的遥控装置，并且可以和各种移动终端链接互动（能力）。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;可以预见，在不久的未来，人们从“看电视”转向“玩电视”。在今年的CES大展上，公开展出的唯一款智能电视就是Ubuntu智能电视，其外观如下： &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;从上图可见，Ubuntu智能电视的界面就是普通Unity桌面的“定制版”，因为，屏幕最左边的“弹射栏”（即Launcher）依稀可见。对于Ubuntu而言，现在可以这样说：智能电视、台式机、平板电脑与智能电话，屏幕从大到小，都是Unity桌面一个“模式”，用户不必担心使用习惯的不同所带来的“不适应”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;刚才，经过搜索，我仔细对比了微软、雅虎与谷歌三款智能电视的人机界面，发现Ubuntu智能电视的“人机接口”最自然、最简洁（我不是在“胡吹”，你自己可以搜索一下看个究竟）。因此，我仍然觉得，忽视Unity桌面是不正确的。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-10 13:45:59</pubDate>
</item>
<item>
<title>advance file manage</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64839</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2005-08-08 15:52:22</pubDate>
</item>
<item>
<title>RSS Feeder</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64838</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-09-07 09:41:06</pubDate>
</item>
<item>
<title>los-lib</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64837</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-07-16 12:47:15</pubDate>
</item>
<item>
<title>网络发言防和谐器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64836</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-04-16 03:37:50</pubDate>
</item>
<item>
<title>IDAQ</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64835</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-03-07 13:05:00</pubDate>
</item>
<item>
<title>Rails 补丁与扩展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64834</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-05-13 14:59:09</pubDate>
</item>
<item>
<title>unzip</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64833</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2005-09-19 16:44:32</pubDate>
</item>
<item>
<title>crackerjack</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64832</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2009-08-31 22:48:11</pubDate>
</item>
<item>
<title>crackerjack-cn</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64831</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2009-09-02 04:18:10</pubDate>
</item>
<item>
<title>Cnpack图像编辑器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64830</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-01-30 09:09:03</pubDate>
</item>
<item>
<title>基于arm平台的家用脱机下载器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64829</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-10-20 02:55:08</pubDate>
</item>
<item>
<title>vb-chat</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64828</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-08-16 08:05:25</pubDate>
</item>
<item>
<title>基于Meego-linux和QT的音乐播放器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64827</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-01-14 12:55:40</pubDate>
</item>
<item>
<title>IPSearcher</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64826</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-02-17 22:53:15</pubDate>
</item>
<item>
<title>YaLog</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64825</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-02-23 23:38:16</pubDate>
</item>
<item>
<title>养鱼小工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64824</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-12-20 02:16:56</pubDate>
</item>
<item>
<title>Study on Android System Applications</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64823</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-10-27 01:06:18</pubDate>
</item>
<item>
<title>Minsh - 迷你型Shell</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64822</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-07-31 11:51:10</pubDate>
</item>
<item>
<title>ImageViewer</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64821</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-05-05 23:54:28</pubDate>
</item>
<item>
<title>web开发框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64820</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-02-21 11:10:26</pubDate>
</item>
<item>
<title>Yet Another Matlab</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64819</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-01-25 15:39:27</pubDate>
</item>
<item>
<title>GPS社交平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64818</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-11-16 11:53:54</pubDate>
</item>
<item>
<title>开源ERP</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64817</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-06-22 14:11:57</pubDate>
</item>
<item>
<title>基于ARM-Linux和QT的影音播放器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64816</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-10-24 22:55:24</pubDate>
</item>
<item>
<title>P2P点播直播开源项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64815</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-01-14 17:07:09</pubDate>
</item>
<item>
<title>WAP 语言标签库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64814</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-05-18 21:51:36</pubDate>
</item>
<item>
<title>基于arm平台的电子书阅读器Necronomicon</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64813</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-10-20 08:52:28</pubDate>
</item>
<item>
<title>TankWar</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64812</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-06-22 02:56:39</pubDate>
</item>
<item>
<title>Rhapsody</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64811</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2008-04-22 13:14:09</pubDate>
</item>
<item>
<title>kVitrail</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64810</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2009-03-24 21:58:17</pubDate>
</item>
<item>
<title>百度“超级搜霸”工具条(for Firefox)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64809</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-01-08 10:37:47</pubDate>
</item>
<item>
<title>ElfParser - Elf格式解析</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64808</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-07-31 12:02:00</pubDate>
</item>
<item>
<title>web emacs</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64807</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-01-03 17:51:51</pubDate>
</item>
<item>
<title>testlhw</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64806</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-08-09 12:30:32</pubDate>
</item>
<item>
<title>Monkeys Audio plugin for Gstreamer 0.10</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64805</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-12-27 23:02:39</pubDate>
</item>
<item>
<title>bugfreej</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64804</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-06-06 16:54:17</pubDate>
</item>
<item>
<title>时机商计 (CK-ERP)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64803</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-09-20 13:47:00</pubDate>
</item>
<item>
<title>Slackware China</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64802</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-07-11 18:17:01</pubDate>
</item>
<item>
<title>VTec (Virtual Trade e-Commerce System)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64801</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2007-12-29 03:43:46</pubDate>
</item>
<item>
<title>Code Beautifier Collection</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64800</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2005-12-22 12:08:41</pubDate>
</item>
<item>
<title>清华大学学位论文LaTeX模板</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64799</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2005-12-31 22:05:33</pubDate>
</item>
<item>
<title>crowdspider</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64798</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2010-09-03 04:10:41</pubDate>
</item>
<item>
<title>dget - download get for linux</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64797</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2006-05-23 15:23:54</pubDate>
</item>
<item>
<title>2012年最新出炉，多款非常实用酷炫的jQuery插件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64796</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2012-01-09 15:26:01</pubDate>
</item>
<item>
<title>腾讯Q+升级到3.0 继续向 Web OS 迈进</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64795</link>
<text>很显然，迅速推进的Q+动作使得腾讯的做一个WebOS云操作系统的野心越来越大了。今天腾讯正式发布了QQ2011正式版（Q+），用户可以通过该版本QQ进入到Q+3.0版本。3.0版本的Q+主要新特点包括：取消侧边栏，同步整理Windows桌面，Q+格子模块自动分类内容，全屏模式下新增“桌面”“应用”“推荐”和“网址”4个分屏等等。感兴趣的朋友可以下载试用一下（以下为部分截图）。  目前来看，随着Q+不断向一个云操作系统进化，最为忐忑的可能就是360桌面了。360桌面目前的活跃用户数有5000万，其和拥有近7亿用户的腾讯的战争或许还会有更好看的未来。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-09 17:15:53</pubDate>
</item>
<item>
<title>FireFox网页开发调试插件 Firebug 1.9 正式版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64708</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-07 22:44:01</pubDate>
</item>
<item>
<title>FreeBSD 9.0 正式版发布下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64707</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-07 22:46:01</pubDate>
</item>
<item>
<title>Firefox 10将获得长期支持，增强Web开发功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64706</link>
<text>Mozilla自今年夏天将Firefox的发布周期缩短为6周后，很多用户表示不适应，认为更新过于频繁。Mozilla也意识到了这个问题，决定为Firefox新增长期支持版本（Extended Support Release）。

首个长期支持版本就是Firefox 10（目前仍处在Aurora早期开发阶段）。这是Mozilla在昨日举办的LISA'11大会上刚刚宣布的好消息，Firefox 10的支持周期大约为1年，期间不会增添新功能，仅会提供安全性更新。

通常，Mozilla 会鼓励用户升级到新版本，但在长期支持版中，通知功能将被关闭。而Mozilla将继续采用快速发布周期，长期支持版主要是为了满足企业用户所需要的安全和稳定性。



Firefox 10增加了更为强大的Web开发工具，增强了现有的Web控制台、检查器、暂存器，还吸收了Firebug的一些优点：

打开Web检查器后，将鼠标悬停在网页元素上就可进行详细的查看和研究，要退出查看模式直接按Esc键即可；
可以通过底部按钮查看详细的信息，支持实时编辑；
支持直接查看HTML代码和定位，直接按“HTML”按钮即可；
像Firebug一样，输入console.dir可以看到所有的window对象的属性。
暂存器也得到了升级，对当前页面的脚本暂存变得更加容易。
Mozilla计划将在明年1月31日发布Firefox 10正式版，不过你可以下载Arora版本来体验一下这些功能。另外，Mozilla将在Firefox 10发布后，停止对Firefox 3.6的支持。

Firefox 10的支持周期大约为1年，期间不会增添新功能，仅会提供安全性更新。通常，Mozilla会鼓励用户升级到新版本，但在长期支持版本中，通知升级功能将被关闭。

Firefox 3.6是在2010年1月发布的，距今已有两年时间。Firefox 3.6用户将在今年4月收到更新通知，提醒用户更新到最新版本。

根据Firefox的发布约定，Mozilla会在首个ESR版本第7次更新（Firefox 10.0.7）发布的同时，推出第2个ESR版本——Firefox 17，同样，Firefox 17.0.7 ESR 会和Firefox 24 ESR同时发布。

下图为Firefox ESR版本的发布周期，希望各位开发者和用户淡定。



Via Mozilla</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-08 00:11:12</pubDate>
</item>
<item>
<title>Linux基金会放弃重建Linux开发者网络（LDN）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64705</link>
<text>	
	　　日前，Linux 基金会决定，不会再继续 Linux 开发者网络（LDN）的重建工作。目前，访问 LDN 会被重定向到 Linux 基金会官网。
　　LDN 之前在 Linux 社区中扮演着一个关键的角色，为 Linux 开发者提供了大量的参考信息和重要资料，同时也吸引了更多的开发者加入到 Linux 生态系统中。
　　事件起因于 2011 年 9 月，当时 kernel.org 发布了一则公告，公告称 Linux 内核源码被黑客入侵了，入侵者通过泄漏的用户凭据获得了 root 访问权限，其重创了 Linux Torvald 本人设计的 Git 系统。随后 kernel.org 服务器暂停使用，内核发布移到了 GitHub 中。
　　随后，Linux 基金会一系列基础网站也因安全问题紧急关闭，Linux 基金会称“这是在权衡了安全问题与最佳做法之后作出的决定”，并认为这个漏洞与 kernel.org 被黑有关联。
　　这些被关闭的网站中，大多数在一个月后已经恢复。
　　但日前 Linux 基金会公共关系和社区主管 Jennifer Cloer 证实，LDN（Linux Developer Network）不会被恢复，因为：

LDN 网站的大部分内容在 Linux.com 和 LinuxFoundation.org 网站中可以找到，鉴于这些网站的性质，大量的内容是重复的，我们将会花费大量时间在安全问题上，并使其更稳固。放弃 LDN 重建也有助于我们更好地维护现有的资源，更好地服务 Linux 社区。

　　同时，Jennifer Cloer 表示，LDN 中的内容不会丢失，将会被转移到 Linux 基金会其他的网站中。
　　Via ITWorld
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-07 23:58:21</pubDate>
</item>
<item>
<title>基于CSS3的表现层框架impress.js，轻松创建杀手级在线演示应用</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64661</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2012-01-06 09:32:01</pubDate>
</item>
<item>
<title>Silk浏览器被移植到其它Android设备</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64660</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2012-01-06 16:12:01</pubDate>
</item>
<item>
<title>程序语言语法着色工具，Highlight 3.7 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64659</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 16:13:01</pubDate>
</item>
<item>
<title>[原创] PHP利用opcode缓存技术进行网站提速方法详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64658</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2012-01-06 13:34:06</pubDate>
</item>
<item>
<title>微软真的会收购诺基亚手机业务吗？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64657</link>
<text>Eldar Murtazin ，这个“大嘴巴”的俄国人，mobile-review 的主编——他的名字总是跟各种“爆料”联系在一起，尤其擅长于诺基亚和索尼爱立信的新闻。在几个小时前，他通过 Twitter 爆料出了微软和诺基亚的“秘密会议”，并声称诺基亚的手机制造产业将被出售。Eldar Murtazin 的爆料绘声绘色，并且在四个小时内发了好几十条推（包括回复和转发），重点是下面几条：微软和诺基亚在 2011 年 5 月就达成了某种秘密协定；鲍尔默，埃洛普，还有 Andy Lees ，Kai Ostamo 将会在拉斯维加斯碰面并商讨收购事宜；诺基亚保留低端功能手机，地图业务（包括收购的 Navteq）和诺基亚西门子通信公司的业务；Windows Phone 手机业务从诺基亚公司剥离，埃洛普回归微软；2012 年下半年完成收购；“大嘴巴”还评论说，主动权在于微软手上，当 Gravity 的开发者 @janole 问他：“以后 Windows Phone 还会沿用诺基亚品牌吗？”得到了干脆的回答：“NO.”冷静下来分析，这种“出售与收购”的消息从半年前就开始风传，诺基亚管理层多次出面辟谣，但每一次坊间的传言都比上一次更凶猛，也更“逼真”。而在去年八月份 Google 收购摩托罗拉移动后，评论家认为 Google 只掏出 125 亿美元就获得了优秀的硬件制造商和无线专利，简直太超值了。并极力畅想微软的应对动作。Eldar Murtazin 的爆料无疑迎合了这种心态。TechCrunch 的编辑联想到了另一个传言：诺基亚和微软联合竞购 RIM 。这看起来像是一枚烟雾弹。话说回来，“大嘴巴”的信用度并不是那么高，经常会有失准的情况发生，但愿这次的情况不要那么糟糕。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 10:44:33</pubDate>
</item>
<item>
<title>Windows 8将引入“重置”和“刷新”功能，方便重装系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64656</link>
<text>微软将在Windows 8系统中引入两个重大功能：“重置”和“刷新”以大大简化重装系统的过程。“重置”主要是指的删除所有个人数据、应用程序，重新安装Windows系统。而“刷新”则主要指的保留所有个人数据，包括Metro风格的应用以及重要设置等，并且重新安装系统。据微软官方博客介绍，这些功能将体现在2月份即将发布的Windows 8 beta版本中，届时安装系统将变得更为容易。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 10:42:33</pubDate>
</item>
<item>
<title>应用即媒体？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64655</link>
<text>&amp;nbsp;美国科技博客 TechCrunch 主编 Erick Schonfeld 提出了一个应用即媒体的观点：“随着移动设备和移动应用的崛起，移动应用正在逐渐成为一种重要的媒体传播方式，甚至吸收其他媒体形式。”从我们现实中的体验来看，这个观点很容易被人理解和认同。App 是游戏以及 App 是报纸或杂志新闻内容的媒介已经不新鲜了。App 现在可以是单行本的电子版书籍，可以是单曲或者唱片专辑，也可以是你自己用 DV 制作的一段纪录片，App 甚至可以是以上所有内容形式的混合并存。 App 可以封装一切传统媒体的内容了，它似乎也可以成为任何媒体。就像 Erick 所说， App 在吸收其他媒介形式。或者从另一个角度说，App 这种媒介形式正在为各种媒介形式所利用。从媒介史来看，技术手段在不断发展，媒介也在不断进化和融合。App 在可以封装一切，为一切媒体内容和媒介形式所利用的时候，App 本身也成为了一种独特的媒介形式。这种媒介形式的表现和最大特点就是跨媒介的形式，它是一种能包含多媒介的媒介。在传播学巨匠麦克卢汉看来，媒介是人的延伸，连火车铁轨都可以称作是 Media，“App 即媒介”是一个高度概括化且万分正确的话。 而 App 本身作为多媒介形式的媒介，其现实意义之一是在于它能够给做内容的媒体和垂直社区以新的思路，整合过去一切媒介形式的思路。网页（Web）过去在 PC 端也扮演这个角色。你可以在网页上看视频、听音乐、玩 Flash 游戏，这所有的媒介形式围绕着一个专题汇聚在同一页面上。而在小尺寸触屏智能手机时代，App 显然更加适合这个这种多媒介的整合角色。已有的新闻类媒体应用，已经将传统的文字新闻和视频囊括进来。而未来能被囊括的空间依然巨大，比如游戏、微博和论坛等社会化媒体的 UGC 内容、线上线下活动信息、电子书等等。在很多媒体或者垂直社区中，App 产品目前仅作为输出内容的渠道，这还只是报纸 App 的思维；囊括进来文字和视频时，这是报纸+视频的思维；而将上述可能性都囊括进来，将会是满足用户综合需求的思维。而这个关键在于，你的能力能提供什么样的内容：文字、视频、游戏体验、社区氛围或社会化媒体等等。围绕着这些可能性的展开，App 背后也就不仅仅是存在一个做内容的媒体，它也将是一个综合性的提供多种体验的媒介组织。网站评论：的确如此。回到 2010年 1月份乔布斯发布 iPad时候，当时很多传统出版业的人都期待苹果可以推出一套通过 iTunes或者新的程序帮助出版，拯救未来的出版行业。但是虽然苹果宣布推出了 iBooks和 iBookStore，却未提及报纸和杂志。当时几乎令很多的出版业想等待救世主的人失望。
随后苹果终于推出重磅产品「NewsStand」，就是那个在你的 iPhone和 iPad怎么都无法删掉和费老大劲才能拖到文件夹的独立显示在首页的那个 NewsStand App。
NewsStand就如它的名字所称，就是一个报刊亭。它不负责发行刊物，也不负责发表文章。它的作用就是给广大用户分发内容。事实上内容的出版机
构的担子会更大，不光需要内容，和传统的版面设计，还需要更多的 
App上的体验设计；好处是这个方式可以给出版社在「用户的阅读体验和内容或其他方面创新」提供更多的控制和空间。一句话，可以给你一个新机会让你更好的
区别于其他的杂志或报刊。
继续引申：
如果说，同样的事情发生在 TV上呢？
苹果的 TV就是一个「报刊亭」，电视的频道就是一家一家的报纸杂志社。
那么内容是通过什么传递的呢？
是的，「App」。
事实上我们已经看到很多频道的成效，比如  HBO Go 和 Watch ESPN。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 10:30:10</pubDate>
</item>
<item>
<title>2012 年值得关注的十个云计算服务</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64654</link>
<text>“云计算”的话题这两年越来越热，GigaOm 发掘了十个与“云计算”有关的初创公司，并认为他们今年有可能发展壮大。1.AppFogAppFog 是一家提供运算平台的服务，用户可以在上面搭建自己的 Web &amp;nbsp;App。原本它的名字为 PHP Fog，但在采用了 Cloud Foundry 的代码作为核心，支持多个编程语言后，选择了更名。2.BromiumBromium 运用“虚拟化”技术，为企业的网络提供保密服务，防止因为企业员工的电脑、移动手机以及平板电脑接入企业网络而泄漏内部机密。3.CloudabilityCloudability 可以帮助用户追踪他花在云服务方面的开销。随着云服务的兴起，比如按流量计费、按时间计费等方式将流行起来，使用 Cloudability 可以清楚的知道支出情况。通过报表等清单，用户还可以发现是否有黑客在“滥用”公司的服务从而造成不必要的开销。4.CloudSigma和亚马逊（Amazon）的 AWS 一样，CloudSigma 也属于网络中的基础设施，然而它为用户提供了优异的性能和更多控制权。它使用了 SuperNAP 数据中心的服务器。5.KaggleKaggle 上面一共有一万七千名博士科学家，他们为这些高智商人才提供了竞赛的平台，通过数据挖掘和分析，Kaggle 曾经成功帮助 NASA、德勤会计事务所、密歇根大学解决问题。6.NebulaNebula 不是第一个提供 OpenStack 定制的公司，但它提供高品质服务——为 OpenStack 提供了特别优化的硬件，这些硬件的设计基于曾经架构公用的即插即用的云服务经验。Nebula 的创始人是美国航空及太空总署（NASA）的首席技术执行官 Chris Kemp。而 OpenStack 的代码源自 NASA 所使用的平台。7.Parse和 AppFog 相似，Parse 也是一个运算平台，开发者能够在上面创建自己的应用。不过，Parse 更加专注于移动开发者，为移动应用提供了更多的资源。8.ScaleXtremeScaleXtreme 是一个管理物理服务器、云服务器的云服务。它的方便之处在于——统一了不同服务器的管理面板，用户可以在统一的界面上管理自己的服务器。9.SolidFireSolidFire 所提供储存方案不是传统的机械硬盘，而是采用读写速度更高的 SSD 组成的闪存阵列，这样它能够为企业、或是云计算用户提供更高的性能。10.ZillabyteZillabyte 是一个为非专业人员设计的数据分析工具。比起现在复杂的数据分析工具，Zillabyte 特点是简单易用。公司的成员包括两名前 Google 软件工程师和一位英特尔（Intel）工程师。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 10:28:30</pubDate>
</item>
<item>
<title>学我者生，似我者亡：再论 Metro UI 的优缺点</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64653</link>
<text>微软员工将 2008 年 11 月称为“重启（The Reset）”。当月，微软终止 Windows 手机项目的全部工作，重新开始。之前这篇文章《微软“重启”Windows Phone 7 设计的经过》详细描绘了在经过一年的 Windows Mobile 7 开发之后，微软的开发人员终于意识到这是在一个错误的方向上越走越远。“Windows Phone 7 的新策略则是为顾客满意来设计操作系统，类似于苹果的策略。”微软的勇气确实让人佩服，新成果也值得关注：Metro UI——一个不同于以往的移动系统，一种全新的设计风格，这些让人印象深刻。但或许症结也由此而生。&amp;nbsp;一、积极的颜色Metro UI 最主要的特性在于简洁中带华丽，给人以视觉愉悦的享受，并准确传达出主要信息，就像备受推崇的机场指示牌系列，就是这样设计风格的优秀代表。这样的信息直观明确，也丝毫不吝惜丰富颜色的应用，而且在这其中颜色也是信息的一个良好载体，区分不同质的信息，并为主要文字信息提供良好的载体，颜色是积极参与信息的表达。Metro UI 中并不缺乏这样的优秀设计，但更多数情况下，颜色却成为一个尴尬的旁观者，比如在邮件程序中，主要的信息用黑色或白色来表现，而次要信息用灰色来表现，而颜色细微的区分并没有预想的设计目的那么对比明显，在背景都是同一种颜色（白色或黑色）的情况下，又没有细线等最简单形式的风格，导致Metro UI 所标榜的突出主要内容的简洁特性并没有达到最大的发挥。而类似这样内容区分模糊的应用并不在少数。&amp;nbsp;二、工具的缺乏就内容的区分而言，细线不外乎是最简单的形式，另一种简单形式是分成不同的底色，这两种形式都能将内容良好得分块。而 Metro UI 中最多的内容区分除了字体大小，颜色的不同之外，更多的形式就是留白。对支持者而言，良好的空白毫无疑问是会产生美感，但前提必须是“良好的”，就Metro UI 这样的风格而言，精美和简陋只在一墙之隔，若非对每一个像素精打细算，积极运用，产生的效果和设想有很大区别。Metro UI 作为一种全新的UI 设计风格，大多数设计人员是否就吃透了这种设计的特性，值得存疑。当然，这一点在微软的持续推广下会改善。包括细线，Metro UI 舍弃了大量的内容表现形式，比如渐变，阴影等效果，而这些都是 UI 设计中最基础的工具，一方面微软是为了确立内容大于形式的设计风格，另一方面，也是为了更快。为了争分夺秒得加快启动速度，Metro UI 进行了大刀阔斧的舍弃，这确实有些激进。《Windows Phone 7 的幕后故事》中 Myerson 说 Saba 就像是华尔街的会计，计算着一分一厘的剩余内存和启动时间。Saba 对性能的执着近乎变态，经常为此与图形组的头儿 Laura Butler 发生争执。 Laura Butler 负责让整个系统看起来更漂亮，但这会拖慢系统的速度。工具的缺乏直接表现为界面的单一，甚至千篇一律。但这一切工作可能都是为了指向同一个目的：比苹果快，比苹果好。最重要的是——和苹果完全不同。但我相信这不是永久的舍弃，只是为了追赶而运用的权宜之计。&amp;nbsp;三、图像的意义除了内容的区分，就内容本身而言，Metro UI 更偏重于文字而非图像，iOS 中则是充满图标元素大量运用：应用的启动是图标，按钮是图标，未读信息是一个红色小图标，未收听的 Podcast 中用一个小蓝点来表明。大量图标的应用，让 iOS 充满了直观明确的风格。Metro UI 中并不缺乏图标，但为了整体的风格，图标的表现并没有丰富多彩，首先是颜色的单一，其次是大量细节信息都用文字来表现，而小图标其实表现得更好，这也是我认为Metro UI 会产生内容拥挤的原因，很多次要信息原用一个小图标在一小块面积中就表达清楚了，用文字叙述会占用更多的空间和注意力，这绝对是和 Metro UI 简洁明快突出重点的要求是背道而驰的。而 Metro UI 的内容偏重文字也暗示着一种尴尬——对用户注意力的争夺。微软希望手机的使用者在简洁的界面上高效完成工作，而不用占用用户太多的注意力。然而在智能手机承担个人信息处理中心这个趋势越来越明显的情况下，用户的注意力无可奈何得只会越来越偏重于手机界面。并且用户平均分配在每个信息上的时间和注意力只会越来越少，在这样一种情况下，图标的表现比文字更有质感。无论文字字体设计得如何丰富，都不如一个图像来得直观明确，就像联系人里面哪怕有再多的叙述文字，都不如一个头像来得明确。用户更容易被图标吸引，从而完成信息的传递。在这个读图时代的大趋势里，Metro UI 在这一点既保持了个性，又顺便完成系统的要求——舍弃图标而偏重文字也会让系统速度更快。Metro UI 中的信息因为缺少颜色和图标的积极参与，传递与互动并不像设计期望的那么高效。&amp;nbsp;四、学我者生，似我者亡Metro UI 的登场让人印象深刻，很多人记住了它的摸样，这就是最大的成功，在未来的系统竞争中，这是活下来的好资本。Metro UI 也是一个雄心勃勃的计划，它紧紧抓住了其它界面成功的精髓，重视用户体验、重视开发者、重视生态系统的良性循环。这个要比界面上的模仿重要一万倍。寓言故事说：学我者生，似我者亡。用工笔画描摹 iOS 的系统（比如 Android 上的 iOS 皮肤）注定只是匆匆过客，Metro UI 更像是泼墨挥毫的大作，在留白中给人以无尽的想象空间。只要它足够快，只要它更务实，拾起过去因为要快速追赶而舍弃的那些更简单、更基础、更人性化的元素，在追赶中完成从简陋到华丽的转身。图片来自 alinawaz</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-06 10:24:38</pubDate>
</item>
<item>
<title>Dropbox：新的web文件系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64609</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2012-01-05 16:28:01</pubDate>
</item>
<item>
<title>分布式计算平台 - Hadoop 发布了1.0.0版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64608</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-05 16:13:01</pubDate>
</item>
<item>
<title>Linux 内核 3.2 正式版发布下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64607</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-05 16:19:01</pubDate>
</item>
<item>
<title>lifehacker推荐：2011年10个亮眼的Web Apps</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64606</link>
<text>每年都有许多新的web apps上线，而其中许多应用却没能得到应有的重视。现在就来总结一下，2011年10大值得更多关注的Web Apps。文章开篇的图片来源于&amp;nbsp;Melissa Downey.注意：虽然很多web apps可能不能记录在此，但是还是非常感谢所有为对这篇文章提供了宝贵意见的人。10. 迷你Apps在文章的开始，我们并不打算单独地列举某个特殊的app。我们想将注意力放在许多小型web apps上，这些apps提供了一个简单的功能或是将某件工作做得特别出色。比如Every Time Zone（能够在每个时区显示当地时间），Umbrealla Today?（一个天气预报app，并能够提醒用户是否需要携带雨伞），和notepad.cc（是一个浏览器上的即时笔记本，用户可以随时使用）都是这类应用。还有Spreeder，能够帮助用户提升阅读速度和对内容的理解；SleepyTime，则是根据最佳的起床时间计算你的休息时间；SimplyNoise则是一个白噪音发生器。还有许多类似的apps，它们也都非常实用。只从这些apps中我们都能挑选出今天的10大web apps，但是还有其他类型的apps也不能不提。现在只能罗列0to255、Mixest、PDFMyURL和Copy Paste Character了，这些都是和前面提到的应用一样非常棒的迷你Apps。9. Aherk!Aherk是一个有趣的web app，你能够用它来威胁自己做某件事。打比方说，你有一张自己的裸体照，并且你现在有一堆盘子需要清洗。Aherk!能够帮你将这两件事联系起来。你将自己的裸体照放到Aherk!上，然后设置一个期限，希望自己在期限到来以前清洗掉所有的盘子。如果你能够做到，那么将相关的证据贴到Facebook上让你的朋友投票，决定你是否真的完成了任务。如果投票通过，你就能逃过一劫。否则，Aherk!将公布你的照片。如果你有一群可靠的好朋友，那么这个应用确实能够威胁你完成许多工作！访问Aherk!8. Asana之前提到的Asana是一个免费的web app，专门用于帮助团队管理多个项目。每个用户都能跟踪自己负责的部分，相关的任务，以及子项目，而每个单独的任务都会对整个项目作出贡献。每个用户都能够查看其它同事的进度，并且无需登录就能获得最新信息。如果你的团队有许多项目需要管理，Asana是个不错的选择。访问Asana7. Cryptocat之前提到的Cryptocat能够非常方便地提供私人即时通讯服务。只需登录Cryptocat，选择一个名字开启一个聊天室，然后将URL发给需要通讯的人。你的聊天内容会被加密，并且当聊天室停止活动超过1个小时，聊天记录会被自动清除。当然，间谍和秘密工作者可能需要更加安全的通讯机制，但是对于普通大众的私人聊天，Cryptocat已经足够了。访问Cryptocat6. Teambox之前提到的Teambox是一个帮助各个团队的所有人更好交流的web app设计。它不同于以往那些只能提供一种交流方式的web app，它参考了社交媒体和web范例，提供了多种交流方式。可以像Twitter那样处理状态更新，可以使用@信息功能。在必要的时候，可以将更长的表格发送给队友。用户能够合作编辑一个列表或是页面，它能够为用户提供最好的方法。访问Teambox5. Thinkery通常人们很难将每天碰到的各种重要信息全部记下了，有很多工具可以帮助用户记录和查找随时可能碰到的重要信息。但无论是物理的还是电子的便签，都同样容易被用户遗忘，而Thinkery在这方面考虑得更加周到。现在已经有许多程序帮助用户管理各种信息了，比如著名的Evernote，但是Thinkery还能进一步解析用户记录的信息。比如，你记录了一个Amazon链接，那它就会猜想你应该是对某个商品感兴趣，并会将商品信息包含进来。如果你在某个单词前面加上了#符号，它则会自动将这个单词变成一个标签，无需用户自己设置。这只是其中几个例子，还有许多其他的示例。Thinkery能够帮助用户整理自己的想法，将各种信息有效地组织起来，这方面它的确做得很棒。访问Thinkery4. CloudtactCloudtact是一个帮助用户同步多个设备上的联系人信息的web app，当某个联系人被删除或是增添了一个新的电话号码后，它能够实现实时更新，避免用户逐一更改。你注册以后，能够查看自己的个人信息，并可以请求你的好友发送他们的联系信息。在获取了好友的联系信息后，你就可以将这些信息同步到Google，Android，iDevice以及Mac上了。如果每个人都向你发送了联系信息，那么你所需要做的工作就非常少了——Cloudtact能够自动维护信息的更新，而无需你的人为干预。访问Cloudtact3. PixlrPixlr类似于一个浏览器上的简化版Photoshop。它和Photoshop保持了同样的快捷键，响应非常及时。你能导入多种资源的图片，或者直接从一个空白的canvas开始。它还支持复杂的层次设计，允许用户使用几种混合模式和图层样式。如果你手头上没有Photoshop，但是又需要在浏览器中做图像编辑，真心向你推荐Pixlr。访问Pixlr2. WorkFlowy虽然在2011年以前已经讨论过WorkFlowy了，但是还是有人（部分读者）抱怨对WorkFlowy的重视不够。看来它确实是一个非凡的、令人惊叹的清单管理app。虽然乍一看它就是一个平淡无奇的文本文档，但是当你用它创建了几个清单以后，你就能感受到它的导航功能就像是web网站的导航一样。你能够放入各种信息。访问WorkFlowy1. If This Then ThatIf This Then That（简称为ifttt）是今年目前为止发现的最酷的web apps之一——因此这里提供了许多非常有用的示例指南。ifttt就是当满足某个条件后会执行某个任务。举个例子，它会监测天气情况，当发现会下雨时，就按照你的设置给你发送一条短信。当你收到你的母亲给你的新邮件时，ifttt会为你自动拨打电话。这只是几个例子。还有许多的事情你都可以用ifttt帮你实现。它真的是迄今为止最酷的工具之一，值得你花时间去学习一下如何使用它。ifttt乍一看可能会觉得有点吓人，但是其实上手非常容易。如果你需要一些帮助，可以看看这里。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-05 17:30:36</pubDate>
</item>
<item>
<title>Mozilla 发布公共许可证2.0版(Mozilla Public License 2.0)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64605</link>
<text>　　Mozilla宣布发布 Mozilla 公共许可证2.0(Mozilla Public License 2.0)。
　　Mozilla 公共许可证（MPL）最初是 Netscape 发布的开源和自由软件许可证。类似 GPL 等公共版权许可证，使用和修改 
MPL 授权的代码将需要在 MPL 下发布源代码。MPL 2.0 与上一代相近，但根据过去十年的实践经验进行了简化和删减，兼容 Apache 和
 GPL 许可证，简化代码复用和重发行。Mozilla 基金会的大部分软件都采用三重许可 MPL/GPL/LGPL，MPL 2.0 的目标之一是淘汰三重许可。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-05 17:26:28</pubDate>
</item>
<item>
<title>Windows Azure将支持Linux虚拟机</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64604</link>
<text>　　微软将增强 Windows Azure 云计算平台虚拟机技术，允许客户运行 Windows 或 Linux 虚拟机。
　　Windows Azure 的虚拟机功能，
允许客户将定制的 Windows Server 2008 R2(企业版或标准版)镜像部署到 Windows 
Azure。但目前的功能不具有持久性，意味着数据会频繁丢失。微软将在今年春天修正问题，同时增加功能，包括支持 Linux 
虚拟机，支持在虚拟机中运行 SQL Server 和 SharePoint 等应用程序。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2012-01-05 17:25:12</pubDate>
</item>
<item>
<title>泄密门对云计算形成挑战 移动终端成黑客新战场</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64603</link>
<text>　　“自从知道了那些人心惶惶的泄密事件后，我把支付宝(微博)、财付通之类的在线支付账户全都清空了。”在北京中关村工作的白领孟灵对《第一财经日报》说。她告诉记者，她查到自己的天涯账号被盗之后，决定起码半年之内，网上购物除了不得不使用网银U盾支付外，只要能货到付款的就不会再选择网上支付的方式。

　　她的遭遇或许并非个例。这场从CSDN开始引发的泄密潮，在越来越多存在风险的行业引发蝴蝶效应。尽管有支付企业称泄露的用户信息中只有账号没
有密码，但由于不少在线支付用户的账户就是电子邮箱，而如果用户的电子邮箱和密码已经泄密，那么第三方支付的账号也可能变得不再安全。

　　对于CSDN、天涯等网站大规模泄密而言，网站只需要发封道歉信，通知用户修改密码就行，但如果关乎用户财产安全的网上银行、支付宝信息被黑客盗取，实在让人难以淡定。

　　糟糕的不止这些。当越来越多的企业热炒云计算，当移动互联网迎面而来时，担忧接踵而来：我们的信息真的安全吗？

　　云时代的命门

　　“泄密门”正在对云计算形成挑战，索尼就是前车之鉴。

　　从去年4月17日至今，索尼旗下游戏平台Play Station Network(PSN)至少遭遇了三次黑客袭击。黑客已经盗用了超1亿用户的个人信息，包括PSN注册ID、邮箱账号、登录密码甚至是与信用卡账号相关的信息。

　　在索尼PSN公有云平台被入侵后不久，即有黑客在论坛上挂牌销售上百万个来自索尼PSN网络数据泄露受害者的个人信息，尽管此前索尼声称信用卡信息已经加密，但事实上数据库里的内容已经被读出。

　　云计算往往意味着“随需应变”的自助服务、大量的资源共享池、更低的成本以及更高的工作效率。但在这些优势的背后，海量的数据被转移到用户掌控范围之外的机器上，如何确保存储海量重要信息的“云”的安全，却在无意间被人们忽视了。

　　“一系列泄密事件不难看出，在很多互联网企业内部安全环节都比较薄弱，如果企业未来把海量信息放到‘云’上，首先对企业自身的心理承受能力就是巨大的挑战。” 云计算安全厂商星云融创营销总监孙大伟对记者说。

　　云计算一般可归纳为IaaS(基础设施即服务)、PaaS(平台即服务)和SaaS(软件即服务)三个层面，孙大伟告诉记者，90%的黑客攻击发生在SaaS层面，不过事实上从底层到上层，有着各种不同的黑客攻击路线。

　　网秦首席安全专家邹仕洪博士则向记者坦言，个人或企业对于云端的信息安全疑虑，成为了云计算普及的最大难题之一。“在云时代，保护数据的边界很难划清，而且业内对云计算如何存储和保护数据还没有统一的执行标准。”

　　按照服务对象的不同，云计算一般分为公有云和私有云两大类，前者指的是面向大众范围内的服务对象的云计算服务，而后者一般是指社会单位为自身需
要所建设的自有云计算服务模式。孙大伟告诉记者，不少金融机构以及医疗等就是出于安全问题的考虑，不敢采用公有云模式，而是在其内部搭建私有云系统。

　　不过孙大伟、邹仕洪都认为，这次的泄密事件是一次安全问题由隐性到显性的预演，不能因泄密事件因噎废食，否认云计算对于企业和个人的价值。此前
赛迪顾问发布的《中国云计算产业发展白皮书》预计，到2012年，我国云计算市场规模将达606.78亿元，“十二五”期间，我国云计算产业链规模可达
7500亿至1万亿元人民币。

　　“移动”的风险

　　移动终端已经成为黑客们的“新战场”。

　　中国最早的黑客组织绿色兵团创始人、现COG信息安全组织创建人龚蔚预言，这次泄密事件只是一场更大规模安全事故的前戏，预计重大事件将在2012年爆发，影响中国几亿的移动终端用户。

　　这不是危言耸听。邹仕洪告诉记者，仅去年一年就新增手机恶意软件24794款，恶意软件样本2943个，其中在中国地区全年累计感染智能手机1078万部。

　　根据360安全中心发布的相关中国手机安全报告，手机木马的危害主要由系统破坏转向恶意扣费和窃取用户隐私。例如之前闹得沸沸扬扬的木马“X卧底”，本质上是一款黑客间谍软件，不仅会回传用户短信，甚至还能监听用户通话。

　　“恶意扣费就更不用说了，手机木马会偷偷在后台发送定制SP业务的短信，用户手机话费在神不知鬼不觉的情况下被吸走。”360安全专家石晓虹(微博)说。

　　其中，占据智能手机半壁江山的Android成了“重灾区”。石晓虹告诉记者，由于Android系统开源、开放、免费的特性，木马可以通过系
统漏洞进行提权，获取到手机最高权限(root权限)，从而可以在用户无感知的情况下进行系统文件操作，包括删除系统文件、窃取隐私数据、植入更多木马等
等；而iOS对系统底层文件的调用限制特别严格，相对安全，不过一旦“越狱”，软件也会被授予更多权限，安全问题不容乐观。

　　不久前就有国外安全厂商表示，在不到半年的时间里，平台的恶意程序数量增加了一倍之多，数量首次突破四位数。这些可疑的应用程序大多出现在第三
方应用程序商店，这可能导致身份信息泄露、手机短信费用上升等问题，而在部分严重的地区例如俄罗斯、以色列和中国，恶意软件数量甚至达到总数的4%。

　　移动支付的兴起也在激发黑客更高的兴趣。此前，易观国际(微博)预计称，2012年移动支付用户有望达到2.2亿户，市场收入规模将增长78.8%，达到52.4亿元。2013年则有望突破200亿元，达到235.1亿元。

　　易观分析指出，虽然移动支付市场前景一片大好，但账户的安全性是用户选择手机支付方式的主要门槛——用户对互联网上支付的安全性都存质疑，更何况是在新的移动支付领域。

　　“移动支付令用户在智能手机上的活动直接与利益挂钩，黑客完全可以利用恶意软件诱骗用户安装，从而获取更多隐私信息，现在已经出现这种苗头。”邹仕洪说。

　　石晓虹建议，手机用户应尽可能学会通过一些常规技术手段保护自己的手机安全、个人隐私等合法权益，不过泄密事件的主要责任在于没有保护好用户数
据的网站。国内部分网民安全意识薄弱，习惯使用同一套注册邮箱和密码，进一步放大了网站泄密的危害。“从根本上，各大互联网站应承担起保护用户数据安全的
义务，而不是苛责所有网民都能立刻具备安全意识。”

　　近年来重大网络泄密事件一览

　　2011年12月

　　CSDN网站用户数据库被黑客在网上公开，600余万个邮箱账号及密码泄露。此后数天，包括天涯社区、新浪微博、当当(微博)等众多互联网站均被卷入。

　　2011年7月

　　韩国三大门户网站之一Nate和社交网站“赛我网”遭到黑客攻击，3500万用户信息泄漏。

　　2011年4月~5月

　　索尼旗下PlayStation网站遭入侵，黑客窃取了索尼PS3和音乐、动画云服务网络Qriocity用户登录的个人信息，波及57个国家和地区的上亿人。

　　2008年

　　韩国知名电子商务网站Auction遭黑客攻击，发生约1800万用户信息外泄事故。

　　2004年

　　日本雅虎公司某外包员工偷盗了450万份个人信息，造成用户的个人信息外泄。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2012-01-05 09:23:50</pubDate>
</item>
<item>
<title>参与开源软体开发的理由</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64559</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 参与开源软件开发不会得到金钱上的回报，但为何开发人员仍积极参与?过去有不少人认为是由于参与开发可以为开发者带来满足感，但最近的研究却显示着并不是主要的原动力。 

	　　Outercurve Foundation 
最近就此向企业发布调查，访问的企业数目并没有公开，调査结果显示90%的企业都有使用开源软体，80%的企业表示，使用开源软体是因为 
希望节省时间和金钱。至于为何开发者会参与开源项目?44%受访者显示是为了将来仕途着想。有受访者表示「开源软体开发是较高层次的开发工作，藉此可提高
 
受聘公司的信頼」，将来找工作也较为容易。的而且确，参与开源项目绝对有助于发展个人事业，但笔者还是认为还有其他原因，例如希望磨练自己的技术、或者展
示自己的长处等等。

	　　还有一点值得注意的，便是发表今次调查的Outercurve过去名为CodePlex 
Foundation，是微软提供资助的开源名非牟利团体。由微软提供营运资金的分析报告，通常都会加入FUD(Fear, Uncertainty, 
and Doubt)的内容，希望用户转用微软的产品。不论任何时候，选择性地吸收资讯，理性地作出分析，才不致于在茫茫的资讯大海中迷失方向。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2012-01-04 13:25:34</pubDate>
</item>
<item>
<title>微软的移动战略：抽血Android实现三国杀</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64558</link>
<text>　　导语：软件巨人微软在桌面优势难以撼动，但在移动平台领域却举步维艰，与苹果和谷歌两大平台相比差距巨大。为了扭转“双雄争霸”的战局，微软正在凭借雄厚的财力和专利实力，抽血Android发展自身力量，期望上演一出“三国杀”的好戏。

　　双雄地位难动摇

　　市场研究公司comScore的数据显示，在一年半的时间内，苹果iPhone和谷歌Android智能手机在美国市场的份额已经从44%猛增至75%。而RIM黑莓(微博)手机占有率则从37%下滑至不到20%，微软(微博)智能手机份额从11%下滑至5.7%。

　　市场变化如此剧烈，一年之前黑莓仍是美国市场占有率最高的智能手机；美国科技博客Techcrunch撰稿人埃里克·宋飞(Eric Schonfeld)因此断言，苹果与谷歌已经赢得了智能手机战争。

　　另据市场研究机构Statcounter的数据，今年11月全球移动操作系统市场，iOS和Android分别占据了23%和22%的市场份额，而微软Windows Phone的占有率仅有0.46%。

　　显而易见，谷歌和苹果已经在智能手机领域确立了无可争议的领先优势。考虑到这两家公司拥有雄厚的经济实力、充沛的人才储备，持续的创新能力，短期内他们的市场地位很难发生动摇。

　　微软是唯一挑战

　　随着移动互联网的软硬件的不断成熟，基础设施的日益完善，未来的智能手机将成为用户的主要上网渠道，移动领域的竞争实际上就是关于未来的竞争。这是一场微软输不起的战争。

　　如果用户的网络出口逐渐从笔记本转向智能手机，那么在移动领域羸弱的地位就将制约微软的话语权，直接影响到微软未来的发展。这也是微软下决心大力发展智能手机的最主要原因。

　　智能手机的竞争实际上已是软件平台的竞争，是包括手机软件、硬件、运营商、应用的整个生态系统的竞争。诺基亚(微博)、RIM这样的手机制造商已经无法支撑一个完整的生态体系，移动平台比拼的已是整体实力。

　　惠普(微博)webOS出局，诺基亚放弃塞班，黑莓勉力支撑，原先竞争者纷纷退出，而唯一能够在移动领域挑战谷歌和苹果的也只有软件巨人微软。与此前的诺基亚及RIM不同，微软不仅有雄厚的财力和技术研发实力，更有强大的专利储备。

　　Android专利之殇

　　谷歌向硬件合作伙伴免费提供Android操作系统，开放的平台吸引了超过30多家硬件厂商，Android才得以在三年内一跃成为全球最大的移动操作系统。然而，开放繁荣的背后却暗藏着诸多陷阱，专利几乎已经成为Android的“阿基里斯之踵”。

　　在收购摩托罗拉(微博)移动之前，谷歌只拥有700多项专利，苹果拥有近2000项专利，微软却拥有超过1.8万项专利。先天贫血让谷歌几乎没有在专利问题上的反击力量，而崇尚开放也导致谷歌长期忽视专利申请，或许文化原因导致谷歌不屑于使用这一利剑。

　　Android操作系统总共有1000万行代码，和所有主要软件一样，Android不可避免地会涉及微软以及苹果的专利。举例来说，苹果在多点触控方面就拥有72件专利，而很多都属于重要的基础专利，Android要完全避开专利陷阱几乎是不可能完成的任务。

　　目前Android面临的专利诉讼主要来自苹果、微软以及甲骨文(微博)。Android其中使用了原Sun公司的Java技术，而甲骨文收购Sun之后拥有了Java技术的专利所有权，向谷歌提出了总计61亿美元的赔偿，案件卷宗甚至长达2200万页。

　　抽血Android

　　同样是专利诉讼，微软和苹果在对待Android的态度却截然不同。苹果前CEO史蒂夫·乔布斯(Steve 
Jobs)曾表示“哪怕耗尽苹果所有现金，也要扼杀Android”，因此苹果在专利诉讼方面也几乎是铁血政策，唯一的目的就是以禁售来扼杀
Android产品。

　　与苹果“赶尽杀绝”的立场不同，微软在专利方面的态度却更圆滑，对硬件合作伙伴采取的“打击拉拢”战术，而对Android则是“专利抽血”来发展自身实力。

　　目前微软主要向HTC(微博)、三星(微博)、华为(微博)、B&amp;amp;N等具有一定影响力的硬件厂商提出专利费要求；据高盛预计，按照目前达成的协议，微软明年光Android专利授权费就有4.4亿美元，甚至高于他们在WP平台的收入。

　　而如果微软愿意，他们几乎可以向所有Android硬件厂商提出每部20美元以上的专利费用。简单的说，微软是在打击Android硬件厂商的同时， 从Android平台抽血来发展自己的WP平台。

　　打击分化硬件商

　　HTC和三星是目前最大的两家Android智能机制造商，但同时也生产微软的WP智能机。因此微软首先向HTC和三星这两家合作伙伴发难，要求支付专利授权费，并督促对方发展WP平台。

　　按照专利授权协议，HTC每生产一部Android智能机要向微软支付5美元的专利费。而据韩国媒体报道，微软更向三星提出了每部15美元的专利费要求，或与三星加强WP手机合作以交换降低专利费。

　　除了挥舞“专利大棒”，微软也向硬件合作伙伴提供“胡萝卜”。今年10月，微软向WP平台合作伙伴诺基亚和三星提供了总计4400万美元的WP
手机广告营销费用。从合作伙伴来看，HTC和三星同时与微软谷歌合作，而诺基亚已完全投向WP平台，在硬件方面微软完全不输给谷歌。

　　对很多小硬件厂商来说，高昂的专利授权费几乎是灭顶之灾；开放与免费是这些公司生产Android设备的最主要原因。如果微软以专利施压这些小硬件厂商，再财力支持手段拉拢他们，可以有效分化Android阵营，壮大自己的力量。

　　Windows优势

　　作为全球最大的软件公司，微软在桌面系统拥有不可动摇的市场优势，目前约有10亿Windows个人电脑用户。市场研究公司Chitika的数据显示，微软目前在桌面系统占据78%的市场份额，而排名次席的Mac占有率仅为9.6%。

　　鉴于大部分智能手机用户同时也是微软windows用户，如果微软能在桌面和智能手机提供便捷一致的用户体验，再加上微软的优势云服务，那么相对于谷歌和苹果，微软WP智能手机将拥有巨大的先天优势。

　　实际上，微软也非常清楚自己的优势所在。下一代操作系统Windows 8不仅支持智能手机，还采用了智能手机上的Metro UI界面，一键就可在Metro界面和桌面之间切换。个人电脑用户在使用WP智能手机时几乎不需要学习就可以上手使用。

　　此外，Windows 8也可以更加方便地连接用户的智能手机和个人电脑，通过微软的云端系统转移同步照片、游戏、办公等数据。对于Windows个人电脑用户来说，他们可能会发现WP手机在这方面更为擅长。

　　再现Xbox战略

　　对比最近财季(7-9月)的营收，微软第一财季营收173.72亿美元，净利润57.4亿美元；苹果第四财季营收282.70亿美元，净利润43.1亿美元；谷歌第三财季营收97.2亿美元，净利润27.3亿美元。

　　作为软件巨人，微软有充足的财力可以发展智能手机、必应等对未来至关重要的业务。尽管WP业务目前处于劣势，但微软一方面有足够财力投入研发与推广，另一方面可以通过专利来打击Android平台，拉拢硬件厂商。

　　回顾微软的Xbox 360发展历程，从2001年推出开始就连年亏损，但微软仍然毫不迟疑地继续投入，不惜付出超过40亿美元的亏损，在任天堂和索尼的竞争中夺得了自己的一席之地。

　　Kinect体感外设让Xbox 
360彻底翻身，NPD的数据显示，Xbox目前不仅在美国市场的份额高达44%，而且最热门的10款游戏有6款来自微软平台。只要微软持续投入研发智能
手机，一旦迎来类似Kinect的技术突破，那么WP手机也很有可能实现市场份额飞跃。

　　未来的三国杀

　　对微软来说，智能手机是一场不能输的战争。结盟诺基亚令微软在硬件方面不处劣势，专利武器让微软掌控了Android的命门，而深度整合个人电脑是微软相对于苹果的优势所在，而Windows 8将给微软WP带来发力的契机。

　　虽然目前市场份额甚微，但微软和诺基亚有足够的实力和耐心来挺过最初的艰难时期。随着黑莓、塞班等平台的逐步淡去，只有谷歌、苹果、微软这种级别的选手才能继续在移动平台继续较量。

　　未来的智能手机平台，微软极有可能会成第三股力量，将谷歌苹果的“双雄争霸”局面扭转为一场“三国杀”。而相对于苹果成熟但封闭的平台和谷歌开放但不安全的系统，微软可控制的移动平台会具有独到的发展潜力。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2012-01-04 11:06:21</pubDate>
</item>
<item>
<title>代码托管服务 GitCafe 正式上线</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64557</link>
<text>为开源项目的提供 Git 代码托管服务 GitCafe 今天正式上线开始内测。感谢 ghosTM55 来稿



GitCafe 是什么?

GitCafe 将以代码托管为核心业务，提供一系列优质前沿的服务来帮助到中国 IT 领域的开发者、项目以及企业更好地学习与成长。

Git 是目前世界上最流行最优秀的项目版本控制系统之一，Cafe 的意思为咖啡馆，象征着程序员文化。在 GitCafe 
这个平台上，开发者可以轻松的在线协作共同开发出一个又一个开源或者私有项目。通过 GitCafe，开发项目的控制与团队管理将变得方便与有效。

在 GitCafe 的网站以及团队，我希望每一个用户和员工都能感受到浓厚纯正的黑客精神与文化，发现和理解计算机技术的真正魅力与潜力，激励每一位中国的开发者去开发出更多更有趣的东西。

今天，GitCafe 正式上线内测，地址是 gitcafe.com，目前需要邀请码才能够注册使用。

现在，你可以在 Twitter 以及 Weibo 上关注我们，获取我们的第一手信息。

为什么会有 GitCafe?

在2011年年初，一家做开源操作系统与服务的国企找到我希望我能够为他们提供一些解决方案，来帮助到他们的开源项目更好地在国内的技术社区得到推
广以及获得更多用户、开发者的反馈。那已经不是第一次有创业团队、企业找到我希望我帮助他们解决这样的问题，于是我开始认真地思考这个问题，试图找到一个
不错的解决方案。

当时我带着 SHLUG 的一群朋友来到杭州参加支持 HZLUG
 
的第一次线下聚会，晚上住在宾馆里讨论到这个问题的时候，有朋友突然提到说国内还没有好的代码托管服务。我很快地发现这件事情的确需要去做，并且有很多必
要性，同时能够很大程度地帮助国内在开源道路上探索地团队和企业更好地去扩展他们的业务，于是我开始筹备这个项目的启动。

新的想法与动力

2011上半年很不容易，第一次正式踏上创业的旅途的确遇到了很多几乎不可控的问题。推掉了月薪过万的工作邀请，遇到重重艰辛后，我还是坚持要做出
一个能够帮助到国内热衷于开源事业的技术团队以及企业的服务平台。在项目开始的一段时间，正好有不少学校、企业以及活动找我去演讲，我见缝插针地表达了一
些我不满的现状以及如何尝试解决这些问题的想法，但并没有告诉任何人我已经开始在做代码托管服务。在去全国各地交流的过程中，我得到了一些新的想法与动
力。

在2011年我所做的众多演讲中，大多数都是在高校，面向那里的计算机系学生，其中感触最大的一次是在一所中国排名前10的高校里。我对着一群国内
最聪明的大学生讲了一些大开他们眼界的东西后，回答了将近1小时的问题，大多数问题都非常基础，类似于我现在进了这么好的一个学校和专业，但是并不知道自
己在学的东西应该怎么学好，该看哪些书，以后的路是怎样的。我一一作答，但是感觉这不是好的正确的解决问题的方法，我不可能一直到处演讲来解答各种学生和
初学者的问题。

回去之后，我想到我的项目同样可以帮助到这些在学校对计算机技术有着兴趣却感觉无从下手的学生们，他们需要更多有意思的项目来学习和锻炼自己的开发
能力，而不只是在学校里拿着各类新教的语言做着各种可怜的小学生数学题。通过 
GitCafe，我们会使用多种方法来调动学生以及初学者的积极性，鼓励他们参与到各类有意思的开源或者商业项目中。对于学生以及商业机构，都将是互惠互
利的好事。

每当想到自己有机会实现这些美好的事情，就有着无穷的动力让我坚持着把 GitCafe 继续做下去，做到最好。

GitCafe 团队

我需要最优秀的人帮助我一起做好GitCafe的开发，并且一起经营好它。我私下找到了 Rainux Luo, Crazycode, Riku Lu 等我非常认可的朋友详细说明了我做GitCafe的意图和想法，得到了他们的巨大支持。我很高兴有这些优秀的朋友来帮助我一起实现GitCafe。经过几个月的磨合，现在团队日趋成熟。

现在，我还需要全职的前端工程师以及 Rubyist 各一名，如果你有兴趣参与到我们这个创业项目以及团队中来，欢迎发送邮件到 ghosTM55 at GitCafe.com 向我简单介绍一下你自己，我们的工作室在上海市静安区，地理位置与工作环境都极佳。

我们的愿景

GitCafe 的出现不是为了要和 GitHub 竞争，而是为了解决我之前所述的一些我认为非常严重的问题，这些问题是 GitHub 
不关注也是做不到的。这就是我们的愿景，解决国内 IT 行业以及IT教育领域的诸多问题。因此，GitCafe 
也会做更多的事情，代码托管将只会是我们的核心业务之一。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2012-01-04 09:07:30</pubDate>
</item>
<item>
<title>supeSite资讯模板参数详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64341</link>
<text>
                    	  &amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;dateline/2592000/grade/4/showattach/1/showdetail/1/catid/1,2/order/i.dateline
 
DESC/limit/0,1/subjectlen/34/subjectdot/1/messagelen/80/messagedot/1/cachetime/18600/cachename/headnews/tpl/data&quot;}--&amp;gt;
1、 name=&quot;spacenews&quot; 意思是规定调用资讯模块的内容
2、 grade/4/ 调用审核等级为4的内容
3、 showattach/1 是否显示图片附件1为显示 0 为不显示
3、 showdetail/1 是否显示缩略信息1为显示 0为不显示
4、 order/i.dateline 按照发布时间排序
5、 limit/0,1 0是从头一条开始 1是调用1条
6、 subjectlen/34 调用标题的字节数
7、 subjectdot/1 标题是够显示省略号1为显示 0 为不显示
8、 messagelen/80 缩略内容显示字节数
9、 messagedot/1 缩略内容是否显示省略号
10、cachetime/18600 缓存更新时间
11、cachename/headnews 调用变量的名称
12、dateline/2592000 调用的时间范围
13、catid/1,2 调用的频道限制
subjectlen/34/subjectdot/1/

常用：
goodrate 好评排序
viewnum 点击排序
dateline 发布时间排序
lastpost 最后回复时间排序
replynum 回复排序&amp;nbsp;

1、资讯根分类列表
&amp;lt;!--{block name=&quot;category&quot; 
parameter=&quot;type/news/isroot/1/ischannel/2/order/c.displayorder/limit/0,100/cachetime/10800/cachename/category/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['category'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&quot;$value[url]&quot; target=&quot;_self&quot;&amp;gt;$value[name]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
2、资讯最新主题列表（以等级2为例）
&amp;lt;!--{block name=&quot;spacenews&quot; parameter=&quot;grade/2/order/i.dateline 
DESC/limit/0,10/subjectlen/30/subjectdot/1/cachetime/18000/cachename/recommend2news/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['recommend2news'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&quot;$value[url]&quot; title=&quot;$value[subjectall]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
-----说明：grade/2/ recommend2news表示等级2，余类推。
3、图文资讯幻灯片
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;grade/4/haveattach/1/showattach/1/order/i.dateline 
DESC/limit/0,4/cachetime/11930/cachename/picnews/tpl/data&quot;}--&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;!--{eval $picarr=$linkarr=$textarr=array();}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['picnews'] $ikey $value}--&amp;gt;
&amp;lt;!--{eval $picarr[] = '&quot;'.$value[a_filepath].'&quot;';}--&amp;gt;
&amp;lt;!--{eval $linkarr[] = '&quot;'.$value[url].'&quot;';}--&amp;gt;
&amp;lt;!--{eval $textarr[] = '&quot;'.$value[subject].'&quot;';}--&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{eval $pics = implode(',', $picarr);}--&amp;gt;
&amp;lt;!--{eval $links = implode(',', $linkarr);}--&amp;gt;
&amp;lt;!--{eval $texts = implode(',', $textarr);}--&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&amp;gt;
&amp;lt;!--
var focus_width=208;
var focus_height=208;
var text_height=20;
var xsImgs = new Array({$pics});
var xsImgLinks = new Array({$links});
var xsImgTexts = new Array({$texts});
var xsImgSize = new Array(focus_width, focus_height);
//--&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;{S_URL}/include/js/slide.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/div&amp;gt;
4、头条新闻列表（内容截取、略图）：
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;grade/5/showattach/1/showdetail/1/order/i.dateline 
DESC/limit/0,1/subjectlen/34/subjectdot/1/messagelen/80/messagedot/1/cachetime/18600/cachename/headnews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['headnews'] $value}--&amp;gt;
&amp;lt;!--{if !empty($value['a_thumbpath'])}--&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;&amp;lt;img src=&quot;$value[a_thumbpath]&quot; alt=&quot;&quot; 
/&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;!--{/if}--&amp;gt;
&amp;lt;strong&amp;gt;&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;p&amp;gt;$value[message]&amp;lt;/p&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
5、站内最新资讯列表
&amp;lt;!--{block name=&quot;spacenews&quot; parameter=&quot;order/i.dateline 
DESC/limit/0,15/showspacename/1/subjectlen/40/subjectdot/1/cachetime/1800/cachename/newgradenews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['newgradenews'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;

6、最热资讯TAG列表
&amp;lt;!--{block name=&quot;tag&quot; parameter=&quot;order/spacenewsnum DESC/limit/0,20/cachetime/18000/cachename/hottag/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['hottag'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[tagname]&amp;lt;em&amp;gt;($value[spacenewsnum])&amp;lt;/em&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
7、站内热门资讯列表(一周)--以浏览数
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;dateline/604800/order/i.viewnum 
DESC/limit/0,10/cachetime/15400/subjectlen/40/subjectdot/1/cachename/hotnews1/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['hotnews1'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;($value[viewnum])&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
8、站内热门资讯列表(一月)--以浏览数
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;dateline/2592000/order/i.viewnum 
DESC/limit/0,10/cachetime/17200/subjectlen/40/subjectdot/1/cachename/hotnews2/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['hotnews2'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;($value[viewnum])&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
9、站内热门资讯列表(开站以来)--以浏览数
&amp;lt;!--{block name=&quot;spacenews&quot; parameter=&quot;order/i.viewnum 
DESC/limit/0,10/cachetime/17400/subjectlen/40/subjectdot/1/cachename/hotnews3/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['hotnews3'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;($value[viewnum])&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
10、图片资讯（略图、标题）
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;haveattach/1/showattach/1/order/i.dateline 
DESC/subjectlen/12/subjectdot/1/limit/0,7/cachetime/8000/cachename/picnews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['picnews'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;div&amp;gt;&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;&amp;lt;img 
src=&quot;$value[a_thumbpath]&quot; alt=&quot;$value[subjectall]&quot; 
/&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;

11、站内热门资讯列表(一周)---按评论数
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;lastpost/604800/order/i.replynum 
DESC/limit/0,10/cachetime/15400/subjectlen/40/subjectdot/1/cachename/replyhot/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['replyhot'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;
#date(&quot;m-d&quot;, $value[&quot;lastpost&quot;])# / &amp;lt;a href=&quot;$value[url]&quot;&amp;gt;评论($value[replynum])&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
12、最新发表（含评论）资讯列表
&amp;lt;!--{block name=&quot;spacenews&quot; parameter=&quot;order/i.lastpost DESC/limit/0,20/cachetime/1500/cachename/newnews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['newnews'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;
#date(&quot;m-d&quot;, $value[&quot;lastpost&quot;])# / &amp;lt;a href=&quot;$value[url]&quot;&amp;gt;评论($value[replynum])&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
13、月度关注热点---按评论数
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;lastpost/2592000/order/i.replynum 
DESC/limit/0,50/cachetime/35400/subjectlen/40/subjectdot/1/cachename/replyhot/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['replyhot'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;
#date(&quot;m-d&quot;, $value[&quot;lastpost&quot;])# / &amp;lt;a href=&quot;$value[url]&quot;&amp;gt;评论($value[replynum])&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
14、各分类最新资讯列表
&amp;lt;!--{loop $_SBLOCK['category'] $ckey $cat}--&amp;gt;
&amp;lt;!--{eval $ctime=1800+30*$ckey;}--&amp;gt;
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;catid/$cat[subcatid]/order/i.dateline 
DESC/limit/0,10/cachetime/$ctime/subjectlen/40/subjectdot/1/cachename/newslist/tpl/data&quot;}--&amp;gt;
&amp;lt;div class=&quot;category&quot;&amp;gt;
&amp;lt;h3&amp;gt;
&amp;lt;strong&amp;gt;&amp;lt;a href=&quot;#action/category/catid/$cat[catid]#&quot; target=&quot;_self&quot;&amp;gt;$cat[name]&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;a href=&quot;#action/category/catid/$cat[catid]#&quot; class=&quot;more&quot; target=&quot;_self&quot;&amp;gt;更多&amp;lt;/a&amp;gt;
&amp;lt;/h3&amp;gt;
&amp;lt;ul class=&quot;msgtitlelist&quot;&amp;gt;
&amp;lt;!--{loop $_SBLOCK['newslist'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
15、当前分类月度关注热点----按浏览数
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;catid/$thecat[subcatid]/dateline/2592000/order/i.viewnum 
DESC/limit/0,10/cachetime/28800/cachename/hotnews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['hotnews'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;br/&amp;gt;
&amp;lt;a 
href=&quot;#uid/$value[uid]/action/space#&quot;&amp;gt;$value[username]&amp;lt;/a&amp;gt; / 
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;点击($value[viewnum])&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
16、当前分类最新资讯
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;catid/$thecat[subcatid]/order/i.dateline 
DESC/limit/0,10/cachetime/7280/cachename/newnews/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['newnews'] $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;

17、当前资讯相关文章--&amp;gt;
&amp;lt;!--{if !empty($news[relativeitemids])}--&amp;gt;
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;itemid/$news[relativeitemids]/order/i.dateline 
DESC/limit/0,20/cachetime/17680/cachename/relativeitem/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['relativeitem'] $ikey $value}--&amp;gt;
&amp;lt;a href=&quot;$value[url]&quot; target=&quot;_blank&quot; title=&quot;$value[subjectall]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
18、资讯浏览页：
标题：$news[subject]
作者：$news[newsauthor]
时间：#date('Y-n-d H:i', $news[&quot;dateline&quot;])#
来源: $news[newsfrom]
内容：$news[message]
图片附件：
&amp;lt;!--{loop $news['attacharr'] $attach}--&amp;gt;
&amp;lt;br /&amp;gt;&amp;lt;a href=&quot;$attach[url]&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img 
src=&quot;$attach[thumbpath]&quot; alt=&quot;$attach[subject]&quot; /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;br 
/&amp;gt;$attach[subject]&amp;lt;br /&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;br /&amp;gt;
TAG:
&amp;lt;!--{if !empty($relativetagarr)}--&amp;gt;
&amp;lt;br /&amp;gt;&amp;lt;strong&amp;gt;TAG:&amp;lt;/strong&amp;gt; 
&amp;lt;!--{loop $relativetagarr $value}--&amp;gt;
&amp;lt;!--{eval $svalue = rawurlencode($value);}--&amp;gt;
&amp;lt;a href=&quot;#action/tag/tagname/$svalue#&quot; target=&quot;_blank&quot;&amp;gt;$value&amp;lt;/a&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
分页：$multipage
19、查看最新评论：
&amp;lt;!--{if !empty($commentlist)}--&amp;gt;
&amp;lt;div id=&quot;commentlist&quot;&amp;gt;
&amp;lt;h3&amp;gt;
&amp;lt;a href=&quot;#action/viewcomment/itemid/$news[itemid]#&quot; class=&quot;more&quot; target=&quot;_self&quot;&amp;gt;查看全部评论($news[replynum])&amp;lt;/a&amp;gt;
&amp;lt;strong&amp;gt;最新评论&amp;lt;/strong&amp;gt;
&amp;lt;/h3&amp;gt;
&amp;lt;ul class=&quot;messagelist&quot;&amp;gt;
&amp;lt;!--{loop $commentlist $value}--&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;h4&amp;gt;&amp;lt;a href=&quot;#action/viewcomment/itemid/$value[itemid]/cid/$value[cid]/op/delete/php/1#&quot; class=&quot;more&quot;&amp;gt;删除&amp;lt;/a&amp;gt; 
&amp;lt;!--{if empty($value[authorid])}--&amp;gt;
$value[author]
&amp;lt;!--{else}--&amp;gt;
&amp;lt;a href=&quot;{B_URL}/viewpro.php?uid=$value[authorid]&quot; target=&quot;_blank&quot;&amp;gt;$value[author]&amp;lt;/a&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;span class=&quot;smalltxt&quot;&amp;gt;(#date(&quot;Y-n-d H:i:s&quot;, $value[&quot;dateline&quot;])#,
 评 &amp;lt;strong&amp;gt;$value[rates]&amp;lt;/strong&amp;gt; 分)&amp;lt;/span&amp;gt;&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;$value[message]&amp;lt;/p&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
20、内容页多媒体及图片链接作用js:
&amp;lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&amp;gt;
&amp;lt;!--
addMediaAction('articlebody');
addImgLink(&quot;articlebody&quot;);
//--&amp;gt;
&amp;lt;/script&amp;gt;
21、资讯当前类别封面图片及简介：
&amp;lt;!--{if $thecat['thumb'] || $thecat['note']}--&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;!--{if $thecat['thumb']}--&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;img src=&quot;{A_URL}/$thecat[thumb]&quot; alt=&quot;&quot; /&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;!--{if $thecat['note']}--&amp;gt;
&amp;lt;p&amp;gt;$thecat[note]&amp;lt;/p&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
22、当前类别资讯子分类
&amp;lt;!--{block name=&quot;category&quot; 
parameter=&quot;upid/$thecat[catid]/ischannel/2/order/c.displayorder/limit/0,100/cachetime/10900/cachename/subarr/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{if $_SBLOCK['subarr']}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['subarr'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;a href=&quot;$value[url]&quot; target=&quot;_self&quot;&amp;gt;$value[name]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
23、当前类别资讯子分类列表
&amp;lt;!--{block name=&quot;category&quot; 
parameter=&quot;upid/$thecat[catid]/ischannel/1/showattach/1/order/c.displayorder/limit/0,100/cachetime/16400/cachename/channel/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{if $_SBLOCK['channel']}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['channel'] $value}--&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;a href=&quot;#action/category/catid/$value[catid]#&quot; target=&quot;_self&quot;&amp;gt;&amp;lt;img src=&quot;$value[thumb]&quot; alt=&quot;&quot; /&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&quot;#action/category/catid/$value[catid]#&quot; target=&quot;_self&quot;&amp;gt;$value[name]&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
24、当前类别根分类最新资讯列表
&amp;lt;!--{if $_SGET['page']&amp;lt;2 || empty($_SGET['mode'])}--&amp;gt;
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;perpage/40/catid/$thecat[subcatid]/order/i.dateline 
DESC/cachename/newlist/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{if $_SBLOCK['newlist']}--&amp;gt;
&amp;lt;div class=&quot;category&quot;&amp;gt;
&amp;lt;h3&amp;gt;&amp;lt;strong&amp;gt;$thecat[name]&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;
&amp;lt;ul class=&quot;msgtitlelist&quot;&amp;gt;
&amp;lt;!--{loop $_SBLOCK['newlist'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;div class=&quot;pages&quot;&amp;gt;
&amp;lt;!--{if $_SBLOCK[newlist_multipage]}--&amp;gt;
$_SBLOCK[newlist_multipage]
&amp;lt;!--{else}--&amp;gt;
&amp;lt;table summary=&quot;&quot; class=&quot;xspace-page&quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td 
class=&quot;xspace-totlerecord&quot;&amp;gt;当前只有一页&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
25、当前类别关联论坛最新帖子：
&amp;lt;!--{if !empty($thecat['bbsmodel'])}--&amp;gt;
&amp;lt;!--{if $_SGET['page']&amp;lt;2 || !empty($_SGET['mode'])}--&amp;gt;
&amp;lt;!--{eval $_SGET['mode']='bbs';}--&amp;gt;
&amp;lt;!--{block name=&quot;bbsthread&quot; parameter=&quot;perpage/40/$thecat[blockparameter]/cachename/bbsthreadlist/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{if $_SBLOCK['bbsthreadlist']}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['bbsthreadlist'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;div class=&quot;pages&quot;&amp;gt;
&amp;lt;!--{if $_SBLOCK[bbsthreadlist_multipage]}--&amp;gt;
$_SBLOCK[bbsthreadlist_multipage]
&amp;lt;!--{else}--&amp;gt;
&amp;lt;table summary=&quot;&quot; class=&quot;xspace-page&quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td 
class=&quot;xspace-totlerecord&quot;&amp;gt;当前只有一页&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
26、当前类别子分类资讯列表
&amp;lt;!--{if $_SGET['page']&amp;lt;2}--&amp;gt;
&amp;lt;!--{loop $_SBLOCK['subarr'] $ckey $cat}--&amp;gt;
&amp;lt;!--{eval $ctime=1800+30*$ckey;}--&amp;gt;
&amp;lt;!--{block name=&quot;spacenews&quot; 
parameter=&quot;catid/$cat[subcatid]/order/i.dateline 
DESC/limit/0,10/cachetime/$ctime/cachename/subnewlist/tpl/data&quot;}--&amp;gt;
&amp;lt;!--{if $_SBLOCK['subnewlist']}--&amp;gt;
&amp;lt;div class=&quot;category&quot;&amp;gt;
&amp;lt;h3&amp;gt;
&amp;lt;strong&amp;gt;&amp;lt;a href=&quot;#action/category/catid/$cat[catid]#&quot; target=&quot;_self&quot;&amp;gt;$cat[name]&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;a href=&quot;#action/category/catid/$cat[catid]#&quot; class=&quot;more&quot; target=&quot;_self&quot;&amp;gt;更多&amp;lt;/a&amp;gt;
&amp;lt;/h3&amp;gt;
&amp;lt;ul class=&quot;msgtitlelist&quot;&amp;gt;
&amp;lt;!--{loop $_SBLOCK['subnewlist'] $value}--&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;cite&amp;gt;#date(&quot;m-d&quot;, $value[&quot;dateline&quot;])# 
&amp;lt;/cite&amp;gt;&amp;lt;a 
href=&quot;$value[url]&quot;&amp;gt;$value[subject]&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;!--{/if}--&amp;gt;
27、当前资讯评论：
&amp;lt;div id=&quot;commentlist&quot;&amp;gt;
&amp;lt;h3 style=&quot;text-align: center;&quot;&amp;gt;&amp;lt;strong&amp;gt;评论 &amp;amp;lt;&amp;amp;lt; 
&amp;lt;a 
href=&quot;#action/viewnews/itemid/$item[itemid]#&quot;&amp;gt;$item[subject]&amp;lt;/a&amp;gt;
 &amp;amp;gt;&amp;amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/h3&amp;gt;
&amp;lt;h5 style=&quot;margin: 1em 0; font-size: 1em;&quot;&amp;gt;
查看数: $item[viewnum] / 
评论数: $item[replynum] / 
好评分: $item[goodrate] / 
差评分: $item[badrate]
&amp;lt;/h5&amp;gt;
&amp;lt;ul class=&quot;messagelist&quot;&amp;gt;
&amp;lt;!--{loop $iarr $value}--&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;h4&amp;gt;&amp;lt;a href=&quot;#action/viewcomment/itemid/$value[itemid]/cid/$value[cid]/op/delete/php/1#&quot; class=&quot;more&quot;&amp;gt;删除&amp;lt;/a&amp;gt; 
&amp;lt;!--{if 
empty($value[authorid])}--&amp;gt;$value[author]&amp;lt;!--{else}--&amp;gt;&amp;lt;a 
href=&quot;{B_URL}/viewpro.php?uid=$value[authorid]&quot; 
target=&quot;_blank&quot;&amp;gt;$value[author]&amp;lt;/a&amp;gt;&amp;lt;!--{/if}--&amp;gt;
&amp;lt;span class=&quot;smalltxt&quot;&amp;gt;(第{$value[num]}楼, #date(&quot;Y-n-d H:i:s&quot;, 
$value[&quot;dateline&quot;])#, 评 &amp;lt;strong&amp;gt;$value[rates]&amp;lt;/strong&amp;gt; 
分)&amp;lt;/span&amp;gt;&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;$value[message]&amp;lt;/p&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;!--{/loop}--&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-30 13:32:35</pubDate>
</item>
<item>
<title>SupeSite模板文件与格式说明</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64340</link>
<text>一、&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 模版路径
\templates\default
 
二、&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 模版命名规则
采用‘前缀’+‘—’+‘文件名称’+‘.HTML.PHP’方式命名，前缀为频道分类，如BBS即是论坛类的模板文件；文件名称为文件的功能的英文名称，如footer为底部模板文件
三、&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 模板文件列表
templates
文件夹
存放SupeSite模板文件
default
文件夹
存放SupeSite默认模板套系文件
Bbs_footer.html.php
 
论坛频道底部模板文件
Bbs_forumdisplay.html.php
 
论坛频道论坛列表显示页
Bbs_header.html.php
 论坛频道头部文件
Bbs_index.html.php
 论坛频道首页文件
Bbs_viewthread.html.php
 
论坛频道看帖页文件
Blog_category.html.php
 
日志频道分类信息首页文件
Blog_footer.html.php
 
日志频道底部文件
Blog_header.html.php
 
日志频道头部文件
Blog_index.html.php
 
日志频道首页文件
Blog_itemlist.html.php
 
日志频道信息列表文件
File_category.html.php
 文件频道分类信息首页文件
File_footer.html.php
 文件频道底部文件
File_header.html.php
 文件频道头部文件
File_index.html.php
 文件频道首页文件
File_itemlist.html.php
 文件频道信息列表文件
footer.html.php
 
网站首页底部文件
Goods_category.html.php
 
商品频道分类信息首页文件
Goods_footer.html.php
 
商品频道底部文件
Goods_header.html.php
 
商品频道头部文件
Goods_index.html.php
 
商品频道首页文件
Goods_itemlist.html.php
 
商品频道列表文件
header.html.php
 
网站首页头部文件
Image_category.html.php
 
相册频道分类信息首页文件
Image_footer.html.php
 
相册频道底部文件
Image_header.html.php
 
相册频道头部文件
Image_index.html.php
 
相册频道首页
Image_itemllist.html.php
 
相册频道信息列表页
Index.html.php
 
网站首页文件
Link_category.html.php
 
书签频道分类信息首页文件
Link_footer.html.php
 
书签频道底部文件
Link_header.html.php
 
书签频道头部文件
Link_index.html.php
 
书签频道首页文件
Link_itemlist.html.php
 
书签频道信息列表文件
Login.html.php
 
登陆文件
Messagebox.html.php
 
信息提示文件
News_category.html.php
 
资讯频道分类信息首页文件
News_footer.html.php
 
资讯频道底部文件
News_header.html.php
 
资讯频道头部文件
News_index.html.php
 
资讯频道首页文件
News_itemlist.html.php
 资讯频道信息列表页
News_view.html.php
 资讯频道资讯查看页
News_viewcomment.html.php
 资讯频道评论文件
Panel.html.php
 
面板文件
Poll.html.php
 
投票显示页面文件
Register.html.php
 
注册页面文件
Search.html.php
 
搜索页面文件
Showlogin_secques.html
 
登陆回答问题页面文件
Showmessage.html.php
 
后台显示提示信息页面
Snapshot.html.php
 
网页快照页面文件
Space_footer.html.php
 
个人空间底部文件
Space_header.html.php
 
个人空间头部文件
Space_index.html.php
 
个人空间首页文件
Tag_footer.html.php
 
TAG的底部文件
Tag_header.html.php
 
TAG的头部文件
Tag_index.html.php
 
TAG首页文件
Tag_itemlist.html.php
 TAG列表文件
 
四、&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 模版内容详解
1.&amp;lt;?exit?&amp;gt;防止模版被当作PHP文件调用。
2.&amp;lt;?=S_VER?&amp;gt;输出常量S_VER中的内容，S_VER中的内容当然为 SupeSite的版本号。
3. {template bbs_header}此种写法为调用模版文件，其中bbs_header为模版文件名，对应的模版文件为bbs_header.html.php。
4.&amp;lt;!--{block
 name=&quot;bbsthread&quot; parameter=&quot;fid/$fid/dateline/2592000/order/views 
DESC/limit/0,10/cachetime/17200/tpl/thread_subject_list&quot;}--&amp;gt;&amp;lt;!--版块最热主题--&amp;gt;
以上是调用数据库中的数据，可以按此种格式自行填写，或者在后台“添加模块”中添加。
5. $guide此为PHP中的变量，将PHP中的变量写到模版中后，程序会自动将变量中的内容输出出来，供显示用，此处为导航。
6. {lang common_type_bbs}此种格式为调语言包中common_type_bbs对应的语言，语言包路径为。
7. &amp;lt;!--{if $page == 1}--&amp;gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 语段1
&amp;lt;!—{else}--&amp;gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 语段2
&amp;lt;!--{/if}--&amp;gt;
PHP中的if写法相当于
&amp;lt;?
if($page==1) {
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 语段1
} else {
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 语段2
}
?&amp;gt;
意思是说如果条件成立则执行语段1否则执行语段2
8. &amp;lt;!--{loop $_SBLOCK['subarr'] $key $value}--&amp;gt;
&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; 语段
&amp;lt;!--{/loop}--&amp;gt;
此为循环，循环数组$_SBLOCK['subarr']中的内容，每次都会把一个内容赋给$value。可以在语段中输出对应的值。
9.$_SGLOBAL 所有通用信息，可以在模版中用&amp;lt;!--{eval print_r($_SGLOBAL)}--&amp;gt;查看。
10.$_SCONFIG 所有通用设置。
11. #action/news# 链接的写法，程序会把这种写法的链接转换成action_news.html。
12.{S_URL}、{B_URL}为config.php中的URL的具体体现。前者为$siteurl，后者为$bbsurl。
13. #date('Y-n-d H:i', $thread[&quot;dateline&quot;])# 在页面中以年-月-日的格式输出$thread[&quot;dateline&quot;]中的时间。
14. $multipage 为输出分页。
15. $cachetime=10900+30*$key 设置缓存时间。
 
 
论坛模板说明文件 
templates
文件夹
存放论坛模板文件
default
文件夹
存放论坛默认模板套系文件
actions.lang.php
PHP程序文件
语言包－论坛动作定义
admincp.lang.php
PHP程序文件
语言包－论坛后台管理部分
announcement.htm
HTM网页文件模板－论坛公告
archiver.lang.php
PHP程序文件语言包－论坛Archiver部分
blog.htm
HTM网页文件
模板－论坛博客（Blog）系统－首页
blog_addremove.htm
HTM网页文件
模板－论坛博客（Blog）系统－添加/删除
blog_list.htm
HTM网页文件
模板－论坛博客（Blog）系统－列表
blog_topic.htm
HTM网页文件
模板－论坛博客（Blog）系统－查看主题
credits.htm
HTM网页文件
模板－论坛积分策略说明
css.htm
HTM网页文件
模板－论坛CSS样式表
customfaq.lang.php
PHP程序文件语言包－论坛自定义常见问题解答（FAQ）
customtopics.htm
HTM网页文件模板－论坛用户专题
digest.htm
HTM网页文件模板－论坛精华帖列表
emailfriend.htm
HTM网页文件模板－推荐帖子给朋友
emails.lang.php
PHP程序文件语言包－电子邮件相关部分
faq.htm
HTM网页文件
模板－论坛帮助－首页
faq_custom.htm
HTM网页文件
模板－论坛帮助－特别使用帮助
faq_messages.htm
HTM网页文件
模板－论坛帮助－读写帖子和收发短消息
faq_misc.htm
HTM网页文件
模板－论坛帮助－其他问题
faq_usermaint.htm
HTM网页文件
模板－论坛帮助－用户须知
faq_using.htm
HTM网页文件
模板－论坛帮助－论坛使用
footer.htm
HTM网页文件
模板－论坛底部输出
forumdisplay.htm
HTM网页文件
模板－论坛帖子列表页面</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-30 13:31:10</pubDate>
</item>
<item>
<title>Native App和Web App之争纯属扯淡</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64339</link>
<text>“Web已经死了。HTML5将统治着未来的一切。用户正在应用上花更多时间，在Web上花更少时间。”“你可以在Web上做任何你能在本地应用中做的事情。”这是我在这两年听到的泛滥了的“本地和Web”之争，我不得不对这个无聊的争论吐个槽。这不是二选一的决定我们为什么不再去争辩“打印”和“数字化存储”谁优谁劣呢？因为大多数人都已经明白了每一种介质在这个世界上都有它的位置，它们可以彼此补充，完美配合。信件、杂志广告，都可以驱动用户上网查询。而网络上的展示则能让人们订购杂志、访问商店。两者就这样配合起来。移动终端也是一样的道理，但是不明白人们就是觉得应该把本地应用和Web应用拿出来互相比一下。本地应用可以做一些很棒的事情。Web是世界上最为普及的平台。这种情形在可以预见的未来都不会发生任何改变，认为你必须在两者中选择一个实在是一件很荒谬的事情。苹果和橘子的比较我会很乐意帮助你列出Web和本地应用各自能做到而对方做不到的（如果你对此感兴趣，有在Google+上有个详细的讨论）。但是简而言之，我们可以说：本地应用能充分利用设备能力，而Web则能利用强大的URL。&amp;nbsp;（我不会去告诉你本地应用能做些什么；只需要去看Apple花费巨资的布局。）使用Web App的人中没有人会说web App会比Native App表现更为出色。同样，也没有Native App开发者会说每个人都能通过网络连通他们的应用。既然“Native App和Web App”都不构成一个问题了，那么让我们来思考一下：我们是在移动终端面前是如何表现的？简单不过的答案做任何事情都需要首先定义问题，然后找到解决这个问题最合适的渠道和方案。你不会走进一家五金店看到一个漂亮的铲子就说“这是个超级漂亮的铲子。我要回家用这个铲子挖出一些东西来。”那你最终只能得到一个一团糟的院子。这听起来非常愚蠢（因为它本来就是），但这正是在移动终端领域发生的事情。应用火了，就说“啊，我们需要一个应用！“iPad流行了。“啊，我们的站点在iPad上看起来是什么样子的？”你将关注点放错地方了。所以不应该去追逐某个单一技术，希望它能解决你的所有问题。你应该三思而行，想清楚用户的需求，然后决定你的应用如何能帮到用户。发挥各自长处利用了Native App和Web App各自独特特点的公司将会是在移动终端获得胜利的公司。然而，有太多在这两个平台上走错方向的例子。我见过一些Web项目的终极目的是表现得和本地应用一样，我也见过一些本地应用不过就是一个很好的网站而已。这样吃力不讨好。现在让我们来看看Instagram的空前成功。我喜欢来自于Instagram的共享照片（尽管但我还没拥有一部iPhone）。Instagram选择好iOS作为主平台，同时也推出了一个设计优秀的移动站点。他们明白URL对于分享照片的价值，而不只是将这些照片封锁在iPhone之内。即使Instagram计划为每个主流移动平台创建本地应用，还是还是未能覆盖台式机、非智能手机和未来其他设备的用户。要舍得花钱对移动互联网，大部分品牌厂商还在观望，他们的资金预算反映了这一点，只有很少的部分是用于移动领域的，所以他们必须去小心翼翼地使用这些资金，这也是他们为什么对”Native Vs. Web“之争特别热衷的原因。这种情形需要改变。除非你是住在石头里，否则你一定会看到移动就是未来，应该对其加大投资。让我们拥抱Native和Web各自的优点来创造更好的应用体验吧。作者自述：我叫Brad。我和妻子一起住在布鲁克林，我们想要将我们宝贵的休闲时光雕刻成永不磨灭的记忆。我很幸运地对很多东西都抱有激情，比如Web设计、音乐、教育、艺术。我在纽约工作，是一个mobile web开发者。我玩贝司和鼓，我还喜欢粉刷和绘画。我有很棒的家庭和非常好的朋友。我喜欢有激情的人。原文链接：“Native vs Web” Is Total Bullshit</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-29 08:56:22</pubDate>
</item>
<item>
<title>亚马逊拓展KindleFire渠道 推数字商店</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64338</link>
<text>市场研究公司Trefis Team周一在一份报告中指出，亚马逊已针对今年圣诞节市场采取多项措施，以开发Kindle Fire市场。
　　亚马逊近期推出了“Best Of Digital”商店。这一商店主要提供亚马逊推荐的数字商品，例如电视剧、电影和移动应用。亚马逊或许希望通过这一举措充分利用Kindle Fire带来的商机。
　　圣诞节假期是亚马逊传统的销售旺季。在12月26日至12月30日这段时间内，亚马逊的数字产品销售额超过通常每周销售额的3倍。
　　亚马逊还将在这一期间发布Kindle Fire的最新软件升级。一些早期用户已经报告了Kindle Fire存在的问题。在过去3周内，亚马逊每周均售出了超过100万台Kindle Fire。
　　Trefis Team将亚马逊的目标股价调整为233美元，较当前股价高约30%。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-29 08:54:06</pubDate>
</item>
<item>
<title>Filer.js：简化HTML5文件系统API开发的开源JS库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64293</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-29 20:21:12</pubDate>
</item>
<item>
<title>五大可能在2012年大放异彩的开源项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64292</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-29 20:26:12</pubDate>
</item>
<item>
<title>OpenStreetMap，用免费挑战Google Maps付费模式</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64291</link>
<text>两个月前，Google 宣布：Google Maps API 开始限制使用次数，不论是商业还是非商业用户，超过一定次数就需要收费，如图：所有人对 Google 产品的印象都是“免费提供，免费使用”，然而从以上的价格表可以看出，Google 的额外收费并不便宜。Fubra 的开发者 Neil Sweeney 认为，只有 0.35% 的网站被影响到，这很好，但经常使用 Google Maps 服务的网站，它可能无法承担使用成本。一些一直免费使用 Google Maps 打造自己产品的服务开始转而使用 OpenStreetMap，包括刚才提到的 Fubra 以及英国的 Nestoria，一个位于英国的房地产搜索服务。OpenStreetMap，是一个地图版“维基百科”。它的运作方式与“维基百科”相似，所有数据来自用户贡献，所有内容开放、免费使用，用户使用只需要遵守 CC 署名-相同方式共享 2.0 协议。Nestoria 的联合创始人 Ed Frefogle 写了一篇文章，讲述了自己转换的理由，其中有几点值得注意：OpenStreetMap 现在有 50 万名志愿者在世界各地贡献地图内容。志愿者在地图上作出的修改能够很快反映出来。它摆脱了过去“中央集权”的方式来绘制地图；在 11 月份，他接到 Google 销售人员的电话，要求收费，但销售人员没有给他一个清晰的解释，在挂下电话 45 分钟后 Nestoria 的地图就无法搜索了，当然这很有可能是他的一面之辞，但 Google 的客户支持方面确实比较弱，社交产品 Google+ 在实行实名制的的时候，有无故封杀账号的记录；AOL 的 Mapquest 以及微软（Microsoft）的 Bing 也使用 OpenStreetMap 所提供的地图服务。OpenStreetMap 于 2004 年由 Steve Coast 创立，到 2007 年 12 月份牛津大学才成为第一个主要客户。它会成为 Google Maps 有力的挑战者吗？这要看 50 万名用户的力量，能否打败世界上最强大的公司。看看以下视频，展示了 OpenStreetMap 用户在 2008 年一年里做过的修改，是一个有趣的记录，也是数据可视化的一个例子：</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-29 21:36:42</pubDate>
</item>
<item>
<title>Mozilla：Web标准将推动网页游戏的变革</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64290</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mozilla 技术布道师 Rob Hawkes 在博客中 预测了在线游戏的未来，他认为在线游戏的发展方向就是能够使用 Web 标准，并希望在 2012 年能够推动游戏的变革。他想将 Mozilla 的整体目标从封闭系统转移到免费 Apps 上来，让开发的产品能够通过各种 App Stores 和系统发布，并且能够在所有的设备上运行。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;文章探讨了游戏人员识别，全屏游戏，“鼠标点击输入”，使用 Gamepads，增添实时的多人游戏设置以及如何使用本地存储机制。所有这些话题都是基于 Web 标准的游戏最近碰到的问题，但是这些技术正在快速发展。这篇文章中，Hawkes 谈论了他对来年 web 游戏发展的一些看法。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;迁移到浏览器上&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hawkes 表示，Web 想要成为一个真正的游戏平台必须满足几个前提条件：“我们必须摆脱 Web 游戏就是一个很棒的网站的想法，人们能够将游戏货币化，保证浏览器有足够的技术支持开放的 Web 游戏，还需要终止平台之间的斗争。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hawkes 认为现在大家熟悉的 Web 游戏是一个在框架内被许多广告包围的游戏，但这些游戏的用户体验往往做得不好：“如果 Xbox 360 被封装成这样，你应该会不高兴吧！一个可行的解决方法需要一些 API 的支持，包括 Full Screen API, Gamepad API 和 Mouse Lock API，这些技术能够为 Web 带来控制台似的操作体验。”Hawkes 还介绍了 Mozilla Labs Apps 的项目 Web run-time（WebRT），它将给传统的“网站”带来一些新的观念，它“使得各种网站或是游戏能够像‘Native’Apps 一样安装在用户的操作系统中”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在商业化的问题上，Hawkes 也介绍了几个解决方案，“你只能将你的产品放到 Web Store 中，或是将你的 HTML5 游戏转换成一个 Native App，然后在 iOS 或是 Android 上出售，”但现在你有了新的选择：“其中最关键的问题就是如何促使各个主流的平台提供商开放 Web 游戏平台。如果不这样，将很难推动 Web 游戏的发展，而这些平台提供商的收益也很难有大的增长，虽然现在这些平台提供商对这一问题还没有充分的认识，但是相信他们马上就会发现的。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;技术挑战&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;基于 Web 的游戏面临的最大挑战就是各个浏览器采用的技术并不统一。用户应该经常可以看到，在一个浏览器上能够良好运行的在线游戏在其他的浏览器上可能就无法运行 了，还有些在线游戏需要安装 Flash 插件才能访问。Hawkes 承认“现在 Web 游戏的开发时机可能并不够成熟，只有 Chrome 和 Firefox 投入了大量的精力支持文本游戏开发。Opera 也表现出了兴趣，而 Microsoft 和 Apple 貌似对此并不感冒——IE 甚至根本就不支持 WebGL。这都将妨碍 Web 成为一个真正的游戏平台”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最终的结果就是 Web 游戏平台将和其他现有的游戏系统一样，比如只支持 Chrome 的游戏只能在 Chrome Web Store 中购买。“这并不利于 Web 的发展，也不是 Mozilla 想看到的结果。” Hawkes 表示“凭我们的一己之力是不可能完成这个目标的，这需要用户敦促各大浏览器提供商合作起来，采用标准的 Web 协议。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mozilla 的开放性所带来的任何成功将影响其他浏览器提供商，将相应的技术放到自己的产品中，Hawkes 表示“但是有些项目和 APIs 可能并不支持跨平台的访问，我们已经发现了这个问题，并且正积极地与其他浏览器提供商和 W3C 合作解决这些问题。Gamepad API 就是其中的一个例子。我们的开发者正与 Google 合作，共同协商相关的规范。”</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-29 21:30:11</pubDate>
</item>
<item>
<title>Ruby on Rails：3.2 RC1发布，4.0将会放弃Ruby 1.8.7</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64289</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 08:11:12</pubDate>
</item>
<item>
<title>流程图绘制工具，Dia 0.97.2 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64288</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 09:21:12</pubDate>
</item>
<item>
<title>LibreOffice 3.5 Beta 公开测试日</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64287</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 09:28:12</pubDate>
</item>
<item>
<title>源代码高亮显示：GNU Source-highlight 3.1.6 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64286</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 09:46:12</pubDate>
</item>
<item>
<title>计划FM为人人网提供首个开源Ruby SDK</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64242</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 08:26:12</pubDate>
</item>
<item>
<title>XP用户注意了 Thunderbird 9.0.1紧急发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64241</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 09:00:12</pubDate>
</item>
<item>
<title>10 个让人惊讶的 jQuery 插件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64240</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 09:11:12</pubDate>
</item>
<item>
<title>Firefox 11 Aurora 中全新的开发者工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64239</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 09:37:12</pubDate>
</item>
<item>
<title>Android 4.0移植到Kindle Fire</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64238</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 09:37:12</pubDate>
</item>
<item>
<title>7个开源的TTS语音合成软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64237</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-28 09:49:12</pubDate>
</item>
<item>
<title>php中对url中特殊字符的转意处理</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64236</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 15:38:28</pubDate>
</item>
<item>
<title>基于TCP的垃圾邮件探测技术</title>
<link>http://oss.org.cn/html/35/n-64235.html</link>
<text>美国海军学院的一组研究人员研发出一种技术，通过分析 TCP 数据包信号模式，实时检测电子邮件流量，识别出垃圾邮件。　
　研究人员本月在波士顿举行的 Usenix Large Installation System Administration 
(LISA)会议上公开了他们的研究，通过分析包定时、包序重排、信号拥挤和流量控制等的信号，可以揭示出发送垃圾邮件的僵尸网络。研究人员说，大量的 
spam 都来自于僵尸网络，它们尽一切可能的发送消息，拥挤了本地上传链路，因此通过检查 TCP 数据流就能发现 spam。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 11:04:43</pubDate>
</item>
<item>
<title>Nginx份额突破10%，成为增长最快的Web服务器</title>
<link>http://oss.org.cn/html/34/n-64234.html</link>
<text>		据w3techs网站调查结果显示，Nginx的市场份额已经从今年年初的5.9%增长到了10%，成为增长最快的Web服务器。目前Apache仍占主导地位。  这个来自俄罗斯的Web服务器（Nginx）俨然已经成为了该领域的一匹黑马，目前每天新增的一百万网站中有超过100个网站使用Nginx。 Nginx获得的这些市场份额来自于其他Web服务器，其中大部分是从Apache转过来的。 据统计，流量高的网站更喜欢使用Nginx，前1000个顶级网站中，有23.9%的网站使用的是Nginx。这包括许多广为人知的网站，如Wordpress.com、Tumblr.com、Sourceforge.net、Archive.org和Dropbox.com等。  在俄罗斯，Nginx拥有55.2%的市场份额，在一些国家，Nginx甚至成为了首选服务器。但是只有1%的美国政府网站使用Nginx。 来看看典型Nginx网站背后使用的技术。这些网站主要使用PHP作为服务器端语言，约占94.7%。此外，在使用Ruby或JavaScript（服务器端）的网站中，Nginx也占据了比较高的份额。尽管Nginx也能在Windows操作系统中很好地运行，但约99.1%的Nginx网站运行在类UNIX操作系统上。  另外，80.6%的Nginx网站使用HTTP压缩，而Apache和微软IIS网站的这一数据分别为40.2%和28%。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:59:40</pubDate>
</item>
<item>
<title>美国政府宣布将 Data.gov 开源</title>
<link>http://oss.org.cn/html/33/n-64233.html</link>
<text>		Data.gov是美国总统奥巴马在2009年就任后，為了增加政府资料透明度而设立的一系列网站。但随著近年美国政府陷入财政困局，白宫於2011年4月宣布Data.gov、paymentaccuracy.gov、Performance.gov、FedSpace、USASpending.gov和Apps.gov/now将终止营运。但幸好有关的技术并不会就此被埋没，因為白宫已经宣布会将它们开源化。数位化的趋势令政府在多方面都累积了大量的数据，例如交通状况、天气和各地传染病资料等等。这些数据只要经过分析，将会对社会、甚至人类都有好处。 例如天气与传染病或人口流动是否有关？犯罪率是否与地理环境有关？交通状况与当地业种有没有关係？这些数据必须经过收集和分析，在统计学上才会有意义，了 解各种数据之间的关係，更可让我们对未来可能发生的状况进行预测，奥巴马甚至认為数据的公开有助於新產业的出现，因此才著手建立Data.gov。可是数 据应该如何公开？以怎样的格式公开？Data.gov便是為此而建立的一套共通标準。有关消息由美国联邦CIO的Steven VanRoekel和CTO的Aneesh Chopra 在2011年12月初於白宫的博客上发布，开源化计划的目的是让世界各国都可以使用共通的方式公开数据，计划名称暂定为Open Government Platform， 开源化计划会与印度合作进行，第一阶段公开的程序已经可以在GitHub上找到，这部分程序可以让类似Data.gov的网站，提供给市民上载数据的功能。第二阶段公开的代码将会由印度方面提供，主要功能是有关网站架构，完整的代码可望在2012初公开，系统主要改良自开源内容管理系统 Drupal。未来更会公开有关的API，让NGO等非牟利机构也可使用和扩充有关功能。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:58:18</pubDate>
</item>
<item>
<title>2012年 Bing 将发威的3个原因</title>
<link>http://oss.org.cn/html/32/n-64232.html</link>
<text>　　微软 Bing 已经超越雅虎，占据美国搜索引擎市场第二的席位，但是仍然远远落后于 Google 。笔者认为 2012 年 Bing 将进一步缩小与 Google 的差距，主要有 3 个原因：
　　1.Bing 与 Facebook 和 Twitter 深度合作
　　2011年，Bing 与 Facebook 和 Twitter 达成战略合作协议，如果你了解 Facebook 和 Twitter 
在美国互联网的地位， 特别是在 Facebook 和 Google 的流量相比已经不相上下的情况下，应该能理解这种合作对 Bing 
市场份额的提升的重要性。Google 呢？由于现在已经开始大力推广自己的社交网站 Google+，并将 Google+ 
与现有的诸多服务相整合，Google 并没有和 Facebook 和 Twitter 达成类似的合作关系，虽然 Google+ 
很优秀，并获得了很快的增长，但与拥有 8 亿忠实用户的 Facebook 相比，Google+ 仍然有很长的路要走。2011年，与 
Facebook 和 Twitter 的合作关系已经帮助 Bing 提升了不少市场份额， Our4.org 预测在 2012 年，Facebook 和 Twitter 将助 Bing 正式发威。
　　2.Bing 与 Xbox 和 Kinect 整合
　　除了 Windows 操作系统、Office 办公软件和企业方面的巨大成就之外，微软最成功的产品应该非 Xbox 
莫属。2011年，微软改进了 Bing 与 Xbox 和 Kinect 游戏系统的集成，这同样将帮助 Bing 在 2012 
年进一步发威。而且由于游戏玩家更多是年轻人群，如果能让游戏玩家习惯使用 Bing 进行搜索，Bing 将受到广告客户的高度追捧。
　　3.更大的移动市场份额
　　由于将 Google 设置为默认搜索引擎的 Android 系统以及 iOS 系统的巨大成功，Google 
占据了移动搜索的主导地位，这种情况在 2012 年将持续，但是微软的移动市场份额也就增大。2011年 11 月，微软为 Android 和 
iOS 发布了一个非常棒的 Bing App 更新，在某些方面来说，它要比 Google 移动搜索更好。另外，鉴于 Nokia 将在 2012 
年全力以赴，预计 Windows Phone 7 终将夺得更大的市场份额。对于 Bing 
的移动搜索市场份额，2012年也许不会有非常显著的改善，但是进一步的提升基本上是必然的。
　　微软 Bing 举动的效果在 2011 年没有并没有完全显现，经过一定的时间积累过后，在 2012 年，我们可能将看到真正的效果，2012年 Bing 将与 Google 进一步拉小差距。
　　搜索巨人 Google 也并非无所不惧，面对对手的疯狂追赶，它怎么能不担忧？虽然现在 Chrome 的市场份额已经超过 Firefox，难道 Google 就可以不再资助 Mozilla 那 3 亿美元了吗？Our4.org 觉得如果 Google 停止对 Mozilla 的资助，恐怕最开心的莫过于微软了，微软花费较少的资金就可获得巨大的搜索市场份额提升，比他们之前所做的任何努力都容易。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:23:28</pubDate>
</item>
<item>
<title>Metro UI 的简洁是另一种复杂</title>
<link>http://oss.org.cn/html/31/n-64231.html</link>
<text>作者:苏园Metro UI 推出来的时候，对比其他系统的图标海洋，确实让人眼前一亮，活动格窗取代图标，内容取代形式，微软的宣言是让智能手机用户有更高的效率得处理事务，而不是专注于智能手机本身。但果真如此吗？在我看来，Metro UI 设计得的最初目的是简洁，最后产生的结果却不一定是简洁。细线Metro UI 中的一大特色就是内容的无边框设计，通过间隔和字体使内容产生自发性质的分隔，而不必通过边框等介质。在展示少量内容时，简洁的特性可以很好的体现，但在 处理大量内容时，却会表现出“拥挤”。由于没有分割线，不同的内容之间只能通过留白来分隔，导致文字积压，挤占了屏幕的表现空间，进一步造成了内容的“拥 挤”。&amp;nbsp;以设定中“关于本机”选项为例，iOS 的细线分隔显得更明快，获取信息更清楚容易。细线是最简单的内容区分的形式，Metro UI 对这区分形式的舍弃导致整个屏幕上只有孤零零的文字，直接发现有用信息困难。细线的分隔也是一种更人性化的暗示，它让内容看上去更像一个按钮，暗示着可以按下并激发新的内容。而Metro UI 中的内容则会让人疑惑这是单纯的文字还是可以继续点击查看。Metro UI 的功能性暗示更加不明确。颜色与图标Metro UI 在颜色的应用上既激进又保守，激进的是它可以把界面弄得五彩斑斓，保守的是在应用内的界面不着一墨。从上图看，Metro UI 的邮件界面上只有单纯的文字，缺乏色彩，所有内容的分隔都是通过字体和空白来完成。这样的结果是信息同质化，很难区分信息。界面没有将有价值的信息第一时 间呈现出来，因此当面对这样的界面时，需要更多的集中精力去寻找信息。这和做 PPT 时将所有的文字堆砌起来而不进行有效的信息归类并无区别。而 iOS 除了字体还有不同的颜色来表现不同性质的信息，同时也有小图标来表现相同信息的数目。各种要素各司其职，将信息表达得直观明确。活动格窗活动格窗是Metro UI 呈现给用户的第一特色，它不仅是一个快速启动的按钮，同时也是一个信息更新的展示板，微软宣传这样的设计可以更好的将信息第一时间呈现给用户。但问题是，活动格窗的面积太小了，只能显示简介性质的数字，小图标表等等，缺少好的信息预览功能，这样的通知系统展现给用户的结果就是“知道有这么回事，但不知道究竟是怎么回事。”用户依然是茫然的。有价值的信息被淹没，用户没有能够便捷地获取有用信息。简洁的目的不是复杂Metro UI 是一个形式上简洁的系统，导致的是一个复杂的用户体验。与其相标榜的相反，用户需要花更多的时间在屏幕上才能仔细甄别什么是有用的信息。Metro UI 为了简洁，大多数时候忽视了内容的表现形式，比如细线这种最简单区分内容的形式。Metro UI 在颜色上也有奇怪的特性，屏幕永远处在斑斓和全无的两极，内容的表现形式非常单一。在我看来，微软的界面设计陷入了一个误区，突出内容忽略形式，并不是真正的简洁，而是另一种复杂。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:16:24</pubDate>
</item>
<item>
<title>开源软件发展史【信息图】</title>
<link>http://oss.org.cn/html/30/n-64230.html</link>
<text>互联网倡导开放、平等、协作和分享的精神。开源软件（英语：Open source software，英文缩写：OSS）是一种源代码可以任意获取的计算机软件，这种软件的版权持有人在软件协议的规定之下保留一部分权利并允许用户学习、修改、增进提高这款软件的质量。开放源代码的定义由Bruce Perens（Debian的创始人之一）于1997年提出。但其基本概念在几十年前就已经开始形成，最早可追溯到1955年，当时IBM为了交换编程材料、深入研究IBM操作系统而开发的“IBM用户组分享”。今天我们就通过SourceNinja的这幅信息图一起了解一下开源软件的发展史。图：Jaysming，文：pestwave</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:09:27</pubDate>
</item>
<item>
<title>程序员/开发人员如何利用好黄金时代？</title>
<link>http://oss.org.cn/html/29/n-64229.html</link>
<text>Kernel的技术编辑、ScribeSub.com的创始人David Haywood Smith曾说过，现在是开发者的黄金时代。反过来说，现在如此多的资源摆在面前，开发者又该做些什么来好好利用这个黄金时代呢？David Haywood Smith在博文《The Golden Age Of The Developer》中表示开发者应该做到“Following”、“贡献”和“领导”，不断在技术界晋级。下面是该文的译文：现在是开发者的黄金时代。现在有如此多的开源软件、学习资源及优秀的Web服务，它们可以帮助我们学习新语言，提供帮助，还可以让我们与他人协作完成一个项目。如果我们的点子够新意，就会有很多投资者为我们投资，帮我们创业。这并不是说我们所做的工作很容易。一定要设立高的标准。这些可用的资源可以帮助我们快速进步，获得更多发展。革新的本质注定了我们很多主意都不会成功。但是机会仍在这里，朋友们，我们都是王者。好消息是，这个黄金时代让你成了现在的开发者，并还将继续帮助你。更好的消息是你还有机会将一直向前走。第一步是“Following”。懂得“Following”的开发者可以始终保持活力。因为他们在工作中使用开源软件，并将自己加入到邮件列表中，以及时获得最新技术消息，同时还会参加本地技术活动及阅读Github上的说明文档。任何技术“跟随者”的数目在很大程度上暗示着该技术的流行程度。下一步即贡献。贡献代码、点子、经验等，帮助构建好的开发生态环境。简言之，这包含在Github上提交一个小的“Pull Request”,也包括在技术会议上发表一个演讲。我说的虽然很简单，但首次做这些事情还是很困难的。一旦做了第一次，你就会觉得它们并不难。再小的贡献都是伟大的。最近，我在Github上提交了我首个“Pull Request”，它整理了“Twitter引导程序”中缺失的一些HTML属性。我鼓起了所有的勇气才提交了它。最大的挑战是“领导”。听起来很难，实则不难。其实它仅是“贡献”的一个延伸。如果你做出了重大的贡献，那你自然就会成为一个领导。像“_why” “DHH”“notch”都是我们熟知的著名领导者，但还有很多是我们所不知道的。任何在Github中开源新项目、组织过技术活动、写过多篇流行博文的人都是这个领域的领导者。我在这里只说这几个阶段。如果你知道自己现在所处的阶段，我鼓励你想想如何更上一层楼。无论你属于哪种类型的开发者，你都将从中获益。不停晋级，不断让自己满意，还会提高自己的名望。我提交的那个关于Twitter的“Pull Request”让我有机会在Twitter公司享受一顿免费的午餐，还获得了一件T-shirt。其实，真正的获益是，帮助整个系统更加智能、更加快速。大家共赢。原文链接：The Golden Age Of The Developer</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 10:00:48</pubDate>
</item>
<item>
<title>把Javascript推到极限的20个网站</title>
<link>http://oss.org.cn/html/28/n-64228.html</link>
<text>对于浏览器上的开发者来说，2011年又是相当精彩的一年。web开发者Phil Hawksworth在这篇文章中总结了web 上经典的JavaScript用法。那些喜欢冒险体验前沿技术的开发者现在应该会非常开心。浏览器正变得越来越强大，上面有各种丰富的功能可以供开发者选择，一些在几年前几乎难以想象的功能都已经一一实现。有了这些新功能，开发者现在能够开发出更精细、更复杂、更有想象力的用户界面了。这为网站开发扫清了障碍，网站能够拥有让人惊喜的用户界面了。有时候，这种技术的运用是非常精妙的，它无声无息地改变了应用的用户体验。有时结果就像是加入樱桃可乐中的跳跳糖，悄悄地给人们带来惊喜。这里有20个特别突出的网站，他们在定位、技巧或者是JavaScript的使用上有各自的独到之处。演示网站先看一些有趣的东西。这些网站利用JavaScript将Canvas，WebGL，CSS3和HTML5元素这些浏览器技术融合在了一起。通常这些技术只是用来取悦用户，或是在现代的浏览器中显示一些新的功能。虽然大多数的功能都很不错，但有些会占用大量的处理器或是显卡，所以笔记本电脑用户常常需要关注他们的笔记本温度，以免温度过高而出现异常。1. Baroque.meBaroque.me是一个简单，但是能够催眠的网站，它就用到了HTML5 Canvas元素，并使用JavaScript巧妙地控制了一个简单的虚拟巴赫大提琴设备的渲染工作。网站的声音是由Flash提供的，并且使用JavaScript控制。你可以控制页面上那些跳动的圆点，但是却很难控制大提琴的时间节奏。它的开发者Alexander Chen来自Google Creative Labs，也参与了非常受欢迎的Les Paul Google Doodle开发，在早些时候，还开发了一个非常棒的可视化NY地铁系统。2. BeercampBeercamp 2011的界面非常有趣，可以自由缩放，它非常巧妙地使用了CSS3和JavaScript技术，这一点吸引了许多人的关注。网站大量采用了CSS3转换和变形效果，你还会发现它劫持了浏览器的滚动事件用来控制网页的缩放效果。今年的早些时候David DeSandro曾分享了相关效果实现的技术细节。3. Three.jsCanvas和WebGL这些技术为浏览器带来了强大的渲染功能。Mr. Doob开发的Three.js项目是一个3D JavaScript引擎，能够利用浏览器上的这些新功能渲染页面。下面是一个利用Three.js渲染动画或是3D模型的例子。4. Windows Phone Demo最新消息：web将覆盖移动设备！老实说，这个消息确实对使用JavaScript技术的移动市场来说是一个好消息。这还只是推动移动市场发展的第一步。为了演示新的Windows移动设备界面，Microsoft开发了一个Windows mobile上的演示示例。用户确实能够发现它的界面播放的动画非常流畅，并且响应相当及时。这也是CSS和JavaScript的功劳（最好是通过iPhone或是Android设备访问——目前还不支持Windows Phone！）。工具这一节介绍的技术可能不会直接给用户带来惊艳的感觉（虽然有些可能可以做到），但他们确实非常重要。其中有些是开发者可能会频繁使用的JavaScript资源，而有些是人们开发浏览器应用时的首选工具。5. WorkflowyWorkflowy可以帮助人们整理自己的想法。在2010年十一月推出了他们的测试版本，仅仅用了30天的时间，它就拥有了一百万条记录了。它是由&amp;nbsp;Jesse Patel和Mike Turitzin共同开发的，Workflowy使用JavaScript处理DOM操作和存储，并且能够在大量的本地记录中快速查找目标记录。如果你需要整理自己的记录或是想查找新的GTD&amp;nbsp;工具，Workflowy会是一个不错的选择。最近它还增加了对移动设备和平板电脑的支持，方便用户分享文档。6. jQuery Mobile虽然现在移动web开发正变得越来越热，但是移动设备的开发工作还是相当困难的。jQuery JavaScript库的目标就是想在浏览器上实现一个通用的JavaScript开发方法。而&amp;nbsp;jQuery Mobile的目标则更加远大：简化各种移动设备平台上的web开发工作。这个库已经推出了1.0版本，jQuery Mobile网站就是一个很好的示例，展示了如何使用jQuery Mobile开发一个能够在各种移动设备和传统浏览器设备上运行的网站。7. SpritecowSpritecow是由Jake Archibald开发的，它能够帮助用户解决许多繁琐费时的问题。前台开发人员都知道，创建spritesheets的目标就是使得界面响应更加及时并尽量减少HTTP请求的次数。Spritecow将JavaScript，Canvas和一些数学逻辑算法融合在一起，为用户提供了一个好用的CSS生成工具。8. Cloud 9 IDE将整个开发环境整合到云和浏览器里面已经成为了我们这个时代的标志。在过去的几年里面，Cloud 9一直在开发他们的集成开发工具（IDE），但是今年，它变成一个令人期待的项目并且成为一个可用的web开发资源。创始人兼CTO&amp;nbsp;Rik Arends表示，与其他类似项目（如Bespin）相比，使用JavaScript来管理DOM，在编辑环境中控制文档性能更好。&amp;nbsp;通过配置和扩展JavaScript，还可以为这个开发环境带来更多的提升和功能。都相当值得期待。9. Reveal.JSReveal.JS是Hakim El Hattab开发的一个演示文稿制作工具，能够制作绚丽的演示文稿并生成HTML格式，将它发布到web上。它使用了CSS3变换功能和JavaScript，这个工具大受web开发者的青睐。10. PusherPusher是一个很棒的工具，在此不得不提。虽然它已经推出一年多了，但最近提升了Web Sockets对浏览器的支持，Node使得Pusher受到了更多的关注。Pusher提供了一组API用来提升实时apps和服务。有许多非常棒的网站都使用了Pusher。Pusher最初是由New Bamboo的几个员工开发的，虽然规模不大，但是做的工作却相当了不起，New Bamboo需要实现实时通讯来提升web游戏和工具，所以Pusher自身用到了Node。11. Speakerdeck来自Ordered List的Speakerdeck最近被收录到Github上，它利用JavaScript和web技术在web上展示演示文稿。虽然许多其他类似的服务都利用了大量的Flash技术，Speakerdeck相比之下则较少用到Flash，而是利用JavaScript实现幻灯片预览功能。这里有许多丰富的功能和技术。12. Gauges既然已经提到了Speakerdeck，就不得不提一下Ordered List的另一个精彩服务——Gauges。它是一个分析工具，有点类似于Google Analytics，使用了常用的JavaScript插件获取用户的访问数据。Gauges有丰富的API，并且能够很好地渲染实时数据。JavaScripty相当的精彩。改进界面13. BBC主页最近关于BBC更新的主页有一些争论。有些人喜欢它，而有些则对它感到反感。就个人而言，作者开始觉得新的主页看起来有点疯狂，但慢慢地也觉得它其实也挺可爱的。它的交互看起来非常酷，并且有许多的改进。即使在不支持JavaScript的环境中，这个主页也考虑得非常周到。但是，它还是显得有点拥挤和正正方方了。14. BBC iPlayer虽然已经介绍过BBC了，但是BBC iPlayer的确值得拿出来再说一说。它有一个非常了不起的JavaScript驱动界面，能够非常有效地呈现丰富的内容信息（不仅仅是视频信息，还包括图片信息）。使用BBC的主页和开源的Glow&amp;nbsp;JavaScript库能够做许多新颖的工作。15. Facebook必须承认，Facebook在界面设计上做了大量复杂、精细的工作，使得它真实。上面有丰富的实时资讯，通知和聊天功能，虽然它的风格可能无法迎合所有人的口味，但是它的确对web设计产生了影响，并且影响了许多人。背后的美丽虽然作者非常关注视觉效果和代码库（代码库确实相当重要），但他最关心的其实是如何巧妙地利用这些技术。最后几个例子很好地展示了如何灵活地使用现有的技术。16. GithubGithub在用户交互方面做得相当出色并且非常注重细节的设计。在代码导航树中，用户能够在项目的目录树中平滑地切换，网站记录了各个页面的地址信息并且可以对地址进行标记，内嵌了编辑器，可以直接在浏览器中修改代码（使用Cloud 9 editor）。使用Canvas实现网站的可视化工作，包括搜索预览，弹出菜单和界面元素，这个列表还在不断增加。Github做得非常棒。17. Google DoodleGoogle Doodles提供了非常有趣的动画，用户能够与这些动画交互。有时，这些设计会让用户会心一笑，有时也许人们还没发现它们，它们就已经消失了。Marcin Wichary是Google的这个“delighters”项目的负责人之一，为了推广这个项目，必须 扫清JavaScript优化技术中的障碍。这个团队使用了sprite-crunch技术，用来压缩它们在动画中使用的sprites的。处理方法相当妙。这些涂鸦非常巧妙地利用了浏览器API和JavaScript。Google的开发人员太聪明了！18. Nike Better WorldNike团队的这个网站常常被复制和讨论。这个网页将JavaScript和CSS结合起来，当用户滚动页面时，营造出一种有趣的视觉差。即使浏览器不支持JavaScript，这个网站也能优雅地降级显示，将视觉差效果移除，但并不会影响页面的正常显示，作者建议将导航链接保留下来。可以用JavaScript劫持这个链接，这样无论应用环境是否支持JavaScript，这个导航都能够工作。19. Mobile Beetle作者在今年早前曾对Volkswagen Beetle的新网站提出了一些批评。在此不会重复这些批评，而只是介绍这个网站在将JavaScript推向极致的几个方面。它也是一个旋转效果做得相当不错的网站。这个网站的移动版本做得相当精巧。当你在iPhone上访问这个网站时，它充分利用了触摸和旋转事件提升服务的用户体验（尽管如果不是使用的WIFI的话，网页中的图片可能显得有点过大）。20. Twitter移动网站其实移动设备上已经有许多非常棒的Twitter客户端了，以至于大家可能会忽略今年Twitter推出的移动优化版本的web客户端，尽管它相当不错。Twitter的开发团队采纳了iPhone Twitter apps上的许多UI惯例，并且在自己的web框架中重新设计了一些UI。结果相当不错，在智能手机上访问浏览器中的页面就像是native app一样。在Android和iPhone上的效果都相当出色。真的是一个很棒的工作。这就是作者挑选出来的20个将JavaScript推到极致的网站。当然，其实应该还有许多其他的网站也有资格出现在这个列表上，但是web太大了，而列举出20个网站只是一个很小的集合。虽然许多其他的网站也有一些突出的特点，但也各有不足。JavaScript让开发者能够在浏览器中做许多了不起的工作，但这里列出的20个网站中，有些为了实现某些特色牺牲了网站的访问性、地址性和其他性能或功能，这是一个优秀的web应用应该克服的。不过，它们确实在今年，给web开发者带来了不少新的想法。文章来源：2011 in review: 20 sites thatpushed JavaScript to the limit</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 09:52:41</pubDate>
</item>
<item>
<title>为什么程序员喜欢在深夜工作</title>
<link>http://oss.org.cn/html/27/n-64227.html</link>
<text>有句还挺受欢迎的话是，程序员就是把咖啡变成代码的机器。果然，随便问一个程序员什么时候效率最高，很有可能他们会说大多是深夜的时候。有些早点，有些晚点。常见的是：在凌晨4点起床，赶在吵闹的一天开始前完成一些工作。另外一些喜欢在凌晨4点睡觉。这种做法的目的是避免干扰。但是你可以锁上门啊，为什么夜晚这么特别呢？我认为可以归结为三件事：员工的时间表、疲惫的大脑和明亮的电脑屏幕。（伦敦科学博物馆中的黑猩猩大脑，图片来自维基百科）员工的时间表Paul&amp;nbsp;Graham在2009年写过关于员工的时间表的问题&amp;nbsp;——&amp;nbsp;基本上，在世界上有两种类型的时间表。传统管理者的时间表是分散地切割成小时和一个个十分钟的方式绩效，通常是按一个小时的价值给你报酬。另一种，叫做员工的时间表——针对我们这些程序员。工作于大型虚拟系统时，需要把所有涉及的事都记在脑子里——有人曾经比喻这就像用昂贵的水晶建造房子，一旦有人打扰，房子就一股脑塌落并碎成一片。这就是为什么当有人打断程序员的思路时，他们那么恼火。由于这种巨大的精力投入，使得我们无法简单地开始工作，直到我们能连续几小时不被分散注意力才行。刚在脑中构建了整个模型，结果半小时后就毁了可不值得。事实上，跟很多员工交谈后你会发现，他们感觉根本不能在白天完成任何工作。接连不断地被打扰、关注重要的事物和回复邮件都不能让他们安心工作。所以他们选择在别人睡觉的深夜来完成大部分的工作。疲惫的大脑&amp;nbsp;就算是程序员，晚上也应该睡觉。我们不是超人。也会感到白天更机敏。那为什么我们要在大脑想睡觉的时候做最复杂的工作，而在大脑最敏锐和灵活的时候做简单的任务呢？因为疲劳成就更好的程序员。与巴尔默峰值类似，疲劳让我们更易集中精力，因为当你的大脑疲劳时，它就必须集中精力！没有多余的脑力让你不集中精力。我似乎在喝茶过多或不合适的时间喝能量饮料后完成的工作最少。这些让我很活跃，一会儿查看Twitter，一会儿看看Hacker News，我似乎一直在到处浏览。你应该在想我能很好地工作——这么有精力，这么有脑力。但是相反，我一直在阻绊自己因为我不能集中精力超过两秒。然而，当我微感疲倦时，我就能坐下来编码了。用有点疲劳的大脑，我能一小时又一小时地编码，甚至都不想查看Twitter或者FaceBook。就好像互联网不存在了。我觉得这适用于大多数程序员。我们有太多的精力去完成80%的工作——面对现实吧，一个好的算法，需要用10倍的代码量来营造使用它的环境。即使你做的是最高级的机器学习（或者是其他的），很多工作也仅仅只是清理数据和将结果以友好的方式呈现出来。当你的大脑并不是竭尽全力地工作时，它就会找其他的事做。疲劳使你愚钝，从而使你只能顾及手头上的工作。明亮的电脑屏幕这条非常简单。在夜晚一直盯着明亮的光源并且使你的睡眠周期延后。你直到凌晨3点才感到疲倦。然后中午11点起床，当夜晚来临时你并不感到疲劳，因为，呵呵，你中午11点才起床！经过足够多的反复，本质上是把你带到了不同的时区。更有趣的是，它会保持相对稳定，一旦你进入凌晨3、4点睡觉的节奏中，你就会一直保持那样。结语综上所述，程序员晚上工作是因为没人强制规定你必须什么时候停止工作，这可以给你更轻松的方式，你的大脑不再一直寻找分心的事并且明亮的屏幕使你保持清醒。原文链接：swizec.com&amp;nbsp; &amp;nbsp;编译：伯乐在线 – 魏哲</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-28 09:41:28</pubDate>
</item>
<item>
<title>为何 Safari 不如 Chrome？</title>
<link>http://oss.org.cn/html/26/n-64226.html</link>
<text>Safari是乔布斯在2003年的Macworld大会发布的，9年过去了，08年才发展起来的Chrome用了不到Safari一半的时间远远
把Safari甩在了后面，这让Safari情何以堪。Chrome的市场份额从2008年的0%开始，发展到了现在的25%，而苹果的Safari似乎
一直徘徊于5%-8%之间。
两大浏览器都是基于苹果的布局引擎Webkit，按道理Safari是占优势的，因为两者都分别是自己操作系统的默认浏览器，许多人就顺便使用了，懒得去下载别的浏览器。
而且随着OS X 
Lion的发布，似乎Safari重获新生，Safari是其默认浏览器，而像Chrome这样的第三方软件要开始则比较难，Safari还支持更多功
能，如多点触控，Reading List（可在iOS及OS X 
Lion之间同步），这些都是竞争对手所不具备的，但几个月过去，Safari的增长仍旧缓慢，仅仅随着Mac的售出而增加。
而且移动设备的暴涨也应该让Safari市场份额增加才对，可是事实标明Safari市场份额仍无明显增长，而Chrome，和Android，和移动设备没有任何联系的浏览器却迅猛发展。为什么？
因为Windows？
许多人可能会想，这还不简单，Chrome运行于Windows操作系统，而Safari大部分时候都用于苹果自己的系统，Windows 
.VS. OS 
X，哪个使用人群广？很显然是前者，所以Chrome当然比Safari发真快，可是，实际上Safari要比Chrome更早登陆Windows。
在2007年六月，Safari for Windows Beta版就已经发布，正式版于2008年三月发布，而Chrome直到2008年的九月才发布，Chrome只用了一年的时间就超过了Safari。
既然不是Window的原因，那又是什么？
因为速度？
大量Benchmark测试表明Chrome不管在网页打开还是JavaScript表现方面，速度都最快。
但是，当Safari发布Windows版的时候，测试结果也是一样的，不管在Mac还是PC上测试，那时候都是最快的，如果仅仅是因为速度，那么Safari在2007年六月的表现就应该和chrome在2008年九月的时候一样。
因为插件？
难道Chrome胜在插件？也许，不过Safari在2010年年中的时候也有了许多插件，当然，Chrome的插件质量更好更丰富，如果这也足够
让Safari落后于Chrome，那么开发商们可能早就将游戏植入Chrome，而且，Firefox也先于Chrome和Safari植入插件，现在
不也败给了Chrome吗？
原因之一：Safari用起来不舒服，Google推广给力
很多人抱怨Safari for 
Windows让人讨厌，自己使用过之后，觉得实际表现介于Firefox及IE之间，尽管测试结果很棒，而苹果最新版本的Safari 
5.1仍在继续激怒大家。另外，Safari已经与iTunes绑定在一起有一段时间了，更有理由获得大量市场份额，但似乎很多人下载它但并不是用它。
而另一边，Google对自己的浏览器做了大量宣传，Google.com偶尔会出现Chrome让你下载。
原因之二：独特的功能
老实说，本人也是Chrome粉丝，Chrome的许多性能是Safari所不具备的。重要的一点就是Chrome全新设计的“新建标签页”，更加可视化，用户可以更方便地管理应用程序、最常访问的网站。页面下方的功能栏上提供了“最常访问的网站”、“应用程序”小标签，点击即可在这两个页面之间进行切换，这是其它浏览器不具备的，也是它的独特之处。
其实具体为什么会这样也没有一个定论，欢迎大家踊跃发言，告诉我们您的观点。
Via&amp;nbsp;TC</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-27 09:39:53</pubDate>
</item>
<item>
<title>10款AJAX/CSS/HTML的在线表单生成器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64139</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-26 16:37:12</pubDate>
</item>
<item>
<title>雨林木风微软授权转型之路</title>
<link>http://oss.org.cn/html/38/n-64138.html</link>
<text>曾经国内系统界是以深度、雨林木风、番茄花园为首发展，在 2008 年 8 月，微软帝国以正版维权之名，正式开始中国地区盗版打击之路。直至 2009 年番茄花园制作人员被判入狱之后，以雨林木风为首的几个制作团队纷纷以 Linux 定制谋求转型洗白。 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;业界近日消息称，“雨林木风已经获得微软中国大陆地区 Windows 7 系统封装授权，负责今后中国大陆地区的 Windows 7 系统的全部封装和销售”，并且以 XP.Com 域名上线。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;早期在雨林木风购入 XP.Com 之后，曾用以 Linux 仿 XP 系统定制版发展，然而不到两年的时间，选择发展 Linux 定制的转型路上，已经默默地宣告失败。雨林木风转型期间以一系列 114 导航、915手机网、雨林木风 OS（Linux 定制）、115. Com、769本地社区等网站计划发展。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;回顾雨林木风转型之路，以雨林木风 OS 定制为首已然失败，115的发展则高举着云存储之名。笔者猜想由于缺乏 OS 发展用户基数，因此雨林木风才会选择放弃 Linux 定制，继而选择 Windows 正版授权的发展方式。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;无论正版定价如何，笔者相信在获取微软授权之后，即使雨林木风免费，他们仍然可以通过默认设置的首页流量、默认安装软件的提成、下载站转化 IP 等等方式实现金钱收益。至于授权协议中是否有作其它限制那就不得而知了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对于微软而言，相信通过本次的授权合作之后，有利于 Windows 7 的本土化发展，从而实现过渡 XP 时期的效应，可谓一举两得。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;笔者后记：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;番茄花园转型选择了手机操作系统的定制，深度转型选择了手机 OS &amp;amp; 网吧系统定制 &amp;amp; Linux 定制。前者转型面临着更多的早期发展的竞争环境，然而深度转型则更有耐人寻味之意了。无论如何这条洗白之路，相信雨林木风绝对是实至名归。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-26 17:36:30</pubDate>
</item>
<item>
<title>HTML5终极指南：2012年的14个预测</title>
<link>http://oss.org.cn/html/37/n-64137.html</link>
<text>无论是当红科技企业如Zynga、Facebook、Google和Apple，还是刚刚诞生的初创企业，2012年都是决胜HTML5的一年。以下是关于HTML5在2012发展趋势的大胆预测：一、欢迎来到更加互联的Web世界2012年，html5 将增加更多有用的开放接口API，供开发人员使用，让网站之间的连接更加紧密。例如，Facebook上的Zynga游戏在iFrames里运行。通过调用最新的PostMessage API，这些游戏能在Facebook包容框架内互相之间通讯。在HTML5之前，不同窗口之间的通讯需要依赖远程服务器——或者使用不稳定的破解方法。另外一个让人兴奋的新功能是CORS(Cross Origin Resource Sharing)。这是不同网站之间分享信息变得非常容易。例如，CORS将允许初创企业开发出一种能够编辑facebook图片的编辑服务，允许你修改之后再上传，无需通过糟心的破解途径。基于HTML5的的语义信息（例如Semantics和Microdata）创建提取web页面信息的web工具变得更加容易。因此，将有大量的Mashup混搭服务出现，出色的浏览模式也将越来越多（例如readers阅读器和translators）二、Web浏览器看上去更像iPhone每个人都喜欢苹果的iOS操作系统。现在你可以在HTML5上看到了。2012年你的右脸其将开始支持push notifications通知服务，geolocation地理位置服务，以及可以离线使用的应用程序。有些浏览器可能会采用更加类似iOS的用户界面。三、越来越多的应用程序将基于HTML5创建，而不是以可下载应用程序的方式出现（例如金融时报的客户端）你可能已经在使用电子邮件、日程和图片分享等web应用程序，2012年将有更多类型的程序推出HTML5版本。你将看到类似Inkscape和Illustrator这样的内容创建程序也开始支持HTML5。四、IE浏览器和微软将变得“酷”很多微软对浏览器 IE 已经投入了巨资，并且很多资金用于提升 html5的性能，未来将在 IE10上有所体现。IE10凭借Canvas硬件加速功能将在速度测试上击败所有其他浏览器竞争对手。此外微软还在HTML5页面与桌面电脑的功能整合方面别具匠心，并最终推动HTML5应用的开发热情。五、浏览器厂商将推出应用程序商店业务看到苹果公司的移动应用商店 App Store 的巨大成功，并且结合 html5 的日渐成熟，未来浏览器厂商将会构建自己的网络应用商店 Web App Store，从而对苹果公司应用商店可能构成冲击。其实，谷歌公司的 谷歌浏览器Google Chrome 已经推出了网络应用商店。这个趋势对于HTML5应用开发者来说是个好事——这意味着程序将有更多的销售机会，尽管不同平台的支付平台和分账机制还未就绪。六、至少有一个基于WebGL的重量级主机游戏会发布（再发布）2012年至少有一个AAA级别的主机游戏公司会迈出这一步，发布一款基于WebGL的，无需客户端的3D web游戏。也可能采用重新发布一部游戏大作的方式（例如团队要塞2或者刺客信条），或者是一款流行的多人在线游戏如魔兽世界，当然也有可能直接发布一款全新游戏。七、多数应用都将通过离线缓存来支持离线工作离线缓存技术将会迅速提高 html5 的可用性和应用范围。基于缓存而不需要联网，就可以查询本地数据库和服务，这一方面能提高HTML5应用的运行速度，提供类似传统桌面应用的流畅性，同时也能带来一些安全性话题，例如你可能在清理计算机缓存的时候不小心擦除掉你正在处理的文档或者工作进度，或者为恶意软件远程访问你电脑上的私密数据打开方便之门。八、HTML5广告将取代Flash广告变得无处不在html5 广告可以兼容 Flash广告，随着致力于基于 html5 提供各方面技术和工具以及各种服务的创业公司不断涌现，HTML5广告面临的沙盒问题、安全问题以及认证工具等问题都将得到解决。九、JavaScript&amp;nbsp;随着内存管理和数据类型的改进而提高运行速度JavaScript已经是世界上运行最快的脚本语言之一了，但还是有提高空间。Google Chrome已经开始着手推动更好的内存管理和垃圾收集算法。加之更优秀的数据类型管理，Javascript将获得与Java等成熟语言较为接近的性能表现。十、Canvas硬件加速技术将被应用于多种浏览器（但不会是主流浏览器）其他浏览器厂商都会学习微软引入硬件加速技术，不这么做就会显得落伍。火狐浏览器面临的形式最为严峻，如若不引入硬件加速将可能重演IE悲剧——迟钝、肿胀并被遗留代码活活拖跨。2012年主流移动浏览器还不会支持硬件加速，这估计要等到2013年。十一、人们将能在移动设备上玩到Zynga等公司的HTML5流行游戏，但限于一些较为简单的游戏你也许能看到有人玩纯HTML5版本的Zynga扑克、字谜、Mafia Wars等游戏，这些游戏可以在网页里，也可以在facebook原生应用里运行。但这些都会是写基于菜单的游戏、棋牌游戏或者角色扮演游戏，更复杂的富有视觉冲击的游戏例如Ville还需要等待一段时间。十二、Facebook将发布改进的HTML5 API，允许与其他网站更加无缝集成十三、Facebook将于桌面更加无缝集成想想吧，任意拖放、文件系统访问、照片同步以及桌面Widgets。这些功能将模糊桌面与浏览器之间的界限，让社交图谱与桌面体验紧密结合。十四、苹果依然不会在移动版Safari上支持HTML5的声音功能iOS3时代，html5 的声音功能在移动Safari上一切正常，但是苹果在 iOS4 和5 版本中禁用了大多数的API调用，因为这可能会冲击iTune业务。2012年，苹果依然不会放松对苹果生态系统的绝对控制权，并拒绝向 html5 提供声音接口API。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-26 17:04:47</pubDate>
</item>
<item>
<title>25个Vim教程、视频和资源</title>
<link>http://oss.org.cn/html/36/n-64136.html</link>
<text>编注：@程序员的那些事 12月14日在新浪微博发起的《你最常用哪些文本编辑器？》。根据目前的投票结果显示，Vim 以 43% 比例排第一。在进行30天Vim特训过程中，我发现了数量众多的优秀教程、资源甚至视频。如果你像我一样刚刚开始钻研这个优秀的开源编辑器，希望下面的内容能助你一臂之力。视频1. Derek Wyatt的博客互联网上最好的Vim相关视频可能就在Derek Wyatt博客。更棒的是他的视频适用范围非常广，涵盖了初学者的入门教程直到各种高级课题。我自己把所有的教程看了一遍，又继续回来温习！强力推荐。2. Vim碰撞 一开始当我在推特上被问到哪里刻意更好地学习Vim时，曾经最值得推荐的资源就是PeepCode的Vim碰撞之两部曲。尽管它不是免费的，但我从中学到了很多，因此推荐它！3.  Vimcasts.org 尽管这个网站现在暂停了， Vimcasts.org每周提供一个新的非常有帮助的视频。这些视频专注于使用Vim工作的基本技能，因此非常推荐！译注：笔者翻译此文时，Vimcasts.org已经可以正常访问。4. 顶尖Vim插件 第一次使用Vim时，即使是安装插件也是一个非常困难的过程——更不用提要选用哪个了！这里是YouTube视频：只需要8分钟就刻意掌握顶尖Vim插件。5. Vim宏介绍这是另一个优秀的系列视频，Justin Lilly录制了7个左右的Vim视频教程。一定去看看你感兴趣的那些视频哦！6. Vim探险: 高阶视频系列不要忘记还有我们！有讽刺意味的是，有时候向身边的同学学习新平台、框架或者语言要比老师的教导更容易。在30天的Vim特训中，每周我都会记录自己的进步。通过那样的方式，你可以同我们一起进步。（到今天为止）我们刚刚进展到第二周，所以你如果你想参加，这是加入我们成为高级成员的好机会。资源1. Vim入门教程这是一个非常有用（易于浏览）的教程，通过它你可以快速掌握并应用Vim基础。2. Vim指南“这是Vim指南。它包含的简短指南可以帮助你用Vim完成简单以及不那么容易的事情。你应当已经了解了Vim的基础知识，但这里会对每一个命令做出详细的解释“3. Vim: 餐前点心也许这里教程的部分略少，而思考的部分更多。几天前，我花了一些时间讨论与Vim的第一次亲密接触，以及为什么快速成为Vim的拥护者。4. 用Vim高效编辑“这个教程假定你已经具备了vim的基本知识——insert模式，command模式，加载以及保存文件，等等。它的目的是为了帮助vi新手提高他们的技巧并能够高效地使用vi。”5. 10 个能够提高你生产率的终端命令尽管并非直接讨论Vim，但是对终端命令的扎实了解是必须的技能。这里汇总的技巧能够助你起航！6. 每个试图劝我使用Vim的人都错了Yehuda Katz是Ruby on Rails的核心成员之一。他讨论了从TextMate 转到Vim所遇到的种种困难。他认为对他而言接纳新平台的方式就是通过MacVim循序渐进。这样可以使用他熟悉的命令。如果你还在犹豫不决可以读读这篇文章。7. vimtutor我们不要忘记vimtutor是目前vim最好的资源而且100%免费。只要切换到normal模式，输入:! vimtutor。如果你刚刚接触Vim，务必要完成vim提供的30分钟的动手练习。资源1. 100 个颜色主题当你需要Vim的附加配色方案时，我发现了可以一次性打包下载的100种不同皮肤。我现在用的是dusk主题。2.  ZenCoding 如果你还不了解Zen Coding，请学习并使用！事实上，我有一个关于Zen Coding的教程。我开始抱怨Vim的一个原因就是，如果使用Vim似乎就不得不放弃我习惯的Zen Coding。幸运的是，这件事情并没有发生，感谢优秀的zencoding.vim插件。3.  SnipMate再一次的，TextMate一个优秀的特性就是它的bundle功能。它允许你，例如输入&amp;lt;div&amp;gt; + tab，就可以得到一个完整的div元素扩展。这非常有用。幸运地，Vim的一个plugin支持了这个功能，它就是snipmate.vim。4.  Surround Surround&amp;nbsp;插件打败了主要对手。正如你可能已经猜到的，它允许你对括号、标记、大括号等内的文字进行包裹（wrap）。例如，安装了插件以后，如果我想选中一行文字并自动加上&amp;lt;p&amp;gt;&amp;nbsp;标记，我可以在normal模式下输入：VS&amp;lt;p&amp;gt;如果你后来决定将包裹的标签从a改为h1，同样非常容易！只要输入：// Change Surround Tags with an H1.cst&amp;lt;h1&amp;gt;5.  TComment 插件可以非常复杂也可以是异常简单。TComment的初衷就是让你能够轻易并快速地注释代码。它能够自动确定文件的类型并刚给出相应匹配的注释语法。如果我正在编辑JavaScript文件并且想要注释掉一行代码，我可以快速地在normal模式下执行以下命令：&amp;lt;c-_&amp;gt;&amp;lt;c-_&amp;gt; // Control _ Control _6. NERDTree 在Vim中浏览文件会比平常困难一些。然而，有许多插件能够极大地简化这个过程。（目前为止）我的最爱是NERDTree。“NERD tree让你能够浏览文件系统并打开文件及文件夹。文件系统以树形的方式展现，你可以通过键盘、鼠标或者二者同时使用来操作。你可以执行简单的文件操作。”7. 键盘快捷键对于视觉学习者，这张键盘快捷键虽然有些过时，但是仍然十分有用。将它打印出来贴到墙上！8. Vim教程 (PDF) 还有什么比阅读免费的Vim手册更好的学习方法呢？！这里是手册的pdf连接。9. MacVim编辑器MacVim 既可以完美地在终端运行，也可以按照你熟悉的方式使用编辑器。用MacVim你可以使用常用的命令，比如我们熟悉的Command S（保存）。10. Tim Pope的插件Tim Pope&amp;nbsp;是社区里受到广泛尊敬的一位成员开发了很多优秀的插件，主要针对Git和Rails用户。11. 还没有决定吗：听听你的搭档怎么说如果你还没有下定决心转向Vim，有时候听听你的搭档是怎么想的会有所帮助。在这种时候，&amp;nbsp;StackOverflow论坛的这篇讨论绝对值得一读。12. &amp;nbsp;终极Vim配置（Config）Really, the first thing you need to do, when setting up Vim, is to configure your .vimrc file. This is essential. Steve’s “Ultimate .vimrc File” should provide a great base for your own.当配置Vim的时候，第一件要做的事情就是配置你的.vimrc文件。这是必不可少的。Steve的“终极 .vimrc文件” 绝对是你的最佳选择。总结从个人的经验来看，Vim是如此的令人畏惧，直到有一天事情发生了变化。最后所有的事情只需要记下一组键盘命令。一旦你这么做了，你会觉得这是真正的享受！&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-26 16:59:51</pubDate>
</item>
<item>
<title>Chrome 工程师：Firefox 是合作伙伴，不是竞争对手</title>
<link>http://oss.org.cn/html/35/n-64135.html</link>
<text>上周，谷歌和火狐重订合作协议，协议确保谷歌依然是火狐浏览器的默认搜索引擎。
谷歌目前是Mozilla基金会收入的主要来源。据《华尔街日报》知名记者凯拉·舒维瑟(Kara Swisher)报道，这笔交易每年给火狐带来近3亿美元的收入，协议总价值达10亿美元。谷歌不惜重金或许是为避免火狐浏览器与微软必应搜索引擎合作。
科技博客TechCrunch 知名作家MG•西格勒（MG 
Siegler）也对此表示怀疑，称这是“把钱都付给一个竞争对手”。他认为，此举或者是考虑到反垄断问题，或者是为了保证其移动统治地位。但 
Chrome浏览器工程师彼得•卡斯丁（Peter Kasting）则给出了一个更为简单的答案：“谷歌是在资助一个合作伙伴，而非竞争对手”。
谷歌的目标：“更先进的互联网”
西格勒写道：“有一件事是可以肯定的：谷歌并非出于仁慈向Mozilla支付这10亿美元。否则就是对其股东不负责任。然而他们确实是将所有的钱投给了竞争对手。”但卡斯丁反驳说，这其实是一种误解。
卡 
斯丁称：“无论我如何解释，人们似乎永远不理解谷歌支持Chrome的目的何在。其实很简单：Chrome的主要目标是加速互联网发展完善。无论是 
Chrome自身获得大量用户，还是其它浏览器开发商加快进度推出更优质的浏览器，都能够实现上述目标。两种方法都是可行的，任务完成即可。”
Chrome与火狐可以共存
卡斯丁表示：“要理解这项战略的出发点并不困难。只要互联网成功，人们更多地使用互联网，谷歌就可获得成功。因此，Chrome无需成为Microsoft Office那样的直接盈利产品，也不必直接为谷歌吸引用户。只要互联网更加先进谷歌就可实现盈利目标。”
卡斯丁解释说，谷歌并不担心资助火狐会加剧火狐与Chrome之间的竞争，这只是在支持其他重要的浏览器。他表示：“火狐浏览器是一款重要的产品，因为它是
 
一款有着不同设计理念的产品，服务的对象也有所不同”卡斯丁称，谷歌早在Chrome研发工作开始之前就支持火狐浏览器，谷歌此后开发Chrome只是为
 了加速互联网进步。
双方承诺加强合作
Chrome和火狐团队合作由来已久。例如，尽管互联网应用是Chrome最重要的营收渠道之一，Chrome和火狐工程师已合作确立互联网应用的开放标准。
Chrome自身也在不断挑战互联网技术极限，但正如卡斯丁指出的：“Mozilla基金会明确承诺完善互联网，他们投入大量资源来打造优质的、开放的浏览器。”卡斯丁表示，互联网的完善将确保谷歌实现自己的目标。
此前，许多人怀疑火狐或将消亡，但若谷歌坚持目前的说法和做法，火狐是“不可能”消亡的。
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-26 16:57:26</pubDate>
</item>
<item>
<title>创业公司“计划FM”发布首个第3方人人网开源Ruby SDK</title>
<link>http://oss.org.cn/html/05/n-64005.html</link>
<text>Ruby on Rails是美国当下最流行的网络框架语言之一，用其开发的产品包括Twitter、Groupon和FourSquare。同时ruby也是个人开发者最常用的语言。因此，所有主流开发平台包括Facebook、 Twitter和Google都会提供ruby SDK和开发案例。创业公司“计划FM”是一个让用户分享个人计划，发现有趣活动的平台，因此他们需要接入大量的社交网络关系。由于采用的是Ruby on Rails框架语言开发而且发现人人网又没有Ruby SDK接口，于是他们做了一个第3方的接口以接入人人网的大量用户资源。近日，他们将这个SDK进行了开源，有需要的朋友可以点击此处查看。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-23 22:26:54</pubDate>
</item>
<item>
<title>Android 版 Firefox 9 发布并提供下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64004</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:05:12</pubDate>
</item>
<item>
<title>邮件客户端 Thunderbird 9.0 正式版发布下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-64003</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:12:12</pubDate>
</item>
<item>
<title>总结2011年10个最重要的开源软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63959</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-22 21:53:12</pubDate>
</item>
<item>
<title>WordPress for Android 2.0 试用记</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63958</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-22 22:28:12</pubDate>
</item>
<item>
<title>给Web开发人员推荐的Firefox扩展列表</title>
<link>http://oss.org.cn/html/57/n-63957.html</link>
<text>让Web开发人员的生活尽可能轻松和高效，这是Firefox一直坚持的目标之一。通过提供工具和可扩展的web浏览器，让开发人员能够创造出令人惊奇的东西。Firefox自带的开发工具我们致力于开发一系列包含在Firefox内的开发工具。它们在 Developer Tools in Firefox Aurora 10 中有更详细的描述，有了它们我们就能做出一些很有趣的事。我们对大量的用户接口和编码方式进行测试和评估，从而找出在页面中最理想的编码方式。如果你安装了Firefox Aurora，你现在就可以试试！让我们知道你的想法。继续关注本博客，我们会持续更新自带开发工具的进展和功能。&amp;nbsp;Firebug目前为止，浏览器中最著名的web开发工具当属Firebug，毋庸置疑，在相当长的一段时间里，它将成为web开发与调试的标准。Firebug还拥有许多强大的功能，包括大量的插件（见下文）。但是有件事你需要明白，那就是如果你安装了过多的Firebug插件，它将占用大量内存，所以要选择适合自己的。（编注：推荐阅读 《Web开发者应掌握的12个Firebug技巧》）&amp;nbsp;一、针对web开发者的Firefox插件多年来，已经有很多插件能够帮助web开发者最大限度的利用Firefox。下面将列出其中最著名、使用最多的，如果我们疏漏了什么，请在评论中告诉我们！Accessibility Evaluation Toolbar为web开发者提供测试web资源的辅助功能。All in One SidebarAiOS可以让你打开多个窗口作为侧边栏，并能在它们之间快速切换。有了它，你就可以告别杂乱无章的窗口了！除了书签和历史记录，它还可以在侧边栏中打开下载，插件等对话框。Cache Status轻松查看和管理缓存。CacheToggle轻轻一点，就能禁用（或清除）浏览器缓存。Colorzilla高级取色器，拾色器，渐变色生成器和其他一些功能。Console2Console2可能会成为下一代错误控制台，从而取代JavaScript控制台。从v0.5版本开始就有控制台过滤器插件，之前只能在Console2网站上获取。CSS ReloaderCSS Reloader可以让你重载任何网站的CSS，而不需要重载页面。DOM InspectorDOM Inspector可以用来审阅、编辑web文档或XUL程序中使用的DOM。在双窗口中以不用的视图显示文档及内部节点，并控制DOM。Firefogg可对Firefox中的视频和音频进行编码。利用Firefogg你可以把大部分媒体文件编码为Ogg或WebM。Firefogg还提供API来把编码过程整合到上传进程中。FireFTPFireFTP是Firefox上一款免费、安全、跨平台的FTP/SFTP客户端，可以简单、直观的连接到FTP/SFTP服务器上。FireUnit一款JavaScript单元测试插件程序。FoxGuide显示水平和垂直参考线，跟你在PhotoShop里用的一样。有助于改善布局，把元素放在适当的网格中，对称排布元素，构造出一个设计。FoxyProxy StandardFoxyProxy是一款高级代理管理工具，完全替代了Firefox本身有限的代理功能。它比SwitchProxy、ProxyButton、 QuickProxy、 xyzproxy、 ProxyTex、 TorButton等拥有更多的功能。Geolocater把你定位到你想要的位置。GreaseMonkey通过使用少量JavaScript，可以自定义网页的显示方式。HTML ValidatorHTML Validator是一个Mozilla插件，它在Firefox和Mozilla中添加了HTML验证。可以在图标上看到一个HTML页面的错误数量。HttpFox一个用于Firefox的HTTP分析器插件。iMacros for Firefox是Firefox自动化。记录并重播重复工作。如果你喜欢Firefox浏览器，却对重复的任务（例如，每天访问相同的网站，填写表单，记住密码等）感到厌烦的话，iMacros for Firefox便是你梦寐以求的解决方案！Jenkins Build MonitorMonitor Jenkins（http://jenkins-ci.org）在Firefox状态栏中创建并显示当前状态。jQuery extension内嵌于浏览器的jQuery和jQuery UI。JSONovich以简单、低调的视图漂亮的显示出浏览器中JSON的内容。JSONView显示浏览器中的JSON文档。JSView如果你正在访问的网站包含了任何外部js/css文件，图标上就会显示“SS”、”JS”或者都有。点击文件名就能查看各个文件。文件会在新窗口中打开。Link Widgets通过在工具栏按钮上添加首页、上一页、下一页、尾页来简化页面导航（例如在线漫画、论坛或者技术规范，比如：HTML4建议）。Live HTTP Headers在浏览网页时查看HTTP头信息。LiveReloadLiveReload能在文件发生改变时刷新网页。MeasureIt可以在任何网页上显示标尺，用来检查宽度、高度，或者以像素为单位对其页面元素。Modify Headers能够添加、修改、过滤发送给web服务器的HTTP报头，这个插件特别有助于移动web开发、HTTP测试和隐私保护。NoScript浏览器上最好的安全插件。只有你信任站点上的活动内容才能运行，保护你免受跨站脚本攻击和点击劫持攻击。PageSpeedPage Speed是由Google发起的开源项目，旨在通过应用web性能最佳实例来帮助开发者优化他们的网页。PixelZoomerPixelZoomer能够对当前网站进行截图，并提供多种像素分析工具。你可以放大网站（最大3200%），测量间距并用取色器取色。Pixlr Grabber抓取屏幕和网页图片变得轻而易举。有了Pixlr Grabber，只需点击右键，你就可以复制、保存、分享甚至编辑你的最终抓取效果——包括所有图片或者背景。Poster一个与网络服务和其他网络资源交互的开发者工具，可以让你制作HTTP请求，设置实体段和内容类型。允许你与网络服务相互并查看结果。QuickJava可以在状态栏或者工具栏快速开启或禁用Java、Javascript、Flash、 Silverlight、Images、样式表和代理，而无需打开任何对话框。Rainbow Color Tools针对web开发者的颜色工具。选色器、取色器+保存颜色，还能通过拖放提取颜色。Regular Expressions Tester测试正则表达式的工具，带有颜色高亮（包含子匹配项），也是创建表达式的帮手。Remove Cookie(s) for Site一个非常简单的插件，用来清除当前打开站点的cookies。它在网页的右键菜单中添加了一个选项，用一键清除Cookies按钮来执行操作，会在状态栏中显示其状态。Screenshot Pimp只需轻轻一点，就能捕获、抓取、保存、下载或者复制任何你在浏览器中能看到的东西！Screenshot pimp是目前为止Windows和Mac上定制性和用户体验最好的截屏工具栏。SQLite Manager管理你电脑上所有的SQLite数据库。Selenium IDE Buttons用一个简单的工具栏按钮来打开selenium IDE。你需要已经安装了selenium IDE：http://seleniumhq.org/projects/ide/SeoQuake SEO extensionSeoquake是一款FirefoxSEO插件，旨在帮助那些涉及搜索引擎优化（SEO）社会媒体优化（SMO）和网络促销的人。Seoquake可以审查很多重要的SEO参数。ShowIP在状态栏显示当前页面的IP地址。还允许通过IP（右键单击）和hostname（左键单击）查询自定义信息服务，例如whois、netcraft等。此外，你还可以复制IP到剪贴板。Stylish用Stylish重构网页，它是一款用户风格管理器。Stylish能让你轻易的为很多网站安装主题和皮肤，像Google、Facebook、YouTuBe、Orkut等，你甚至可以自定义Firefox或者其他程序的主题。Tamper Data使用tamperdata可以查看、修改HTTP/HTTPS头及post参数。TAW3只需通过一个简单的按钮，你就能了解一个网站是否能够访问。Tilt 3D一个基于WebGL的插件，可以让网页变成3D可视化的效果。Total Validator能够一次执行多种不同的验证。包括外部的、内部的或者本地网页（需要从http://www.totalvalidator.com/downloads/extensiontool.html获取一个桌面工具）。TryAgainTryAgain会在服务器不能访问时，不断尝试加载网页。User Agent SwitcherUser Agent Switcher添加了一个菜单和一个工具栏按钮，来控制浏览器的用户代理。WappalyzerWappalyzer是一个能够发现网站开发技术的浏览器插件。Web DeveloperWeb Developer会在浏览器中添加各种web开发者工具。&amp;nbsp;二、Firebug extensions在一些不同情况下，会用到很多Firebug的插件，在这里会列出其中一部分：AcebugAcebug对Firebug命令行进行语法高亮，并具有模糊自动完成功能。Code Coverage v2 for Firebug 0.1这个Firebug插件用来报告Jacascript的代码覆盖率。CSS Usage用来查看使用了哪些CSS规则的Firebug插件。FirecookieFirecookie是一款可以查看、管理浏览器Cookies的Firebug插件。Firefinder查找与选中的CSS选择器或XPath表达式相匹配的HTML元素。FirePHPFirePHP通过一个简单的PHP方法调用，就能让你记录你的Firebug控制台。FireQuery针对jQuery开发的Firebug插件。friendly bug让Firebug界面友好，更易于使用。Inline Code Finder for FirebugInline Code Finder是一个Firebug插件，能发现HTML元素中存在的这些问题：内联JavaScript事件、内联样式、javascript: links。FireRainbowFirebug中的JacaScript语法高亮工具。NetExportNetExport是一个Firebug插件，可以导出所有Net panel中收集和计算的数据。创建的文件使用HTTP存档（HAR）格式（基于JSON）Pixel PerfectPixel Perfect是一个Firebug插件，能够让web开发者和设计师轻松的把一张web构图覆盖在开发的HTML页面上。YSlowYSlos能够分析网页载入缓慢的原因，基于Yahoo!的高性能网站标准。更多 Firebug 插件，请查看Firebug官方wiki。编者按：本文作者 Robert Nyman 是 Mozilla 的技术布道者，从1999年开始从事Web前端开发&amp;nbsp;。编译：伯乐在线 – 魏哲</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 23:00:10</pubDate>
</item>
<item>
<title>明年10大科技趋势预测：触摸 HTML5和NFC支付</title>
<link>http://oss.org.cn/html/56/n-63956.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 12月 22 日，2011年是科技转型的一年，由平板的热卖、团购的风行，到 IPO 热潮的重现，说明了这一切。即将来临的 2012 年，科技将往何处发展，也令不少人期待。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mashable.com 创始人皮特·凯什摩尔（PeteCashmore）在 CNN 发表文章指出，虽然未来一年的科技重点难以预测，但以现在产业的趋势及最近半年的走向，有十大科技的革新是 2012 年特别值得留意的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一、触摸计算(Touchcomputing)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这种新的输入方式将会在 2012 年成为主宰。现在，像 iPad 这类平板已经成为台式机及笔记本的另一种选择。而未来，恐怕触摸输入会取代传统的方式，就像我们已经很少用命令列输入，而用图形接口输入一样。将来，鼠标可能不再需要，被触摸屏代替。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这种征兆很明确。看看 Windows 8 及 MacOSXLion，这两套最新的计算机操作系统，很高程度借用了移动设备的概念。这些新接口本质上采取触摸输入的模式，来取代传统的计算机输入环境。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;假以时日，半步的进展终究会变成完整的一步，移动设备操作系统将成为主宰。在 2010 年底前，这样的转变可能还不会完成，但肯定会更进一步，而计算机鼠标也将愈来愈少见了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;二、社交动作(Socialgestures)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在社交媒体领域，Socialgestures 已经成为 2012 年重要的趋势。举例来说，Facebook 在 9 月推出了“省事分享（frictionlesssharing）”的功能，你连分享的按钮都不需要按，只要你同意使用相关 app，你所听过、读过和看过的内容，就会自动放入个人档案，和好友分享。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果你已经在 Facebook 的 newsfeed，看过 Spotify 或 SocialReader 这类 app，你就了解这样的特性。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这种趋势对社交网络来说会有不小的影响。现在 Facebook 上已经有 8 亿个使用者，虽然成长已经趋缓，但一旦分享变得自动化，Facebook 上的内容可望成加速度成长。然而，这会是个大问题，使用者会被众多自动分享的信息所掩埋，并怀疑程序会如何使用这些数据。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;三、NFC 及移动支付&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;移动支付可望在 2012 年大放光芒。当然，我们今年已经见到许多移动支付的重大革新，像是 Square 推出的 iPhonedongle，让 iPhone 变成行动刷卡机，预期 2012 年则会是 NFC 的一年。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NFC，也就是所谓的近场通讯(Near Field Communication)，可以让你将手机当成信用卡，只要在商店的信用卡机器上感应，消费金额就可自动由账户中扣除。据估计，到 2013 年，将有五分之一的手机具有 NFC 设备。这类设备的竞争对手，包括 GoogleWallet、VisaWallet、美国运通卡使用的 Serve、及 ISIS 等移动支付方式。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;四、iPad 之外&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果触摸计算机代表未来，iPad 无疑是其中的王者，直到 2011 年底才出现真正有威胁实力的竞争者 Kindle Fire。预期 2012 年，Kindle Fire 会卖得比 iPad 更好，重点就是 iPad 卖 499 美元，而 Kindle Fire 只卖 199 美元。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不过，价格便宜不是 Amazon 唯一的优势，这家公司还拥有完整的数字内容商店，覆盖电影、电子书、电视节目及甚它媒体。以平板来说，硬件固然相对重要，但内容取得也有决定性的影响，在 Kindle Fire 上现在已有不少媒体内容，这就是个吸引点。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;为何一个单一的设备可以被看成新的趋势？重点在于，iPad 真正够格的竞争者出现，其它内容生产商、发布者及 app 开发商，都必须适应全新的平台来改变行动。当然，Kindle Fire 用的是 Android 系统，不过，亚马逊用完全不同的视野来发展，让开发商不能将其当成另一个 Android 设备，而必须看成新的平台。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;五、电视无所不在&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;别以为你马上可以随时随地，在线观看自己喜爱的电视节目，或是免去有线电视的月费。现在这么想还太早。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;有线电视公司的打算是，你可以透过移动设备观看在线电视、影片及电视节目，但前提是必须交纳有线电视费用。DishNetwork、TimeWarner 及 Comcast 都准备提供这类服务。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;电视无所不在的情况，从 2010 年就有许多人这么认为，不过，却仍未实现。而在移动设备愈见普及之下，电视就在手中或许很快就会实现。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;六、声音控制&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iPhone4S 推出，打造了当红的明星 Siri，让你可以透过声音控制，发送短信、查找数据，这样的趋势正在开始。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当然，这类技术已经发展多年了，一直无法非常精准。Siri 开启了一个新的局面，使我们的生活语言命令变得可以让机器理解。这是率先的尝试，其它的设备预计会跟进。例如，苹果自己就可能会把这类技术用在摇控电视的功能上。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;七、体感手势(Spatial gestures)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;体感成为新的输入方式，就像微软的 Kinect，利用空间的感知做为接口。如此一来，就像《少数派报告》电影描述的，人们只需在空中挥一挥手，就可以控制各类设备。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;而且，我们可能得感谢黑客的破解，他们让这项技术兼容更多其它的平台，明年，我们可望见到更多设备使用这种科技。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;八、第二屏幕的体验&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;近来，电视及电影公司的高层，开始提倡“Second-screen experiences”，让你可以从另一个设备，主要是 iPad，一起体验电视屏幕的声光效果。重点在于，观看电视的同时，观众也能透过平板或智能手机产生新的互动体验。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;迪斯尼已经开始在一些电影，如《狮子王》及《小鹿斑比》，开发这类第二屏幕的 app，可以想见，在 2012 年会有更多的节目提供这样的新式体验。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;九、可弯曲屏幕&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;很多人已经迫不及待想拿着可弯曲的屏幕，借此放大缩小画面，把手机、平板卷起来收好。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;诺基亚及三星均已暗示，会在 2012 年发布可弯曲屏幕的手机。但是，要看到像纸一样轻薄，可以轻松收进口袋里的产品，恐怕还得再等上好几年才行。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;十、HTML5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;第 5 代的 HTML 标准，也就是 HTML5，将让开发者可以创造更丰富、更具互动性的应用程序。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;目前，开发者为了配合不同的操作系统，必须设计不同的程序，像是专属 Android、iOS、Windows Phone，或其它平台的应用程序。HTML5的应用让 app 可以仅需一次开发，就适用在多种平台上。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近，Adobe 坦承 Flash 在移动设备上的适用性有所不足，让 HTML5 有机会成为共同标准，而加速其发展。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;整体来看，2012年科技趋势的重点，包括互动、触摸及声控，在分享上更为便利，移动设备的应用更加多元，网络应用也将增加。许许多多以前梦想中的科技革新，或许也会在新的一年中陆续推出。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 23:09:09</pubDate>
</item>
<item>
<title>LinkedIn开源IndexTank，包括搜索引擎和服务</title>
<link>http://oss.org.cn/html/55/n-63955.html</link>
<text>IndexTank是一家在今年10月份被LinkedIn收购的公司，如果你没听过这家公司，它主要有三个东西：IndexEngine：一个实时的全文搜索和索引系统。API：一个RESTful界面来处理授权、验证以及与IndexEngine(s)的通讯。Nebulizer：一个多重任务执行框架（multitenant framework），用来托管和管理无限数量的运行在IaaS层的索引。很多公司可能用不到第三个，比如国外著名社区Reddit就只使用IndexEngine和API。今天Diego Basch在LinkedIn博客中宣布他们正式基于Apache 2.0协议开源了IndexTank，包括：Indextank-engine:索引引擎indextank-service:API、后台、前端和NebulizerIndexTank技术可以帮助开发者搜索和查询大容量数据，即便在资源有限的手机上仍然能够很好的工作。IndexTank一共有11名员工，其中9名是工程师，所以LinkdeIn的收购更是一次人才收购。不过很高兴看到他们将收购公司的技术开源，而不是像以前其他大公司的收购那样，只是将公司关闭。如果这项技术可能对你有用，可以点这里去它们网站查看更详细的信息。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:49:29</pubDate>
</item>
<item>
<title>再见Symbian 诺基亚宣布放弃Symbian名称</title>
<link>http://oss.org.cn/html/54/n-63954.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对于老迈的 Symbian 来说，虽然诺基亚暂时不会放弃它，但是等待这一天的到来，只是个时间问题，而现在他们已经迈出了放弃的第一步。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天，诺基亚正式对外表示，Symbian Belle 系统将会被更名为诺基亚 Belle，而同样的 Symbian Anna 也将换为诺基亚 Anna，这也意味着诺基亚正式放弃了 Symbian 这个名字。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;需要注意的是，目前使用 N8、C7、C6-01、E7、E6、X7以及诺基亚 Oro 手机的用户，需要等明年 2 月份才能获取 Belle 的更新，而搭载该系统的 N8、C7和 C6-01三款新机，将会率先在中国发售，
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;此前，Symbian 系统的新版本即 Carla 和 Donna 曾被曝光，其中 Carla 
将支持网页浏览器8.0、杜比环绕立体声以及 NFC（近场通信）等功能，而 Donna 最大的亮点莫过于支持双核处理器。不过消息称，Donna 
发布后，诺基亚将不会提供 Symbian 系统的更新。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 诺基亚虽然行动缓慢，但却在一步步远离 Symbian。今年年初，该公司同微软签订合作协议，未来将采用 Windows 
Phone 7 操作系统。当时该公司并没有完全放弃 Symbian。 虽然改了名字，但是 Nokia Belle 拥有 Symbian 
Belle 的所有功能。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;诺基亚虽然行动缓慢，但却在一步步远离 Symbian。今年年初，该公司同微软签订合作协议，未来将采用 Windows 
Phone 7 操作系统。当时该公司并没有完全放弃 Symbian。自从诺基亚决定使用 Windows Phone 
操作系统以来，该公司已发布了多个与 Symbian 有关的公告。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Symbian 对诺基亚而言很重要，因为该公司此前依赖于销售运行 Symbian 操作系统的智能手机。不过这种现象在 Windows Phone 手机出货后将很快改变。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今年第三季度，消费者购买了 1950 万部 Symbian 手机，占操作系统市场 17% 市场份额。2010年第三季度的时候，共售出 2950 万部 Symbian 手机，占据 36.3% 市场份额。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;市场研究机构 Gartner 称，在西欧和中东市场，Symbian 
系统仍备受欢迎。诺基亚官方博客并没有透露为什么做出这样的改变，该公司也没有回复提问。今年年初，诺基亚决定放弃其 Ovi 
移动服务品牌。该公司说，自 2012 年 2 月起将面向现有用户发布软件更新，很快会推出诺基亚 N8、C7以及 
C6-01的系统增强版，首发在中国。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这对 Windows Phone 粉丝而言是个好消息，但 Symbian 爱好者则会失望。不过一件事是肯定的，即在 2012 年，Symbian 将成为一个遥远的记忆。因为微软和诺基亚将进一步推进其同盟战略。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Belle 系统于今年 8 月正式发布。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:46:19</pubDate>
</item>
<item>
<title>Kindle Fire不再屏蔽Google的Android Market网站</title>
<link>http://oss.org.cn/html/53/n-63953.html</link>
<text>亚马逊新推出的平板电脑Kindle Fire基于Google的Android操作系统，但是它屏蔽了所有跟Google相关的服务，包括Android Market。要想安装应用，你只能去来马逊的应用商店下载。今天GigaOM的Kevin C. Tofel报道亚马逊现在改变了这一状况，在升级了最新版Kindle Fire软件之后，用户已经可以通过浏览器访问Google的Android Market网站（之前是不能访问的。）但是这并不意味着你可以通过Android Market安装应用，因为亚马逊把Google的服务屏蔽的太彻底了，你没有办法把Kindle Fire设备和Google帐户连接到一起。当大家都在宣称开放的时候，亚马逊偏偏来个封闭。虽然人们对第一代的Kindle Fire的总体评价不好，不过随着下一代软硬件的升级，加上自己强大的内容体系，亚马逊或许能够走出另外一条苹果路线出来。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:43:41</pubDate>
</item>
<item>
<title>Intel 2012年将推出 智能手机和平板</title>
<link>http://oss.org.cn/html/52/n-63952.html</link>
<text>Intel在对自家Medfield芯片宣传了好久之后，日前终于展示了装有Medfield芯片的智能手机和平板电脑。该手机原型机搭载了Android 2.3（Gingerbread）系统，专门针对Intel的x86处理器芯片做了优化。有着和iPhone4一样的大小，但却由于其机体使用塑料较多，所以感觉更轻一点。另外这款手机还配备了800万像素摄像头，并且能在1秒内处理10张full-resolution（全分辨率）照片，甚至能播放蓝光DVD格式的超高清视频，性能非常强劲。另外Intel还展示了一款搭载Android 4.0（Ice Cream Sandwich）系统的平板，很多测试者认为它“明显要比3.0系统平板好用多了！” 这款平板尺寸上也和iPad相同，重量也差不多，但屏幕要比iPad的9.7寸略大一些。Intel预计2012上半年OEM制造商就可以进入生产阶段。而且现在的芯片要比Atoms芯片的成本便宜50%，这对于想和当前主流ARM芯片竞争的Intel来说或许是个好消息。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:41:13</pubDate>
</item>
<item>
<title>开源软件中 GPL 许可证使用率快速下降</title>
<link>http://oss.org.cn/html/51/n-63951.html</link>
<text>根据Black Duck Software的最新数据显示，虽然GPL、LGPL和AGPL等许可证继续统治自由开源软件项目，但Copyleft许可证总体使用情况却是在下降。GPL系列许可证占57%，相比之下6月份是61%，按照这一下降趋势，到明年9月它的使用率将只有五成左右。

而更多的开源项目采用了MIT、Apache(ASL)、BSD和 Ms-PL等较为宽松的开源许可证。分析者Matthew Aslett认为，并不是自由软件项目不再使用GPL，而是新的项目更乐于采用限制较少的许可证。

前20名许可证的占有率如下表所示。
&amp;nbsp;


名次
许可证
占有率


1.
GNU General Public License (GPL) 2.0
42.46%


2.
MIT License
11.49%


3.
Artistic License (Perl)
7.86%


4.
GNU Lesser General Public License (LGPL) 2.1
7.12%


5.
BSD License 2.0
6.82%


6.
GNU General Public License (GPL) 3.0
6.42%


7.
Apache License 2.0
5.48%


8.
Code Project Open 1.02 License
2.13%


9.
Microsoft Public License (Ms-PL)
1.80%


10.
Mozilla Public License (MPL) 1.1
1.03%


11.
GNU Lesser General Public License (LGPL) 3.0
0.88%


12.
Eclipse Public License (EPL)
0.71%


13.
Common Public License (CPL)
0.42%


14.
zlib/libpng License
0.36%


15.
BSD Two Clause License
0.34%


16.
Common Development and Distribution License (CDDL)
0.32%


17.
Academic Free License
0.32%


18.
Open Software License (OSL)
0.22%


19.
Microsoft Reciprocal License (Ms-RL)
0.20%


20.
Ruby License
0.20%</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-22 22:29:55</pubDate>
</item>
<item>
<title>Kindle Fire 6.2.1 升级，提升性能、增加Root难度</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63950</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-21 16:13:12</pubDate>
</item>
<item>
<title>Oracle Solaris 11 内核源代码遭人泄漏</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63906</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-21 16:11:12</pubDate>
</item>
<item>
<title>Firefox 9问世 五大主流浏览器再争雌雄</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63905</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-21 16:19:12</pubDate>
</item>
<item>
<title>Firefox 和 Google 续约三年，默认搜索仍将是谷歌</title>
<link>http://oss.org.cn/html/04/n-63904.html</link>
<text>Mozilla 最近的局势不是太好，直接的表现是市场份额有所下滑。其面对的最大的竞争对手不是别人，正是谷歌的 Chrome 。甚至有传言说其将不会得到谷歌的合同续约。现在总算尘埃落定，Mozilla 官方宣布已经与Google 重新续签 3 年合作协议。也就是说，Google 仍是 Firefox 浏览器的默认搜索引擎。我们可以从几个方面来看待这个协议。一个是 Firefox 仍然可以牵引一些用户跑到 IE 等竞争对手上，Google 搜索虽然是 Firefox 的主要收入来源，但如果更换到竞争对手上，依然会对谷歌本身造成冲击。另外 Chrome 也开始打造成一个平台，而不是单纯的浏览器。这个续约对双方来讲都是有利的，至于会对浏览器市场格局会造成什么样的影响，只能留到后日多些时间来看待了。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-21 23:56:43</pubDate>
</item>
<item>
<title>实测 Android 4.0 操作系统性能有很大提高</title>
<link>http://oss.org.cn/html/03/n-63903.html</link>
<text>据国外媒体报道，谷歌和苹果近日均高调发布各自最新款的操作系统。谁会更受到市场的亲睐呢，是谷歌的 Android&amp;nbsp;4.0&amp;nbsp;Ice&amp;nbsp;Cream&amp;nbsp;Sandwich（代号为“冰淇淋三明治”）还是苹果的Apple&amp;nbsp;iOS&amp;nbsp;5？其中一个考量的因素就是谁 对web浏览器（HTML5）的支持兼容性能更好。最近Sencha对这两款操作系统进行浏览器WEB测试（HTML5）或许会给出答案。 FeatureAndroid 4iOS 5 overflow-scrollingNoYesFile APIYesNoHistory ManagementNoYesShared WorkersNoYesWeb SocketsNoYesWeb WorkersNoYesVarious Input TypesHalfFullEmojiNoYesSencha是由javascript脚本语言开发的由手机WEB等几个项目组成的开源项目，是&amp;nbsp;HTML5的供应商之一，目前由项目背后的商业公司负 责。Sencha负责人在博客上披露，通过一系列的测试，谷歌android“冰淇淋三明治版”在对web浏览器性能有一定提高，但仍然在功能有许多缺 失，比如Web&amp;nbsp;Workers、Web&amp;nbsp;Sockets、WebGL、不支持新的输入类型等等。测试结果显示其性能仍低于苹果Apple&amp;nbsp;iOS。Sencha提供了SunSpider测试，重点是在评估操作系统HTML5/CSS3功能支持，测试结果以毫秒为单位，时间越短则代表设备和浏览器的性能越强。Sencha负责人同时也指出，尽管离苹果的标准还差一点，但不可否认谷歌android“冰淇淋三明治”版兼容HTML5性能方面还是速度相比之前的版本已经有了很大改进，是值得肯定的。可以预见的是谷歌会继续加大在浏览器性能上的投入力度。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-21 17:11:30</pubDate>
</item>
<item>
<title>苹果HTC诉讼背后：中国手机企业专利布局敲警钟</title>
<link>http://oss.org.cn/html/02/n-63902.html</link>
<text>北京时间12月20日，美国国际贸易委员会(下称ITC)表示，将禁止在美国销售宏达电子(HTC(微博))侵犯苹果公司专利权的部分智能手机，这一禁令将于2012年4月生效，HTC可以对此进行上诉。

　　不过，HTC的法务长雷忆瑜却表示：“ITC的最终判决宣告了HTC的实质胜利。”

　　这是因为该判决比几个月前的初步判决要更轻。接受本报采访的业内人士纷纷表示，本次判决对HTC的影响有限。诉讼结果出来后，HTC的股价反而上涨了6.97%。

　　当然，这并不代表高悬在HTC头上的诉讼大棒已经落下，目前在专利储备上HTC依旧处于弱势，苹果对HTC的其它指控依旧对其构成严重威胁。

　　这场旷日持久的专利战带给中国手机企业颇多启发，和苹果这样的巨头抗衡，注重技巧非常重要。

　　苹果、HTC诉讼胜败

　　HTC依旧在专利战中处于防守状态，需要提防苹果的后续诉讼

　　在本次诉讼判决结果出来之前，大部分业内人士都认为HTC的败诉在情理之中，因为苹果在专利上的布局要远好于HTC——HTC是做代工起家，其专利布局意识，要弱于苹果这样做品牌起家的厂商。

　　HTC对外声称，本次判决是HTC的胜利，因为苹果原先对HTC有4项专利侵权指控，在此前的7月份，ITC已经做出初步判决，认定HTC侵犯了其中两项专利，本次又改判HTC只侵犯苹果一项专利，因此被一些业内人士解读为比预想中结果要好。

　　台湾地区拓墣产业研究所长期关注知识产权诉讼的研究员何泰庆指出，本次被判专利侵权的HTC手机机型都很老，例如Nexus 
One、Nexus One、Touch Pro、Diamond、Tilt II 、Dream、myTouch、Hero及Droid 
Eris等都是已下架或者快下架的机型。因此，就算这些机型都被禁止在美国销售，也影响不大，HTC推出新机型的速度本来就很快。

　　此外，本次判决HTC侵权的这项专利，主要用途为用户可以直接在电子邮件及短信中点击电话号码拨打电话。这项专利属于使用接口层次，并未牵涉到底层平台，因此不难开发出替代解决方案。HTC表示后续机型会采取措施规避这些专利。

　　让HTC颇为担心的另一项专利“实时讯号处理(realtime signal processing)”本次并未被判侵权，这可能是HTC不幸中的万幸。

　　手机中国联盟秘书长王艳辉(老杳)表示，这场官司在本质上还是HTC败诉，此后HTC依旧在专利战中处于防守状态，需要提防苹果的后续诉讼。

　　此前，为反击苹果，HTC以3亿美元买下S3 Graphics公司，并利用该公司手上的专利起诉苹果侵权。但2011年11月22日，ITC最终判决苹果未侵犯S3 Graphics专利权，这对于HTC来说是一个不小的打击。

　　何泰庆表示，目前HTC手上可以反击苹果的专利牌已经很少了，因此HTC要想真正翻身，只能依靠并购摩托罗拉(微博)移动的谷歌尽快出手相救。

　　“微软(微博)的诉讼策略是要钱，而苹果的诉讼策略是要你死。”何泰庆表示，微软的诉讼诉求就是到处问手机厂商收专利费。苹果不同，苹果不接受对手的出钱和解，最典型的例子就是苹果和三星(微博)在澳大利亚的专利诉讼，苹果并不接受三星提出的用钱和

　　解的方案，也就是说，苹果会对那些对它构成威胁的对手一直诉讼到底。

　　从这个角度来说，HTC的麻烦远没有结束。

　　中国企业的专利威胁

　　“中国的手机出口量已非常大，专利战离许多中国企业已并不遥远”

　　本次HTC和苹果的诉讼，带给中国企业颇多启示。这场专利战争迫使中国手机企业不得不开始重视专利布局。

　　但怎么打好专利战，里面着实有着颇多技巧。目前正帮助一些中国手机企业解决专利诉讼的王艳辉(老杳)举例说，目前三星和HTC都在和苹果打官司，但结果是，苹果并没有从三星那里占到什么便宜，而HTC却略显被动。

　　这是因为三星的专利布局非常深，三星在许多年前就开始按照国际主流知识产权游戏规则布局，本次和苹果的诉讼算是旗鼓相当，互有胜负。

　　而HTC由于早年不重视专利布局，本次和苹果的诉讼略显被动。这给许多同样不重视专利布局的中国企业敲响了警钟。

　　此前微软已经找上门来，要求华为(微博)等中国厂商付给微软专利费，而诺基亚(微博)最近也在专利上诉讼一些国内厂商。

　　王艳辉表示，中国的手机出口量已经非常大，专利战离许多中国企业已经并不遥远。今年5月，联想、 中兴、 康佳、 TCL(微博)、 酷派、基伍，以及龙旗、闻泰、华勤等大型手机方案商等，在上海成立了手机中国联盟，希望抱团应对国外大厂商的专利战争。现在，该联盟正在处理诺基亚对上海华勤的诉讼纠纷。

　　苹果与三星、HTC的诉讼给了中国企业颇多启发。“你看苹果的专利布局，核心专利没有多少，苹果更多的是创意专利。”王艳辉指出，例如苹果刚刚取得的滑动解锁专利，其本身并没有什么技术含量，但是就是这一点就极大打击了许多同样适用滑动解锁的Android厂商。

　　他建议中国企业可以在此类创意专利上加强布局，以应对各种纠纷，这些创意类专利的布局并没有什么技术门槛，也花不了太多成本。

　　本次苹果和HTC诉讼的另一大启示是，有一个庞大的国内市场作为腹地至关重要。HTC之所以在专利战中略显被动，还与其身在市场狭小的台湾地区有很大关系。

　　美国市场占到HTC总出货量的近50%，因此苹果重点选择这一市场对HTC下手，这让HTC非常难受。反过来，由于台湾市场非常小，假如HTC反过来在台湾地区起诉苹果意义不大。

　　何泰庆也表达了类似的看法。他表示，本次HTC和苹果在苹果的大本营美国打官司比较吃亏，所以HTC选择在其它地区去反诉苹果，例如双方同样在英国打官司，英国的法官就不太采信苹果的一些说法，HTC目前的诉讼策略也是希望在欧洲扳回一局。

　　王艳辉指出，虽然知识产权无国界，但是法官是有国界的，因此多多少少会保护本国企业的利益。从这个角度出发，中国大陆企业背靠庞大的市场，刚好有这方面的优势，假如专利战烧到中国大陆企业头上，其可以选择在本土起诉对方，并有望占据一定优势。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-12-21 09:31:24</pubDate>
</item>
<item>
<title>VMware View将虚拟Windows带至 Linux、OS X 与Kindle Fire上</title>
<link>http://oss.org.cn/html/58/n-63858.html</link>
<text>	只要是不能使用 Windows 的地方，VMware 好像都能用虚拟机顺利达成你的梦想。他们所推出的「VMware View」-- 可远程连接企业服务器主机的客户端软件，在推出 iPad 与 Android 版之后，现在更是增加了 Linux、Mac 与 Kindle Fire 的支援。虽然带来的功能并没有太多令人惊喜之处，但其针对新的 OS X Lion 系统全屏幕功能的支持，仍然颇让人期待。而 VMware View 现在应该也已经可以在 Amazon App Store、Ubuntu Software Center 与 Mac App Store 中见到才是，有需要的朋友可以先在引用来源中观看完整的新闻稿内容后，再考虑是否要在各大在线应用软件商店购买啰！　　Vmware View应用程序此前已经完美支持了Android平板电脑以及iPad，而最新发布的这款产品将专门针对Kindle Fire、Mac以及Linux，其中后两者此前也有Vmware的其他产品支持。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-20 23:11:24</pubDate>
</item>
<item>
<title>HTML5多媒体组件的使用 - 第一部分：视频</title>
<link>http://oss.org.cn/html/57/n-63857.html</link>
<text>





    
    
        
			
			
			
				
				
					
						毫无疑问，关于HTML5的一个最受欢迎的以及谈论最多的特性是其在不借助诸如Flash Player等第三方插件的情况下，直接在你的网页上嵌入视频组件的能力。
浏览器提供原生支持视频的新能力使得网页开发人员更易于在不依赖于外置插件有效性的情况下，在他们的网站上添加视频组件。由于苹果公司现阶段在iPhone和iPad上使用的Flash技术的局限性，传输HTML5视频的能力就显得尤为重要了。
这篇教程主要向你介绍video元素及其属性，以及它所支持的不同的视频类型。这是这一系列三篇教程中的第一篇，主要涵盖了video（标签），audio标签以及这两种标签使用的自定义控制等方面的内容。
注意：你可以通过下载，研究sample files（示例文件），自己探究一些示例代码以及这篇文章中列举出来的一些基本概念。

					
				
			
		
    



















    
    
    
        
    



    
        
        视频服务：两项技术的快速比较
    








    
    
        
			
			
			
				
				
					
						如果你使用Flash Player创建一个在网站上播放的简单的MP4视频，你可能会用到下面的代码：

					
				
			
		
    




    
        &amp;lt;object type=&quot;application/x-shockwave-flash&quot;
   data=&quot;player.swf?videoUrl=myVideo.mp4&amp;amp;autoPlay=true&quot; 
   height=&quot;210&quot; width=&quot;300&quot;&amp;gt;
   &amp;lt;param name=&quot;movie&quot;
   value=&quot;player.swf?videoUrl=myVideo.mp4&amp;amp;autoPlay=true&quot;&amp;gt;
&amp;lt;/object&amp;gt;
    








    
    
        
			
			
			
				
				
					
						如果使用的是HTML5，你可以使用以下代码：

					
				
			
		
    




    
        &amp;lt;video src=&quot;myVideo.mp4&quot; controls autoplay width=&quot;300&quot; height=&quot;210&quot;&amp;gt;&amp;lt;/video&amp;gt;
    








    
    
        
			
			
			
				
				
					
						当然，这个HTML5示例是极端简化了的，但是它所实现的功能是一样的，你也可以看出这是多么的简单。

					
				
			
		
    



















    
    
    
        
    



    
        
        视频编码解码器
    








    
    
        
			
			
			
				
				
					
						视频编码解码器是一款可以对特定文件格式的视频进行编码或解码的软件。虽然HTML5标准最初强制支持Theora Ogg视频编码解码器，但在受到Apple和Nokia的反对之后，这个要求就从标准中去除掉了。
令人遗憾的是，这就意味着不同的浏览器支持不同的编码解码器，这听起来确实让人痛苦啊。但最近情况有所改善，你只需要（向不同的浏览器）提供两种不
同格式的视频内容：向Safari和Internet Explorer 
9提供MP4/H.264格式视频，向Firefox，Chrome和Opera提供WebM格式视频。Firefox也支持Theora 
Ogg，但在版本4之后就开始支持WebM格式了。
当然，也有一种为你的视频内容定义不止一个的视频文件的方法，这个我在稍后就会讲到。

					
				
			
		
    



















    
    
    
        
    



    
        
        video标签
    








    
    
        
			
			
			
				
				
					
						你在向你的网页上嵌入视频时用到的video元素，包含了几种不同的属性，在表1中列出了其中几项。
表1. video标签属性

属性

描述

src

提供视频文件的URL地址。

autoplay

表明如果可能，网页上的视频应该自动播放。

controls

告知浏览器显示默认视频控制设置。

muted

设置视频的初始音频状态为静音 （此属性目前还不为任何浏览器所支持）

loop

表明视频应该连续不断的循环播放 （Firefox浏览器目前暂不支持这一属性）

poster

设置显示默认图片，而不是视频的第一帧。

width

指定video元素宽度的像素值。

height

指定video元素高度的像素值。

preload

向浏览器提示视频预加载状态。有三种可能的取值：
none: 不执行任何的预加载metadata: 只加载视频的元数据，例如持续时间auto: 让浏览器自行决定（默认的）


例如，如果你想视频自动播放，由浏览器提供控制，你只需要使用如下代码：

					
				
			
		
    




    
        &amp;lt;video src=&quot;myVideo.mp4&quot; autoplay controls&amp;gt;&amp;lt;/video&amp;gt;
    



















    
    
    
        
    



    
        
        source标签
    








    
    
        
			
			
			
				
				
					
						前面部分的实例中只用到了一个视频文件，使用一种MP4格式。那么你又会如何着手去处理WebM格式视频文件呢？
这就是source元素出现的背景（由来）。一个video元素（标签）可以包含任意数目的source元素（标签），使得你可以为同一个视频指定不同的源。
source标签的使用
source元素包含了表2所示的三个属性。

					
				
			
		
    








    
    
        
			
			
			
				
				
					
						表2. source标签属性


Attribute
Description

src

视频源的URL地址。

type

视频源的类型，例如video/mp4 or video/webm等。 实际使用的编码解码器也可以在这个字符串中指定。

media

视频的预期媒体类型Specified using 指定CSS3 Media Queries，这一属性使你能够为掌上设备指定不同的视频（例如指定尺寸更小，分辨率更低的视频）。



					
				
			
		
    








    
    
        
			
			
			
				
				
					
						要在同一视频中指定MP4和WebM源，你可以使用以下代码：

					
				
			
		
    




    
        &amp;lt;video autoplay controls&amp;gt;
   &amp;lt;source src=&quot;myVideo.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;
   &amp;lt;source src=&quot;myVideo.webm&quot; type=&quot;video/webm&quot;&amp;gt;
&amp;lt;/video&amp;gt;

    








    
    
        
			
			
			
				
				
					
						当浏览器试图播放视频时，它会逐一核查视频来源列表，直到找到可以播放的视频。因此，由于Firefox不能播放MP4格式文件，它会跳过MP4格式源文件，但它可以流畅的播放WebM格式源文件。
注意，在前面的实例中，由于source标签使用了中的src属性，我把video标签中的src属性移除掉了。如果你在video标签中指定了src属性，它就会覆盖（掉）source标签中的所有src属性。
指定编码解码器
如果你想的话，你可以指定用以编码视频文件的确切的编码解码器。这可以帮助浏览器确定能否播放这一视频。由于很多时候你并不确定真正使用的是哪种编码解码器，最好只是提供文件类型，由播放器自身来决定（能不能播放）。
如果你想指定某一编码解码器，你可以使用如下代码：

					
				
			
		
    




    
        &amp;lt;video autoplay controls&amp;gt;
   &amp;lt;source src=&quot;myVideo.mp4&quot; type='video/mp4; codec=&quot;mp4a.40.2&quot;'&amp;gt;
   &amp;lt;source src=&quot;myVideo.webm&quot; type='video/webm; codec=&quot;vp8&quot;'&amp;gt;
&amp;lt;/video&amp;gt;

    








    
    
        
			
			
			
				
				
					
						注意编码解码器是如何被添加到type属性的，特别要注意引号的使用以及type和codec之间由分号隔开。在向type属性添加codec是，很容易把引号放错位置，这样就会由于浏览器无法正常解读source元素，使得视频不能正常播放。因此，如果你想明确的指定编码解码器，一定要仔细。

					
				
			
		
    



















    
    
    
        
    



    
        
        回归传统
    








    
    
        
			
			
			
				
				
					
						当然，你也要向那些继续使用诸如Internet Explorer 8及更低版本，不支持HTML5的浏览器的用户提供相应的解决方案。
由于浏览器会自动忽略它们不能解读的东西，像Internet Explorer 8那样的传统浏览器就会跳过video和source元素，只视它们为不存在。你可以利用这一特性，寻找另外一种替代的显示你的视频的方法，通过一个简单的下载链接或者是像Flash Player那样的第三方插件。
在前面例子的基础上，你可以按照下述方法添加一个同一视频文件的链接：

					
				
			
		
    




    
        &amp;lt;video autoplay controls&amp;gt;
   &amp;lt;source src=&quot;myVideo.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;
   &amp;lt;source src=&quot;myVideo.webm&quot; type=&quot;video/webm&quot;&amp;gt;
   &amp;lt;a href=&quot;myVideo.mp4&quot;&amp;gt;Download the video&amp;lt;/a&amp;gt;
&amp;lt;/video&amp;gt;

    








    
    
        
			
			
			
				
				
					
						传统的浏览器将会只显示视频文件下载链接。
添加对Flash Player插件的支持也同样很简单：

					
				
			
		
    




    
        &amp;lt;video autoplay controls&amp;gt;
   &amp;lt;source src=&quot;myVideo.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;
   &amp;lt;source src=&quot;myVideo.webm&quot; type=&quot;video/webm&quot;&amp;gt;
   &amp;lt;object type=&quot;application/x-shockwave-flash&quot;   data=&quot;player.swf?videoUrl=myVideo.mp4&amp;amp;autoPlay=true&quot;&amp;gt;
      &amp;lt;param name=&quot;movie&quot; value=&quot;player.swf?videoUrl=mVideo.mp4&amp;amp;autoPlay=true&quot;&amp;gt;
   &amp;lt;/object&amp;gt;
   &amp;lt;a href=&quot;myVideo.mp4&quot;&amp;gt;Download the video&amp;lt;/a&amp;gt;
&amp;lt;/video&amp;gt;

    








    
    
        
			
			
			
				
				
					
						在上面这个例子中，像Internet Explorer 8那样版本较老的浏览器就会在Flash 
Player中显示视频（如果系统中装有Flash Player），视频的下载链接也会显示。通过提供下载链接以及退回到使用Flash 
Player等方法，你向那些没有安装Flash Player的用户提供了通过下载视频，然后在电脑上观看的视频访问方法。

					
				
			
		
    



















    
    
    
        
    



    
        
        数字版权管理
    








    
    
        
			
			
			
				
				
					
						如果你担心其他人可以自由下载，分享你的视频，HTML5视频可能就不是你想要的。不管你使用的是这篇文章中讲到的哪种方法，你都向其
他用户提供了你的视频文件的直接URL地址，用户可以自由下载你的视频文件。目前使用的HTML5还不能防止这类事件的发生，在将来的某个时候可能在
HTML5中会出现处理数据版权管理（DRM）的规范的方法，但目前还没有。
想了解更多的关于HTML5和DRM的信息，请参阅W3C's HTML FAQs on this topic。

					
				
			
		
    



















    
    
    
        
    



    
        
        视频字幕
    








    
    
        
			
			
			
				
				
					
						关于HTML5视频字幕的相关规定最初是HTML5标准的一部分。定义一种WebSRT文件格式，这种格式可以通过使用通常的SRT文件格式被用来指定视频字幕。
稍后重命名为WebVTT（网页视频文本轨道），字幕标准源于HTML5标准，然后自己成为一个标准体系。
WebVTT文件格式
WebVTT文件是一个特殊格式化的文本文件，其文件扩展名为.vtt。文件本身必须是UTF-8编码的，并以type/vtt MIME类型标记。这一类型文件必须在顶端以WebVTT\r），新的一行（\n），或者是新的一行之后回车（\r\n）结束。
这类文件中包含许多的cue，用以指定文本和视频文件中字幕的时间定位。
其基本格式如下：

					
				
			
		
    




    
        WEBVTT

[unique-cue-identifier]
[hh]mm:ss.msmsms --&amp;gt; [hh]mm:ss.msmsms [cue settings]
Subtitle text 1
[Subtitle text 2]
...

    








    
    
        
			
			
			
				
				
					
						（代码中）unique-cue-identifer字符串是可有可无的。它是帮助确定文件中cue的简单字符串。cue定时以一种简单的格式给出，小时（hour）部分可有可无。每一个cue都可以有若干的cue设置，用于文字的对齐和定位。这些在下面将有更详细的介绍。接下来就是字幕的文字部分了，可以在同一行显示，也可以多行显示。
视频文件中个别的cue可以通过这种方式定位不同的时间，通过另起一行分隔每一个cue块。
下面是一个简短的例子：

					
				
			
		
    




    
        WEBVTT

1
00:00:10.500 --&amp;gt; 00:00:13.000
Elephant's Dream

2
00:00:15.000 --&amp;gt; 00:00:18.000
At the left we can see...

    








    
    
        
			
			
			
				
				
					
						你可以使用cue设置来设置视频中显示的字幕文字的位置和对齐方式。其中包含了五种这方面的设置，如表3所示。
表 3. Cue设置

Cue设置

描述

D:vertical | vertical-lr

文本方向：竖直从左到右或是竖直从右到左。

L:value

行位置，以百分比值表示还是以特定的行号表示。

A:start | middle | end

相对于行的文本对齐方式。

T:value

文本位置，以百分比形式表示，相对于视频画面。

S:value

文字大小，以百分比表示。


例如，要把文字定位于行的末端，到视频画面顶端10%的位置，你就会用到下述的cue设置：

					
				
			
		
    




    
        2
00:00:15.000 --&amp;gt; 00:00:18.000 A:end L:10%
At the left we can see...

    








    
    
        
			
			
			
				
				
					
						你现在了解了如何通过这种方式创建WebVTT文件，为整个视频添加字幕。
track标签
你可能会很想知道WebVTT文件是如何被关联到你的视频中去。答案就是track标签。这个标签也被引入到了HTML5中，使得你可以为诸如video标签的媒体元素指定外源的文本轨道。track标签的属性详见表4。
表 4. track标签属性

属性

描述

kind

用于track定义的内容类型。可以是下面几种取值之一：subtitles，captions，descriptions，chapters，metadata。

src

文本轨道的URL地址，这里指的是WebVTT文件。

srclang

文本轨道资料的语言。

label

文本轨道的用户可读标签。

default

如果存在，表明这是默认文本轨道。


例如，假设你想把名为english-subtitles.vtt的WebVTT文件加载到上述的视频示例中去。你可以使用下述代码来实现：

					
				
			
		
    




    
        &amp;lt;video autoplay controls&amp;gt;
   &amp;lt;source src=&quot;myVideo.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;
   &amp;lt;source src=&quot;myVideo.webm&quot; type=&quot;video/webm&quot;&amp;gt;
   &amp;lt;track src=&quot;english-subtitles.vtt&quot; kind=&quot;subtitles&quot; srclang=&quot;en&quot; label=&quot;English subtitles&quot;&amp;gt;
&amp;lt;/video&amp;gt;

    








    
    
        
			
			
			
				
				
					
						上述代码就把带有英语字幕的WebVTT文件绑定在了你的视频上。当然，在video元素中，你可以使用多个track元素。你可以使用（track元素的）srclang属性指定多种语言的WebVTT文件，实现向视频添加多语言字幕支持。（然后，如果用户的参数设置中并没有指明更为合适的轨迹，default属性就可以被用于追踪默认的轨迹）
浏览器支持
不幸的是，到目前为止，还没有哪一款浏览器直接支持WebVTT，但很多的有效的JavaScript资料库使你可以使用WebVTT文件格式，并为你的视频提供字幕，包括：
PlayrLeanBack Player&amp;nbsp;Captionator(CaptionCrunch版本)MediaElement.js
所有这些解决措施都支持视频字幕，有些还会提供一些额外的特性。浏览器也开始添加这方面的支持，Safari和Firefox在这方面取得了一些进
展，Microsoft最近也推出了关于WebVTT的演示活动，像我们展示供应商对不久的将来将会发展起来的WebVTT支持的严肃态度。

					
				
			
		
    

</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-20 13:06:27</pubDate>
</item>
<item>
<title>H.264赢下视频格式大战已十拿八稳，8成视频采用该格式</title>
<link>http://oss.org.cn/html/56/n-63856.html</link>
<text>根据MeFeedia的最新数据，整整有80%的视频都是采用H.264编码格式的，如果这些视频采用HTML5视频标记的话就直接交付给iPad就能够播放了。当然这不是说一定要这样做或者说目前是这样做，这只不过是说明了如果视频发行商希望在iPad上利用同一份视频资产的话，没有必要对其进行重新编码，只需要将视频播放器从Flash转为HTML5即可。最新数据还表明了H.264得到了广泛的接受。2010年1月份的时候，采用H.264编码的视频还只有10%，而不到两年的时间就飙升至80%了。这种变化很大程度上要归功于iPad等连接设备的引入，因为这些连接设备大都支持H.264硬件加速。2010年5月，iPad刚刚发布的时候，MeFeeia报告的H.264占用率也才只有26%。显然，支持HTML5的文件越来越多对视频市场的巨头产生了影响。比方说Adobe宣布不再为移动设备的新浏览器、各种操作系统或者设备配置提供Flash Player适配支持。而Google的WebM视频格式尽管已经开源，却也是发展乏力。根据MeFeedia的报告，只有不到2%的视频是采用Google的VP8编码格式的，看来Google对On2 Technologies的收购是打水漂了。随着越来越多的设备采用H.264格式，可以预期其占用率还会提高。除非有更具竞争力的格式出现，并且能广泛部署在具备硬件加速能力的设备上，否则的话，H.264赢得视频格式之战几乎已成定局。视频编码格式H.264H.264，同时也是MPEG-4第十部分，是由ITU-T视频编码专家组（VCEG）和ISO/IEC动态图像专家组（MPEG）联合组成的联合视频组（JVT，Joint Video Team）提出的高度压缩数字视频编解码器标准。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-20 12:08:01</pubDate>
</item>
<item>
<title>Firefox 9明日发布，JavaScript性能提高近30%（可下载）</title>
<link>http://oss.org.cn/html/55/n-63855.html</link>
<text>Firefox 9将于明日正式发布。相比Firefox 8而言，Firefox 9有了很大的改进，其中最重要的变化是在JavaScript引擎中新增了类型推断（type inference），JavaScript引擎的速度也因此提高了20%至30%，从总体上来说，Firefox 9打开网页的速度也比Firefox 8要快一些。Firefox还新增了很多其它功能，例如，Mac OS X版的Firefox 9支持“两指重击导航手势”，完善了用户体验；Firefox 9对HTML5和CSS有更好的支持；更深入的主题整合；增加了Do Not Track请勿追踪JavaScript监测；支持字体拉伸等。目前，Firefox 9在官方网站上已经可以下载。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-20 12:05:48</pubDate>
</item>
<item>
<title>Dooble浏览器社会化网络扩展 - 即时聊天系统 InterFace</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63811</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-19 16:07:12</pubDate>
</item>
<item>
<title>基于Ubuntu 高仿苹果 Pear os试用</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63810</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-19 16:31:12</pubDate>
</item>
<item>
<title>惠普webOS是Linux发行版吗</title>
<link>http://oss.org.cn/html/66/n-63766.html</link>
<text>&amp;nbsp;&amp;nbsp; 为何要把惠普webOS认定为是一款最新的Linux发行版？这个论断有什么重要性？......这是需要严密论证的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 12月9日，LinuxBSDos.com发表专题评论，题为“webOS：The latest open source，Linux distribution“，立即被全球媒体引用1万1千余次（截至北京时间12月12日13点），足见其新闻价值之重要性。此文对惠普开源webOS进行了理论“定性”，受到全球业界同仁的高度重视。12月9日，惠普有关处置webOS的官方声明全文如下：&amp;nbsp;&amp;nbsp;&amp;nbsp; ”HP today announced it will contribute the webOS software to the open source community.&amp;nbsp;&amp;nbsp;&amp;nbsp; “HP plans to continue to be active in the development and support of webOS. By combining the innovative webOS platform with the development power of the open source community, there is the opportunity to significantly improve applications and web services for the next generation of devices.&amp;nbsp;&amp;nbsp;&amp;nbsp; ”(以下文字省略）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 据此，该评论文章明确指出：......既然如此，惠普与webOS的真实关系就应该如同Red Hat与Fedora发行版，Canonical与Ubuntu发行版之间的关系一样，同时，使其成为真正的“pure open source“（惠普官方的原话），也就是说，使其成为一款最新的Linux发行版。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 23:29:43</pubDate>
</item>
<item>
<title>袁萌：关于惠普webOS的再思考</title>
<link>http://oss.org.cn/html/65/n-63765.html</link>
<text>&amp;nbsp;&amp;nbsp; 12月9日，惠普把webOS实行“开源”之后，事情就算完了？非也。何故？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在不久的将来，世界进入了“云时代”，全球将有数亿人整天“泡”在网上，在云中寻找“刺激”（或快乐）。那时，年轻人的手中几乎都有智能手机，否则就不够“时尚”了。昨天，我乘地铁出去办事，明显感觉周边人群玩“手机”的多了，他们不是用手机打电话，而是在“玩手机”，同时，脸上露出美妙的微笑。说白了，每部智能手机的背后都连接着互联网“云”。由此，我们要形成一个什么概念呢？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 今年8月30日，VMware总裁Paul Maritz公开放出一句名言：”Less than 20% internet connected Windows PCs in 2014”，他断言：“Windows PCs are on their way out”。实际上，三年前，95%的上网PC都是Windows计算机。这是发展的大趋势。（注：Paul Maritz在1986～2000期间担任微软Windows部门的执行长官，）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 当前，在全球范围内，智能手机正处于爆炸性增长阶段。2011年年度，智能手机出货量近1.35亿部，而且，还有继续增长的空间。也就是说，移动上网设备（智能手机与平板电脑）的大普及时代就要来临。Windows计算机的末日不会很远了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 去年4月，惠普用12亿美元竞购webOS是正确的，因为，webOS是当今唯一的专门针对连接互联网“Web云”而设计的快速、移动操作系统，每套授权费为50～70美元，是一款商品化程度很高的成熟移动操作系统（尤其是3.0版本）。12月9日，惠普总裁惠特曼（Meg Whitman，业界称其为“铁娘子”）大胆将webOS抛出去（即“开源”），无疑是有周密战略考虑的，此举能够有效抑制苹果与谷歌智能手机的快速增长“势头”,增进移动生态的活力。虽然，从此以后，webOS是“pure open source“（原汁原味的纯粹开源），但是，惠普不是放手不管，而是对其继续加大投入，同时为其设立了专门的服务网站（developer.palm.com），引领webOS继续向前发展。12月9日，webOS服务网站正式开通，其风格与氛围（细腻程度）与谷歌的Android开发者网站（developer.android.com）“全然不同”，对广大开发者颇具吸引力，这无疑是一个好兆头。（注：请读者登录两个网站自己实际体验一把。）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 我承认自己对女性总裁有偏见，很瞧不起惠普总裁惠特曼（因为，她也瞧不起我们男性）。在1998年至2008年这十年期间，她把eBay(中文名称为“易趣”购物网)从一个30人的小公司，年收入只有400万美元，发展成年收入80多亿美元的全球电子商务巨头（拥有1.5万职工），自己的纯资产高达13亿美元，不愧为“铁娘子”之称号。她敢于将webOS彻底“开源”，足见其决策能力之“非同凡响”也。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 顾名思义，webOS移动平台上的各种应用其实就是互联网云中的“Web应用”，开发者很好上手编写。有惠普“铁娘子”惠特曼在后面替webOS”撑腰“，就不乏开发者为之“卖命”。我想，webOS为我国移动从业者带来了一丝“春风”，国内谷歌Android的“痴迷者”该是清醒的时候了。惠普惠特曼“铁娘子”与webOS开源机器人跳“双人舞”，我们必然有好戏看。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 23:25:39</pubDate>
</item>
<item>
<title>惠普webOS成为CEO专项，优先级大幅提升</title>
<link>http://oss.org.cn/html/64/n-63764.html</link>
<text>&amp;nbsp;&amp;nbsp; 近日，国内有人说，惠普webOS必死无疑。但是，实际情况正好相反，惠普webOS现已成为惠普“铁娘子”总裁惠特曼的“CEO专项”，重新组织班子（即开发团队），直接向其汇报，沿着全新方向迅速挺进，势头不错，而不是很差。根据何在？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 12月12日，Nicholas Kolakowski发表署名文章，题为“HP WebOS Tablets Still a Possibility: Whitman”，以及同日在《福布斯》（Forbes）发表独家新闻，题为“HP's New Plan For WebOS: Meg Whitman's Signature Effort“，透露了非常重要的信息。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 总起来看，惠普对webOS的未来是有周密战略考虑的。这就是说，对于惠普而言，webOS开源的目的是什么？这个惠普“CEO专项”的成败标准是什么？这是首先需要搞明白的事情。惠普“铁娘子”总裁惠特曼的出牌方式“不同凡响”，值得我们仔细思量。上述媒体透露了一段重要文字，对我们颇具启发意义：“Her measures of success for the open-source webOS will include whether developers are gravitating toward the platform, and if other hardware manufacturers begin using it to build their own devices.”，大意是说，衡量开源webOS成败的标准有两点：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1、是否能够吸引、凝聚广大开发者参与该平台的开发；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2、其他硬件生产厂商是否开始利用这个平台去构建自己的产品设备。我们把话说穿了就是：借用别人之手，打击苹果与谷歌的“疯涨”势头。难怪惠普表示今后要对开源webOS继续加大投入，大力促其发展，这其中有“铁娘子”的如意算盘。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 上述惠普“铁娘子”的报复计划是否可行呢？12月12日，《福布斯》评论文章的结束语是：“In short, this one effort could define Meg Whitman’s HP”，大意是说，这项计划可能决定惠特曼领导下的惠普未来命运。由此可见，惠普这个世界IT产业的庞然大物，如今也玩起了自由软件Linux，大象与小白兔跳起“交际舞”，滑稽有趣，值得一看！&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 回到我们国内，有不少人被谷歌Android今年的“疯头”所迷惑，以为这个世界上只有这棵“大树”，必须把自己挂在上面摇晃才舒服（不是吊死）。在此，我要说点不同意见。12月12日，国外媒体有一篇独家报道，题为“The 10 most important open source projects of 2011“，但是，其中偏偏没有谷歌的Android系统。为什么？该文在一个独立小标题“No Android?“下面，有一段英文原话（该原话的中译文被删除了）如下：“......but Android development happens mostly behind closed doors. There's little opportunity for the millions of Android fans and potential hackers around the world to influence Android development unless they happen to work for Google or one of its partner companies”，还说：“It's great that Google releases the code, but it's more of a &quot;source open&quot; project than an open source project“，大意是说，谷歌的Android系统虽然“源码开放”，但是，却不是“开放源码”。注：在国际上，“开放源码”（“Open Source“）是有严格定义的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在上述新闻中，惠普总裁惠特曼明确表示：“I do not believe we will be in the smartphone business again.”意思是说，惠普不想再度介入智能手机业务，这等于公开暗示其他移动硬件设备厂商：今后，基于webOS的智能手机就是你们的（业务）了！我们国内有关硬件厂商还傻等什么呢？快跑吧！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 23:22:35</pubDate>
</item>
<item>
<title>RIM：BlackBerry 10 手机在 2012 年年尾才会出现</title>
<link>http://oss.org.cn/html/63/n-63763.html</link>
<text>			早前我们告诉过大家一个有关 BBX BlackBerry 10（QNX 基础）的所谓「坏消息」，不过这次是真的啦。RIM 的副 CEO 告诉大家，因为芯片组供应紧张，要到 2012 年年中才能达到量产的地步，所以我们最快要到年尾才会看到跑 BlackBerry 10 的手机出现啰！... 当被问到为什么不找别的供货商的时候，他们则指出因为其他替代品不能在提供足够运算效率的同时顾及电池续航力，所以坚持要等下去。不过，他们也不忘安抚一下大家，说 RIM 会继续志于生产无论在用户体验和设计上也是高质素的装置。喔，不知道大家有什么 / 还有什么期望呢？</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 23:19:19</pubDate>
</item>
<item>
<title>为 Android 4.0 而开发的 Adobe Flash Player 出炉</title>
<link>http://oss.org.cn/html/62/n-63762.html</link>
<text>			没错，Adobe 的确曾说过会停止为移动设备开发 Flash Player，Galaxy Nexus（Android 4.0）刚推出就爆出暂不支持 Flash，幸好 Adobe 也负起这个责任为其开发最终版的 Flash Player（11.1.112.60 版本），使得 Android（至少还有 4.0 这代）装置暂时还可以以支持 Flash 来作为卖点有完整的网页浏览体验。就香港而言，我们亲身试过以安装了 Flash Player 的 Galaxy Nexus 上本地某主要电视台的网络电视，直接播放桌面电脑版本的 Flash 影片，发现播放顺畅，没有出现影音不同步等问题；所以大家现在就可以放心到 Android Market 下载啰！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 23:14:48</pubDate>
</item>
<item>
<title>Windows 8公布“图片密码”功能（视频演示）</title>
<link>http://oss.org.cn/html/61/n-63761.html</link>
<text>Windows 8公布“图片密码”功能（视频演示）近日，微软在其官方博客中透露了Windows 8中将包含的一项新功能——“图片密码”。即不是通过文字而是通过图片与手势的方式来登陆。用户可以在个人设置里面设定图片密码。步骤非常简单，只需要选择图片，在图片上设置固定手势，再确认该手势，你就设定好了一个图片密码。下次登陆的时候就可以通过在该图片上滑动你设定好的手势登陆了（八卦一下：有网友表示可以用苍井空的图片，不过不管你用不用，反正我是不会用的）。点击此处可以查看微软的演示视频。很显然，Windows 8推出的这项图片功能是为平板而生的。预计随着Windows 8出来的日子越来越近，我们还将看到微软透露更多该系统的惊艳之处。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 19:59:01</pubDate>
</item>
<item>
<title>Ubuntu对Java开发包说再见</title>
<link>http://oss.org.cn/html/60/n-63760.html</link>
<text>
			&amp;nbsp;&amp;nbsp;
12月15日，Canonical宣布，从此以后，将从Ubuntu发行版中移除所有Java开发包（JDK），请见：“Canonical Will Remove Java
From Ubuntu”一文。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
今年8月30日，甲骨文宣布，废除Linux操作系统发行版捆绑Java开发包（JDK）发行的许可（甲骨文大概是想借JDK发财）。Ubuntu只好对Java说声再见了。请见“Oracle retires licence for distributing its Java
with Linux - The H Open Source: News and
Features”一文。Ubuntu确实很无奈啊！
			
			
			</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 19:02:13</pubDate>
</item>
<item>
<title>聚光灯下的惠普开源webOS</title>
<link>http://oss.org.cn/html/59/n-63759.html</link>
<text>&amp;nbsp;&amp;nbsp; 近日，惠普“铁娘子”总裁惠特曼与惠普宠儿webOS成为强力聚光灯下“舞伴”，成了万人盯视的”焦点“。舞曲才刚刚响起，精彩画面还在后面。何故？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在惠普老总裁李艾科的手里，webOS是一局“死棋”；而在惠普新总裁惠特曼的眼中，webOS则是一局“活棋”。两者的策略正好相反，一死一活。“铁娘子”惠特曼认为惠普要做云时代的“主宰”，是互联网云中心服务器的领先供应商。在惠普战略中，互联网云是最大的战略重点。云设备的销售业绩上去了，就是惠普的最大胜利。但是，进入互联网的“云时代”，移动互联设备的销量必然急剧上升。对此，“铁娘子” 惠特曼“心知肚明”，不必外人”指点“。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 由此可见，惠普总裁惠特曼绝对不会放弃移动终端的市场。惠特曼将webOS贡献给全球开源社区，自己作为webOS的赞助者与支持者，积极参与其中，惠普就是再砸上几个亿又有何妨？说白了，webOS是惠普砸开全球移动市场的“敲门砖”，培育一两年，使2013年成为惠普基于webOS的”移动年“，这就是惠特曼心中的发展策略。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 进入惠普webOS官方网站（developer.palm.com），一股热气扑面而来，网站主持人热情欢迎来访者，真诚而又周到。这个网站所传达出的中心意思是：“来这里，任何问题都好商量，我们都是一家人！”比如，webOS应该遵守什么”开源协议“？是GPL，还是BSD？这得听听大家的意见才做决定，这里不是惠普的”一言堂“。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 为什么惠普“铁娘子”总裁惠特曼对webOS的未来充满必胜的信心？有何事实根据？最主要的就是：WebOS是当今世界唯一以web为中心的移动操作系统，与云计算正好“配套”，速度、效率“奇高”。“铁娘子”惠特曼拿出当年搞“电子港湾”（eBay）的劲头，走进webOS开源社区，与平民百姓“共舞”，哪有办不成的事？在惠特曼看来，webOS赚钱不赚钱是小事，webOS能不能压制苹果与谷歌的”疯涨“才是大事。那么，我们要问，webOS能不能“长大”呢？如果惠普不断向webOS开发社区“砸钱”（比如，再砸上十个亿），哪有办不成的事情？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 回到我们国内，“核高基”重大软件专项分配给一个开发项目的科研经费，只有区区数千万人民币，这能干出什么大事情？如果能够砸上十几个亿（人民币），再以“举国之力”，搞出个移动操作系统绝不是一件难事。现在，机会终于来了，何不借助webOS的开源东风，与惠普“铁娘子”惠特曼共舞一番？中国的移动市场极为庞大，绝对不能完全落入他人之手。谷歌不愿意与我们“玩”游戏，独自跑到香港瞎折腾。不知怎么搞的，国内总是有人替谷歌唱赞歌，想做卖国英雄不成？我认为，谷歌Android系统是假冒Linux发行版，远远不如webOS“正宗”，它是地地道道的Linux发行版（自主可控）。声明：以上信息或言论只代表作者本人的观点，不代表本站意见。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 18:55:08</pubDate>
</item>
<item>
<title>回顾2011：那些逝去的IT英才</title>
<link>http://oss.org.cn/html/58/n-63758.html</link>
<text>艾伦·萨克斯（A. Sachs）有句话是这么说的：“死比生更普遍，人皆有一死，但并非谁都活过”。的确，得过且过的人无数，但是真正活过的人不多。2011年终将近，此刻，我们应该纪念一下一些今年逝去的人，虽然他们逝去了，但是凭借着在技术界、甚至在全世界做出的卓越影响，他们完全可以无愧地说：“我们活过了”。乔布斯（1955年2月24日-2011年10月5日）杰出的创新者，纯粹的开拓者，有谁能够像他那样终其一生照耀整个业界，变革整个行业？虽然他并不能将每一样东西都点石成金，但是，作为我们这个时代最杰出的发明者之一，他一定会被我们久久铭记。乔布斯对细节的关注、他的商业天才，还有专注以及无情的内驱力，这些应当也必将成为许多新生代创业者的灵感源泉。丹尼斯·里奇（Dennis Ritchie）&amp;nbsp;（1941年9月9日-2011年10月12日）要是没了这位受人尊敬的计算机科学家，没有了他创建的C语言以及参与开发的UNIX操作系统，我们现在都能干些什么？他死后，计算机历史学家Paul Ceruzzi做出了最好的评价：“里奇为人低调。他的名字并非家喻户晓，但是……如果你有显微镜并且能够在计算机上找找，你就会发现，他的作品随处可见。”鲍勃·高尔文（Bob Galvin）&amp;nbsp;(（1922年10月9日-2011年10月11日）摩托罗拉创始人Paul Galvin之子，摩托罗拉1959-1986年间富有远见的CEO。在高尔文的领导下，摩托罗拉引领了全球手机产业的诞生。摩托罗拉在他的带领下还成为了全球半导体、寻呼、对讲机、太空与军事通讯以及汽车嵌入控制技术产业的领袖。约翰·麦卡锡（John McCarthy）&amp;nbsp;（1927年9月4日-2011年10月24日）麦卡锡创建了编程语言Lisp，同时也可以说是现代人工智能之父，AI（artificial intelligence）这个词是他发明的。他说自己之所以想到要用Lisp来创建图灵机是因为自己所能够支配的计算环境有限。麦卡锡是一位受人尊敬的计算机科学家，在2000年退休前他一直担任斯坦福大学的教授。罗伯特·莫里斯（Robert Morris）&amp;nbsp;（1932年7月25日-2011年6月26日）密码学家、计算机科学家。莫里斯被普遍认为是计算机安全的先驱人物。1960-1986年间，莫里斯是贝尔实验室的研究人员，致力于Multics及此后UNIX系统的研发。莫里斯对于早期UNIX的贡献包括math库，编程语言bc，“crypt”程序，以及用于用户验证的密码加密体制。他有一句名言：“确保计算机安全的三条黄金定律是：不要计算机，不开机，不用计算机”。Ilya Zhitomirskiy&amp;nbsp;（1989年10月12日—2011年11月12日）俄裔美国人，软件开发者，开源社交网络Diaspora 的联合创办人。他没有时间像本文的其他人那样改变世界，但是22岁就英年早逝还是引起了业界极大的震动。保尔·贝恩（Paul Baran）&amp;nbsp;（1926年4月-2011年3月）波兰裔美国人，工程师，发明包交换技术引领了计算机网络的发展。贝恩帮助奠定了Arpanet的底层技术基础。颇有建树的创业家，成立了几家公司，开发出的技术形成今天的互联网等现代数字通信的基本部分。贝恩是1968年成立的未来研究所（Institute for the Future）的创始人之一。他还发明了第一台金属探测器—通道入口枪支探测器。2011年技术界其他一些值得关注的逝者如下：马克思·马修斯（Max Mathews）—“计算机音乐之父”（1926年11月-2011年4月）朱利叶斯·布兰科（Julius Blank）&amp;nbsp;— 机械工程师，联合创办了仙童半导体公司（1925年6月-2011年9月）珍·詹宁斯·巴迪克（Jean Jennings Bartik）—&amp;nbsp;全世界最早在计算机界工作的女性之一，联合开发了ENIAC计算机（1924年12月—2011年3月）大贺典雄—&amp;nbsp;资深顾问，索尼前总裁兼主席（1930年1月—2011年4月）约翰-R·欧宝（John R. Opel）&amp;nbsp;—IBM前CEO兼主席，在他掌管下IBM进入了个人计算机市场（1925年1月—2011年11月）迈克尔-S·哈特（Michael S. Hart）&amp;nbsp;—电子书的发明者，创立了Gutenberg项目（1947年3月—2011年9月）丹尼尔·麦克拉肯（Daniel McCracken）&amp;nbsp;—计算机科学家，二十多本计算机编程书的作者，包括《Fortran编程指南》（1930年7月—2011年7月）肯尼斯·奥尔森（Kenneth Olsen）&amp;nbsp;—有远见的发明家，联合创办并领导了微机巨头DEC（Digital Equipment Corporation）（1926年2月—2011年2月）帕特丽夏·邓恩（Patricia Dunn）&amp;nbsp;—惠普前总裁（1953年3月—2011年12月）斯蒂夫·拉西（Steve Lacey）&amp;nbsp;—创业家，替微软（模拟飞行！）、Facebook及最近的Google工作的软件工程师（—2011年7月）安息吧，感谢你们，让我们可以站在你们的肩膀上。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-18 18:49:49</pubDate>
</item>
<item>
<title>微软将开启IE自动升级功能</title>
<link>http://oss.org.cn/html/71/n-63671.html</link>
<text>好消息！微软已决定开启自动升级功能，以保证所有的IE (Internet Explorer，微软出品的网络浏览器) 用户都能用上最新的版本。许多人都知道，IE的补丁和重大更新早就可以通过Windows Update获得，但要想从一个版本升级到另一个版本，操作稍为复杂，因为从未有过完全自动化的过程（比如，IE 9安装的时候，会使用单独的安装窗口）。对许多用户来说，额外的安装步骤往往就意味着他们多数会放弃安装最新的版本。从今以后，IE将会“默默地”自动更新（和Windows一样）。从明年1月开始，澳大利亚和巴西的用户将首先开始进行自动的IE更新。接着，微软会逐渐把这一做法覆盖到全球各地。微软IE的资深总监Ryan Gavin指出了几点好处：过时的浏览器被替换掉以后，Windows用户社区的整体安全性会得到提高，开发者们也可以专心用更现代的网页代码来制作网站，另外，用IE上网冲浪的用户也能更充分地体验到互联网的美妙所在。在自动升级的过程中，用户的默认设置和偏好（如搜索引擎设置或主页等）都不会被更改。最新版本的IE将唾手可得（Vista和Windows 7上为IE9，XP上为IE 8）。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-16 13:17:23</pubDate>
</item>
<item>
<title>微软搜索引擎Bing在美国的市场份额与Yahoo并驾齐驱</title>
<link>http://oss.org.cn/html/70/n-63670.html</link>
<text>最新的ComScore搜索统计数据出炉，11月份，微软的搜索引擎Bing在美国的份额升至15%，仅比Yahoo的15.1%低0.1个百分点，距离微软成为美国第二大搜索引擎的目标又近了一步。Google的数字变化不大，65.4%的份额仍可令其独占鳌头。Bing份额的上升是以Yahoo下降作为代价的。2010年初，微软与Yahoo签署了合作协议，同年8月，Bing开始为Yahoo提供搜索引擎支持。自此后，Bing的份额一直在上升（呵呵，Yahoo算不算是引狼入室呢？）。下图是ComScore的最新统计数据：</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-16 13:15:07</pubDate>
</item>
<item>
<title>2011 年最受欢迎的 9 款 Web 开发工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63626</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-15 22:05:12</pubDate>
</item>
<item>
<title>RockPlayer：全球最好的Android视频播放器？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63625</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-15 22:11:12</pubDate>
</item>
<item>
<title>Google Chrome升级，支持多用户登陆</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63624</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-15 22:23:12</pubDate>
</item>
<item>
<title>Intel将建“移动和通信组”业务部门，以对抗ARM竞争</title>
<link>http://oss.org.cn/html/23/n-63623.html</link>
<text>周三Intel发布了一份内部备忘录，该公司将把现有的四个部门整合成一个新的“移动和通信组”业务部门。CNN Money报道说Intel想要增强自身的竞争力，以弥补在过去几年间因失误而落后给ARM等对手的差距。这次重组将整合移动通信(mobile communications)、上网本和平板(netbook and tablet)、移动无线(mobile wireless)以及超极移动(ultra mobility)四个部门。另外，Intel还发掘Mike Bell和Hermann Eul这两位公司高管来领导这个新的部门。一方面，Intel正努力研发低功耗芯片，来对抗移动设备领域ARM的猛烈进攻（目前多数的Anroid设备用的都是ARM的芯片），而另一方面，ARM正紧锣密鼓地开进Intel的地盘：微软表明Windows 8同样支持x86和ARM，基于ARM的Windows设备也将在2012年问世。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-15 20:34:33</pubDate>
</item>
<item>
<title>微软Messenger开始支持XMPP协议, 共享3亿活跃用户</title>
<link>http://oss.org.cn/html/22/n-63622.html</link>
<text>多年来一直有个问题困扰着我们：仅仅因为不同软件采用的信息收发协议不同，我们就不得不维护多个功能类似的即时通信软件和帐号吗？随着一些新软件的出现，这种情况有所缓解。例如Google Talk或Facebook Chat都采用了XMPP协议，因此用户在使用不同客户端时消息也可以互达互通。现在微软也于近日宣布其Messenger（MSN）服务已经支持XMPP协议，这对用户和开发者来说无疑都是一个好消息。XMPP全称为“Extensible Messaging and Presence Protocol”，一般译为“可扩展通讯和表示协议”，可用于服务类实时通讯、表示和需求。开发者可以基于该协议开发个性化的客户端。现在不管是新的独立客户端，还是集成在其他系统中的即时通信工具，都能与Messenger共享每月3亿的活跃用户。而多年来微软利用其自身渠道优势，使得Messenger客户端在各种电脑或手机系统中都可以使用，开发者也不用再费力拓展渠道。如果基于XMPP协议的客户端同时还支持OAuth 2.0身份认证协议，那它将能直接与Windows Live Messenger连接，用户可以即时查看好友状态并交谈。随着微软Messenger对XMPP协议的支持，目前国外比较流行的一些即时通信工具基本实现了互通互联。而如果国内的同类服务也能支持XMPP协议，相信数亿用户将会为此欢呼，而即时通信领域也将会呈现另一片景象。另外，如果对微软Messenger开放连接有兴趣深入了解的朋友，可以到其官方博客查看详细说明。另外，由于XMPP也是苹果推行的开放通讯协议，这意味着苹果iOS平台上的 iMessage等即时通讯软件，可以直接与Messenger用户对话。苹果平台的软件已经可以与谷歌的Google Talk、雅虎IM等用户聊天。这些通讯软件遵循的，都是苹果推动的XMPP开放协议。微软的Messenger宣布支持XMPP协议后，这意味着苹果的iChat、iMessage、FaceTime用户，可以不用任何设置，直接添加Messenger用户作为聊天对象。显然，微软在近期对开源标准敞开了胸怀，在IE9和IE10上提供了HTML5的顽健支持，并推出所有浏览器“相同标记”的概念。现在他们正使Live Messenger开放一大步，即支持使用XMPP协议访问。XMPP，也被称为Jabber，约在1998年成形。在2002年，IETF终于发布了一个有效的正式标准，而该标准在2004年正式通过。现在你可以在一大堆应用中找到XMPP的身影，从Gmail窗口的聊天工具栏到Adium和Digsby这样的客户端。那么微软为何支持XMPP这个开放协议呢？也许，是为了达到简化使其与Skype和Facebook的互通实现得更好。现在，Live Messenger和Facebook的婚后生活很愉快——是的，现在Live Messenger正是Facebook上最活跃的应用。当然Skype，也做了很多与Facebook集成的工作，它们双方都支持XMPP协议。随着Skype被微软收购并正式成为微软家族的一部分，看起来Redmond想要让所有人使用同样的通讯服务。迁移到XMPP会让微软通讯巨人的出世更为简单——即Live Messenger、Lync和Skype的合体——就像一台马力十足的大船。据我们猜测，微软会在下一个版本的Windows Phone，也就是Tango中置入视频通话，也极有可能整合Skype。Live Messenger、Skype、Facebook全球的用户总数加起来超过十五亿。如果这些通讯工具又在Windows Phone、Windows桌面系统和Xbox上能够互通，那可真是壮观！当然，退一步说，Live Messenger支持XMPP也意味着以后即时通讯能够在几乎所有的聊天工具中互相传递。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-15 22:52:52</pubDate>
</item>
<item>
<title>2011年科技界15大败笔：索尼PSN被黑居首(图)</title>
<link>http://oss.org.cn/html/21/n-63621.html</link>
<text>　导语：美国科技网站PCWorld周三发表署名杰瑞德·纽曼(Jared Newman)的盘点文章。文章列举出2011年科技界的15大败笔。　　以下为文章全文：　　1.PlayStation Network遭黑客攻击PlayStation Network遭黑客攻击　　4月份，黑客攻击PlayStation Network导致索尼不得不关闭其网络游戏服务达一个月之久，以构建更好的防御措施。更要命的是，入侵者还偷走了玩家的用户名、电子邮箱地址、密码、通讯地址以及其他个人信息。　　2.NetflixNetflix　　7月份，Netflix将DVD邮寄业务与流媒体业务相分离。用户如果想得到两项服务，就必须每月多付6美元。9月份，Netflix宣布DVD邮寄业务将由新成立的Qwikster经营。虽然随后由于巨大的反对声浪，Netflix放弃通过Qwikster提供新服务的计划，但其声誉和股价都遭受损失。　　3.黑莓(微博)PlayBook黑莓PlayBook　　4月份，在为黑莓PlayBook平板电脑造势初期，Research in Motion公司在广告中使用了“外行的时间结束了。”的口号。不过，没有电子邮件、日历和通讯录等应用程序的平板电脑不禁让人感到这只是一个噱头。由于缺乏第三方应用程序的支撑，就注定黑莓PlayBook不能对苹果iPad构成威胁。目前，黑莓PlayBook以每台200美元的价格清仓销售，RIM因此损失4.85亿美元。　　4.谷歌Chromebook谷歌Chromebook　　谷歌称，如果你使用电脑的大部分时间都是在浏览网页，为什么不选择更为安全、快速的笔记本？这个概念很吸引人。不过，谷歌在6月份开始发货的Chromebook笔记本电脑并没有声称的快速。PCWorld撰稿人詹森•克洛斯(Jason Cross)只给了三星(微博)Series 5 Chromebook笔记本2.5星的评价。据报道，Chromebook的整体销量不尽如人意。　　5.应用程序Color应用程序Color　　Color是一款iPhone的应用程序。3月份，该产品发布时宣称将集社交、电话、实时化以及照片分享于一身，这也可能是投资者对其投入4100万美元的原因。糟糕的是，这款产品最终连自己想做什么都搞不清楚。现在，Color已成为Facebook的视频分享工具。　　6.惠普(微博)TouchPad惠普TouchPad　　惠普总想把平板电脑做得比苹果iPad厚且重，应用程序比iPad少，但价格还必须与iPad看齐。这样的理念也就造成了悲剧性结果。不过，当惠普宣布将停止生产webOS产品时，其销量还是出现了短暂的火爆。据市场调研公司NPD Group公布的统计数据显示，惠普TouchPad的销量在美国平板电脑市场中排名第二。不知道这算不算一个好消息？　　7.Android平板电脑Android平板电脑　　据市场调研公司NPD Group的数据显示，从1月到10月，宏碁(微博)、华硕、三星以及摩托罗拉(微博)共在美国销售了50万台Android平板电脑。苹果仅在第三季度就在全球售出1120万台平板电脑。显然，从目前来看，Android平板电脑对苹果的iPad不能形成威胁。　　8.3D电视3D电视　　几年前，电视制造商就梦想3D电视能弥补目前LCD电视日趋狭小的利润空间。不过，今年3D电视的表现令人失望。市场研究公司SNL Kagan的数据显示，3D电视的销量今年呈下行趋势。据市场调研公司NPD Group的调查显示，消费者对3D电视没有多大兴趣。谁会愿意花高价钱戴着笨重的3D眼睛观看有限的电视节目呢？　　9.Google TVGoogle TV　　虽然Google TV是2010年启动的，但是其颓势在今年显露无遗。由于Google TV的机顶盒产品销售不畅，罗技公司减少了近1亿美元的营业利润。由于糟糕的销量，罗技不得不将原价300美元的机顶盒以100美元处理价甩卖。10月份，虽然谷歌升级其电视平台，并大量增加Android应用程序，但这招是否有效还得等到明年。　　10.《永远的毁灭公爵》《永远的毁灭公爵》　　这款游戏早在1997年就公布了，中间历经了多次跳票，终于在6月份与玩家见面。不过，令人期许已久的游戏竟然如此糟糕。在著名游戏网站Metacritic上，该游戏的差评率达到49%。美国科技博客网站Ars Technica则写道，参与该游戏制作的人都应该感到羞愧。　　11.惠普前CEO李艾科(Leo Apotheker)惠普前CEO李艾科(Leo Apotheker)　　在TouchPad平板电脑出师不利的局面下，惠普又出人意料地宣布将出售或剥离PC业务，从而专注于企业软件业务。这无疑是一个糟糕的决定，因为惠普的成功在于其能够同时提供软硬件产品。股价遭受重创，惠普董事会于9月份将李艾科辞退。随后，惠普立即宣布不会裁掉PC业务。李艾科最终获得1300万美元的“金色降落伞”(golden parachute)，但为webOS工作的500名员工却丢掉了饭碗。　　12.视频编辑软件Final Cut Pro X视频编辑软件Final Cut Pro X　　苹果的Final Cut Pro X是其视频编辑软件的最新版本。该版本具有更为便宜，更为简单操作的特点，但去除了一些许多专业编辑所依赖的工具。自6月份发布后，该软件引发许多用户的抱怨。　　13.任天堂3DS任天堂3DS　　任天堂3DS虽具有裸眼3D的效果，但3月份上市的价格为250美元，且缺乏受欢迎的主打游戏，不少消费者还是望而却步。为提振销量，任天堂在该产品发售四个月后将其价格降至180美元。由于大幅降价，该款掌机的销量顿时暴涨。不过，任天堂3DS定价不妥还是造成该公司近三十年来首度出现财年亏损情况。　　14.Mozilla FirefoxMozilla Firefox　　为追上谷歌Chrome浏览器的更新步伐，Mozilla Firefox浏览器不断加速其新功能的推出。今年6月，Mozilla开始每六个星期更新一版火狐浏览器。过快的更新也带来副作用，例如会导致第三方软件无法及时跟上等。即使如此快速的更新也没能阻止火狐浏览器市场份额下降的命运。市场调查公司StatCounter以11月为基础的最新数据显示，Chrome首次超越了火狐。　　15.思科Flip Video Camera思科Flip Video Camera　　2009年，思科以5.9亿美元的股票收购掌上型摄影机制造商Pure Digital科技公司及其产品。当带有内置视频照相机功能的智能手机开始风靡时，思科并没有让这条生产线工作起来。今年4月，思科突然宣布关闭旗下Flip视频摄像机部门，同时裁员550人，重新调整其业务。(彪赫)</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-12-15 09:34:12</pubDate>
</item>
<item>
<title>Linux下的PS图形处理软件GIMP 2.7.4发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63620</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 13:39:12</pubDate>
</item>
<item>
<title>阿里巴巴开源服务框架 Dubbo 2.0.9 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63619</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 15:24:12</pubDate>
</item>
<item>
<title>Redis2.6新功能预告：aof性能提升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63575</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-14 13:11:12</pubDate>
</item>
<item>
<title>简洁的Unity 调节工具MyUnity (已经支持ubuntu12.04)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63574</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-14 13:38:12</pubDate>
</item>
<item>
<title>MySQL 5.6 的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63573</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-14 15:25:12</pubDate>
</item>
<item>
<title>CentOS：只允许部分用户使用 ssh 登陆</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63572</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-14 13:14:12</pubDate>
</item>
<item>
<title>CentOS 下 mysqli扩展的安装 不重新装PHP</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63571</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-14 14:03:12</pubDate>
</item>
<item>
<title>乔布斯生前最大败笔：iAd</title>
<link>http://oss.org.cn/html/70/n-63570.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在老乔仙逝以后，所有的文章对他的描述，貌似除了难以相处以外，再无其它缺点，连古怪的脾气也给他的人格魅力加分，促进了他的事业发
展，他所有的决定，所做的一切，都是对的，从 iPod 到 iPhone 再到 iPad，所有你知道的苹果产品，都被冠以独一无二的称号。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;是的，乔布斯非常的成功，但是，他不是上帝，他并非万能，他生前的最大败笔就是 iAd。由于乔布斯的超强掌控欲，使得 iAd 限制过多，缺少吸引力，市场份额不断被 Google 抢走。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iAd 是苹果去年夏季与 iOS 4 一同发布的产品，允许广告商家在移动应用中嵌入动态广告，目的是在应用内流畅显示广告而不是将用户从软件推向独立网页。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iAd 
的推出本应该为商家在应用内更好地推广产品，获得盈利，然而根据《华尔街日报》的消息，这个服务现在表现乏力，Bloomberg 
甚至称，事实上，在几个月以前，这种现象已经非常明显，而据 AllThingsD 透露，负责苹果移动广告业务的总监已于八月份离职。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;更甚的是，苹果受限于自己的平台，不管苹果做得有多么出色，他都无法霸占整个移动领域，过去不会，现在不会，将来也不会。事实上，
在某种程度上说，Google 的 Android 系统战胜了苹果的 iOS，而 Google 
正好也是一家最为成功的在线广告公司，在任何设备上都能通过浏览器打广告，结果就是Google 的移动广告业务年收入已达 25 亿美金，而苹果广告业务却处于半生不死的状态。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;正如上文所说，苹果 iAd 失败的最大原因在于乔布斯的超强控制欲。曾经无数次，美国广告中
心麦迪逊大街的广告用户根本不想让别人指手画脚，告诉他们应该如何向观众打广告，做营销，如果他们没法在 iPhone，iPod 或者 iPad 
上做自己想要的广告，那么在 Android 设备上打广告也是个不错的选择，或者选择 
Facebook，电视以及其它方式，不一定非得依仗傲慢的苹果。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个硅谷的家伙太自以为是，自认绝顶聪明，公司不至于受到广告的影响，至少现在的广告不能影响到他们，但是，他们错了，任何一家科
技公司，包括苹果在内都应该清楚意识到事实并非如此，如果苹果继续这么傲慢自大，那么乔布斯想在 app 时代彻底改变广告业的希望就会破灭。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不管怎样，iAd 所带来的痛楚已迫使苹果学会妥协，变得稍微乖巧。苹果最初设定的广告最低消费门槛为 100 万美元，据说现在下调到了 40 万美元。为吸引更多广告用户，苹果还建立了培训计划，并邀请广告行业的推广营销高管访问苹果园区，高管们可在苹果商店享受购物打折优惠。
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;妥协并非乔布斯领导下的苹果风格，不过，如果能让半生不死的 iAd 就此复苏的话，妥协并非坏事。
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 16:44:16</pubDate>
</item>
<item>
<title>阿里巴巴开源服务框架 Dubbo</title>
<link>http://oss.org.cn/html/69/n-63569.html</link>
<text>Dubbo 是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的 RPC 实现服务的输出和输入功能，可以和 Spring框架无缝集成。 主要核心部件：  Remoting:&amp;nbsp;网络通信框架，实现了 sync-over-async 和 request-response 消息机制.RPC:&amp;nbsp;一个远程过程调用的抽象，支持负载均衡、容灾和集群功能Registry:&amp;nbsp;服务目录框架用于服务的注册和服务事件发布和订阅Dubbo工作原理Provider 暴露服务方称之为“服务提供者”。Consumer 调用远程服务方称之为“服务消费者”。Registry 服务注册与发现的中心目录服务称之为“服务注册中心”。Monitor 统计服务的调用次调和调用时间的日志服务称之为“服务监控中心”。(1) 连通性：注册中心负责服务地址的注册与查找，相当于目录服务，服务提供者和消费者只在启动时与注册中心交互，注册中心不转发请求，压力较小监控中心负责统计各服务调用次数，调用时间等，统计先在内存汇总后每分钟一次发送到监控中心服务器，并以报表展示服务提供者向注册中心注册其提供的服务，并汇报调用时间到监控中心，此时间不包含网络开销服务消费者向注册中心获取服务提供者地址列表，并根据负载算法直接调用提供者，同时汇报调用时间到监控中心，此时间包含网络开销注册中心，服务提供者，服务消费者三者之间均为长连接，监控中心除外注册中心通过长连接感知服务提供者的存在，服务提供者宕机，注册中心将立即推送事件通知消费者注册中心和监控中心全部宕机，不影响已运行的提供者和消费者，消费者在本地缓存了提供者列表注册中心和监控中心都是可选的，服务消费者可以直连服务提供者(2) 健状性：监控中心宕掉不影响使用，只是丢失部分采样数据数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务注册中心对等集群，任意一台宕掉后，将自动切换到另一台注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯服务提供者无状态，任意一台宕掉后，不影响使用服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复(3) 伸缩性：注册中心为对等集群，可动态增加机器部署实例，所有客户端将自动发现新的注册中心服务提供者无状态，可动态增加机器部署实例，注册中心将推送新的服务提供者信息给消费者&amp;nbsp;阿里巴巴开源服务框架Dubbo2.0.9版本发布了，该版本增加了简易监控中心界面，以及修复了一些BUG。Dubbo首页：http://code.alibabatech.com/wiki/display/dubbo/Home 下载地址：http://code.alibabatech.com/wiki/display/dubbo/Download#Download-Releases 发行说明：http://code.alibabatech.com/wiki/display/dubbo/Release+Notes#ReleaseNotes-ReleaseNotes2.0.9</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 16:35:16</pubDate>
</item>
<item>
<title>James Phillips谈从关系型数据库转到NoSQL</title>
<link>http://oss.org.cn/html/68/n-63568.html</link>
<text>　　James Phillips，Couchbase 的创始人之一。他最近的一场演讲谈到分布式面向文档的数据库和关系型数据库模型之间的差别，以及从关系型数据库转到 NoSQL 时数据库开发者需掌握的知识。InfoQ 就面向文档的 NoSQL 的优缺点采访了 James。
　　InfoQ：在谈及数据持久和数据管理时，您提到了“大数据(Big Data)”和“大用户(Big User)”，可否解释这两个概念之间的区别以及如何在二者之间做选择？
　　James Phillips：大数据：需要收集并存储大量信息，然后对信息进行分析和学习。它需要持续的高吞吐的写（收集信息时）和读（分析信息时）。数据本地化模型的优化方法是将“关联的数据”放在物理上临近的地方，从而确保分析的高效性。通常来说，它需要少量做数据插入的同步写和少量做信息分析的同步读。
　　大用户：需要为随机的读和写，以及大量并发读和写提供服务。数据本地化模型的优化方法则应该将“关联的数据”尽可能地分散开，从而将读和写操作最大限度地分散到不同的服务器和转轴之上。
　　InfoQ：NoSQL 数据库与关系型数据库相比，在数据建模和应用开发上其最主要的差别是什么？
　　James：关系型数据模型（及其数据建模）关注的是数据规范化的过程——将“记录”分解成许多表以及表之
间的关系，降低数据冗余。在过去，系统资源有限时，其意义非常大，因为每个字节的处理效率都很关键。而面向文档的方式存储数据则是更加自然的方式。其缺点
是在某些情况下，数据要冗余，查询模型也自然更复杂一些。但是，数据建模要简单得多，因为现实世界中，信息并不总需要规范。而且，因为限制少了，应用开发
者的生产力也提高了。
　　InfoQ：在演讲中您谈到面向文档的数据库。在哪些情况下，用面向文档的数据库优于关系型数据库？
　　James：面向文档的数据库在以下场景中更胜一筹：需要数据模型的灵活性（数据管理过程中，需求变更无需变更 schema）；低延迟、持久、高吞吐的读写性能；通过将数据和I/O方便地分散到廉价服务器和虚拟机之上，使基础设施费用与应用程序性能成正比。
　　InfoQ：面向文档的数据库支持哪些数据持久和数据管理的架构模式？
　　James：大多数 NoSQL 及面向文档的数据库都支持多种持久化模型：从完全的同步策略（比如，只有当数据写入磁盘或持久设备之后才报告写操作成功）到多种异步存储策略（比如，接受写请求之后，在实际写入磁盘之前就报告成功；或者，仅仅在完成数据备份之后即报告成功）。
　　InfoQ：面向文档的数据库有哪些缺点？应用架构师和开发者在使用这类数据库时应考虑哪些问题？
　　James：目前，面向文档的数据库不直接支持连接（join），事务的支持通常只针对单个文档，之前提到
的数据持久灵活性也可算作缺点。它产生了数据冗余，在某些情况下，当数据变更时需要在多处更新数据。所以，基于面向文档数据库的应用要为处理相互依赖的更
新做更多事情。将来，我们会看到使用外部事务监控器来填补目前对事务支持上的断层。同样，在应用层也有办法实现诸如连接查询之类的功能。
　　查看英文原文：James Phillips on Moving from Relational to NoSQL Databases</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 16:31:22</pubDate>
</item>
<item>
<title>Mozilla发布预览版应用开发平台</title>
<link>http://oss.org.cn/html/67/n-63567.html</link>
<text>	
	Mozilla今天发布了预览版的应用开发平台Apps Developer Preview和开发者社区的应用程序开发文档Apps Developer Community on MDN。
MDN的应用程序开发社区的工具和文档资源，能够帮助开发人员迅速的创建符合Web标准和开放技术如HTML5、CSS和JavaScript等要
 求的丰富的、跨平台和跨设备的应用程序。Mozilla Labs的应用程序开发计划旨在创建一个基于HTML5的应用程序生态系统。
如果你对这个项目感兴趣，那就抓紧时间注册成为开发者吧，前3000名注册的开发者，可以预先测试Mozilla应用商店的应用发布和销售过程。
同时Mozilla官方还用一则视频解释了为什么关注APPS：
      作为Mozilla的一项使命，Mozilla相信应用程序应该能够在任何一个接入网络的设备商运营，不管该设备使用的是何种操作系统、浏览器，但目前应用程序大多建立在封闭的生态系统中，用户跨平台使用的难度很大。
基于此种原因，Mozilla致力于建立一个开放的生态系统，能够允许开发者在这样一个生态系统下，创建能够跨平台的，更加灵活多样的应用程序。
Via: &amp;nbsp; Mozilla.ORG&amp;nbsp; &amp;nbsp;浏览迷编译
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 16:19:17</pubDate>
</item>
<item>
<title>CentOS下普通用户无法登录的解决方法</title>
<link>http://oss.org.cn/html/66/n-63566.html</link>
<text>查看 /etc/ssh/sshd_config文件 发现 root用户可以直接登陆SSH 并未做限制..
一般默认的 centos在建立好新用户之后就可以登陆SSH 可是我的却不行
最后究其原因 发现sshd_config中启用UsePam yes
于是 找到/etc/security/access.conf 文件
发现 默认是-:ALL EXCEPT root :ALL
也就是说 不允许root以外的任何用户登陆...
so问题就好解决了
改成
-:ALL EXCEPT root yourusername:ALL当然也可以在sshd_config中注视掉UsePam</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-14 13:47:12</pubDate>
</item>
<item>
<title>淘宝前端JavaScript库 KISSY 1.2 稳定版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63565</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-13 21:43:12</pubDate>
</item>
<item>
<title>开源的PHP全文搜索引擎 Xunsearch</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63521</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-13 20:58:12</pubDate>
</item>
<item>
<title>10款非常棒的开源论坛系统推荐</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63520</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-13 21:05:12</pubDate>
</item>
<item>
<title>Ocean base海量结构化数据存储系统</title>
<link>http://oss.org.cn/html/19/n-63519.html</link>
<text>下面PPT来自@淘宝日照 在Hadoop in china 2011上的一个技术演讲，主要对淘宝自主研发的海量结构化数据存储系统OceanBase进行了系统性的介绍。OceanBase目前已开源，参看OceanBase介绍。文档： OceanBase海量结构化数据存储系统(杨传辉).pdf(514 KB)</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-13 22:34:36</pubDate>
</item>
<item>
<title>Windows 8 软件商店允许开源软件入驻</title>
<link>http://oss.org.cn/html/18/n-63518.html</link>
<text>	
	摘要：Windows 8 商店的开发者协议中存在一个潜在的承诺，使得 OSI 认可的各种许可证的开源软件可以入驻。
来自 ZDNet 的报道称：
微软计划允许使用 OSI 开源授权许可证的软件通过 Windows 8 的 AppStore 进行发布。这条消息来自12月7日的文章： “The H” (发表在 PCWorld). The H 文章精心梳理了 微软 Windows Store 的应用开发协议 并发现该协议提及允许开源软件通过其进行发布。
The H 原文说到:
Apps that are released under an Open Source 
Initiative-recognised open source licence can, at least in the 
pre-release version of the Windows Store, be distributed according to 
terms that contradict Microsoft’s Standard Application License Terms if 
this is required by the open source licence. Among other things, the 
Standard Application License Terms prohibit the sharing of applications.
这将为开源软件开发者避免各种许可证风险的纠纷，跟之前苹果限制开源软件入驻苹果 AppStore 一样。
这不管是对开发者还是软件用户而言，都是一个好消息。
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-13 22:32:09</pubDate>
</item>
<item>
<title>[原创] Drupal 7中聚合其它网站数据的开发方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63516</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-13 09:55:05</pubDate>
</item>
<item>
<title>CentOS 6.1 正式版发布下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63515</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-12 14:49:12</pubDate>
</item>
<item>
<title>web富文本编辑器 KindEditor 4.0.4 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63514</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-12 14:55:12</pubDate>
</item>
<item>
<title>Ubuntu 软件中心增加 PayPal 在线支付功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63470</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-12 14:24:12</pubDate>
</item>
<item>
<title>《淘宝网Nginx定制与开发实战》演讲稿</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63469</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-12 14:50:12</pubDate>
</item>
<item>
<title>猛犸浏览器：北大附中学生季逸超开发的移动浏览器</title>
<link>http://oss.org.cn/html/68/n-63468.html</link>
<text>在学生创新领域，占住媒体头版头条的从来都只是美国的高中生或者大学生。但是北大附中的季逸超（@PeakJi ）证明了中国学生也可以，而且是以一己之力证明的。我们先一起来看一下他开发的最新版本的猛犸4浏览器演示视频：其中有许多独创的设计包括滑动手势进入任何收藏页，无缝同步阅读iCloud的阅读列表，浏览器上编辑代码网页直接运行等等。这款浏览器的设计，美工，开发，测试，运营等全部由季逸超一人独立完成（基于Webkit）。在车库咖啡我见到了这位略显稚气的90后（确切的说是92年出生的）。虽然看上去他和同龄的90后没什么区别，但是讲到技术和设计就像一个已经在互联网圈子里混了10来年的人。猛犸浏览器如今已经到了第4版。季逸超本人是今年6月份参加高考的，如今已经在上大学了。按照他的描述，前3个版本是高3期间完成开发的，第4个版本则是高考一完成第2天就投入到开发过程中去，4个月后于10月12日正式发布。他
说的一句话在我脑海里印象特别深刻——上课画草图构思，回到寝室开始写代码。由于他是从去年6月份开始第1代开发的，因此我想构思和代码或许就是他整个高
三的主要内容了吧。在谈到他的大学的时候，季逸超有些腼腆，说自己的大学不怎么知名，也没有向我透露具体的学校。但我想在进入高3的时候，他选择代码和设
计就应该已经知道了今天的结果吧。高考制度不允许他这样的偏题生通过正常考试进入名校，但是他如今却以不同的身份来到了车库咖啡，和这里的VC，创业者分
享自己的开发经历。我坐在他对面的短短20分钟，就有好几位行业人士过来向他探讨经验。另外这个少年Geek也还是一个很有态度的Geek。我问了他是否考虑接受投资或者出售自己的产品。他明确表示拒绝了一切投资，因为投资意味着盈利，而他不愿意自己的浏览器上出现任何广告。现在猛犸4浏览器有两个版本：免费试用版（刚刚推出）  收费版（1.99美元，平均每天有200左右的下载量）。感兴趣的朋友可以下载试用（仅支持iOS5）。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-12 16:23:44</pubDate>
</item>
<item>
<title>研究称Android是最不开放的开源移动平台</title>
<link>http://oss.org.cn/html/67/n-63467.html</link>
<text>市场研究公司VisionMobile受欧盟资助，根据开放式管理、包容性、透明度和源代码易于访问等量化和评估八大开源项目的开放程度。研究报告(需要输入电邮)称，Google的Android是最不开放的开源移动平台。
		八个项目从低到高的排名是Android（23%）、Qt（58%）、Symbian（58%，基于闭源前的管理模式）、MeeGo（61%）、Mozilla（65%）、WebKit（68%）、Linux（71%）和Eclipse（84%）。

VisionMobile的报告指出了Android管理模式中的多个重要问题：

缺乏清晰且公开的路线图；
Google控制着整个项目，外界参与很少；
开放式手机联盟的作用更像是橡皮图章，没有法人实体，成员之间缺乏沟通，举行会议的频率也不高；
Google对Android的控制是单方面的，Android参照准则缺乏正式文件和一致性。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-12 15:54:11</pubDate>
</item>
<item>
<title>Windows 8中展现的一些新突破</title>
<link>http://oss.org.cn/html/66/n-63466.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;微软称要通过 Windows 8 再造操作系统，嗯，今天的主角是 Windows 8&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 你一定接触过，无论是看过，还是安装过，无论你喜欢，还是不屑，都阻挡不了她的缓缓袭来。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天，我们来介绍一下 Windows 8 的精髓。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;关键词“兼容 PC 与平板”“引入 Metro UI”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 增加了对平板电脑的支持，同时引入 Windows Phone 中的 Metro UI，在使用中我们发现，很多的交互是为了平板而设计。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设计灵感来源&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;三个重要影响&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）现代设计 — 包豪斯（减少元素，以显现本质）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）国际主义平面设计风格 — 瑞士平面设计风格 （清晰，真实，美观）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）动态设计 — 电影艺术（动画“活”起来，激发用户情感）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;生活中，人们行色匆匆，我们更需要提供快速，简洁，直接，明确的设计。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 的设计灵感来源于生活中的各类导航，地铁站，机场等。人们即使在急于奔波的时候，也能一眼在这些导航中获得他们要的信息。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro UI 风格运用&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro UI 是 Windows 8 的设计主线，在对外发布的“开发者预览版”中，Metro UI 已经运用到了“锁屏界面” “开始菜单”“IE”“RSS”“选择文件”等界面中。预计之后从 Windows Store 中下载的应用均会使用 Metro UI 风格。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro Start&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1992年 Win95 系统中第一次出现了 start 菜单，它的基本目的是取代程序管理器，用于启动计算机任务。之后经历了一系列的改进，但仍然存在各种缺陷。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro Start 是屏幕是对 Windows 的 start 菜单、任务栏、通知和小工具改进的成果。这一次做出了如下尝试：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）最常使用区域扩大&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）Metro Start 支持自定义&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）操作空间变大&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro Start 设计小结&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Start 已经不仅仅是一个菜单了，它占据了整个屏幕，取代了以前的桌面+开始菜单，承载了更多的功能。所有的程序都在这里，用户在这里直接启动程序。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;同时它还有以下特点：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）动态信息：每个图块上的信息都是动态的，经过精心排版而被清晰呈现。显示的信息可以自定义，比如某个城市的天气预报或者某本杂志的内容。这样你可以在不启动应用的情况下获取一些关键信息。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）自定义：图块的位置可以随意拖动，可以将最常用的应用放在首屏。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）为触摸设计：每个图块的面积足够大，手指可以轻易的选中。每个图块是作为一个整体被点击，不会划分额外的点击区域。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（4）全局视图：在触摸板上，你可以将 Start 菜单像地图一样缩小放大，这有助于你快速选择应用。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（5）单击开启程序。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（6）图块有大小两种尺寸，可以自定义。选择哪种尺寸取决于应用是否有信息需要显示。小图块是不显示信息的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;搜索结果展现优化&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 7 开始菜单中的搜索，用户最常搜索的文件类型是：程序，文档，控制面板，运行命令。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 根据这些类型，提供了三种搜索结果常用文件类型分类：应用程序，设置和文件。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;将搜索区域放在屏幕最右边，内容和结果放在最左边。符合用户从左至右，从上至下的阅读习惯。 设置和搜索界面不在妨碍用户浏览类容。 并且在触摸设备上更易于用户右手操作。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;搜索设计小结&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）将搜索结果按用户使用方式分类。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）按照符合人体工程学的方式设计界面（从左至右， 从上至下）&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）沉寖式的搜索体验， 不用更换页面或弹出窗口， 一键更换搜素引擎和方式&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（4）图标大小和距离分布按照 Fitt’s Law 优化&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如何去设计一个 metro 风格的程序&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Metro 一个很重要的特点是沉浸式体验。每个应用的不再放在一个窗口里，没有了边框，而是铺满整个屏幕。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;以下四张图展现了一个 RSS 阅读器逐渐从传统 windows 风格过渡到 Metro 风格的过程。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;结合这个变化过程我们可以总结出一些 metro 风格的要点：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）以内容为主，方便阅读。在视觉中心呈现的都是内容，没有额外的干扰元素。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）去掉修饰，界面元素平板化，像素化。这种数字化的设计可以节省很大的存储空间。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）注重排版和布局。Metro 对于应用排版有统一的标准。这一点在阅读类应用中尤其明显。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（4）内容平铺在全局视图里，通过滑动或者缩放，你能看到其他的内容。取消了 tab 这样的切换控件。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（5）操作被隐藏，在需要的时候从边缘呼出，微软称之为‘边缘交互’。手指从屏幕底部边缘滑入时会产生相应的交互动作：底部是操作菜单，右侧是一组固定的操作，左侧是应用切换。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Skydrive 云存储&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在不同的设备上登陆同一账号，win8的云服务会自动更新用户的照片，邮件，日历，通讯录。Skydrive 通过浏览器或者 metro 风格的程序来获取最新的照片，文档等数据。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;用户可以选择禁用所有同步，也可以按设置类型禁用同步。可以同步的数据有三类：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）windows 设置；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）应用程序设置和数据；&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）应用程序和网站的登录凭据。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Win8中的云服务保持了信息在线同步，使得用户在不同设备上的使用体验能够无缝连接。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;协同工作：分享、搜索、选择器&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在 win8 中，两个应用可以协同工作去完成一个任务。微软开发人员定义了三种最基础的、最常用的协同工作方式：分享、搜索、选择器。你可以随时从右侧呼出的操作栏上 找到“分享”和“搜索”图标，非常容易调用。这使得信息分享变得更容易。通过右侧常用操作栏上的“分享”按钮，用户可以轻松的将当前应用的信息分享到其他 程序中。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;比如当你使用一个涂鸦应用完成一幅大作后，就可以通过“分享”按钮通过微博、邮件、flickr 等渠道发送给其他人看到。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;同样的，搜索时出了搜索本地内容之外，也可以直接搜索应用中的内容。在微博中发一张图片时。也可以直接从 flickr 相册中选取。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;基础功能改进&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;任务管理器&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 7 任务管理器中的现状是：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）用户最常使用的功能是：“应用程序”和“进程”tab。用户最常的操作是“结束应用”和“结束进程”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这两个 tab 的使用频率大致相同，这表明在“应用程序”页面中，有一些重要的细节缺失，导致用户要到“进程”tab 中去查找。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）用户主要想查看应用程序中，没有显示的后台或系统进程，并查看哪些进程占用了较多的 CPU 资源。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 任务管理器针对如上现状进行了优化：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）为结束进程的操作优化，&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;去掉 tab，进程间间距增大，将更多高级功能隐藏到“更多”中，视觉焦点更容易集中到“结束进程”上。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）突出信息可视化，用颜色等变化突出重要信息。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;资源管理器设计小结&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（1）简洁，简洁再简洁&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（2）为用户最常用操作优化&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（3）使用视觉设计突出重要信息&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（4）按照用户习惯将信息分类&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（5）为了让用户浏览更轻松优化&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（6）在基础界面极简的同时增前高级功能&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;（7）被一个设计改动都建立在用户数据基础上&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;结语&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows 8 的设计，如所见的围绕着内容为主，去修饰平面化，沉浸，动态，边缘交互的风格来设计。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;虽然在开发者预览版中，仅仅的对锁屏桌面，开始菜单，IE10，RSS，任务管理器，资源管理器等进行了大刀阔斧的改变。我们有理由相信，这些&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;都仅仅是一个过渡，伴随着 windows store 的开放，Metro 设计风格的应用会排山倒海的袭来。我们也应该去思考如何结合新系统，新趋势做出我们自己的产品。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-12 15:46:19</pubDate>
</item>
<item>
<title>惠普宣布保留webOS转型为开放源代码社区</title>
<link>http://oss.org.cn/html/78/n-63378.html</link>
<text>
					

					

					

					

		
					

					
					

						

　　新浪科技讯 12月10日凌晨消息，惠普(微博)周五宣布保留webOS业务，将把其webOS软件推向开放源代码社区。惠普称将按照开放源代码协议，将webOS的源代码向程序员公开。

　　惠普希望通过将创新性的webOS平台与开放源代码社区的开发能力进行结合，来显著改善下一代设备的各种应用与web服务。

　　webOS的命运最终落定：“既不整体出售，也不授权给第三方厂商”。惠普CEO惠特曼表示，将通过开源重新激发webOS的活力。

　　惠普表示，webOS开源之后，任何开发者都可以定制属于自己的webOS系统，开源webOS的目标是加速webOS平台的发展，惠普将会参
与到开源后的webOS社区中，成为该开源项目的积极参与者和投资者，并会对该项目进行一定的管理以防止该项目分裂；webOS软件将会得到彻底的开源。
惠普还表示，将会在近期把webOS的SDK Enyo也交给开源社区。

　　惠普于美国太平洋时间12月9日上午10:30(北京时间今日凌晨2:30)召开会议，公布了webOS的最终处理决定。

　　惠普是在收购Palm后得到webOS的。惠普在今年稍早时候曾表示将终止其webOS业务。

　　在TouchPad发布后49天，惠普前CEO李艾科(Leo 
Apotheker)就决定将惠普分拆，并放弃了webOS设备。自那以后，已经过去了4个月时间。惠普新CEO梅格-惠特曼(Meg 
Whitman)上台后已经采取了各项措施，挽回李艾科给公司带来的损失，并且取消了PC业务的分拆计划。

　　但此前惠特曼一直未对webOS的未来发展做出最后决定。惠特曼一个月前曾经表示，需要时间来做出“最好的决定，而不是最快的决定”。

　　有分析人士认为，惠普此举意味着其在WebOS项目的投入将会减少。而交给开源社区的决定一方面能保证webOS得到更新，同时也意味着很可能今后再也没有原生搭载webOS系统的设备问世，当然这并不排除亚马逊(微博)或者Facebook会采用吸收webOS的部分代码，然后打造自己的操作系统。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-12-10 09:32:37</pubDate>
</item>
<item>
<title>Ubuntu 11.10 Oneiric Unity 开启 Compiz Desktop特效</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63334</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-09 08:16:12</pubDate>
</item>
<item>
<title>WebApp将打破苹果封闭商业模式</title>
<link>http://oss.org.cn/html/33/n-63333.html</link>
<text>由终端、操作系统、软件商店共同组成的封闭商业模式跟苹果全球排名第一的市值一样坚挺，然而建立在HTML5标准之上的基于浏览器的网络应用程序（WebApp），很有可能成为苹果AppStore的掘墓人。
基于浏览器开发并运行应用程序，是Google在设计Chrome时提出的概念，这是Google推广云计算的其中一步。Facebook也正在秘
密开发一项名为“斯巴达”（Project Spartan)的项目，该项目将基于下一代浏览器标准HTML5开发WebApp应用。
传统App的缺陷
对用户来说，传统App体验有明显缺陷。每个用户都会安装数十个App，但最常用的通常不超过5个。而且传统App的安装与更新必须需要通过应用程序商店，很多用户对此不胜其扰，而且非常耗费流量，而互联网软件是以更新频繁为特点的。
对开发者来说，App客户端跨平台成本高，暂且不论现在的终端平台五花八门，未来移动互联网很可能出现Google、Apple、
Microsoft三足鼎立。开发者不得不需要针对上述所有的系统开发不同的版本。而开发不同平台和机型上的应用，占据的资金与精力投入，与开发一款新应
用几乎相同。
况且，AppStore新版本提交苹果进行审核至少需要两个星期，而用户下载使用之后的回馈，则至少需要一个月才能到开发者手里，这对于崇尚快速迭代的互联网产品来说，无疑是一个巨大打击。
WebApp相对于传统App的优势
而WebApp不仅弥补了传统App的缺陷，并且自身优势明显：
随着移动设备在硬件性能上的提升和浏览器效率的提高，基于浏览器开发的应用，其运行效率和展现效果，将很快追上基于操作系统的客户端App。更重要
的是，建立在HTML5基础上的WebApp弥补传统App几乎所有的缺点，有望让移动设备的应用回到浏览器的平台之上。如基于浏览器的应用能够实现自动
更新；HTML5的通用性使得WebApp可以在所有支持HTML5的浏览器上运行，形成巨大的平台优势。一旦苹果的APPStore中的应用不再具有数
量和品质上的优势，苹果在移动设备上目前压倒性的优势也将逐渐失去。
另外，HTML5自身大大加强了对图像显示、视频播放的支撑能力，同时还提供了基于Javascript的2D绘图功能和基于WebGL的3D绘图功能，这意味着HTML5可以实现良好的网页游戏功能，而不需要任何插件或者扩展的帮助。
随着下一代协议标准HTML5的推出与普及，基于浏览器的WebApp有望在未来取代客户端App，成为移动互联网主流的应用模式。
当然组建WebApp模式的门槛也不低，由于HTML5还没有一个统一的标准，拥有浏览器内核才能为浏览器所支撑的应用提供最强的表现力和体验，目前拥有浏览器内核技术的厂商不多，国外的Chrome、Safari、Firefox、IE和国内的UC浏览器。
本文由Tech2IPO作者ertingke原创，如果您对Tech2IPO其他内容也感兴趣，请通过RSS订阅我们，或者在微博上关注我们的最新动态。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-12-09 21:55:37</pubDate>
</item>
<item>
<title>RIM发布操作系统黑莓BlackBerry 10 并承诺开源</title>
<link>http://oss.org.cn/html/32/n-63332.html</link>
<text>&amp;nbsp; &amp;nbsp; &amp;nbsp; 北京时间12月7日，RIM 在新加坡举行 BlackBerry 亚洲开发者大会（BlackBerry DevCon Asia），在会上 RIM（Research in Motion）发布最新一代操作系统 BlackBerry 10。BlackBerry  10被认为是黑莓智能手机的希望。此前该系统被命名为BBX，后因涉嫌商标侵权，RIM被判禁止使用Basis的BBX商标。RIM公布BlackBerry 10平台　　和预期一样，新系统支持平板、智能手机、汽车嵌入式设备。除此之外，RIM 还表示会全面拥抱下一代 HTML5 标准，开放源码。RIM 声称，这将与其它竞争者差异化。　　RIM 网页技术副总裁斯泰科思（Georage Staikos）在会上定义了 BlackBerry 10：“这是单一的、整合的下一代操作系统。”凡是在 BlackBerry 10 操作系统开发的程序，可以支持 BlackBerry 6、BlackBerry 7 智能手机、PlayBook 平板及 BlackBerry 未来设备。　　斯泰科思还说，BlackBerry 10 将包含三大部分：BlackBerry 10 操作系统、BlackBerry 相关服务及全新的开发环境。它会涵盖 HTML 5 及原生性应用程序开发环境，支持双重开发环境，前一环境的优势是可以建立跨设备大众应用程序开发平台，后一环境则可以利用设备性能，开发出强大的程序。　　斯泰科思认为，现在许多开发者青睐 HTML5，它能让开发者不牺牲质量，在不同设备和平台上开发。另外，RIM 承诺支持开放标准、公开源代码。斯泰科思说：“我们会拥抱开放标准，开放源码，开放社区。”　　在会上，RIM 高管还介绍了多种 NFC（近场通信技术）应用模式、BlackBerry 10 全新的原生应用程序接口开发工具 Cascades，这一工具能让开发者在程序中加入 3D 等互动接口。&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 同时在会上，RIM还宣布迄今为止已售超过1.65亿台黑莓智能手机；超过5000万BBM用户。App  World日下载量超过500万，并在2011年6月应用程序总下载量破10亿大关。黑莓保时捷手机P‘9981在本次开发者大会的展览区，RIM还安排了自己的黑莓手机和配件的展示，可以看到最新的白色版9900以及保时捷定制的奢华黑莓手机P9981。此外RIM的开发者合作伙伴如Gameloft展示了刚刚为PlayBook推出的现代战争2、真实足球2011和都市赛车6。&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 此外，由于美国联邦法院禁止RIM在DevCon Asia大会上使用BBX系统名称，RIM在展示该系统时将名称改为黑莓(微博)10(BlackBerry 10)。由于涉嫌商标侵权，美国新墨西哥州阿尔伯克基市一家联邦法院已颁布临时禁令，禁止RIM使用Basis的BBX商标。BBX是RIM全新发布的 一款融合手机和平板电脑平台的操作系统，智能机在使用该系统后将具备更先进的多任务处理功能和媒体支持。首款采用BBX系统的设备将在明年3月发布。　　RIM在新加坡举行的DevCon Asia开发者大会上将其系统名称改为黑莓10，该做法类似于苹果在QuickTime、Final Cut Pro软件上的多版本号命名方式。不过RIM此举迫于诉讼压力，未来需要达成和解或彻底放弃这一名称。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-09 14:47:26</pubDate>
</item>
<item>
<title>Apache Geronimo 3通过Java EE 6 Full Profile认证</title>
<link>http://oss.org.cn/html/31/n-63331.html</link>
<text>Apache Geronimo
  3.0-beta-1现在通过了完整的Java EE 6认证。作为通过了Java EE 6.0  Full Profile与Web 
Profile认证的开源服务器，Geronimo也加入了GlassFish 3的行列。JBoss  Application Server 
7到目前“只”通过了Java EE 6.0的Web Profile认证。同时，Geronimo  3也把内核更新为基于Apache Karaf OSGi运行时的OSGi架构，并且支持Aries编程模型。
Geronimo 3提供了6种发行包。第一种发行包是Geronimo With Tomcat 7 and Axis2，它通过了Java  
EE 6 Full Profile认证。第二种发行包是Geronimo With Tomcat 7，它通过了Java EE 6 Web  
Profile认证。其余的发行包都没有通过以上认证。它们分别是：Geronimo with Jetty 8  and CXF、Geronimo 
with Jetty 8、minimal Geronimo (Little-G) with Jetty  8以及minimal Geronimo
 (Little-G) with Tomcat 7。
Here are the Java EE 6 technologies that Geronimo 3 fully supports. 
For  more details about each technology, including download links to the
 each  specification, please visit the Java EE 6 Technologies page.
下面是Geronimo 3完整支持的Java EE 6技术。如果希望知道各种技术的更多细节（包括各份规范的下载链接），请访问Java EE 6技术页面。

    Web Service技术
    
        Java API for RESTful Web Services (JAX-RS) 1.1 (JSR 311)
        Implementing Enterprise Web Services 1.3 (JSR 109)
        Java API for XML-Based Web Services (JAX-WS) 2.2 (JSR 224)
        Java Architecture for XML Binding (JAXB) 2.2 (JSR 222)
        Web Services Metadata for the Java Platform (JSR 181)
        Java API for XML-Based RPC (JAX-RPC) 1.1 (JSR 101)
        Java APIs for XML Messaging 1.3 (JSR 67)
        Java API for XML Registries (JAXR) 1.0 (JSR 93)
    
    
    Web应用技术
    
        Java Servlet 3.0 (JSR 315)
        JavaServer Faces 2.0 (JSR 314)
        JavaServer Pages 2.2/Expression Language 2.2 (JSR 245)
        Standard Tag Library for JavaServer Pages (JSTL) 1.2 (JSR 52)
        Debugging Support for Other Languages 1.0 (JSR 45)
    
    
    企业应用技术
    
        Contexts and Dependency Injection for Java (Web Beans 1.0) (JSR 299)
        Dependency Injection for Java 1.0 (JSR 330)
        Bean Validation 1.0 (JSR 303)
        Enterprise JavaBeans 3.1 (includes Interceptors 1.1) (JSR 318)
        Java EE Connector Architecture 1.6 (JSR 322)
        Java Persistence 2.0 (JSR 317)
        Common Annotations for the Java Platform 1.1 (JSR 250)
        Java Message Service API 1.1 (JSR 914)
        Java Transaction API (JTA) 1.1 (JSR 907)
        JavaMail 1.4 (JSR 919)
    
    
    管理与安全技术
    
        Java Authentication Service Provider Interface for Containers (JSR 196)
        Java Authorization Contract for Containers 1.3 (JSR 115)
        Java EE Application Deployment 1.2 (JSR 88)
        J2EE Management 1.1 (JSR 77)
    
    
    Java SE中与Java EE有关的规范
    
        Java API for XML Processing (JAXP) 1.3 (JSR 206)
        Java Database Connectivity 4.0 (JSR 221)
        Java Management Extensions (JMX) 2.0 (JSR 255)
        JavaBeans Activation Framework (JAF) 1.1 (JSR 925)
        Streaming API for XML (StAX) 1.0 (JSR 173)
    
    

通过Java EE 6 Full Profile认证的其他实现有：

    Oracle GlassFish Server 3.x
    IBM WebSphere Application Server 8.0
    IBM WebSphere Application Server社区版3.0
    TMAX JEUS 7
    由Windows Azure技术支持的Fujitsu Interstage Application Server

Java EE 6 Web Profile的其他实现有：

    Oracle GlassFish Server 3.x
    JBoss Application Server 7
    Caucho Resin 4.0.17
    Apache TomEE 1.0.0-beta-1

你可以访问Java EE兼容性页面查看最新的Java EE的认证结果。
Geronimo  
3也把其内核更新为基于OSGi技术。它支持OSGi核心规范4.3以及OSGi企业级规范4.2的一部分（包括Configuration  
Admin Service  Specification、Blueprint Container specification、Web 
Applications  specification、JNDI Services specification、JPA Service 
specification以及JMX  Management Model specification）。Geronimo使用了Apache  
Karaf——它是基于OSGi的运行时，提供了一个轻量的容器，不同的组件和应用可以部署于其上。Geronimo也支持Apache  
Aries——该项目包括了一组可插拔Java组件，使企业级OSGi应用编程模型成为可能。
你可以丛这里下载Geronimo 3的源代码和针对Windows和Unix（包括Linux、Mac OS X）等操作系统的二进制文件。你将需要Java SE 1.6.0＋或者更高版本。如需更多信息，请阅读Geronimo用户指南。你也可以订阅Geronimo邮件列表。
查看英文原文：Apache Geronimo 3 is Java EE 6 Full Profile Certified
   	
   	
   		
   				
   				
   					译者
   					
金明

   				
   				
   				是ThoughtWorks咨询师，SCJP，系统分析师。关注敏捷方法学，特别是敏捷实施和项目管理的实践。 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
   		</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-09 14:40:37</pubDate>
</item>
<item>
<title>JavaScript 6 看上去很美</title>
<link>http://oss.org.cn/html/30/n-63330.html</link>
<text>　　本文是从 ECMAScript 6 looks promising 这篇文章翻译而来。
　　JavaScript 6 让我很兴奋，这是我看了 David Herman 在 YUIConf 2011 大会上的演讲后
的反应。我非常希望这些语言特征能尽快的在 V8 引擎上实现，这样我就可以在 node.js 里使用它们了。这些新增加的语言特征对于一个使用 
JavaScript 的程序员来说，解决了很多以前使用起来很不方便的东西。尽管这个标准中 2013 年才能制定完成(大会上 David 
这样说的)，谷歌浏览器和火狐浏览器很有可能会提前实现这些特征。
　　从我个人来说，下面的这些特征我很感兴趣：
　　let 关键字
　　let 关键字能产生一个代码块内的变量范围。因为 var 有一个函数式的范围概念，这有时候容易产生出不注意的错误。以后，我们完全使用 let&amp;nbsp;来代替var，从而避免这样的错误。
　　缺省参数

function foo (bar=&quot;baz&quot;) { console.log (bar); }

　　有了缺省参数，省去了很多折腾的代码。
　　非严格的解构方式
　　很像 Python 语言，解构时不需要严格匹配。

let [x,y] = [3,4,5];   // x=3, y = 4

　　多行模式的字符串表达
　　你可以简单的使用 ` (反点号)操作符来声明一个多行字符串。

var htmlString = `Say hello tomulti-linestrings!`

　　模板化
　　你可以通过这种方式把 JavaScript 变量嵌入到字符串中：

var firstName = &quot;Jack&quot;; var message = `Hello ${firstName}!`; // &quot;Hello Jack!&quot;

　　List 复合操作
　　同样，这也是一个非常 Python 的结构：

let even = [ x for (x in values ([1,2,3,4,5,6])) if (x %2 === 0) ];

　　使用 values () 能够让 x 来表示 List 里的成员的值，而不是成员变量。你也可以使用新的 for of 语法来实现这样的功能：

let even = [ x for (x of [1,2,3,4,5,6]) if (x%2 === 0) ];

　　除此之外， map, filter, reduce 等等概念也将会成为新标准的内容之一 (有一些功能已经在谷歌浏览器和火狐浏览器里被实现，IE9也有不少这方面的改进)。
　　更新：
　　发现这个帖子被顶到了 HN 的首页，我必须要加上遗漏的新标准中的模块系统操作功能。演讲中的例子：

import { $ } from &quot;jquery.js&quot; import { map, each } from &quot;underscore.js&quot;

　　还是一样，全是 Python 的套路！被引用的 JavaScript 文件会代码执行前加载的你的浏览器中。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-09 14:36:23</pubDate>
</item>
<item>
<title>火狐浏览器遭遇市场份额和资金困境</title>
<link>http://oss.org.cn/html/29/n-63329.html</link>
<text>导语：英国《每日电讯报》网络版今天刊文称，火狐浏览器的市场份额正在下降，而开发商Mozilla的资金状况也面临不确定性，因此火狐浏览器未来的前景已成为业内关注的焦点。

　　以下为文章全文：

　　市场份额下降

　　市场研究公司StatCounter的数据显示，目前谷歌Chrome浏览器的市场份额已经超过火狐，达到25.7%。Chrome目前仅落后于微软(微博)IE，后者的市场份额为40.6%。如果这一发展趋势持续，那么谷歌和微软在浏览器市场必将发生激烈竞争。不过从目前来看，火狐浏览器已受到Chrome的较大影响。

　　根据StatCounter的数据，火狐目前在全球市场的份额为25.2%。尽管这一数据并不一定准确，但多家研究机构均认为，Chrome的
上升势头很快，而火狐在与IE和Chrome竞争中前景不明。与IE和Chrome类似，火狐同样提供免费下载。该浏览器的不同点在于基于开源规则，且不
以盈利为目的。

　　谷歌于2008年下半年推出了Chrome浏览器，而当时火狐的唯一竞争对手是IE。在随后的一年中，市场竞争形势没有发生太大变化。火狐的市场份额于2009年11月达到历史最高点，超过32%。然而自那时以来，火狐的市场份额逐渐下降，而下降还呈现加速趋势。

　　导致火狐滑坡的背后力量已经非常明显。在火狐浏览器达到顶峰时，谷歌开始大力推广Chrome，当时Chrome的用户主要是一些早期的爱好者
和开发者。谷歌开始通过讨论版和电视广告来宣传Chrome的速度优势。而更重要的是，谷歌开始使用强大的搜索引擎来推动用户下载Chrome浏览器并使
用。

　　资金问题浮现

　　谷歌还从另一个方面影响着火狐的开发。去年，在Mozilla基金会1.23亿美元的营收中，有84%来自谷歌。谷歌向Mozilla支付费
用，从而使火狐的用户默认使用谷歌搜索引擎。这反过来推动了谷歌广告营收的上升，使谷歌有资金来开发Chrome、Android和无人驾驶汽车等非核心
项目。

　　谷歌与Mozilla之间的合作协议于今年11月到期。然而本周有报道称，双方没有就续约达成一致，这将导致Mozilla失去最主要的收入来源。业内人士普遍认为，如果火狐的开发陷入停滞，那么大部分火狐用户将会转向Chrome，而不是IE。

　　不过Mozilla一名发言人表示：“我们与谷歌之间的搜索合作对两家公司来说仍是积极的。我们有信心这一合作关系将会保持稳定，并在可预见的未来成为我们逐渐增长的营收来源。”

　　然而，Mozilla近期制作了一条网络视频广告，鼓励用户向该基金会捐款。广告称：“一小群人致力于使网络成为用于通讯、协作和社交的安全、
开放、易获取的工具。”此外，Mozilla基金会的政治活动也越来越多。例如，该基金会近期发起行动，反对美国的一项反盗版法，并支持一些新闻项目。

　　开源社区仍看好

　　对于开源运动的支持者来说，火狐是最知名的符合开源软件理念的产品。而考虑到Mozilla基金会目前开展的工作，该基金会未来并不一定走向衰落。

　　开源运动专家格林·穆迪(Glyn Moody)表示：“我认为这被夸大了。谷歌不会撤资，因为谷歌希望尽一切可能推广搜索服务。”他同时指出，谷歌目前正面临竞争性方面的调查，因此谷歌不太可能打击此前的合作伙伴，因为这将在反垄断调查中给谷歌带来麻烦。

　　穆迪还表示，在技术上火狐并不比Chrome和最新版IE要差。由于面临Mozilla和谷歌的竞争压力，微软已经大幅改进了IE的性能。他表
示：“从技术上来看，火狐很好。由于从零开始，谷歌拥有优势。他们吸取了Mozilla的一些经验和教训。谷歌从开源社区处获得了很多，但并没有给予同样
多的回报。”

　　除市场份额和资金问题之外，Mozilla的另一个问题也受到关注。外界普遍认为，互联网的未来在于智能手机、平板电脑，以及未来新的移动计算设备。然而，火狐的开发仅仅专注于PC平台。

　　穆迪表示：“如果说有一些领域是我担心的，那么就是在移动业务方面。”Mozilla已经推出了Android版火狐浏览器。穆迪认为，这款浏
览器不错，但还称不上出色。他表示：“Mozilla的关注重点应当更多地放在移动业务上。这是印度和中国用户将会使用的产品，那里的许多用户没有PC，
他们将会在智能手机上做一切事情。”(维金)</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-12-09 09:25:24</pubDate>
</item>
<item>
<title>Linux Deepin 11.12 Beta 版本发布，离成功还远吗？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63328</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 15:53:12</pubDate>
</item>
<item>
<title>简述 Linux 平台上浏览器的 GPU 加速</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63284</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-08 14:45:12</pubDate>
</item>
<item>
<title>使用 PEAR Benchmark 测试PHP程序性能</title>
<link>http://oss.org.cn/html/83/n-63283.html</link>
<text>
			使用PEAR Benchmark看PHPWind与Discuz截取字符函数substrs与cutstr性能比较PHP性能优化系列第四期实战篇，如何使用PEAR Benchmark类工具获取函数执行性能，这里以PHPWind与Discuz!两个社区论坛的截取字符函数substrs与cutstr为例，分析两个函数的执行性能情况以掌握使用Benchmark_Iterate类工具的方法。目录 一，什么是PEAR与Benchmark 二，性能比较代码准备与调试 三，性能比较测试结果 四，性能比较测试总结 五，附性能比较源代码下载 一，什么是PEAR与Benchmark 请参考PHP性能优化系列 第二期 PHP性能优化工具篇Benchmark类调试执行时间 第一期 PHP性能优化准备篇图解PEAR安装 二，性能比较代码准备与调试 测试环境说明 操作系统：Windows xp Service Pack 3 PHP版本：PHP Version 5.2.11 Apache版本：Apache 2.0 Handler 第一步，下载phpwind与discuz!程序源代码 1，下载 phpwind v7.5sp3 论坛版 安装包:简体 GBK 2，下载 Discuz! 7.2_FULL（含UCenter） 简体GBK 第二步，分别获取两个程序的截取字符函数substrs()和cutstr()，其中PHPWind截取字符函数substrs()由两个函数组成，分别是substrs与utf8_trim函数。 复制代码 代码如下:function substrs($content,$length,$add='Y'){ if (strlen($content)&amp;gt;$length) { if ($GLOBALS['db_charset']!='utf-8') { $retstr = ''; for ($i=0;$i&amp;lt;$length-2;$i++) { $retstr .= ord($content[$i]) &amp;gt; 127 ? $content[$i].$content[++$i] : $content[$i]; } return $retstr.($add=='Y' ? ' ..' : ''); } return utf8_trim(substr($content,0,$length)).($add=='Y' ? ' ..' : ''); } return $content; } function utf8_trim($str) { $hex = ''; $len = strlen($str)-1; for ($i=$len;$i&amp;gt;=0;$i-=1) { $ch = ord($str[$i]); $hex .= &quot; $ch&quot;; if (($ch &amp;amp; 128)==0 || ($ch &amp;amp; 192)==192) { return substr($str,0,$i); } } return $str.$hex; } function cutstr($string, $length, $dot = ' ...') { global $charset; if(strlen($string) &amp;lt;= $length) { return $string; } $string = str_replace(array('&amp;amp;', '&quot;', '&amp;lt;', '&amp;gt;'), array('&amp;amp;', '&quot;', '&amp;lt;', '&amp;gt;'), $string); $strcut = ''; if(strtolower($charset) == 'utf-8') { $n = $tn = $noc = 0; while($n &amp;lt; strlen($string)) { $t = ord($string[$n]); if($t == 9 || $t == 10 || (32 &amp;lt;= $t &amp;amp;&amp;amp; $t &amp;lt;= 126)) { $tn = 1; $n++; $noc++; } elseif(194 &amp;lt;= $t &amp;amp;&amp;amp; $t &amp;lt;= 223) { $tn = 2; $n += 2; $noc += 2; } elseif(224 &amp;lt;= $t &amp;amp;&amp;amp; $t &amp;lt;= 239) { $tn = 3; $n += 3; $noc += 2; } elseif(240 &amp;lt;= $t &amp;amp;&amp;amp; $t &amp;lt;= 247) { $tn = 4; $n += 4; $noc += 2; } elseif(248 &amp;lt;= $t &amp;amp;&amp;amp; $t &amp;lt;= 251) { $tn = 5; $n += 5; $noc += 2; } elseif($t == 252 || $t == 253) { $tn = 6; $n += 6; $noc += 2; } else { $n++; } if($noc &amp;gt;= $length) { break; } } if($noc &amp;gt; $length) { $n -= $tn; } $strcut = substr($string, 0, $n); } else { for($i = 0; $i &amp;lt; $length; $i++) { $strcut .= ord($string[$i]) &amp;gt; 127 ? $string[$i].$string[++$i] : $string[$i]; } } $strcut = str_replace(array('&amp;amp;', '&quot;', '&amp;lt;', '&amp;gt;'), array('&amp;amp;', '&quot;', '&amp;lt;', '&amp;gt;'), $strcut); return $strcut.$dot; } 第三步，编写使用PEAR Benchmark_Iterate类调试的代码 复制代码 代码如下:&amp;lt;?php require_once &quot;Benchmark/Iterate.php&quot;; $bench = new Benchmark_Iterate; $charset = $GLOBALS['db_charset'] = 'gbk';//utf-8 $content = &quot;今年春晚，我特地关注了赵本山的新小品《捐助》，这篇小品对弱势群体的不尊重并无改变，小品讲的是赵本山与其弟子扮演两个捐助者...&quot;; /*phpwind*/ $bench-&amp;gt;run(50,&quot;substrs&quot;,$content,30); /*discuz*/ //$bench-&amp;gt;run(50,&quot;cutstr&quot;,$content,30); $result = $bench-&amp;gt;get(); ?&amp;gt; 分别切换substrs和cutstr两个函数并且调用50次获取两个函数执行的平均时间。 三，性能比较测试结果1，PHPWind程序substrs函数当截取字符编码为GBK的情况图解：PHPWind程序substrs函数截取GBK编码的字符平均时间在0.0014s-0.0015s之间，纵坐标表示执行的时间，横坐标表示执行的次数，图表中mean表示平均执行时间，注s表示秒2，Discuz!程序cutstr函数当截取字符编码为GBK的情况&amp;nbsp;图解：Discuz!程序cutstr函数截取GBK编码的字符平均时间在0.0016s-0.0018s之间3，PHPWind程序substrs函数当截取字符编码为UTF-8的情况图解：PHPWind程序substrs函数截取UTF-8编码的字符平均时间在0.001s-0.0012s之间4，Discuz!程序cutstr函数当截取字符编码为UTF-8的情况图解：Discuz!程序cutstr函数截取UTF-8编码的字符平均时间在0.0044s-0.0052s之间四，性能比较测试总结如上使用PEAR的Benchmark_Iterate类比较了两个截取字符函数的执行性能，在实际的代码开发过程中，为了保证代码的效率与性能，我们可以采取同样的方法来分析函数的执行性能或问题，这个非常有用！本文通过比较PHPWind与Discuz两个社区论坛产品的截取字符函数substrs与cutstr的执行性能情况为例，谈谈PEAR Benchmark_Iterate类在实际开发中的应用，请继续关注下期的PHP性能优化系列。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 23:21:08</pubDate>
</item>
<item>
<title>开源Rexsee打造百万移动开发者基础平台</title>
<link>http://oss.org.cn/html/82/n-63282.html</link>
<text>　　开源仅一个月的Android应用开发平台Rexsee在其社区已公布了来自开发者超过6000款应用。国内各个应用市场，包括几大互联网应用收录平台也能看到基于Rexsee实现的应用陆续上线发布。　　是怎样的魅力让这个名不见经传的产品在短时间内受到了开发者、应用市场、移动广告联盟，甚至终端厂商以及最终用户的关注？带着疑问，笔者与Rexsee（www.rexsee.com）取得联系并了解到如下信息。　　什么原因让Rexsee在短时间内实现6000款应用？　
　毋庸置疑，开源是最大的因素。恒拓开源的CTO宫文学也在微博中发表这样的感叹。在当前的互联网浪潮中，一款优秀的移动应用开发平台必然会受到大量的关
注。Rexsee只是在恰当的时机，以开放的姿态让开发者能够快速布局移动互联网，基于平台自身先进的技术理念，以及广泛的开发者基础，同时提供详细的扩
展API与全部源码，应用的实现也就顺理成章了。　　仅仅只是开源肯定远远不够，真正能够提供应用的开发者毕竟还是少数。但为何基于Rexsee平台却能有如此不一样的效果？　　很大的原因在于Rexsee平台自身。Rexsee支持开发者使用HTML、CSS和Javascript开发移动应用，无须了解原生应用开发语言。技术门槛的降低，以及大量Web开发人员基础是我们最大的资本。　
　同时，平台以Webkit为内核，强化了HTML5在移动终端的高度交互；扩展Android超过1500个API，利用JS调用实现终端功能；标准化
的Web开发模式，完全兼容JQuery等Javascript工具包；本地应用与云端应用的不同形态，可以完全脱离网络，也可进一步实现移动云应用。　　大量的Web开发人员可以基于Rexsee实现移动应用，同时也有了这么多的应用，那在应用的推广和运营方面是怎样的计划？　　Rexsee最大的价值是平台，这也是我们的重点所在。所以，我们选择与广大的应用市场、移动广告联盟、互联网应用收录平台建立合作，共同为开发者创造收益，而不是自己去运营一个市场，这不是我们的强项，也不是我们想做的事。　　到目前为止，如上提到领域的几乎全部企业都与我们有了不同层次的接触，也已经陆续签署合作协议并展开执行。甚至还有运营商、终端厂商和我们在沟通。最终的合作不仅仅会停留在应用上，还会上升到整个平台级的合作。　　就合作的具体内容是否可以加以介绍？　　简单说来，我们可以为各个合作方提供大量的优势应用，在平台和应用中加入合作方所提供的SDK，同时也为开发者建立起更多的收益来源以及应用发布和运营推广的绿色通道。　　移动Web开发领域其实也有很多别的开发框架或平台，对比于这些产品，Rexsee是如何看待的？　
　虽然在移动Web开发的市场宣传上看来，几乎都是“基于标准化Web开发模式实现移动应用”，但Rexsee还是有很明显的本质不同。我们很少去比较，
因为就现阶段而言，各个产品都还在发展完善阶段。而且最关键的是，Web 
App这个市场还需更多人的认可和共同推进，参与者都是伙伴。只有当用户认可并切身体验了，才能有进一步的发展空间。　　回顾今天的交流，其实发现Rexsee所做的所有事都是围绕着开发者这个群体，那对此是否有预期？　　Rexsee平台最根本的价值体现都在广大的开发者群体，这也是Rexsee在10月底毅然决定开源的原因。无论是原生应用的开发者，还是传统的Web开发人员，开源Rexsee都可以提供有价值的帮助。　　环视整个移动互联网，即便目前最火热的苹果AppStore，其注册的开发人员也不过4.5万，如何与全球几百万的Web开发人员相提并论？如果Rexsee能够和众多合作伙伴一起，打造百万级的移动应用开发者基础，那相信整个移动互联网将会有更大的爆发性发展。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 17:35:41</pubDate>
</item>
<item>
<title>中国通用软件的困境及其反思</title>
<link>http://oss.org.cn/html/81/n-63281.html</link>
<text>
			&amp;nbsp;&amp;nbsp;
一般而言，所谓“通用软件”主要是指个人计算机的桌面软件，比如，桌面操作系统与通用办公软件，以及一些常用的软件工具集。为什么说，我国的通用软件陷入了困境？这究竟是什么原因造成的？

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
回想以往这十年，在发展软件产业上，起初我们也是雄心勃勃，想大干一场。在这期间，中科红旗、红旗2000，共创软件、无锡永中、中标软和新华科技等通用软件企业在发展“国产软件”的口号下相继成立开业。但是，十年过去，共创软件、无锡永中和新华科技都先后倒下了。12月7日，在《中国产经新闻报》上又捅出了一则大新闻，新闻的副标题是“红旗”到底还能打多久？其核心内容是：红旗2000的死期（即断气）很快将要来临。......国内通用软件业一片萧条，乌烟瘴气，很让人泄气。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
放眼国外，这十年来，全球自由软件阵营形成一种“每年升级两次”的良性发展节奏，一浪高过一浪地不断向前挺进，一派欣欣向荣的景象，局面大好，不是小好。国内外对比，泾渭分明。这充分说明，闭门发展“国产软件”的路线（或思路）完全错了。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
所幸的是，定于12月31日正式发布的深度Linux 11.12版本里面就含有我们所需要的通用软件包，而且都是世界一流的最新款式软件。这款软件包花费了国家多少钱财？大家都知道，深度Linux项目，国家发改委和财政部没有任何资助计划，几个深度“小毛头”自己就干起来了。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
大家还记得，在去年夏天，冒名“国产软件”的“假冒”Linux产品进行垂死前的最后挣扎，手脚乱动，今年都断气不动了。这是活该！这些年来，国家投入通用软件开发项目不少钱，全给他们这帮蛀虫糟蹋了，到如今都难过国家的“验收关”。这是明摆着的事情，不必躲躲闪闪，不好意思。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
在我们国内，通用软件也不“景气”，全是软件盗版闹得吗？非也。事情全在人为也。......在
此，让我说句很不合“时宜”的话，想当年，在苏联卫国战争期间，为了保卫首都莫斯科，年轻的红军战士，在红场的大风雪中，接受检阅之后，直接开赴前线，与
德寇进行决战。那种场景，最激动我的心。要是有了这种爱国的拼命精神，还怕软件业干不出成绩？可是现在，有的年轻人整日迷恋网吧游戏，神魂颠倒，干活走
神，走路摇摆。面对这帮”小毛头“，我们还有希望吗？令人担忧也。我们的教育系统是干什么的？

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
说句实话，软件业最需要传新精神，是充满活力的产业。这十年来，国内软件业的氛围都被这帮蛀虫搞坏了。我想带领一帮Linux“小毛头”逃离这种困境，投奔其他科学研究领域，因为，国内通用软件业的氛围已经腐败、老朽。在国际上，人工智能（AI）这门计算机科学（很老的分支），至今仍然创新不断，很有活力。深圳超算中心的启用，明确无误地暗示着我们，新一轮软件创新的浪潮就要来临。现在，让我们与过去说再见吧！勇敢地行动起来，去迎接我国软件业的黎明！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 15:48:17</pubDate>
</item>
<item>
<title>袁萌：深度Linux是Ubuntu大树上的一支嫩芽</title>
<link>http://oss.org.cn/html/80/n-63280.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp; 实际上，Ubuntu大树上已经有了44个小树叉，有的树叉已经根深叶茂，比如，Mint发行版；有的树叉还很幼小嫩弱，比如，Deepin中文发行版。Linux Deepin 截图&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
中文仿佛是一堵“大墙”，好比是中西文化的分界线。中西文化的“融合”，源远流长。Ubuntu愿做“全人类”的Linux，至今已经有8个年头，但是，遇上了中文化的这堵“墙”。回顾以往，有谁在为Ubuntu的“中文化”而操劳？严格地说，以往没有。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
大约在2010年年初，刘闻欢前往青岛会见冷罡华，两人决定联手推进这件事情。他们计划将Ubuntu真正“中文化”，引进国内。于是，2010年12月31日，深度Linux 10.12版本问世。今年12月31日，他们将正式推出深度Linux 11.12新版本。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
两年来，围绕深度Linux形成了一个核心开发团队，活动中心在湖北省武汉市。由此，我们形成一个“概念”，Ubuntu发行版的中文化团队在中国的武汉。这就是为什么说深度Linux是Ubuntu大树在中国土地上萌发出的一棵新苗儿（嫩枝芽）的道理。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
我们评判深度Linux如何如何，应该站在这个角度来看问题。严格地讲。深度Linux不是深度人的深度Linux，而是我们全体中国人的中文化Linux操作系统。所以，我们大家都要关爱它，呵护它，关注它的健康成长。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
回想往事，人工智能（AI）学科进入我们中国，经历了三十多年的“折腾”，非常痛苦，现今才有了一点儿“起色”。现今，国外的智能机器人已经能够与我们真人进行“自由对话”，而我们却还是不得其“要领”。科学研究需要坚持，需要韧性，不为一时的“蝇头小利”而折腰。我们要明白一个道理，Linux的真正中文化，融入中国人的日常生活，还需要走很长的路。说句实在话，在这方面，我们需要学习微软，学习微软做事情的那股严谨作风，不屈不挠，誓言“扎根在中国”。微软没有错，但是，Linux也没有错。我心中觉得对不起微软，我们盗用了人家的产品。我希望深度Linux中文化能够取得一定的成功，减轻国人的这种痛苦。我们已经是发展中的大国，不能不要“脸皮”（容忍软件盗版长久存在）。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
无锡永中集成Office是我们自己搞出来的软件精品，无锡新区为了其办公用房租金的债务就把它“搞死”，至今还阵阵有词，不觉脸红。我希望深度Linux不会走上这条路。因为，Linux中文化，既是你的事，也是我的事。我们都要感谢深度人！我向中国人工智能学会领导层已经表达了一种愿望，希望学会能够接纳深度人，共创中西科技文化相互“融合”的辉煌。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
Linux的中文化不是纯粹技术问题，而是全体民众的认识觉悟问题。我们在这里把话说到底：我们中国人需要不需要自己能够“当家做主”的中文计算机操作系统？深度人做出了肯定的回答：我们需要中文化的Linux！一年，二年，三年，......我们会一直坚持下去。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
说明：我本人不是什么深度“托儿”，我原做深度Linux的吹鼓手，一分不要！袁萌\文</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 15:45:49</pubDate>
</item>
<item>
<title>HTML5未来发展的六大趋势</title>
<link>http://oss.org.cn/html/79/n-63279.html</link>
<text>
						&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HTML 5 从根本上改变了开发商开发 Web 应用的方式，从桌面浏览器到移动应用，这种语言和标准都正在影响并将继续影响着各种操作平台。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在移动领域，大家争论不休的一个问题就是开发 Web 应用还是原生应用？而随着 HTML 5 标准的发展，两者之间的差异已经逐渐变得模糊，今天各大媒体都争相报道与 HTML 5 有关的东西，那么，HTML 5 未来的发展趋势到底是什么？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1） 移动优先&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前天，appMobi 获选 ReadWriterWeb2012最具前途的的公司，作为一家初创公司，这个奖公司首先专注于在移动平台上如何实现 HTML 5 的简单易用和无处不在。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;从如今层出不穷的移动应用就知道，在这个智能手机和将平板电脑大爆炸的时代，移动优先已成趋势，不管是开发什么，都以移动为主。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如上文所说，此前一直困扰移动领域的问题就是开发 Web 应用还是原生应用。而如今，我们看见一些大型企业如《金融时报》在冲着 HTM L5 进军移动市场过程中，从 App Store 撤掉 iPad 原生应用而开发 Web 应用，同样表现出色。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;许多游戏开发商也将在移动 Web 应用中扮演中重要角色，移动 Web 应用优先的趋势将会持续到移动设备统治信息处理领域。其实用户根本不在乎你用什么工具开发了什么应用，不管是 Web 应用还是原生应用，只要好用就可以了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2) 游戏开发者领衔“主演”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;其实移动游戏开发商是从 HTML5 获益最多的一方，他们可利用这个平台逃脱付费游戏须向苹果支付的 30% 提成。在某种程度上，游戏就是移动平台销量最好的应用，也是吸引人们购买移动设备的一个重要因素。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;许多游戏开发商都被 Facebook 或者 Zynga 推动着发展，而未来的 Facebook 应用生态系统是基于 HTML5 的，尽管在 HTML 5 平台开发出游戏非常困难，但游戏开发商却都愿意那么做。通过 PhoneGap 及 appmobi 的 XDK 将 Web 应用游戏打包整合到原生应用中也是一种方式，Facebook 差不多就这么干的——基于 Web 应用及浏览器，但却将之打包整合进原生应用。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3) 响应式设计&amp;amp;自动变化的屏幕尺寸&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在 HTML 5 真的改变移动开发平台之前，必须要迈出重要一步，那就是“响应式设计”，也就是屏幕可以根据内容而自动调整大小。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;响应式设计最好的一个例子就是今年上线的 BostonGlobe.com（观看视频），其屏幕能够根据任何内容而调整尺寸大小，在访问过其开发商 Filament Group 后才了解到，响应式设计也并非易事，一些基本概念设计必须从头开始，比如处理媒体库的 RespondJS，而且处理来自第三方的图片和广告也是恼人的问题。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;要想做好响应式设计，就必须洞悉内容与屏幕之间的反馈关系，一家来自硅谷的响应式设计公司 ZURB 称，其实在过去的 16 年中，开发商就意识到响应式设计就要完全离开“流”，转而注重内容是如何在网页和移动设备中被处理的，这一过程还在继续，HTML 5 会让它最终成为可能。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4 )设备访问&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;消除 Web 应用与原生应用界限的最大障碍就是浏览器访问移动设备基本特性的能力，比如照相机，通讯录，日历，加速器等，利用 HTML5 实现此能力方面，上文中提到的 appMobi 算是行业翘楚，在感恩节后开源了所有 API。Mozilla 也一直在努力通过移动浏览器 Fennec 来将强设备访问能力。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对许多移动开发商来说，提高设备访问能力是 HTML5 最令人激动的革新，这意味着 Web 应用能够登陆移动设备而无需做任何 PhoneGap 式打包，游戏开发商当然最开心，因为某些特性对他们来说是封锁的，比如能整合到游戏中的加速器。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这就开启了另一个可能的世界，比如能与云更好地整合（这有利于应用内购买，消息推送等）并提高游戏可玩性，有了 HTML5 这个平台，开发商可以不再依赖于 Java 语言，CSS3，HTML 及其它程序语言。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5) 离线缓存&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个概念相当新潮，离线情况下，app 也能照常运作，算是 HTML 5 充满魔力的一面，今年最好的离线缓存例子就是亚马逊 Kindle 的云阅读器，可以通过 Firefox6 以上版本，Chrome11以上版本，Safari5以上版本及 iOS4 以上版本浏览器将内容同步到所有 Kindle 系列设备，并能记忆用户在 kindle 图书馆的一切。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;亚马逊就这么实现了离线使用 Web 应用，许多专家人声称原生应用的末日即将到来，因为 Web 应用的使用变得简单，无摩擦，适用于任何一个平台或者无需平台。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当然 Mozilla 的触角也伸到了这里，实际上，Mozilla 想涉足任何一个 HTML 5 能渗透的领域，从 Mozilla 的移动蓝图，可以了解更多。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6) 开发工具的成熟在今年八月份，Brian Fling 曾写过一篇博文叫 HTML5 Web 应用开发剖析，提出了几点建议供从事 HTML&amp;nbsp;5应用的开发者参考：要耐心，HTML5项目可能比开发其他任何项目好是都要长做好预算，这不像建网站那么简单，可能会耗费你大量资金找对开发者，你要记住，这对许多经验丰富的专家来说都非常难的事，那么你的团队也会觉得困难，所以一定要找对人，找到正确的方向要自食其力，你要知道，开发 HTML 5 项目，许多工具都要自制，不是现成的在技术界，按部就班的教条风格在这里行不通，会花掉许多不必要的资金，在移动领域，没有对与错，只有是否适合，一切以用户体验为重。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在工具方面，除了 appMobi 提供的工具以外，还有 Sencha 及 Appcelerator 提供的框架及 IDE 供应用开发商们使用，虽然这些工具现在算不上成熟，也不如 Android 和 iOS 上的开发商框架及工具那般简单强大，但至少它们在演进，将会变得越来越好用。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;总结&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HTML 5 的其它功能，如表单和新标准还在快速演进，而随着标准化工作的进行，HTML 5 有可能变回 HTML。HTML 5 开发领域的领军人物包括 Sencha，Adobe，Appcelerator，appMobi 及 Facebook，亚马逊，Google 三大巨头。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不管你是想开发出新型视频应用的开发商如 Brightcover 还是想开发新型音频应用的开发商如 Soundcloud，不论是桌面应用还是移动应用，HTML 5 都是创新的主旋律。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 15:34:59</pubDate>
</item>
<item>
<title>Supesite 中截断文字的函数cutstr()</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63278</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-08 13:33:19</pubDate>
</item>
<item>
<title>Opera 11.60发布，更好的支持HTML5</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63277</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-07 16:00:12</pubDate>
</item>
<item>
<title>11个面向文档的开源NoSQL数据库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63233</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-07 15:58:12</pubDate>
</item>
<item>
<title>禅道荣膺SourceForge当月推荐项目</title>
<link>http://oss.org.cn/html/32/n-63232.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; sourceforge是全球最大的开源项目托管基地，他们每月会根据项目的下载量和访问量选出10个优秀的开源项目，推荐在sourceforge.net首页。12月份的当月项目已经选出，来自中国的开源项目管理软件禅道也被推荐为当月项目，排在第二位。在此祝贺禅道开发团队，加油！官方信息：&amp;nbsp;今天早上收到Rich Bowen发来的一封email，大意是禅道项目由于过去两个星期的下载量和项目的访问量，被推荐为sourceforge.net当月的推荐项目，展示在sf.net的首页。一开始有点意外，访问了下sf.net首页，果然禅道排在了第二位！这算是一个意外的惊喜吧，呵呵，虽然有点搞不明白sf.net的推荐机制。上图。&amp;nbsp;附：禅道软件简介禅道是第一款国产的优秀开源项目管理软件。它集产品管理、项目管理、质量管理、文档管理、组织管理和事务管理于一体，是一款功能完备的项目管理软 件，完美地覆盖了项目管理的核心流程。先进的管理思想，合理的软件架构，简洁实效的操作，优雅的代码实现，灵活的扩展机制，强大而易用的api调用机制， 多语言支持，多风格支持，搜索功能，统计功能——这一切，您通过禅道，都可以拥有！禅道在手，项目无忧！官方网站：www.zentao.net</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 17:19:14</pubDate>
</item>
<item>
<title>如何实现响应式网页设计</title>
<link>http://oss.org.cn/html/31/n-63231.html</link>
<text>这个话题最近很火爆，我也一直在关注，响应式网页设计和移动互联网密切相关，并因移动终端的丰富和普及而兴盛，并且是一个颇具争议的话题，我今天将和大家探讨下。上周写了个简单的ppt在组内大概介绍了下，感兴趣的话可以先看下这个PPT。移动互联网的现状和未来在说到这个话题前，我们先看下网页设计和前端开发的现状：全球有超过53亿手机用户（包括传统手机）国内3G用户超过1亿iPhone4手机在2010年出货量超过3000万部；iPhone 4S上市前3天卖掉400万部；Android手机每天激活超过50万部；iPad出货量已经超过2.5亿部；预计到2015年，移动互联网的数据流量将超越桌面端的流量。。。。嗯，大家也许已经开始注意到，自己和身边的朋友也都越来越多的用上了iPhone或者android手机或平板——一两年前我们预料的移动互联网时代即将来临，现在已然实现了——我们正处在移动互联网快速发展的时代——已经不再是起步阶段了。那么，什么是响应式网页设计？响应式网页设计是Ethan Marcotte在去年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念可以说是是为移动互联网而生的！或许大家之前会注意到，有很多知名网站都推出了iPhone或针对智能手机的专门网站，比如3g.qq.com、m.taobao.com、ipad.xxx.com等等。。。甚至前端观察之前也尝试过用wordpress插件实现m.qianduan.net的移动网站。那么问题就来了——我们要为每一个设备做一个单独的网站吗？来让网站在每个设备中得到相应的视觉风格和操作体验？这样势必就要增加很多的工作量，而且很多还是重复的。我们在做页面的时候，一般很强调模块化的概念，我们要求一个合格的模块要能够“可扩展、无侵染”，它要能够用在任何地方都能够正常的显示。响应式网页设计与此类似——网站在任何设备中都能够正常适配，而不用为每个设备单独做个子网站！但是，产品经理和设计师可能还是会要求网站在各个浏览器里面表现要一模一样，甚至要像素还原——WTF！不同的浏览器本身的功能、行为和处理方式都不一样，为什么要表现完全一样？！let the browser flow…怎么做？其实响应式网页的实现很简单，都是大家熟悉的技术。media query(媒体查询)因为现在主流的智能终端都是基于iOS和Android的，而它们自带的浏览器都是基于webkit内核，所以我们可以完全使用viewport属性和media query技术实现网站的响应性：&amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&amp;gt;后面的initial-scale表示初始缩放，maximum-scale表示最大缩放比例，1意味着不能进行缩放。1234567891011121314151617/* for 240 px width screen */@media only screen and (max-device-width:240px){    selector{    }}&amp;nbsp;/* for 360px width screen */@media only screen and (min-device-width:241px) and (max-device-width:360px){    selector{    }}&amp;nbsp;/* for 480 px width screen */@media only screen (min-device-width:361px)and (max-device-width:480px){    selector{    }}当然依靠屏幕宽度来进行适配是最简单的方法，media query有很多参数可以使用比如orientation、aspect-ratio等，不太了解的可以查看这篇详细的介绍。其实，media query是响应式网页设计中被用到最多的技术。fluid grid(流体网格)很多项目都在使用网格技术(或者叫栅格)，前几年960.gs很流行，但是随着屏幕分辨率的普遍提升，它已经不太适合当前需求了，于是最近几年fluid grid开始逐渐多了起来，这种技术其实也很简单，只是将格栅的单位由px变成%，用百分比来控制页面每列的宽度，从而实现宽度的自适应。使用流体网格的网站能够根据屏幕宽度自动调整页面中每列的宽度，从而保证页面的完整展现和基本功能。这也是一种不错的方法。flex boxflex box是css3中的新技术，它很强大，可以实现很多我们之前无法想象的自适应布局。有时我们希望网站能够以webapp的外观呈现给手机用户，flexbox是个不二的选择。比如，要实现这样的简单结构：它很像一个app的结构，头部和底部固定，中间高度自适应，用flexbox可以简单实现：12345678910111213141516171819202122232425262728293031.flex_wrap{	height:100%;	display: box;  	display: -moz-box;  	display: -webkit-box;	-webkit-box-orient: vertical;	-moz-box-orient: vertical;	box-orient: vertical;}.flex_bd{	box-flex: 1;	-moz-box-flex: 1; 	-webkit-box-flex:1;	background:#E7E7E7;	overflow-y:auto;}.flex_hd{	background:#16364C;	height:30px;	line-height:30px;	text-align:center;	color:#FFF;	font-weight:700;	font-family:14px;}.flex_ft{	background:green;	height:30px;	line-height:30px;	text-align:right;}HTML代码：123456789101112&amp;lt;div class=&quot;flex_wrap&quot;&amp;gt;	&amp;lt;div class=&quot;flex_hd&quot;&amp;gt;前端观察&amp;lt;/div&amp;gt;	&amp;lt;div class=&quot;flex_bd&quot;&amp;gt;		&amp;lt;p&amp;gt;这里是主内容区&amp;lt;/p&amp;gt;		&amp;lt;p&amp;gt;这里是主内容区&amp;lt;/p&amp;gt;	&amp;lt;/div&amp;gt;	&amp;lt;div class=&quot;flex_ft&quot;&amp;gt;		&amp;lt;a href=&quot;http://www.qianduan.net/about&quot; title=&quot;关于我们&quot;&amp;gt;关于我们&amp;lt;/a&amp;gt;		&amp;lt;a href=&quot;http://www.qianduan.net/copyright&quot; title=&quot;版权声明&quot;&amp;gt;版权声明&amp;lt;/a&amp;gt;		&amp;lt;a href=&quot;http://www.qianduan.net/sitemap&quot; title=&quot;网站地图&quot;&amp;gt;网站地图&amp;lt;/a&amp;gt;	&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;虽然这里还会有点儿问题，比如主内容区域内容太多会被隐藏掉，因为android webkit和iOS 5之前的mobile safari均不支持overflow:scroll属性，但是这个问题还是很好解决的，比如在里面嵌套一个子容器，用js来给定个高度并使用定位来实现滚动条从而完整展示内容，或者直接使用iscroll等js库来实现。好消息是，iOS5中safari开始支持overflow:scroll了。不足之处如果你关注网站性能之类的话，可能已经发现了一些问题：加载很多不需要的资源，比如多余的图片和样式内容带宽限制移动终端的内存和CPU限制图片大小和屏幕大小不匹配嗯，任何一个方案都不是完美的，但也不会很糟糕。下面我们会提到一些可行的优化方案：HTML5本地存储对于支持HTML5 appcache /manifest特性的浏览器，我们可以将一些不常改动的静态资源存储到本地，比如css文件，css中用到的图片，以及一些js文件等：12345678910CACHE MANIFESTNETWORK:/*&amp;nbsp;CACHE:img/bg.jpgimg/days.otfslideshow.jsslideshow.cssclassList.js然后将文件保存为manifest格式，并在HTML标签中引入即可：&amp;lt;html manifest=&quot;responsive.manifest&quot;&amp;gt;这样，用户在第一次访问的时候会慢一点儿，但是后续访问会很快，3G网络中也能为用户节省带宽。移动设备优先一种新的设计流程是，先为移动设备设计界面，然后将PC端作为一个扩展。这样做的好处是显而易见的，移动终端不会加载多余的资源，也不会因为PC端的样式而重绘页面，同时也不会影响PC端的表现。流体图片(fluid image)页面中的图片有时会比手机/平板的屏幕（viewport）宽，这样会将页面容器撑开，但是移动浏览器又不能scroll，结果图片被切掉一部分，然后还会有一部分内容被隐藏掉，用户看不到。解决这个问题的方法很简单，将img的最大宽度设置成100%就可以了：img{max-width:100%}嗯，这里的前提是，没有给img标签设置宽度和高度，否则显示会有问题。另外不建议直接设置width=”100%”，因为会把小图拉大，模糊显示。同理，video标签和iframe标签的宽度也可以这样做，而且最好不要使用iframe，宽度是个问题，性能也是一个方面吧。CSS3 image这个方法有些惊艳我们都知道可以用::before和::after伪元素+content属性来动态显示一些内容或者做其它很酷的事情，而且在CSS 2.1中即被支持。不过content属性在CSS 2.1中只能用于这两个伪元素中，而在CSS3中，任何元素都可以使用content属性了，这个方法就是结合css3 的attr属性和HTML自定义属性的功能：&amp;lt;img src=&quot;image.jpg&quot; 	data-src-600px=&quot;image-600px.jpg&quot; 	data-src-800px=&quot;image-800px.jpg&quot; alt=&quot;&quot;&amp;gt;然后用media query来动态赋值：12345678910@media (min-device-width:600px) { 	img[data-src-600px] {		content: attr(data-src-600px, url); 	}}@media (min-device-width:800px) {	img[data-src-800px] {		content: attr(data-src-800px, url);	}}当然，这种方法也有不足之处，比如PC端宽屏幕需要加载两个图片文件，然后我们也要为此准备多张图片文件等。pre标签有的网站，比如，像前端观察这样的技术博客，会用pre来显示源代码，而浏览器对pre标签默认设置white-space:pre，这样，代码就不会换行，从而撑开子容器，造成内容被隐藏的问题：右边的文字被隐藏掉了。解决方法很简单：pre{	white-space:pre-wrap	word-wrap:&amp;nbsp;break-word;	word-break:&amp;nbsp;break-all;/*如果要兼容IE，可以加上这句，连续字母断行的问题伤不起啊。。。。*/}当然，不只是pre标签，关键是white-space和word-break属性的值。嗯，主要的技术和技巧其实就这些，大家不会陌生。下面是一些比较有用的工具什么的：响应式网页设计工具与资源国外在响应式网页设计上已经走的很远了，已经有很多工具和资源供我们参考和使用：CSS 框架320 and UpMobile BoilerplateGolden Grid SystemGridlessLess Framework1140 CSS Grid SystemFluid 960 Grid SystemSimpleGridSkeleton实用工具Respond.js，让IE6-8支持meidia queryResponsive Design Testing 简单而方便的测试网站的响应性的工具，输入网址即可看到网站在不同分辨率下的表现Resize My Browser 缩放浏览器工具，不过不支持chrome和opera浏览器Media Query Bookmarklet 顾名思义，这是一个关于media query的书签工具ProtoFluid 在线查看和调试网站对移动终端兼容性的工具，很赞ScreenFly 和ProtoFluid类似responsivepx 更直观的测试网站对不同分辨率的适配性争论和总结响应式网页设计被提出以来，争论就不断，其实核心问题只有两个个：太多的资源请求和有限的终端支持之间的矛盾、响应式的网页设计和移动终端在用户体验和视觉风格上的差异。前者不能容忍在弱小的手机/平板上通过龟速的3G/2G网络来加载一个笨重的PC端页面，而后者纠结响应式网站不像手机网站。我的想法是，具体问题具体分析，比如，强内容的网站，完全可以尝试响应式网站，而重视觉和功能的网站，则可以尝试建立一个独立的移动网站。另外，显然，响应式网页设计的大部分技术，是可以用在WebApp开发中的。最后，欢迎各种吐槽、各种批评、各种建议、各种发散、以及各种新观点新技术～～欢迎发表评论～～PS：如果你手上有android/iPhone，可以直接访问下前端观察。 :)参考文章：Responsive Web Design Techniques, Tools and Design StrategiesResponsive Web&amp;nbsp;DesignThe ultimate responsive web design roundup</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 17:06:02</pubDate>
</item>
<item>
<title>supesite 资讯自定义字段调用</title>
<link>http://oss.org.cn/html/29/n-63229.html</link>
<text>1、在你要调用的模块代码中加上先“showdetail/1”；
2、然后在需要调用的地方放上这段代码：
&amp;lt;!--{eval $ceshi = unserialize($value[customfieldtext]); echo($ceshi[0]);}--&amp;gt;

注：代码中的“[0]”就是你要调用的自定义字段的序号这是第一个字段，如果是第二个自定义字段就是[1]，第三个自定义字段就是[2]，以此类推。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 16:53:11</pubDate>
</item>
<item>
<title>Supesite静态化：将index.html生成到网站根目录</title>
<link>http://oss.org.cn/html/28/n-63228.html</link>
<text>将index.html生成到网站根目录，而其他的静态文件生成到html目录下的方法先看演示http://www.05273.com

原本是跳转到http://www.05273.com/html/index.html的

现在直接是生成到根目录,跳到了http://www.05273.com/index.html

觉得如何呢?

修改方法忒他吗的简单,虽然是简单,可让我研究了足足两天

修改方法如下,只需要加两符号

打开根目录的index.php

找到:
$_SHTML['action'] = 'index';

改成:

$_SHTML['../action'] = 'index';

0325日更新自动更新问题：
查找：
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ob_out();
在下面增加：
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unset($_SHTML['../action']);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $_SHTML['action'] = 'index';

保存即可

也就是在action前加个父路径../

重要说明:此方法需要你在空间上设定默认首页为:第一是index.php,接下来是index.html

配置apache：
打开配置文件httpd.conf,搜索DirectoryIndex，可以看到下面一行：
&amp;nbsp; &amp;nbsp; DirectoryIndex index.html index.php
将其改为：
&amp;nbsp; &amp;nbsp; DirectoryIndex index.php index.html
保存退出，重启apache.

配置IIS：
打开IIS，找到运行SupeSite7的网站，右键单击属性，单击文档，将“启用默认内容文档”中的index.php移动到最上面，保存退出，并重启IIS.

修改后，浏览器端发来的请求会首先提交到index.php页面，而不是index.html页面。
在index.php中会对index.html页面进行重写，即更新，所以也解决了更新问题。

这个方法对于独立主机来说很容易操作，对于虚拟主机要联系空间商。

感谢子风的大力帮忙，谢谢

此方法SS6,SS7通用</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 15:53:50</pubDate>
</item>
<item>
<title>SupeSite/SS 数据表结构</title>
<link>http://oss.org.cn/html/27/n-63227.html</link>
<text>supe_ads 广告表adid smallint 广告idsubject varchar 广告标题adtype enum 广告类型dateline int 广告添加时间width varchar 广告宽度height varchar 广告高度clicks int 广告点击次数adcontent text 广告代码supe_announcements 公告表id smallint 公告iduid mediumint 公告发布者uidauthor varchar 公告发布者IDsubject varchar 公告标题displayorder tinyint 公告显示顺序starttime int 公告开始时间endtime int 公告结束时间message text 公告内容supe_attachments 附件表aid mediumint 附件idisavailable tinyint 附件是否可用type char 附件对应信息类型itemid mediumint 附件对应的信息idcatid smallint 附件对应信息的分类iduid mediumint 附件上传者uiddateline int 附件上传时间filename char 附件文件名subject char 附件对应信息的标题attachtype char 附件类型isimage tinyint 附件是否为图片size int 附件大小filepath char 附件文件相对地址thumbpath char 附件图片缩略图文件相对地址downloads mediumint 附件下载次数hash char 附件唯一键值supe_attachmenttypes 允许附件类型表id smallint 附件类型idfileext char 允许附件类型后缀maxsize int 允许附件大小最大值supe_blocks 模块表blockid smallint 模块iddateline int 模块添加时间blocktype varchar 模块类型blockname varchar 模块名称blockmodel tinyint 模块模式blocktext text 模块参数设置字符串blockcode text 模块PHP代码supe_cache 缓存表cachekey varchar 缓存键值uid mediumint 缓存对应用户uidcachename varchar 缓存变量的名称value mediumtext 缓存变量的值updatetime int 缓存变量更新时间supe_categories 分类表catid smallint 信息分类idupid smallint 分类父idname varchar 分类名称note text 分类说明type varchar 分类所属类型ischannel tinyint 分类是否为专题displayorder mediumint 分类显示顺序tpl varchar 分类使用的模版文件thumb varchar 分类的封面图片缩略图image varchar 分类的封面图片haveattach tinyint 是否有封面图片bbsmodel tinyint 是否直接读取BBS相应板块bbsurltype varchar BBS板块blockmodel tinyint 读取BBS板块使用模块类型blockparameter text 使用的模块参数blocktext text 使用的模块参数设置字符串url varchar 分类跳转URLsubcatid varchar 分类子idsupe_channels 频道表 　nameid char 频道英文名idname char 频道中文名url char 频道链接tpl char 频道模板文件名type char 频道类型(system,user)displayorder smallint 频道显示顺序status tinyint 是否启用频道(0:不启用,1:启用)supe_corpus 文集表cid mediumint 文集idauthorid mediumint 文集作者uidauthor varchar 文集作者IDcorpusname varchar 文集名字resume text 作者个人简介background varchar 文集背景图片blogs ext 加入文集的日志idcatalog text 文集目录树XMLcover text 文集封面文字prelude text 文集序言文字backcover text 文集封底文字createdate int 文集创建时间supe_crons 计划任务表cronid smallint 计划任务idavailable tinyint 计划任务是否可用type enum 计划任务类型name char 计划任务名称filename char 计划任务调用的文件名lastrun int 上次运行时间nextrun int 下次运行时间weekday tinyint 按周day tinyint 按日hour tinyint 按时minute char 按分supe_customfields 自定义字段customfieldid smallint 自定义字段idisshare tinyint 自定义字段是否共享uid mediumint 自定义字段添加者uidtype varchar 信息类型name varchar 字段名称displayorder smallint 字段显示顺序customfieldtext text 字段可选内容isdefault tinyint 是否为默认选中supe_effects 特效eid smallint 特效idname char 特效名称kind char 特效类型file char 特效文件supe_favorites 收藏表uid mediumint 收藏者uiditemid mediumint 收藏信息的iddateline int 收藏时间supe_friends 好友表uid mediumint 添加者uidfrienduid mediumint 好友uiddateline int 添加的时间grade tinyint 好友等级supe_goodsprice 商品价格表priceid mediumint 价格iditemid mediumint 商品iduid mediumint 商品添加者uidprice float 商品价格buynum smallint 商品购买数量dateline int 商品添加的时间status tinyint 商品状态username char 商品添加者的用户名supe_groupfields 圈子资料表gid mediumint 圈子idintro mediumtext 圈子介绍announcements text 圈子公告headerimage varchar 圈子首页顶部图片地址selfintro mediumtext 圈主个人介绍css mediumtext 圈子主页CSS内容supe_groupitems 加入圈子的信息表gid mediumint 圈子iditemid mediumint 加入圈子的信息iduid mediumint 推荐信息的用户uidusername char 推荐信息的用户名dateline int 加入圈子的时间supe_groups 圈子表gid mediumint 圈子idgroupname char 圈子的圈名catid mediumint 圈子的分类iduid mediumint 圈主的uidusername char 圈主的用户名ispublic tinyint 圈子是否公开0:不公开、1：公开2:须要密码flag tinyint 圈子的审核状态0:未审核的圈子、1:审核的圈子mode tinyint 圈子加入模式0:邀请、1：审核、2：所有人allowrecommend tinyint 是否允许推荐0:不允许1:允许allowshare tinyint 是否让圈外的人讨论0:不允许1:允许usernum mediumint 加入圈子的总人数password char 圈子访问密码lastpost int 圈子内信息的最后更新时间dateline int 圈子申请时间logo char 圈子Logo地址supe_groupuid 圈主表uid mediumint 加入圈子用户的uidgid mediumint 圈子idgroupname char 圈子的圈名flag tinyint 成员加入圈子的审核状态-1:邀请的成员、0：未审核的成员、1:成员、2：副圈主、3：圈主dateline int 加入圈子的时间supe_guestbooks 留言板gid mediumint 留言iduid mediumint 留言接受者idisprivate tinyint 是否为悄悄话authorid mediumint 留言者uidauthor varchar 留言者的用户名ip varchar 留言者IPdateline int 留言的时间message text 留言内容supe_itemtypes 个人分类表typeid mediumint 个人分类iduid mediumint 分类创建者uidtype char 分类所属类型typename char 分类名称viewperm char 查看权限replyperm char 回复权限getattachperm char 下载权限displayorder tinyint 显示顺序supe_members 用户表uid mediumint 用户uidgroupid smallint 用户组idusername char 用户名password char 用户密码secques char 用户安全提问timeoffset char 时区dateformat char 日期格式timeformat tinyint 时间格式havespace tinyint 是否开通Space空间newpm tinyint 是否有新的短消息lastsearchtime int 上次搜索的时间supe_polls 投票pollid smallint 投票idpollnum mediumint 投票总数dateline int 建立时间updatetime int 更新时间ismulti tinyint 是否为多选subject varchar 投票标题summary text 投票说明options text 投票选项voters text 投票者uidsupe_prefields 预先值id smallint 预先值变量idtype char 信息类型field char 变量名value char 变量的值isdefault tinyint 是否默认选中supe_reports 举报信息表&amp;nbsp;　reportid mediumint 举报信息iditemid mediumint 被举报的信息idreportuid mediumint 举报人的uid(游客为0)reporter char 举报人的用户名(游客为Guest)reportdate int 信息举报的时间status tinyint 举报信息处理状态(0为未处理，1为管理员处理为有效信息)supe_robotitems 采集信息表itemid mediumint 采集信息iduid mediumint 采集者uidcatid smallint 信息的分类idrobotid smallint 机器人idrobottime int 采集时间subject char 信息标题author char 信息作者itemfrom char 信息来源dateline char 信息建立时间isimport tinyint 信息是否导入supe_robotmessages 采集信息内容表msgid mediumint 采集信息内容iditemid mediumint 采集信息idrobotid smallint 机器人idmessage text 采集信息内容picurls text 信息图片链接地址flashurls text 信息FLASH链接地址supe_robots 机器人robotid smallint 机器人idname varchar 机器人名称uid mediumint 机器人添加者uiddateline int 添加时间lasttime int 最后一次采集时间robotnum smallint 采集次数listurltype varchar 索引列表方式listurl text 索引列表链接listpagestart smallint 索引列表开始页码listpageend smallint 索引列表结束页码allnum smallint 总的采集数目pernum smallint 每次采集信息数目savepic tinyint 是否保存信息内的图片encode varchar 采集页面的字符集编码picurllinkpre text 图片链接前缀saveflash tinyint 是否保存信息内的FLASHsubjecturlrule text 标题URL识别规则subjecturllinkrule text 文章链接URL规则subjecturllinkpre text 文章链接前缀subjectrule text 标题识别规则subjectfilter text 标题过滤规则subjectreplace text 标题替换规则subjectreplaceto text 标题替换字符subjectkey text 标题包含的关键字subjectallowrepeat tinyint 是否允许标题重复datelinerule text 文章建立时间识别规则fromrule text 来源识别规则authorrule text 作者识别规则messagerule text 内容识别规则messagefilter text 内容过滤规则messagepagetype varchar 内容分页类型messagepagerule text 内容页码区域识别规则messagepageurlrule text 页码链接识别规则messagepageurllinkpre text 页码链接前缀messagereplace text 内容替换规则messagereplaceto text 内容替换字符supe_rss RSS缓存表&amp;nbsp;　uid mediumint 用户idtype varchar 模块类型(blog,image,goods,file,link,video,group,friend,bbs)默认blogdata mediumtext rss数据,经过序列化updatetime int rss更新时间supe_settings 设置表variable varchar 设置的变量名value text 设置的变量值supe_spaceblogs 日志表itemid mediumint 日志信息idmessage text 日志内容relativetags text 相关的TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关的信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段内容includetags text 日志TAGmood varchar 心情weather varchar 天气supe_spacecache 个人空间缓存表uid mediumint 用户uidcacheid smallint 缓存idvalue mediumtext 缓存变量值updatetime int 更新时间supe_spacecomments 评论表cid int 评论iditemid mediumint 评论对应的信息idtype varchar 信息类型uid mediumint 用户uidauthorid mediumint 评论者uidauthor varchar 评论者用户名ip varchar 评论者IPdateline int 评论时间rates smallint 评分url varchar TrackBack链接subject varchar TrackBack标题message text 评论内容supe_spacefiles 文件表itemid mediumint 文件信息idmessage text 文件介绍relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关的信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段内容includetags text 文件TAGfilesize varchar 文件大小filesizeunit varchar 文件大小的单位version varchar 文件版本producer varchar 文件制造商downfrom varchar 文件来源language varchar 适合语言permission varchar 授权方式system varchar 适合的操作系统remoteurl text 远程下载链接supe_spacegoods 商品表itemid mediumint 商品信息idmessage text 商品介绍relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段内容includetags text 商品TAGstocknum smallint 出售数量quality varchar 商品质量price float 商品价格province varchar 卖家所在省份city varchar 卖家所在城市chargemode varchar 运费付费方式chargemail float 平邮价格chargeexpress float 快递价格chargeems float EMS价格paymenttype varchar 交易方式term smallint 拍卖商品期限alipay varchar 支付宝帐号markup smallint 每次加价starttime int 拍卖开始时间image varchar 商品图片thumb varchar 商品图片缩略图status tinyint 是否竞拍成功supe_spaceimages 相册表itemid mediumint 相册信息idmessage text 相册介绍image varchar 相册封面图片imagenum smallint 相册图片数目relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段内容includetags text 相册TAGsupe_spaceitems 信息表itemid mediumint 信息idcatid smallint 信息分类iduid mediumint 用户uidtid mediumint 导入论坛帖子idusername char 用户名itemtypeid mediumint 自定义分类idtype char 信息类型subtype char 子类型subject char 信息标题dateline int 添加时间lastpost int 最后回复时间viewnum mediumint 查看数replynum mediumint 回复数trackbacknum mediumint TrackBack数goodrate int 正的评分badrate int 负的评分digest tinyint 精华等级top tinyint 置顶等级allowreply tinyint 是否允许回复hash char 附件键值folder tinyint 所在的文件夹haveattach tinyint 是否含有附件grade tinyint 审核等级gid smallint 信息属于圈子的idgdigest tinyint 信息在圈子中的精华等级supe_spacelinks 书签itemid mediumint 书签信息idmessage text 书签介绍relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段内容includetags text 书签TAGurl varchar 链接domain varchar 书签链接的域名snaptype tinyint 快照类型snaptext text 快照内容supe_spacenews 资讯表nid mediumint 资讯iditemid mediumint 资讯信息idmessage text 资讯内容relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段信息includetags text 资讯TAGnewsauthor varchar 资讯作者newsfrom varchar 资讯来源newsfromurl varchar 资讯来源网址newsurl varchar 资讯链接supe_spacetags TAG对应表itemid mediumint 信息idtagid mediumint TAG iddateline int 添加时间type char 信息类型supe_spacevideos 视频表itemid mediumint 信息idmessage text 视频介绍videoname varchar 视频名称file varchar 视频文件地址image varchar 视频截图地址player varchar 网络影音类型(media,real, flash)relativetags text 相关TAGpostip varchar 发布时的IP地址relativeitemids varchar 相关信息idcustomfieldid smallint 自定义字段idcustomfieldtext text 自定义字段信息includetags text 视频TAGremoteurl text 网络影音url地址,序列化maketime int 视频拍摄时间makeaddress varchar 视频拍摄地点videosize int 视频大小remoteurl text 网络视频URL地址supe_styles 模块风格表tplid smallint 模块风格idtplname char 模块风格的名字tplnote text 风格介绍tpltype char 模块类型tplfilepath char 风格文件地址supe_tagcache TAG缓存表cachekey varchar 缓存键值uid mediumint 用户uidcachename varchar 缓存变量名value mediumtext 缓存变量值updatetime int 缓存更新时间supe_tags TAG内容表tagid mediumint TAG idtagname char TAG名称uid mediumint 添加者uidusername char 用户名dateline int 添加的时间close tinyint 是否关闭spaceallnum mediumint 信息总数spacenewsnum mediumint 资讯总数spaceblognum mediumint 日志总数spaceimagenum mediumint 图片总数spacefilenum mediumint 文件总数spacegoodsnum mediumint 商品总数spacelinknum mediumint 书签总数spacevideonum mediumint 视频总数relativetags char 相关TAGsupe_tracks 足迹uid mediumint 查看者uiditemid mediumint 信息iddateline int 添加时间supe_usercss CSS表id mediumint CSS iduid mediumint 用户uidname varchar CSS名称css mediumtext CSS内容dateline int 添加的时间thumb varchar 模板界面缩略图地址image varchar 模板界面图片地址isshare tinyint 是否共享supe_userfields 个人资料uid mediumint 用户uidnickname char 昵称sex char 性别birthyear smallint 生日年份birthmonth tinyint 生日月份birthday tinyint 生日天数marriage char 婚姻状况star char 星座folk char 民族bloodtype char 血型tall char 身高province char 省份city char 城市weight tinyint 体重native char 性格figure char 体型email char 常用E-Mailemail2 char 备用E-Mailemail3 char 备用E-Mail2qq char QQ号码icq char ICQ帐号msn char MSN帐号phone char 座机号码mobile char 手机号码address char 工作地址postalcode char 身份证号码edu char 教育水平school char 毕业学校job char 职业position char 职业头衔income char 收入水平housing char 住房条件smoke char 是否吸烟drink char 是否饮酒interest char 兴趣爱好supe_usergroups 用户组权限表groupid smallint 用户组idallowspace tinyint 允许开通空间allowspaceblog tinyint 允许开启日志allowspaceimage tinyint 允许开启相册allowspacefile tinyint 允许开启文件allowspacegoods tinyint 允许开启商品allowspacelink tinyint 允许开启书签allowspacevideo tinyint 允许开启视频attachsize int 附件上传空间大小needcheck tinyint 资讯需要审核allowcheck tinyint 允许审核资讯allowblogimport tinyint 允许RSS导入日志allowbbsimport tinyint 允许导入论坛帖子allowcheckitem tinyint 允许审核信息allowundelete tinyint 允许重新发布垃圾箱中的信息allowdomain tinyint 允许使用二级域名allowcorpus tinyint 允许制作PDF文集allowgroups tinyint 允许申请圈子groupscheck tinyint 申请的圈子是否需要审核allowgroupsnum mediumint 允许申请的圈子总数allowjoinnum mediumint 允许加入的圈子总数supe_userlinks 用户友情链接表linkid smallint 友情链接iduid mediumint 用户uidname char 链接名称note char 链接介绍logo char 链接LOGO地址url char 链接地址viewnum smallint 访问次数displayorder smallint 显示顺序supe_userprofile 个人栏目定制proid smallint 栏目idavailable tinyint 是否可用invisible tinyint 是否隐藏title varchar 栏目名称description varchar 栏目描述size tinyint 内容长度required tinyint 是否必填selective tinyint 是否可选choices text 选项内容displayorder smallint 显示顺序supe_userspacefields 空间设置uid mediumint 用户uidperpage tinyint 列表页面每页显示信息数announcement text 空间公告showblocks varchar 显示的菜单blocknames text 菜单名称summarylen smallint 日志摘要长度attachsize int 附件上传空间大小jammer tinyint 文章是否加水印blogmod tinyint 首页是否显示日志摘要blognum tinyint 首页日志数目imagenum tinyint 首页图片数目goodsnum tinyint 首页商品数目filenum tinyint 首页文件数目linknum tinyint 首页书签数目threadnum tinyint 首页论坛帖子数目othernum tinyint 首页其他列表数目flash text 首页FLASH特效地址music text 音乐地址choiceblockleft text 站点左侧显示的模块choiceblockright text 站点右侧显示的模块choiceblockmain text 站点主区域显示的模块myblock1 text 自己添加的模块1myblock2 text 自己添加的模块2myblock3 text 自己添加的模块3myblock4 text 自己添加的模块4myblock5 text 自己添加的模块5layout tinyint 页面版式showside tinyint 列表查看页是否显示侧边栏gradenames text 好友分组命名(以序列化存储)diy text 自定义模块风格supe_userspaces 空间信息表uid mediumint 用户uiddateline int 空间建立时间lastpost int 空间信息最后更新时间catid smallint 空间分类idusername char 用户名spacename char 空间名称viewnum int 查看次数spaceallnum mediumint 信息总数spaceblognum mediumint 日志总数spaceimagenum mediumint 图片总数spacefilenum mediumint 文件总数spacegoodsnum mediumint 商品总数spacelinknum mediumint 书签总数spacevideonum mediumint 视频总数province char 所在省份city char 所在城市domain char 二级域名islock tinyint 是否被锁定isstar tinyint 是否是空间之星spacemode char 个人空间模式(blog,bbs,group,all,diy,image,video,goods,file,link,fav,track)photo char 个人头像图片后缀spacesize int 用户额外的附件大小supe_visitors 访问记录表uid mediumint 用户uidvisitoruid mediumint 访问者uiddateline int 访问时间</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 15:20:56</pubDate>
</item>
<item>
<title>如何实现SupeSite新闻页面中显示上一篇、下一篇标题</title>
<link>http://oss.org.cn/html/26/n-63226.html</link>
<text>解决的思想就是读出上一篇和下一篇文章的标题，放入两个变量中，在页面显示。实现中有两种方法：第一种方法，首先打开 news_view.html.php 找到下面的代码&amp;lt;!–{if !empty($news[custom][name])}–&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;div id=”custominfo”&amp;gt;&amp;lt;h5&amp;gt;$news[custom][name]&amp;lt;/h5&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;!–{loop $news[custom][key] $ckey $cvalue}–&amp;gt;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;$cvalue[name]: &amp;lt;/strong&amp;gt;$news[custom][value][$ckey]&amp;lt;/li&amp;gt;&amp;lt;!–{/loop}–&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!–{/if}–&amp;gt;&amp;lt;div id=”articlebody”&amp;gt;$news[message]&amp;lt;!–{if empty($multipage)}–&amp;gt;&amp;lt;!–{loop $news['attacharr'] $attach}–&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;a href=”$attach[url]” target=”_blank”&amp;gt;&amp;lt;img src=”$attach[thumbpath]” alt=”$attach[subject]” /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;$attach[subject]&amp;lt;br /&amp;gt;&amp;lt;!–{/loop}–&amp;gt;&amp;lt;!–{/if}–&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;!–{if !empty($relativetagarr)}–&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;strong&amp;gt;TAG:&amp;lt;/strong&amp;gt;&amp;lt;!–{loop $relativetagarr $value}–&amp;gt;&amp;lt;!–{eval $svalue = rawurlencode($value);}–&amp;gt;&amp;lt;a href=”#action/tag/tagname/$svalue#” target=”_blank”&amp;gt;$value&amp;lt;/a&amp;gt;&amp;lt;!–{/loop}–&amp;gt;&amp;lt;!–{/if}–&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!–{if $multipage}–&amp;gt;&amp;lt;div class=”pages”&amp;gt;$multipage&amp;lt;/div&amp;gt;&amp;lt;!–{/if}–&amp;gt;&amp;lt;/div&amp;gt;在最后的这个&amp;lt;/div&amp;gt;上面添加下面的代码：&amp;lt;ul class=”msgtitlelist”&amp;gt;&amp;lt;li&amp;gt;上一篇：&amp;lt;a href=”{S_URL}/batch.common.php?action=viewnews&amp;amp;op=up&amp;amp;itemid=$news[itemid]&amp;amp;catid=$news[catid]” class=”viewnewsup”&amp;gt;$title_a&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;下一篇：&amp;lt;a href=”{S_URL}/batch.common.php?action=viewnews&amp;amp;op=down&amp;amp;itemid=$news[itemid]&amp;amp;catid=$news[catid]” class=”viewnewsdown”&amp;gt;$title_b&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;布局排版可根据自己的情况修改，链接代码最好不要改动。另外可以使用{echo cutstr($title_n,30)}截短标题。如，&amp;lt;a href=&quot;{S_URL}/batch.common.php?action=viewnews&amp;amp;op=down&amp;amp;itemid=$news[itemid]&amp;amp;catid=$news[catid]&quot; title=&quot;$title_n&quot;&amp;gt;{echo cutstr($title_n,30)}&amp;lt;/a&amp;gt;然后打开SS根目录下的 viewnews.php 文件，在最下部找到：include template($tplname);ob_out();if(!empty($_SCONFIG['htmlviewnews'])) {ehtml(’make’);} else {maketplblockvalue(’cache’);}?&amp;gt;在这段代码上面添加以下代码：//调用上一篇资讯标题$title_a = $_SGLOBAL['db']-&amp;gt;result($_SGLOBAL['db']-&amp;gt;query(’SELECT subject FROM ‘.tname(’spaceitems’).’ WHERE itemid &amp;lt; \''.$itemid.’\’ AND catid = \”.$thecat['catid'].’\’ AND folder=\’1\’ AND type=\’news\’ ORDER BY itemid DESC LIMIT 0,1′), 0);if(!$title_a) $title_a = ‘已经没有了’;//调用下一篇资讯标题$title_b = $_SGLOBAL['db']-&amp;gt;result($_SGLOBAL['db']-&amp;gt;query(’SELECT subject FROM ‘.tname(’spaceitems’).’ WHERE itemid &amp;gt; \”.$itemid.’\’ AND catid = \”.$thecat['catid'].’\’ AND folder=\’1\’ AND type=\’news\’ ORDER BY itemid LIMIT 0,1′), 0);if(!$title_b) $title_b = ‘已经没有了’;//代码结束更新一下缓存，显示上一篇下一篇标题即可实现。另外，你也可以直接在模板中修改，加入读取代码。打开模板文件下的news_view.html.php文件，找到下面的位置：&amp;lt;div id=”article_pn”&amp;gt;&amp;lt;a href=”{S_URL}/batch.common.php?action=viewnews&amp;amp;amp;op=up&amp;amp;amp;itemid=$news[itemid]&amp;amp;amp;catid=$news[catid]“&amp;gt;上一篇&amp;lt;/a&amp;gt; &amp;lt;a href=”{S_URL}/batch.common.php?action=viewnews&amp;amp;amp;op=down&amp;amp;amp;itemid=$news[itemid]&amp;amp;amp;catid=$news[catid]“&amp;gt;下一篇&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;在上面代码前面添加以下代码：&amp;lt;!–{eval$query = $_SGLOBAL['db']-&amp;gt;query(‘SELECT i.* FROM ‘.tname(‘spaceitems’).’ i WHERE i.itemid&amp;gt;\”.$itemid.’\’ AND catid = \”.$news['catid'].’\’ AND type=\”.$news[type].’\’ ORDER BY itemid LIMIT 0,1′);$newspre = $_SGLOBAL['db']-&amp;gt;fetch_array($query);$query = $_SGLOBAL['db']-&amp;gt;query(‘SELECT i.* FROM ‘.tname(‘spaceitems’).’ i WHERE i.itemid&amp;lt;\”.$itemid.’\’ AND catid = \”.$news['catid'].’\’ AND type=\”.$news[type].’\’ ORDER BY itemid DESC LIMIT 0,1′);$newsnext = $_SGLOBAL['db']-&amp;gt;fetch_array($query);$mypre = empty($newspre) ? ‘没有上篇了’ : ‘&amp;lt;a href=”‘.geturl(‘action/viewnews/itemid/’.$newspre['itemid']).’” title=”‘.$newspre['subject'].’”&amp;gt;’.$newspre['subject'].’&amp;lt;/a&amp;gt;’;$mynext = empty($newsnext) ? ‘没有下篇了’ : ‘&amp;lt;a href=”‘.geturl(‘action/viewnews/itemid/’.$newsnext['itemid']).’” title=”‘.$newsnext['subject'].’”&amp;gt;’.$newsnext['subject'].’&amp;lt;/a&amp;gt;’;}–&amp;gt;之后把“代码一”里的代码替换成：&amp;lt;div id=”article_pn” align=”center”&amp;gt;上篇：$mypre | 下篇：$mynext&amp;lt;/div&amp;gt;OK！你的内容下面就会显示上一篇和下一篇的标题了。这样浏览起来更方便了。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 15:09:15</pubDate>
</item>
<item>
<title>YaCy</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63225</link>
<text>YaCy 基于p2p的分布式Web搜索引擎。同时也是一个Http缓存代理服务器。这个项目是构建基于p2p Web索引网络的一个新方法。它可以搜索你自己的或全局的索引，也可以Crawl自己的网页或启动分布式Crawling等。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 11:39:47</pubDate>
</item>
<item>
<title>深度Linux Deepin</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63224</link>
<text>Linux Deepin 原名 Hiweed GNU/Linux，是一个基于Ubuntu的中文Linux发行版，Linux 
Deepin（以下简称LD）是一个基于Ubuntu的桌面操作系统，适用于笔记本、台式机、上网本等环境。LD包含了您所需的程序：文字处理、电子邮
件、沟通交流、图片设计、休闲娱乐、Web服务和编程工具；它的口号是&quot;免除新手痛苦，节约老手时间&quot;。用起来顺畅、舒服是其目标。它将为您提供稳定、便
捷、简单、高效的系统。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-07 10:39:24</pubDate>
</item>
<item>
<title>Ubuntu Mobile 手机概念 【组图】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63180</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-06 10:00:12</pubDate>
</item>
<item>
<title>OFFICE for IPAD：微软对抗谷歌的密码武器</title>
<link>http://oss.org.cn/html/79/n-63179.html</link>
<text>多年来微软的 Office 一直在办公软件领域称雄，最近有消息显示，微软正在积极的研发并将发布 iPad 版Office办公软件，同时微软正准备升级 Office for Mac 2011，并最终在明年的某个时间上架 Mac App Stpre。2011年，微软靠 Office 进账150亿美元，Office for iPad 的推出只会让这个数字变大。一方面，Office 基本成为办公软件的标准已是不争的事实，另一方面，互联网巨头 Google 为了打破这一局面，一直有针对性的建立免费的 Google Docs 和基于 Web 的 Google Apps 办公套件来和微软 Office 抗衡，不可否认 Google 的在线办公应用已经逐渐取得用户的认可。众所周知，微软的 Office 价格昂贵，包含 Word、 Excel、 PowerPoint 和 OneNote 软件的 Office 家庭版和学生版售价至少99美元，其他版本售价则一般都要超过300美元。Office 是客户端办公软件，价格过高，而 Google Docs 是基于 Web 的免费应用，一直以来，Google Docs 对用户来说是个不小的诱惑，很多人选择了免费， Google Docs 取得了一定的市场地位。但 Google Docs 的好日子可能已经到头，据&amp;nbsp;The Daily&amp;nbsp;报 道，预计发布的 Office for iPad 预计售价约为 10 美元，这与之前微软的 Office 定价策略简直天上地下。Office for iPad 10 美元的价格根本算不上昂贵，相比于免费的 Google Docs，Office 显然拥有更多的功能和更优秀的界面设计，花少量的钱购买一款更优秀的办公软件也并非没有脑子的选择。所以说虽然 Google Docs 已经取得些许进展，但鉴于苹果 iPad 在平板电脑市场上的主导地位，如果 Office for iPad 正式发布，恐怕 Google 在线办公应用将会遇到很大的麻烦。如果说之前 Office 的最大弱点在于没有在线同步功能的话，那么现在这一切都将不成问题，因为随着苹果猛推 iCloud 云服务，Office for iPad&amp;nbsp;和 Mac 版本的 Office 极可能借助 iCloud 来一次大变身，Mac 用户将可以从 iPad 将文档同步到 iCloud ，进而可以在 OS X Lion 系统上继续工作。Google Docs 和 Google Apps 已经远远落后于微软 Office，新版本的 Office for mac 和 Office for iPad 的发布很可能会把两者之间的差距继续拉大，Office for iPad 极有可能成为微软对抗 Google 的重量级密码武器。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-06 14:35:57</pubDate>
</item>
<item>
<title>年底编程语言排行榜：C#将取代C++的第三名</title>
<link>http://oss.org.cn/html/78/n-63178.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; TIOBE 于今日公布了 2011 年 12 月编程语言排行榜。虽然前三的位置还是 Java、C 和 C++，但是第三位置恐将易主。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;从 2001 年开始，TIOBE 指数排行榜第三的这个位置，C++编程语言一直处于坐的比较稳定并持久。虽然 Perl、Visual Basic 和 PHP 曾经也位居第三，但它们所保持的时间仅有几个月。现如今，C#就要叩响第三位置的大门了（C#和 C++ 之间的 Ratings 差距不到0.05%）。这又将是一场硬仗了，我们将在未来数月内看到结果了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;编注：C#是微软推出的一种基于 .NET 框架的、面向对象的高级编程语言。C#由C语言和 C++ 派生而来，继承了其强大的性能，同时又以 .NET 框架类库作为基础，拥有类似 Visual Basic 的快速开发能力。C#由安德斯·海尔斯伯格主持开发，微软在 2000 年发布了这种语言。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;此外，Objective-C在本期中又上升至第 5 位，上个月是第 6 位。Logo 语言从业上月的第 21 位升至第 18 位。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2011年 12 月编程语言排行榜 Top 20 具体榜单：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2011年 12 月编程语言排行榜前 10 位的长期走势图：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2011年 11 月编程语言排行榜 21 至 50 位排名：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2011年之前的年度编程语言&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;【说明】：TIOBE 编程语言社区排行榜是编程语言流行趋势的一个指标，每月更新。这份排行榜排名基于互联网上有经验的程序员、课程和第三方厂商的数量。排名使用著名的搜索引 擎（诸如 Google、 MSN 、雅虎）以及 Wikipedia 和 YouTube 进行计算。请注意这个排行榜只是反映某个编程语言的热门程度，并不能说明一门编程语言好不好，或者一门语言所编写的代码数量多少。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这个排行榜可以用来考查你的编程技能是否与时俱进，也可以在开始开发新系统时选择语言时用来进行策略性的决策。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Tiobe 英文原文：http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-06 11:02:48</pubDate>
</item>
<item>
<title>Firefox，你怎么了？</title>
<link>http://oss.org.cn/html/77/n-63177.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Firefox 现在的处境有点尴尬。自 2009 年 12 月开始，Firefox 在桌面浏览器市场的份额呈现出只减不增的态势。在移动浏览器市场，Firefox 也是有心无力。在 Android 平台上，Firefox 浏览器的下载次数为 540 万次。考虑到目前被激活的 Android 设备约为两亿部，这样的下载次数看上去还算可以。但实际上， Firefox 在移动浏览器市场的份额不足1%，存在感稀薄。题图中那只几乎快从地球掉下来的火狐正是目前 Firefox 处境的真实写照。反观 Chrome，在 Firefox 迷失自我的两年内奋起直追，市场份额从不足5%飙升至目前的 18.18%。详细的数据如下图所示，数据来自 Net MarketShare。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;注：根据 StatCounter 的数据，Chrome 11 月份的全球市场份额首超 Firefox，成为仅次于 IE 的全球第二大浏览器。Chrome 市场份额为 25.69%，Firefox 市场份额为 25.23%。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;更糟糕的是，与 Google 签订的、占 Firefox 每年 84%收入的合作协议已在今年 11 月到期。Firefox 背后的 Mozilla 与 Google 至今仍未披露有关续签协议的任何消息。失去了一块巨额收入后，Firefox 的运营压力将会陡升，仅依赖 Mozilla 基金会的支撑显然是不够的。由于和 Bing 竞争压力的存在，Google 可能为了避免 Bing 成为 Firefox 的默认搜索引擎而继续与 Mozilla 签订合作协议。可是，Chrome 的快速崛起与这种合作关系本身就显得有些不大适宜。在 Chrome 超越 Firefox 已成定局的情况下签署合作协议，Google 给 Firefox 的分成将不可避免地减少。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对 Firefox 来说，当务之急是加强移动浏览器开发的投入，避免在市场被边缘化的厄运。Mozilla CEO&amp;nbsp;&amp;nbsp;Gary Kovacs 表示，移动开发部门已从去年的不足 20 人的工程师小组扩容成现在 250 人之多的大型开发团队，并且还有继续招募工程师的打算。在移动平台的选择上，Android 系统将是 Mozilla 发力的主战场。 Mozilla 前 CEO John Lilly 的一番表态可以解释 Mozilla 做出这样选择的原因。他说，&amp;nbsp;不像桌面浏览器市场，不同厂商对移动设备的限制导致了 Mozilla 很难在移动平台上打造一款像桌面端那样精彩的 Firefox。以苹果为例，苹果不允许开发者为自己的应用内添加第三方应用访问功能，也不允许应用内运行解释性代码。这就导致 Firefox 在开发移动浏览器时不能运行 JavaScript。众所周知，JavaScript 是 Web 开发中的重要工具。相比之下，Google 的 Android 平台对开发者的限制较少。另一方面，Google 并未向 Mozilla 及时开放所需的源代码，致使 Firefox 在 Android 平台的浏览器竞赛中已经落后其他对手好一大截。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kovacs 透露了 Firefox 未来发展的一些打算。其中很重要的一个举措是与诸多设备厂商达成协议，将 Firefox 作为设备的默认浏览器。如果一切顺利的话，Mozilla 将于明年 2 月达成首份合作协议。在那不久后，我们有望看到预装 Firefox 浏览器的 Android 手机上市。目前可以获知的消息是，Android 版 Firefox 浏览器将于明年初迎来重大更新。Mozilla 上下对此十分重视，工程主管 Johnathan Nightingale 表达了这样的决心，“如果这不是一款很棒的产品，就说明整个团队无所作为”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;尽管火狐现在不火，但我不希望看到开辟浏览器多样化之路的先驱就这样缺席精彩的移动互联网竞赛。静静期待明年的来临，新 Firefox 将是一个新的开始。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-06 10:59:57</pubDate>
</item>
<item>
<title>理解inode</title>
<link>http://oss.org.cn/html/76/n-63176.html</link>
<text>                                        inode是一个重要概念，是理解Unix/Linux文件系统和硬盘储存的基础。                                                                                                                我觉得，理解inode，不仅有助于提高系统操作水平，还有助于体会Unix设计哲学，即如何把底层的复杂性抽象成一个简单概念，从而大大简化用户接口。下面就是我的inode学习笔记，尽量保持简单。===================================理解inode作者：阮一峰一、inode是什么？理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做&quot;扇区&quot;（Sector）。每个扇区储存512字节（相当于0.5KB）。操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个&quot;块&quot;（block）。这种由多个扇区组成的&quot;块&quot;，是文件存取的最小单位。&quot;块&quot;的大小，最常见的是4KB，即连续八个 sector组成一个 block。文件数据都储存在&quot;块&quot;中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为&quot;索引节点&quot;。每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。二、inode的内容inode包含文件的元信息，具体来说有以下内容：　　* 文件的字节数　　* 文件拥有者的User ID　　* 文件的Group ID　　* 文件的读、写、执行权限　　* 文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。　　* 链接数，即有多少文件名指向这个inode　　* 文件数据block的位置可以用stat命令，查看某个文件的inode信息：　　stat example.txt总之，除了文件名以外的所有文件信息，都存在inode之中。至于为什么没有文件名，下文会有详细解释。三、inode的大小inode也会消耗硬盘空间，所以硬盘格式化的时候，操作系统自动将硬盘分成两个区域。一个是数据区，存放文件数据；另一个是inode区（inode table），存放inode所包含的信息。每个inode节点的大小，一般是128字节或256字节。inode节点的总数，在格式化时就给定，一般是每1KB或每2KB就设置一个inode。假定在一块1GB的硬盘中，每个inode节点的大小为128字节，每1KB就设置一个inode，那么inode table的大小就会达到128MB，占整块硬盘的12.8%。查看每个硬盘分区的inode总数和已经使用的数量，可以使用df命令。　　df -i查看每个inode节点的大小，可以用如下命令：　　sudo dumpe2fs -h /dev/hda | grep &quot;Inode size&quot;由于每个文件都必须有一个inode，因此有可能发生inode已经用光，但是硬盘还未存满的情况。这时，就无法在硬盘上创建新文件。四、inode号码每个inode都有一个号码，操作系统用inode号码来识别不同的文件。这里值得重复一遍，Unix/Linux系统内部不使用文件名，而使用inode号码来识别文件。对于系统来说，文件名只是inode号码便于识别的别称或者绰号。表面上，用户通过文件名，打开文件。实际上，系统内部这个过程分成三步：首先，系统找到这个文件名对应的inode号码；其次，通过inode号码，获取inode信息；最后，根据inode信息，找到文件数据所在的block，读出数据。使用ls -i命令，可以看到文件名对应的inode号码：　　ls -i example.txt五、目录文件Unix/Linux系统中，目录（directory）也是一种文件。打开目录，实际上就是打开目录文件。目录文件的结构非常简单，就是一系列目录项（dirent）的列表。每个目录项，由两部分组成：所包含文件的文件名，以及该文件名对应的inode号码。ls命令只列出目录文件中的所有文件名：　　ls /etcls -i命令列出整个目录文件，即文件名和inode号码：　　ls -i /etc如果要查看文件的详细信息，就必须根据inode号码，访问inode节点，读取信息。ls -l命令列出文件的详细信息。　　ls -l /etc六、硬链接一般情况下，文件名和inode号码是&quot;一一对应&quot;关系，每个inode号码对应一个文件名。但是，Unix/Linux系统允许，多个文件名指向同一个inode号码。这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件名；但是，删除一个文件名，不影响另一个文件名的访问。这种情况就被称为&quot;硬链接&quot;（hard link）。ln命令可以创建硬链接：　　ln 源文件 目标文件运行上面这条命令以后，源文件与目标文件的inode号码相同，都指向同一个inode。inode信息中有一项叫做&quot;链接数&quot;，记录指向该inode的文件名总数，这时就会增加1。反过来，删除一个文件名，就会使得inode节点中的&quot;链接数&quot;减1。当这个值减到0，表明没有文件名指向这个inode，系统就会回收这个inode号码，以及其所对应block区域。这里顺便说一下目录文件的&quot;链接数&quot;。创建目录时，默认会生成两个目录项：&quot;.&quot;和&quot;..&quot;。前者的inode号码就是当前目录的inode号码，等同于当前目录的&quot;硬链接&quot;；后者的inode号码就是当前目录的父目录的inode号码，等同于父目录的&quot;硬链接&quot;。所以，任何一个目录的&quot;硬链接&quot;总数，总是等于2加上它的子目录总数（含隐藏目录）。七、软链接除了硬链接以外，还有一种特殊情况。文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。因此，无论打开哪一个文件，最终读取的都是文件B。这时，文件A就称为文件B的&quot;软链接&quot;（soft link）或者&quot;符号链接（symbolic link）。这意味着，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错：&quot;No such file or directory&quot;。这是软链接与硬链接最大的不同：文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode&quot;链接数&quot;不会因此发生变化。ln -s命令可以创建软链接。　　ln -s 源文文件或目录 目标文件或目录八、inode的特殊作用由于inode号码与文件名分离，这种机制导致了一些Unix/Linux系统特有的现象。　　1.  有时，文件名包含特殊字符，无法正常删除。这时，直接删除inode节点，就能起到删除文件的作用。　　2.  移动文件或重命名文件，只是改变文件名，不影响inode号码。　　3.  打开一个文件以后，系统就以inode号码来识别这个文件，不再考虑文件名。因此，通常来说，系统无法从inode号码得知文件名。第3点使得软件更新变得简单，可以在不关闭软件的情况下进行更新，不需要重启。因为系统通过inode号码，识别运行中的文件，不通过文件名。更新的时候，新版文件以同样的文件名，生成一个新的inode，不会影响到运行中的文件。等到下一次运行这个软件的时候，文件名就自动指向新版文件，旧版文件的inode则被回收。（完）</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-06 10:55:35</pubDate>
</item>
<item>
<title>痛苦造就性格（也许还造就伟大的产品）</title>
<link>http://oss.org.cn/html/75/n-63175.html</link>
<text>                                        如果你知道TechCrunch，那么你可能知道Michael Arrington。                                                                                                                他是一个律师，自称对&quot;Web 2.0&quot;更有兴趣，因此创办了个人网志TechCrunch，专门报道硅谷的创业公司和风险资本家。虽然不少人认为TechCrunch缺乏可读性，但是它可能是世界上订阅人数最多的科技类网志，2010年9月被AOL以2500万美元收购。有了这笔钱，Michael Arrington就改行当上了风险资本家。一周前，他发表了一篇文章，评论了网络游戏公司Zynga的劳资矛盾。文章的题目叫做《创业是艰难的：多工作，少喊累，别发牢骚》（ &quot;Startups Are Hard. So Work More, Cry Less, And Quit All The Whining&quot;）。这篇文章引用了程序员Jamie Zawinski写于1994年的日记（详见后文），得出了这么一个观点：&quot;If you work at a startup and you think you're working too hard and sacrificing too much, find a job somewhere else that will cater to your needs.&quot;&quot;如果你在创业公司工作，觉得工作得很累，牺牲太多，那么换个地方，找一份更合适你的工作吧。&quot;言下之意，软件业就是一个很累的地方，要想成功，就必须拼命，哪怕放弃正常生活和休闲，也在所不惜，否则你失败就是活该。第二天，Jamie Zawinski发表回应，严厉批评了Michael Arrington。&quot;He's using my words to try and back up that thesis.他用我的话，支持这种观点。I hate this, because it's not true, and it's disingenuous.我很反感，因为这不是事实，而是诡辩。What is true is that for a VC's business model to work, it's necessary for you to give up your life in order for him to become richer.事实是，风险资本家的商业模式需要这种宣传。只有你放弃你的生活，才能使他变得更富有。He's telling you the story of, &quot;If you bust your ass and don't sleep, you'll get rich&quot; because the only way that people in his line of work get richer is if young, poorly-socialized, naive geniuses believe that story! Without those coat-tails to ride, VCs might have to work for a living. Once that kid burns out, they'll just slot a new one in.他鼓吹，如果你忙得一刻不停，不休息不睡觉，你就会致富。因为干他那一行的人致富的唯一方法，就是那些年轻的、不擅于社交的、天真的程序员相信他那一套鬼话！没有这些垫背，风险资本家可能就必须自己动手谋生了。一旦那些孩子们失去利用价值，他们就接着去骗下一批人。&quot;别信风险资本家的鬼话，真正值得追求的生活是这样的：&quot;I recommend that you do what you love because you love doing it. If that means long hours, fantastic. If that means leaving the office by 6pm every day for your underwater basket-weaving class, also fantastic.我的建议是，你去做那些你喜欢做的事，只要喜欢就行。如果这意味着长时间工作，那很好。如果这意味着每天6点钟准时下班，参加潜水培训班，那也很好。&quot;===================================看了他的这篇回应，我的第一个感觉是，当年那个特立独行、不羁放纵的Jamie Zawinski又回来了。他是一个非常传奇的人，高中都没有毕业，却是世界上最好的程序员之一，Netscape公司的主力程序员，划时代产品&quot;网景浏览器&quot;的主要开发者。他在公司里就是一身摇滚明星的打扮，留长发、穿皮夹克、戴金属饰品，非常有个性。当微软公司不正当竞争，将IE与Windows捆绑在一起，击败Netscape的时候，他就公开发誓，终身不使用微软公司的任何产品，也不授权任何人将他的代码用于Windows平台。他是Mozilla这个名字的创造者，也是第一个提议将&quot;网景浏览器&quot;开源的人。当同事们决定彻底放弃以前的代码，重头编写一个全新的浏览器，他心灰意冷，辞职离开，在旧金山买下一家酒吧，不再编程，改当一个小店主，从此退出江湖。我知道他的故事，是因为纪录片《Code Rush》。我强烈推荐这部作品，那是1998年一个摄制组在Netscape公司整整跟拍一年的结果。你不仅可以从中了解&quot;网景浏览器&quot;衰落的那一段历史，还可以看到硅谷程序员的日常生活。==================================回到Michael Arrington的文章，我最大的收获是得知Jamie Zawinski还写过日记。我把他的这份日记读了一遍，感触非常多。日记的名称叫做&quot;the netscape dorm.&quot;，直译过来就是《睡在Netscape的日子》，记录了1994年Netscape刚成立时的情景：小公司，没有产品，急需证明自己，必须赶在资金用完之前写出代码。那些日记是创业公司的真实写照，以及一个非常孤独、拼命工作的程序员的内心独白。编程是一种非常单调枯燥的工作，长时间、全身心、独自一人地与机器打交道，人际交往和日常生活难免会受到影响。这份日记告诉我们，一个优秀程序员怎么看待这些事情：为什么要这么做？值得吗？乐趣在哪里呢？......日记的开头，有这样一段话，一下子就打动我了。&quot;Time always softens the pain and makes things look like more fun than they really were.时间总是淡化痛苦，让一切变得比实际情况更轻松。But who said everything has to be fun?但是谁说生活一定是轻松的？Pain builds character. (Sometimes it builds products, too.)痛苦造就性格。（也许还造就产品。）&quot;我反复看着这段话，心里只有一个愿望。如果经受的这些痛苦无法避免，那么我希望它们是值得的，最终带来想要的结果，一切皆有所偿。下面是我翻译的他的部分日记。=====================================Jamie Zawinski日记（节选）阮一峰 译(Image credit: m.joedicke)1994年6月26日，星期二，凌晨四点我已经在Mosaic工作一个半月了。睡眠很少，不常回家。今天一整天，Lou和Rob都在玩遥控汽车。这真让人恼火，因为其他所有人都忙得不可开交，他们却在那里玩耍。我走到Chouck旁边，问他&quot;你生气吗？&quot;他张开双臂，板着脸，说&quot;我的火气有这么大&quot;。我点点头，走回自己的办公桌。十分钟后，他走过来问：&quot;你是因为自己也生气，还是因为你想看看，我是否容易被激怒？&quot;我说我也生气，但是可能程度比他稍稍轻一点。大约凌晨四点，Lou收拾东西，准备离开办公室了。他跟我说，Marc把他叫进办公室，问他是不是无事可干。我心里也是这么想的，就说&quot;是这样吗？&quot;他说，这些天来彻底筋疲力尽，真的需要放松。我完全理解他的感受，但是我说最好在办公室以外的地方放松，而不是工作时当着其他人的面这样做。Marc要我去写Unix客户端，配合SGI公司与Irix 5.3一起发布。这意味着巨大的工作量，时间却不到两个月。我还一点代码都没写，甚至没有把握，这个产品是否可行，任务就已经来到了我的面前。所有部件散落一地，我脑海中却还没有整体的概念。Marc可以很轻易地把这个任务强加给我，但是我不愿意冒失败的风险。这个项目的影响太大了，太多的人在等着我们出丑......1994年6月28日，星期四，晚上十一点昨天，我又在干活的时候睡着了。缩在办公桌底下，盖着毯子，从中午11点睡到下午1点半，2个半小时。然后突然惊醒，想起来开会要迟到了。我们在会上要讨论如何在可怕的8位空间的条件下，生成彩色图案。不过，迟到就迟到了，可以找别的时间讨论。如果你因为长时间工作、极度疲劳而迟到，大概不会有人因此指责你。1994年8月5日，星期天，凌晨5点我回家了。距离上一次入睡，已经39个小时了。我现在还不觉得累，正处在第二次或者第三次也许第十八次回光返照。我回家只是因为担心，如果再待在办公室，可能又要在那里睡了。我不想连续在那里熬夜，因为现在真的必须洗个澡。昨天太热了，我和Lou玩air hockey太投入，汗流浃背。哦，我一定是累了。打开电视机，觉得MTV画面动得太快了，完全无法理解。过去一个星期，我一直喉咙痛和咳嗽。但是，我没有采取任何措施，因为没时间。我觉得，自己纯粹靠意志力，在抵御感冒的进攻。我上一次起床还是在星期五，大概下午三点到了公司，已经有一吨的电子邮件等着我，全部与工作有关。下午四点还有全体大会，开会前每个人都在找我。我感到自己真的被击溃压倒了。我的意思是，其实我只离开了办公室7个小时！不过，会议很振奋人心，一份OEM合同已经达成（我忘了与哪家公司），可以安装60万个客户端。不错啊，我真觉得市场部的那些人有两下子！以前我从没有这种感觉，太疯狂了。60万个用户！我写过的所有软件的用户数字，从来没有到达过这个级别。真是骇人啊！我的手最近伤了。我希望，不断的打字不会废掉我的手腕。如果我不能打字，我的人生就完了。我的右手一直在抖，中间两根手指的最后一个关节在疼，好像淤青得很厉害。我猜想是时候了，该去问问公司提供的医疗保险怎么用。如果医生不说&quot;停止大量打字&quot;，我就该笑死了。1994年8月11日，星期四，凌晨二点几个月来第一次，我见到了Ian。他的第一句话就是，&quot;哇，你看上去一团糟。&quot; 他说我有点神情恍惚、浑身痉挛。可是，我自我感觉还不错啊！昨晚，睡了一个完整的觉，其他的事情也都正常。我只是没有正常的生活，看不到任何一个与工作无关的朋友，我正在浪费自己只有一次的青春。我应该离开办公室，去做一些更好玩更积极的事情。等我的精神和肉体都衰老的时候，就做不动这些事情了。但是，现实是我守在荧光灯下，往计算机里输入一个个比特位，只有其他与我一样的怪人才会对这种事情感兴趣。我看着一张最新的电影排片表，发现一部也没有听说过。怎么会这样？我真是吓坏了。我在药店里买了一些腕部护套，这几天都戴着它们打字。我觉得没什么用，我的中指疼得不算严重，但食指的情况很差。这份工作摧垮了我的身体，这是不值得的。1994年8月26日，星期五，凌晨一点我重读了过去几个月的日记，很多部分根本连不起来！完全是只言片语，一个个不连贯的词，各种随机的超现实意向，我自己也理解不了，只记得打字时的情景。这是不是我在梦里写下的？我希望，人际交往之中，我留给别人的不是这种印象。我很想知道，我的代码看上去什么样！不过还好，它们至少还能运行。晚上9:30，我离开办公室，因为Eric和Susan打电话约我一起看电影。我已经工作了31个小时，其中零零星星合计睡了4个小时。我还在等编译结果出来，但是他们已经替我买了10点半的电影票，我还怎么拒绝呢？我说：&quot;我太累了，但是你们是对的，我需要看场电影。&quot; 1994年8月28日，星期天Mozilla已经有点像一个产品了，也许我们最终可以活下来。今天我到办公室的时候，大家都坐着看影碟Repo Man。我完全认同他们，花掉几个小时看电影，我没有产生任何负罪感。1994年10月12日，星期三，上午十一点今天，我们将发布Mozilla 0.9。我刚刚结束在6种不同的Unix平台上的编译。上午9点，我们发现了一些灾难性的bug，然后立刻修正。现在我正在重新编译所有的二进制文件。它们应该在一个半小时后完成，然后再过不到一个小时，出现在我们的FTP上。毫无疑问，这太疯狂了。下午六点，所有人都有一种缓期执行的感觉，因为发布时间推迟到了今天午夜。大家开始测试我在下午1:50分新编译出来的文件。这时我开始去睡觉。午夜，我们终于把这该死的程序放上了FTP，200万人立刻尝试下载，这时我们甚至还没发布软件上线的消息。我们终于完成了，我想从此所有人都可以幸福生活了。我们坐在会议室里，将显示器与一台大电视机连在一起。在黑暗里，我们看着FTP的下载日志快速向下滚动。jg即兴写了一个脚本，每当一次下载成功，电脑就发出一声加农炮的声音。我们听着这声音，坐在黑暗里庆祝。接着，我就回家了。我想如果现在就走，应该不至于在路上因过度疲劳而发生车祸，否则今晚我又只能蜷缩在办公桌下睡觉了。（完）</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-12-06 10:51:20</pubDate>
</item>
<item>
<title>WordPress 3.0正式版发布，带来诸多新特性[图]</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63174</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-06-22 13:52:06</pubDate>
</item>
<item>
<title>开源矢量（SVG）图形绘图软件 Inkscape 0.48 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63173</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-06-25 11:59:06</pubDate>
</item>
<item>
<title>邮件客户端软件 Mozilla Thunderbird 3.1 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63172</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-06-25 17:13:06</pubDate>
</item>
<item>
<title>Opera 10.60 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63171</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-07-09 10:42:07</pubDate>
</item>
<item>
<title>项目管理软件&quot;禅道&quot;发布1.1版本</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63170</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-07-12 11:00:07</pubDate>
</item>
<item>
<title>Shotwell 0.6.1 发布,支持RAW图片</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63169</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-07-13 09:19:07</pubDate>
</item>
<item>
<title>数据库设计管理工具MySQL Workbench 5.2.25 GA 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63168</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-07-13 09:30:07</pubDate>
</item>
<item>
<title>CouchDB 1.0发布，性能大幅提升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63167</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-07-20 13:21:07</pubDate>
</item>
<item>
<title>OpenFetion 1.8.0 发布啦</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63166</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-08-24 16:35:08</pubDate>
</item>
<item>
<title>Firefox 4 Beta 1 for Mobile (Fennec)发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63165</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-10-20 08:39:10</pubDate>
</item>
<item>
<title>Canonical公司将加大Ubuntu对中国用户的支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63164</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-10-20 08:44:10</pubDate>
</item>
<item>
<title>开源飞信软件 OpenFetion 2.0 发布，带来一些新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63163</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-10-25 09:09:10</pubDate>
</item>
<item>
<title>MeeGo 1.1发布，将得到诺基亚更多的支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63162</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-10-29 12:24:10</pubDate>
</item>
<item>
<title>红帽Linux 6正式发布，支持更多企业级应用特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63161</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-11-24 08:52:11</pubDate>
</item>
<item>
<title>Zimbra Desktop 2.0 GA发布，诸多新特性赶超Gmail</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63160</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-11-30 09:40:11</pubDate>
</item>
<item>
<title>谷歌发布Chrome OS操作系统和应用商店</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63159</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-12-10 10:54:12</pubDate>
</item>
<item>
<title>Firebug 1.6 正式发布，带来许多新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63158</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-12-20 15:40:12</pubDate>
</item>
<item>
<title>OpenFetion 2.0.6 修正重要安全漏洞，建议更新</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63157</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2010-12-20 15:43:12</pubDate>
</item>
<item>
<title>Jolicloud 1.1 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63156</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-01-11 11:01:01</pubDate>
</item>
<item>
<title>Joomla 1.6 正式版发布 全新的用户和权限管理</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63155</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-01-12 13:53:01</pubDate>
</item>
<item>
<title>Foursquare发布两个开源开发工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63154</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-01-18 15:14:01</pubDate>
</item>
<item>
<title>LibreOffice 3.3 正式发布 - 如何在Ubuntu中进行安装</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63153</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-01-28 08:57:01</pubDate>
</item>
<item>
<title>使用PPA源安装VLC 1.1.6(适用Ubuntu 10.10)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63152</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-10 06:45:02</pubDate>
</item>
<item>
<title>GNOME 3 项目的基石 GTK+ 3.0.0 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63151</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-12 12:35:02</pubDate>
</item>
<item>
<title>基于Web的SVN管理工具 Submin 2.0 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63150</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-14 15:40:02</pubDate>
</item>
<item>
<title>基于Linux手机系统LiMo 4发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63149</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-16 13:40:02</pubDate>
</item>
<item>
<title>最小Linux Tiny Core Linux 3.5发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63148</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-16 15:43:02</pubDate>
</item>
<item>
<title>jQuery 1.5 正式版发布，性能对比测试</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63147</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-18 08:22:02</pubDate>
</item>
<item>
<title>PHP框架CodeIgniter 2.0.0版本发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63146</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-02-23 07:47:02</pubDate>
</item>
<item>
<title>12个Beta后 Firefox 4 RC版终发布，改善众多新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63145</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-03-10 11:00:03</pubDate>
</item>
<item>
<title>Mozilla正式发布 Firefox 4 头3小时下载量达百万次</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63144</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-03-23 11:56:03</pubDate>
</item>
<item>
<title>Ubuntu 11.04 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63143</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-04-28 14:34:04</pubDate>
</item>
<item>
<title>Ubuntu 11.04 Natty Narwhal 下载地址及升级方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63142</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-05-03 08:03:05</pubDate>
</item>
<item>
<title>Firefox 5 正式发布，带来诸多新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63141</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-06-24 08:43:06</pubDate>
</item>
<item>
<title>IE兼顾鱼和熊掌,微软挖苦Chrome/Firefox</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63140</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-07-01 16:28:07</pubDate>
</item>
<item>
<title>著名的邮件客户端软件雷鸟Mozilla Thunderbird 5 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63139</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-07-04 13:46:07</pubDate>
</item>
<item>
<title>Linux发布3.0版内核，操作系统即将迎来新的变革</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63138</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-08-03 08:41:08</pubDate>
</item>
<item>
<title>版本哥Firefox 6带来的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63137</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-08-17 09:20:08</pubDate>
</item>
<item>
<title>百度富文本Web编辑器UEditor开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63136</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-08-19 10:39:08</pubDate>
</item>
<item>
<title>Mozilla Thunderbird 跳跃到6.0版，提供对Win7的更好支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63135</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-08-29 08:07:08</pubDate>
</item>
<item>
<title>PPS for Linux V1.0.2 正式版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63134</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-09-07 09:39:09</pubDate>
</item>
<item>
<title>Nginx 1.0.8发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63133</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-07 14:10:10</pubDate>
</item>
<item>
<title>Ubuntu 11.10正式发布(下载地址)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63132</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-18 06:45:10</pubDate>
</item>
<item>
<title>Google第三代智能机Galaxy Nexus携Android 4.0亮相</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63131</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-25 19:08:10</pubDate>
</item>
<item>
<title>家庭影院系统OpenELEC 1.0发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63130</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-26 08:38:10</pubDate>
</item>
<item>
<title>Jeecms站群管理系统 3.11 版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63129</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-28 15:59:10</pubDate>
</item>
<item>
<title>Piwik 1.6 版发布，增强网站访问统计功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63128</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 10:50:11</pubDate>
</item>
<item>
<title>云桌面：eyeOS发布专业版 提供更好云体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63127</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 16:32:11</pubDate>
</item>
<item>
<title>memcached 1.4.10发布 更关注性能改善</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63126</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-21 08:35:11</pubDate>
</item>
<item>
<title>GitHub发布Mac客户端1.1版更新</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63125</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-24 17:25:11</pubDate>
</item>
<item>
<title>Linux Mint 12 正式版发布，本站下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63124</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-29 13:36:11</pubDate>
</item>
<item>
<title>mkv格式制作工具 MKVToolnix 5.1.0 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63123</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-29 21:00:11</pubDate>
</item>
<item>
<title>开源图像编辑器CinePaint起死回生，发布1.0版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63122</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 21:57:12</pubDate>
</item>
<item>
<title>开源Web 项目计划管理 LibrePlan 1.2.0 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63121</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 22:03:12</pubDate>
</item>
<item>
<title>一淘测试团队工具 BugFree 3.0 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63120</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-06 08:20:12</pubDate>
</item>
<item>
<title>[原创] drupal 7 与 node 相关的数据库表和字段</title>
<link>http://oss.org.cn/html/76/n-63076.html</link>
<text>
	
	

    
在最近的网站编辑中，需要直接通过数据库添加的方式将文章插入到数据库中，所以笔者研究了node文章的数据库结构。达成结果如下所示：


   1，node表（必须）
    本表存储的是node最基本的信息，其中包括node
的nid（node的id号，也就是定位该页面的唯一数值），vid（该node最新版本的id号，对外显示时，将按照vid值显示内容），type（node所属的内容类型），language（语言），title（该node的标题），uid（发表该node的用户id），status（决定该node是否发表）,created（该node发表的时间），changed（该node修改的最后时间），comment(该node与评论的属性，如果关闭评论功能，为1)，还有一些其他的字节，但其他字节目前没有用上。


 2，
node_comment_statistics表（必须）
  
本表和上表是一一对应的关系，记录了评论相关的几条属性，其中包括，nid，cid（最后一个评论该node的评论的cid），last_comment_timestamp（最后一个评论该node的时间戳，如果没有评论，为发表该Node的时间戳），last_comment_name（最后一个评论该node的用户id，如果没有评论，为发表该node的用户id），comment_count（该node的评论数量，如果没有，为0）




3，node_revision表（必须）


   
本表在字段上和node表除类型外完全一致，如果没有版本修改，将显示和node表一样的内容，一但有版本修改，将逐条输入新版本内容。总体上和node表是一对多的关系（一即Node对外显示的同一nid，多即不同的版本vid），记录了与版本相关的几条属性。我们建议在修改重要内容的时候，选择修订版本属性，这样修改后将数据恢复。


   
在以上三个表按照规则填好后，我们就可以在页面浏览到一个node的基本内容，但是其中没有内容或者评论，如果想添加内容，则需要继续添加有关内容的数据表。


4，comment表（非必须)


    
如果有评论，评论的一切相关内容将记录在这个表中，但不是本文所讨论的内容。


5，field_data_body表（非必须）


   
该表记录所有有关body的内容，如果是空页面，可以不填写本表对应nid的内容。
   
本表内容如下：entity_type（本页面的类型，一般为node），bundle（本页面的内容类型），deleted（是否删除，没删除为0），entity_id（对应nid），revision_id（对应vid），language，delta（在有多个body的情况下该body在显示中的排列位置），body_value（body的内容），body_summary（摘要）,body_format（body格式，如果要求显示格式，一般为full_html）。
  
但是，有一点需要注意，因为drupal7有了版本这一重要概念，所以，如果我们添加body内容，那么就必须同时添加版本内容，也就是对应添加field_revision_body表。


6，field_revision_body表（非必须，但是如果需要显示body，该表和上面的表需要同时添加）


  
该表内容性质与表3类似，与表5是一对多的关系，在添加时，只需按照5表一一添加即可。


7，除了body，如果有图片、文件等内容，只需对应添加即可，因为与5，6两表雷同，本文不再一一列举。
作者：杨玲玲，CSIP，中国开源软件中心高级研发工程师，熟悉开源软件评测工具研发和Drupal社区开发。平时最喜欢和大家分享有关各种狗狗的照片和故事。

&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>yangll</author>
<pubDate>2011-12-05 13:28:28</pubDate>
</item>
<item>
<title>内核大会IBM的Paul的演讲《Validating Core Parallel Software》</title>
<link>http://oss.org.cn/html/75/n-63075.html</link>
<text>这是IBM的Paul在内核大会上的演讲ppt：《Validating Core Parallel Software》 PaulEMcKenney.Validation.pdf(1.2 MB)关于IBM的Paul E. McKenney：
Paul是IBM Linux技术中心的CTO，也是RCU（Read-Copy Update，Linux内核中
非常重要的锁机制）的维护者。Paul最近好像还在中国参与一些技术研讨会。
关于Paul：http://www.rdrop.com/users/paulmck/
第六届中国Linux内核开发者大会（China Linux Kernel Developer 
Conference，简称CLK），于2011年10月16日在南京大学召开。本届大会由南京富士通南大软件技术有限公司、南京大学（计算机科学与技术学院、软件新技术国家重点实验室）、Intel中国开源技术中心、AKA阿卡信息技术小组共同主办。
本届大会突破以往大会全天单一会场的惯例，而改为上午一个大会场、下午二个分会场的形式。大会还将在与会嘉宾的邀请规模上进行突破，今年大会将邀
请四位Linux 内核国际知名专家，其中包括Daniel Veillard（Redhat，libvirt 
维护者）、金重宪治（富士通资深内核开发者）、陈莉君教授（西安邮电学院，《深入分析Linux 内核源代码》译者）、Fengguang 
Wu（Intel，中国资深Linux 内核开发者）等。
中国国内的知名内核开发者更将悉数云集，如Intel的林铭、Yanmin Zhang、严正、李少华、Taobao的Tao Ma、Coly 
Li、Fujitsu 的Li Zefan、Lai Jiangshan 等（其中前述嘉宾Fengguang Wu 和Li 
Zefan是近几年仅有的二位参加过Kernel Summit 的中国大陆人士）。
本次大会设置的演讲单元也将相比以往大幅增加，全天设置多达12个演讲议题，内容涵盖虚拟化、文件系统、I/O、RCU 等重要内核技术。大会简介：
中国Linux内核开发者大会（官方微博）
是中国Linux内核领域里最高规格的技术盛会。大会前身为2006年开始举办的AKA 
Linux内核开发者大会，由AKA阿卡信息技术小组、英特尔公司开源技术中心、清华大学共同发起。大会以“自由、协作、创造”为理念，大力支持开源社区
的建设和发展，推动国内Linux内核开发者对国际开源项目的关注和参与，打造中国最大最具影响力的Linux内核开发者技术研讨会。本次大会可望为开源
社区提供更强大的技术支持平台，汇聚更多的Linux内核精英为开源事业做贡献，并将积极与国际开源社区接轨，参与和组织更多的国际开源项目。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-05 13:21:18</pubDate>
</item>
<item>
<title>2011中国Linux kernel 开发者大会后记</title>
<link>http://oss.org.cn/html/74/n-63074.html</link>
<text>　　金秋十月，古城南京，秋阳高照，丹桂飘香，在这个美丽的时节，我们来到了古朴的南京大学校园，今年的中国Linux kernel开发者大会在此召开。到今年为止，中国Linux kernel开发者大会已经举办了六届，这六界大会的举办地点从北京到上海，再到今年的南京，内容也从最初的关注内核系统的基础部分，到虚拟化、新文件系统、电源管理等重要的内核新技术。一、基础篇&amp;nbsp;&amp;nbsp;&amp;nbsp; 本次中国Linux Kernel开发者大会由南京富士通南大软件技术有限公司、南京大学（计算机科学与技术学院、软件新技术国家重点实验室）、Intel开源技术中心、AKA阿卡信息技术小组共同组织主办，大会到场人数达到了500人左右，邀请国内外嘉宾和演讲者共计30余人。其中工业和信息产业部软件与集成电路促进中心（CSIP）开源总监、中国开源软件推进联盟（COPU）专家委员会委员刘明先生代表CSIP主任、COPU主席邱善勤博士到场致辞，此外南京大学计算机学院党委书记武港山教授、富士通南大总经理长田格先生也到场致辞。&amp;nbsp;本次大会嘉宾合影二、人物篇&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 本次大会报名有900多人，实际到会人员在500左右，国内外相关方面的顶级Kernel开发人员都有不少到，其中包括Daniel Veillard（Redhat，libvirt维护者）、Paul E. McKenney（IBM，RCU维护者，多届Linux Kernel Summit执委会主席）等Linux Kernel子项目的维护者，另外还有国内内核方面的专家胡子昂（华为中央软件院首席技术专家）、金重宪治（富士通资深内核开发者）、陈莉君教授（西安邮电学院，《深入分析Linux内核源代码》译者）、Fengguang Wu（Intel，中国资深Linux内核开发者）等，另外国内知名的Linux内核开发者也有不少到场，比如Intel开源技术中心的傅文庆、林铭、严正、李少华；淘宝公司的文件系统专家马涛、Fujitsu集团公司的Li Zefan、Lai Jiangshan等，特别是前述嘉宾Fengguang Wu和Li Zefan是近几年仅有的二位参加过Linux Kernel Summit的中国大陆人士。三、组织篇&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在这里，我们首先要感谢AKA阿卡信息技术小组，以及他们长期的技术合作伙伴—Intel开源技术中心，正是他们的一贯坚持，才支持中国Linux Kernel开发者大会一直走到了今天。另外本次大会的成功举办和巨大进步，则要归功于富士通南大的精心筹备和细致的会务工作。本次大会和以前的大会最大的区别是会议日程的增加，本次大会共设置了上午的3个keynote，下午则是分会场的形式，共有12个话题，分别由来自企业、社区和高校的演讲者带给大家。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 另外，在会议筹办前期宣传方面也做足了功夫，在国内相关的技术BBS、专业内核开发者邮件列表等传统媒体，以及微博等新媒体上都有各种宣传。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 报道方面，会场有来自专业媒体的现场视频直播和微博的图文直播，并且在微博上有互动活动，会后的传播也有突破，大会演讲视频和资料也有快速的下载链接以供没有现场参会的朋友下载学习。四、社区篇&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 本届中国Linux Kernel开发者大会的成功举办，也离不开国内Linux Kernel社区成员和开源技术爱好者为此作出的巨大努力、来自AKA阿卡信息技术小组的何家胜老师、Skyeye开源项目组的康烁老师、来自Intel中国有限公司软件和服务事业部客户市场总监陈绪博士和Intel开源技术中心资深Linux内核开发经理傅文庆先生，协同富士通南大公司Linux开发部门蔡志旻部长、本届大会执委会主席施伟华先生，一同在嘉宾邀请、会务组织和社区用户邀请方面做了大量工作，邀请了如此之多的一线Linux kernel维护者和活跃开发人员。五、总结篇&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 本届大会将会是中国Linux Kernel开发者大会历史上的一个重要里程碑，也是中国Linux和开源社区中的一件大事，也许不久的将来，Linux Kernel Summit或者相同级别的Linux和开源盛会也将落户国内。正如我们所看到的，在南京我们就能汇集超过500名Linux Kernel相关的爱好者和专业开发人员，这说明国内Linux和开源技术相关的人群基数还是巨大的，我们的社区生态系统也将会慢慢地摸索，逐步成长，并取得不断突破。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-10-31 13:05:34</pubDate>
</item>
<item>
<title>陈莉君老师南京内核大会的发言稿</title>
<link>http://oss.org.cn/html/73/n-63073.html</link>
<text>这是陈老师在内核大会上的演讲ppt： 从机制与策略分离探究Linux内核设计之道.pdf(2.15 MB)第六届中国Linux内核开发者大会（China Linux Kernel Developer 
Conference，简称CLK），于2011年10月16日在南京大学召开。本届大会由南京富士通南大软件技术有限公司、南京大学（计算机科学与技术学院、软件新技术国家重点实验室）、Intel中国开源技术中心、AKA阿卡信息技术小组共同主办。
本届大会突破以往大会全天单一会场的惯例，而改为上午一个大会场、下午二个分会场的形式。大会还将在与会嘉宾的邀请规模上进行突破，今年大会将邀
请四位Linux 内核国际知名专家，其中包括Daniel Veillard（Redhat，libvirt 
维护者）、金重宪治（富士通资深内核开发者）、陈莉君教授（西安邮电学院，《深入分析Linux 内核源代码》译者）、Fengguang 
Wu（Intel，中国资深Linux 内核开发者）等。
中国国内的知名内核开发者更将悉数云集，如Intel的林铭、Yanmin Zhang、严正、李少华、Taobao的Tao Ma、Coly 
Li、Fujitsu 的Li Zefan、Lai Jiangshan 等（其中前述嘉宾Fengguang Wu 和Li 
Zefan是近几年仅有的二位参加过Kernel Summit 的中国大陆人士）。
本次大会设置的演讲单元也将相比以往大幅增加，全天设置多达12个演讲议题，内容涵盖虚拟化、文件系统、I/O、RCU 等重要内核技术。大会简介：
中国Linux内核开发者大会（官方微博）
是中国Linux内核领域里最高规格的技术盛会。大会前身为2006年开始举办的AKA 
Linux内核开发者大会，由AKA阿卡信息技术小组、英特尔公司开源技术中心、清华大学共同发起。大会以“自由、协作、创造”为理念，大力支持开源社区
的建设和发展，推动国内Linux内核开发者对国际开源项目的关注和参与，打造中国最大最具影响力的Linux内核开发者技术研讨会。本次大会可望为开源
社区提供更强大的技术支持平台，汇聚更多的Linux内核精英为开源事业做贡献，并将积极与国际开源社区接轨，参与和组织更多的国际开源项目。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-05 12:08:12</pubDate>
</item>
<item>
<title>新一代弹性云计算平台cloudxy发布0.1版</title>
<link>http://oss.org.cn/html/72/n-63072.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 从年初到现在，经过大半年的奋战，康华（博客）在工作之余，带领西邮兴趣小组的同学进行弹性云存储项目的开发，目前终于完成了第一个版本，取名cloudxy，其中的xy意味着，任何感兴趣者都可以加入进来，或许因为您的加入，这个xy就有了未知的扩展。&amp;nbsp;Cloudxy立足于实现虚拟子网（以太网）的弹性云计算平台, 该项目主要包含有两个子项目：&amp;nbsp;HLFS - 虚拟机分布式镜像存储 (类似于亚马逊EBS，首先发布出来）&amp;nbsp;ECM - 虚拟环境管理系统 （后续发布）&amp;nbsp;源代码位于：http://code.google.com/p/cloudxy/&amp;nbsp;邮件列表为：cloudxy@googlegroups.com------------------------------------------------------------------------------------关于HLFS，康华写的相关文档在：FAQ —&amp;nbsp;http://code.google.com/p/cloudxy/wiki/HlfsFAQDESGIN —&amp;nbsp;http://code.google.com/p/cloudxy/wiki/HlfsDesignUser-Manual —&amp;nbsp;http://code.google.com/p/cloudxy/wiki/HlfsUserManualCode -&amp;nbsp;http://cloudxy.googlecode.com/svn/trunk/hlfs/-----------------------------------------------------------------------------------------&amp;nbsp;&amp;nbsp;关于HLFS，请优先阅读HlfS FAQhlfs
 （hdfs log structrue filesystem 的缩写）是一个在hadoop hdfs 文件系统之上实现的log 
structrue filesystem - like 
系统。但要注意它并非一个实现完整posix语义的文件系统（支持目录操作、link等），而是仅仅实现了单一文件的基本管理
（open,write,read,close)的系统，所以把它称为存储系统（block-level)可能更加合适。hlfs 能做什么？由于hlfs自身特色（高可用性、写透、快照、分布式、用户态），适合于做虚拟机镜像存储(类似亚马逊EBS）、在线网盘（金山快盘等）等虚拟块设备的存储架构。甚至发散一下思维，它也可以做为pnfs类似系统的后台存储等等。注， 其实我们的这次发布中有一个在nbd基础上实现的网盘，完全可以做为一个在线网盘使用。hlfs 来源自哪里？hlfs 项目来自于我们当前正在研发的弹性云平台：基于erlang实现的一套虚拟机、虚拟网络管理系统，该系统有点像EC2，不过最终重点放在了管理虚拟子网（二层）上。这个项目也是一个开源项目，目前还处于开发初期。hlfs是该项目中的一个子项目，预先开源出来。hlfs 如何实现的？简单的讲,hdfs 的实现特点决定了它完全可以当做一个高可用性、几乎无限大的网络磁盘使用，但
不幸的是，它只能追加写入，无法随机写入（其实正是这种取舍保证了hdfs反熵、故障切换等简单可靠的特点），对于在线应用随机访问而言（如虚拟机磁盘镜
像）无法直接使用。所以我们借助log structrure 
filesystem的特色，使用追加方式的元数据管理技术，在hdfs这个大磁盘上实现随机数据读写功能。 具体的实现方法见设计描述&amp;nbsp;http://code.google.com/p/cloudxy/wiki/HlfsDesign?ts=1322292067&amp;amp;updated=HlfsDesign。hlfs 有哪些特点？hlfs 继承了hadoop dfs 和 log structrue filesystem的诸多优点，同时也继承了其缺点。优点：高可用性 —— 继承dfs高扩展性（可上大规模）、自动不停机扩容 —— 继承dfs负载均衡 —— 继承dfs用户态实现(便于调试、故障易隔离） ——继承dfs稳定性、可管理性高 —— 得益于dfs成熟、普及写速度优化 —— 继承lfs 和 dfs支持运行态数据快照（便于数据污染后，执行回滚） —— 继承lfs缺点：需要数据合并（merge或者rewrite，已清除的旧数据回收存储空间）—— 遗传自lfs响应速度打折（副本一致性是通过pipeline式串行实现保证，所以写速度受一定影响） ——　遗传自dfs为什么开源？集体智慧永远大于个人或者小团体智慧，因此希望能有更多朋友参与进来，贡献智慧，一同进步。饮水思源，从来都是用别人开源软件，好歹也应该尝试加入潮流。hlfs roadmap ?目前0.1版本实现了基本概念原型，系统支持随机读写。未来将进一步实现:checkpoint机制 ——block cache机制、异步回写机制 —— 目前都是写透读透，安全性高，但性能差。预读readahead —— 读性能优化主要靠readahead和提高cache命中率。异步实现hlfs driver for tapdisk —— 目前实现是用同步IO模型实现之。hdfs一致性的改进（或者说特化）hlfs 项目中包含那些组件 ？libhlfs 库tools ——mkfs.hlfs 格式化工具hlfs-seg-usaage-calc 段使用统计工具hlfs-seg-clean 段清理工具（只能用于离线状态使用）hlfs driver for tapdisk2hlfs driver tapdisk2的一个drivertapdisk_ops 外部控制工具采用nbd架构的虚拟磁盘实现ndb-servernbd-clientnbd-ops 外部控制工具hlfs 和同类项目有什么区别 ？sheepdog
——牧羊犬项目的目的和hlfs最为相似，都是奔着EBS服务而生。hlfs先从xen虚拟化实现入手，sheepdog从kvm入手 
（不过这都不重要，两者都是面向block-level的）。牧羊犬项目的实现，颇具创意——其采用对等网（无单点）结构实现后台存储服务，颇有
Dynamo的影子在其中；hlfs的后台存储没有自己实现，而是建设于hadoop dfs之上，可以说是站在巨人肩膀上 
——　我们也曾经思考过独立开发分布存储系统，不过考虑工作量、以及更重要的是,考虑到我们设想是在最终理想的云环境中离线任务和在线应用是无差别的混合
部署。而hadoop是离线应用的基石之一。所以希望整个系统都能遵循以hdfs为最下层存储基础，其他各种服务(如VM服务镜像存储服务、如key 
value存储服务、SQL \NO SQL等数据服务）都建立在其上的“分层策略”。基于此考虑，我们选择了hdfs做后台存储。moose
 
——有些公司采用moose实现虚拟机镜像存储（存放镜像文件）。moose系统做镜像存储来说有点“大材小用”，或者尾大不掉的感觉。它是一个实在的文
件系统，而不是block-level级别的存储系统，相比而言元数据管理稍微重点。moose系统存储镜像，就需要使用fuse模式挂载到本地系统，也
就是说数据流要经过内核态转发，相比hlfs只存在于用户态，所以数据流更精简，另外就是错误不至于影响内核错误；另外moose系统的反熵过程比较慢，
较为影响当前写操作；不能实现随时快照功能。Drbd ——DRDB可看成网络RAID。能解磁盘冗余、跨机器问题。但不能提供thin provisoning，也不能动态负载均衡。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-05 09:53:01</pubDate>
</item>
<item>
<title>MongoDB文档（Document）全局唯一ID的设计思路</title>
<link>http://oss.org.cn/?action-viewnews-itemid-63028</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-12-04 16:48:12</pubDate>
</item>
<item>
<title>appMobi在黑色星期五将其移动平台开源</title>
<link>http://oss.org.cn/html/27/n-63027.html</link>
<text>	
	　　appMobi 希望通过技术开源的方式，为移动互联网应用更具吸引力，其中包括：JavaScript Bridge 
API——一套可对硬件进行访问的跨平台 API，mobiUs Web App Browser 
——可像执行本地应用一样运行互联网应用的浏览器，HTML5 Game Acceleration——一个可以提升 HTML5 游戏速度的 
Canvas 对象。
　　appMobi 已决定在今年的黑色星期五将其 HTML5 
相关的移动开发技术开源——JavaScript Bridge API、mobiUs Web App Browser 以及 HTML5 Game 
Acceleration。appMobi 的 CTO，Sam Abadir 说这样做是为了帮助原生应用向 Web 应用过渡：“帮助推动原生应用产业向以 Web 应用为基础的应用发展，我们向全世界的软件开发社区分享我们的 HTML5 知识。”
　　JavaScript Bridge API
 是一套面向 iOS 和 Android 开发者的可使应用具备原生应用特性的 
API，其提供了对加速计的支持、还包含摄像头、显示屏以及对设备的高级控制功能，诸如提醒功能、文件操作、播放器、对 DirectCanvas 
插件的直接访问等，此外，还提供对 Analytics API 的支持，该 API 可以跟踪应用的使用和访问情况，诸如此类。
　　mobiUs Web App Browser
 是一款可模拟原生应用的浏览器，可使应用操作设备上的所有硬件资源，最重要的是在有无网络连接时都可以运行应用。mobiUs 使用 HTML5 的 
Canvas 来对应用进行渲染，现在仅支持 iOS 平台，基于 Android 平台的版本计划于 2012 年 1 月发布。
　　HTML5 Game Acceleration 的目的是为 HTML5 游戏提供加速，通过使用 DirectCanvas，避免了文字重排、热点匹配以及为超链接创建索引等的影响。appMobi 宣称，在对多个动画元素同时渲染时，性能可提升 5 倍。
　　appMobi 为 iOS 和 Android 开发者提供了一套 XDK，
该 XDK 可帮助开发者将应用部署为本地应用、HTML5的 Web 应用以及 Chrome 应用。开发者在 IDE 中可以选择使用 HTML 
语言还是 JavaScript 或 CSS。这个 XDK 本身就是一个 Chrome 
应用，它可在一个模拟器中编译和运行应用，可以模拟加速计、WiFi/3G 
连接以及地理位置信息等。编译后的应用同样也可部署在真实的设备上进行进一步地的测试。XDK 和相关的技术已经开源并且免费，appMobi 
通过提供云服务扩展来获取利润，服务包括：消息推送、应用内支付、空中升级以及客户分析等。
　　到目前为止，已经有将近2,700名用户在使用 appMobi，有将近4,000个相关的项目被部署。
　　查看英文原文：appMobi Open Sources Its Mobile Platform During Black Friday
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 21:50:44</pubDate>
</item>
<item>
<title>Carrier IQ Detector帮你确认手机是否预装Carrier IQ</title>
<link>http://oss.org.cn/html/26/n-63026.html</link>
<text>预装在多款手机里的Carrier IQ是一款监测软件，会搜索收集用户的拨号、短信、搜索等信息，让很多智能手机用户惴惴不安。到目前为止，除了Google亲生的Nexus S等几款手机幸免于难之外，已经有AT&amp;amp;T、Sprint、T-Mobile、HTC和三星等多家运营商承认在手机中预装了Carrier IQ，但并没有提供发现和移除该软件的办法。Carrier IQ Detector是由手机安全公司Lookout推出的一款安全检测软件，顾名思义，帮你发现手机中的Carrier IQ监控软件。使用方法很简单：从Android应用市场下载，安装，运行，然后就看到一个界面告诉你手机是否预装了Carrier IQ。下面是中招后的提示界面。至于移除，由于Carrier IQ深度整合在手机固件里面，需要特殊权限才能卸载，万一处理不当，有可能让手机遭到其它病毒的攻击，并且有可能无法收到新的固件更新。如果你相信360，不妨试试他们提供的移除方法，风险自担。Carrier IQ Detector目前只有Android版，下载地址在这里，国内测试可用。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-03 12:46:59</pubDate>
</item>
<item>
<title>Carrier IQ偷窥事件最新进展</title>
<link>http://oss.org.cn/html/25/n-63025.html</link>
<text>AT&amp;amp;T、Sprint、T-Mobile、HTC和三星证实卷入，苹果证实iOS5之前的系统也安装有该应用，Carrier IQ公司再次更新申明今天，AT&amp;amp;T、Sprint、T-Mobile、HTC和三星等几家运营商和厂商已经证实自己的手机中安装有该“内核级别的”监测应用Carrier IQ。AT&amp;amp;T和Sprint的表态是他们使用该应用的主要目的是为了改善无线网络表现；而HTC和三星则表示他们是受运营商要求安装该应用的。T－Mobile的回应则是“我们没有用这个诊断工具收集用户的短信内容，email或者语音信息。”另外，早些时候Verizon，RIM和Nokia已经否认了他们的设备中安装有Carrier IQ，并表示传闻不实。苹果也于刚刚不久前发表了申明：我
们已经在iOS5的大部分设备中停止了对Carrier 
IQ的支持，而且将会在下一次升级中完全移出该应用。另外只有在用户选择同意分享的情况下，诊断信息才会被传回苹果服务器。如果用户选择了同意分享，这些
数据的发送也会被加密和做匿名处理。我们从来没有在诊断信息中记录用户的按键，短信或者其他任何私人信息，而且未来也不会有这样的计划。最后Carrier IQ应用的开发公司也再次更新了自己的申明：尽
管有一些人发现手机内有许多的信息可供Carrier 
IQ监测，但是我们并不记录，存储或者传播短信内容，email，图片，声音或者视频。比如我们知道用户的短信是否发送成功了，但是我们并不记录或者传送
该短信的内容。我们知道哪些应用在吸食手机的电量，但是不会去截屏。隐私是受到保护的。用户与运营商之间相互信任并且期望自己的隐私得到尊重。Carrier IQ则也正是在这个框架里运营并且受到相关法律的管辖。我
们根据主要运营商的调配来监测和分析他们服务的表现以保证网络和设备能够得到最佳工作效果。运营商们希望给自己的客户提供更好的服务，因此收集设备和网络
的信息也是非常必要的。尽管内网工具会传输一些数据比如用户打电话的位置、通话质量等，但它们不会传输最为关键的数据——即手机本身。Carrier IQ的角色是运营商的代理。每一项任务的执行都是不一样的，而且具体诊断数据的收集也是由我们的客户——移动运营商来决定。Carrier IQ不会从用户的设备上收集其他任何数据。事实上，相信朋友们看完HTC，三星以及Carrier IQ的申明后，至少应该明白了一点：那就是他们都是受运营商要求安装的，因此到底收集了多少数据，隐私级别如何也肯定是运营商决定的。那么运营商的表态“为了更好的改善用户服务”，你相信吗？可能接下来很快我们就会看到美国国会对这个重大偷窥丑闻进行调查的消息了。还不了解Carrier IQ到底偷窥什么内容的朋友可以查看我们之前的报导“内核级的监测应用Carrier IQ正在窥视成千上万的美国智能手机用户的拨号，搜索，短信内容等数据（视频）”想要解决Carrier IQ问题的朋友则可以看看以下这条微博（不过更改任何设置都要注意风险，风险自担）诺基亚和Verizon纷纷表示与手机木马程序Carrier IQ无关隐藏在手机中的木马程序Carrier IQ会收集用户的拨号、搜索和短信等数据，然后上传到Carrier IQ的服务器上。截至目前，人们已经在Android手机和苹果的iPhone上发现了该木马，唯一幸免的是Google亲生的Google Nexus One，Nexus S，Galaxy Nexus，摩托罗拉Xoom平板电脑，因为它们都搭载了原生态的Android。我们提到Carrier IQ很可能是运营商要求手机厂商预装在手机上的，现在，手机厂商和运营商们纷纷站出来表示自己的清白。首先是诺基亚。据The Verge称，针对有关Carrier IQ支持诺基亚手机的传闻，诺基亚今天站出来表示：“诺基亚听说了那些声称在诺基亚手机中发现Carrier IQ的报告，报告不准确。任何诺基亚手机上都没有预装过Carrier IQ，所以这些报告是错误的。”OK，诺基亚用户心里的石头可以放下了。美国电信运营商Verizon也已经站出来表示他们没有使用过这款跟踪软件。该公司的Jeffrey Nelson在Twitter上称，Verizon并没有使用Carrier IQ，并且“两周前就已经很明确地表示过”。OK，如果此番言论属实，那么Verizon也清白了。但问题是其他手机厂商和手机运营商呢？潮水渐退，谁在裸泳？</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 20:38:53</pubDate>
</item>
<item>
<title>Carrier IQ仅是冰山一角，预装Android应用存在不安全因素</title>
<link>http://oss.org.cn/html/24/n-63024.html</link>
<text>最近，Carrier IQ泄露用户隐私的重大安全隐患令众多手机用户绷紧了神经。继10月初HTC多部手机爆出安全隐患，移动设备的隐私安全问题再度成为大家关注的焦点。然而，实际的情况比想象的更糟。Carrier IQ事件揭发不过数日，北卡罗莱纳州立大学的研究者最新发布的一份研究报告紧接着告诉我们又一个坏消息——预装Android应用存在不安全因素，可能泄漏个人隐私数据。研
究团队挑选了来自Android阵营几大重要厂商的8部手机作为安全测试对象，分别是 HTC的Legend, EVO 4G和 Wildfire 
S，摩托罗拉的Droid和Droid X，三星的Epic 4G，以及Google嫡系Nexus One和Nexus 
S。测试中，研究团队十分惊讶地发现：测试设备中的基于授权的安全机制存在严重漏洞，恶意预装应用获取系统级优先权后，可以在未经用户授权的情况下轻易访
问手机中的各类数据，用户的个人隐私自然也不能幸免。研究人员将发现的隐私泄漏情况分为两类：显式泄漏与隐式泄露。危害更大的是显示泄漏。
在这种情况下，无需任何授权，恶意应用就可以直接通过公用接口调取其他应用内的数据。如果显示泄漏的方式走不通，过程相对复杂的隐式泄漏依旧可以“曲线窃
密”。恶意应用只需从某一授权应用中继承它的数字证书，再用这张一模一样的数字证书去请求数据。隐式泄漏造成的危害相对较小，但潜在的威胁不容忽视，被盗用的数字证书很可能会影响到那些正常应用的运行。随
后，研究人员又增加了安全测试的机种。在测试的13种Android手机中，有11种手机的预装应用可以通过显示泄漏方式获取用户的个人数据。其
中，HTC的Evo 
4G的表现最为糟糕，发现了多达8项的显式泄漏。有些不安全的预装应用甚至可以代替机主发送短信，删除手机内存储数据，调取录音通话记录，上传地理位置信
息等。值得注意的是，这次安全测试的对象仅限于预装Android应用。这些危险的预装应用已足以让Android用户的隐私暴露得一干二净，何况那些通过Android市场下载安装而未被曝光的恶意应用呢？Carrier IQ事件中运营商的角色已经让我们不得不怀疑手机中预装应用的安全性。尽管运营商信誓旦旦地表示，安装某些预装应用仅是“为了更好的改善用户服务”，但是我们能安心吗？对于这场愈演愈烈的移动设备隐私安全风暴，我们将持续关注并及时送上相关报道。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-02 10:35:57</pubDate>
</item>
<item>
<title>Carrier IQ正在窥视成千上万的智能手机</title>
<link>http://oss.org.cn/html/23/n-63023.html</link>
<text>内核级的监测应用Carrier IQ正在窥视成千上万的美国智能手机用户的拨号，搜索，短信内容等数据（视频）如果不是被一位25岁的黑客Trevor Eckhart 挖掘出来， 这个名叫Carrier IQ的应用可能会一直躲在暗处收集包括Android，BlackBerry和Nokia用户的私人使用数据。在他自己录制的这个视频中，Eckhart详细的展现出了Carrier IQ是如何收集并上传用户的拨号，搜索和短信内容等数据的。比如Eckhart在HTTPS版的Google中加密搜索“Hello World”，都未能逃过Carrier IQ的监测。在视频中Eckhart说，每一个你按下的拨号键数据都会被上传给Carrier IQ。短信内容也被秘密的传给了Carrier IQ的服务器。由于该IQ应用无法被关闭，因此目前可行的解决方法只有Root并重刷系统。另外还有一点值得指出的是用户使用WiFi连接同样会遭到Carrier IQ的监测。那么目前最关键的几个问题就是：该应用是谁授权安装在手机内的——厂商，运营商还是Carrier IQ开发者？为什么消费者没有被告知该应用如此私密性的收集行为，也没有办法进行关闭？这些数据被收集后都如何使用了？最后想指出一点就是我曾尝试着下载并上传该视频到Youku，但是几次都出现转码失败的问题。因此朋友们想看该视频只能到YouTube上看了。另外，Carrier IQ的网站上挂出了一篇申明，大致内容是收集数据不会出售给第三方，而只是用于改善用户的移动网络体验。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-30 21:34:11</pubDate>
</item>
<item>
<title>基于Nginx，淘宝网Web服务器Tengine正式开源</title>
<link>http://oss.org.cn/html/22/n-63022.html</link>
<text>淘宝网Web服务器Tengine正式开源，打造高效平稳易用的Web平台今年的世纪光棍节上，购物狂欢开始的第一分钟，近350万网民疯狂涌入淘宝、淘宝商城购物，仅10分钟不到就创造了10亿元的订单交易，其背后的服务器平台，成功Hold得住了迅猛凶悍的流量冲击，然而此时，支付宝连接的各大网银网站纷纷倒下。淘宝网现在已经将其服务器平台软件Tengine 开源，已提供下载。Tengine基于Nginx，针对大流量网站需求增加了很多功能特性和性能优化。以下沿引项目主页上的特性介绍：继承Nginx-1.0.10的所有特性；组合多个CSS、JavaScript文件的访问请求变成一个请求；支持管道和syslog形式的日志和抽样；自动根据CPU数目设置亲缘性；监控系统的负载和资源占用从而对系统进行保护；显示对运维人员更友好的出错信息，便于定位出错机器；更强大的访问速度限制模块；backtrace模块，程序崩溃的时候可以显示出错的调用栈项目主页提供中英文界面，帮助文档仍在完善中。开源通告：http://tengine.taobao.org/opensource_cn.html</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 21:23:37</pubDate>
</item>
<item>
<title>与Google合约到期后，Firefox面临一个不确定的未来</title>
<link>http://oss.org.cn/html/21/n-63021.html</link>
<text>Mozilla在市场份额上已经输给了Google，它失去了企业用户的忠诚，失去了人才，而与Google合作占它84%收入的协议也在今年11月份到期。很多Firefox用户不知道这家公司是怎么赢利的，它大部分的收入 – 大概每年1亿美元 – 是来自Google，因为Firefox在默认首页和搜索框使用Google的搜索引擎。但是这个协议已经到期了，并且很明显现在没有Mozilla或Google的人确认这个协议是否有续签。我相信Google愿意以一个正确的价格续签，但是现在Chrome正在侵蚀Firefox的市场份额，对于Gogole来说，Firefox已经不再值原来的价值了。为了不让微软签下这个协议来推广它的Bing，或许Google值得签下它。因为如果真有一个人愿意花不值当的钱来买这个市场份额，那就是Bing。考虑到Firefox和IE的历史，如果微软真签了这个协议赞助Firefox的开发，那也是很欢乐的一件事情。我对Firefox感到有些悲哀，它曾经很快很强大，打破了IE时代的统治，挽救了很多Web开发者。而现在，它变成了既臃肿又缓慢的大怪兽，让Web开发者很不爽。它有很充分的理由在市场份额上输给Chrome。在移动领域Firefox没有自己的位置，而大部分的增长和行为都正发生在这个领域。在大多数其他平台的尝试上，它也最终失败。我不确定Firefox还有前途，尽管在很长一段时间里它还可以作为一个边缘浏览器，就像Opera，但是我看不到它还有任何希望能够再次提高自己的市场份额。作者：Marco&amp;nbsp;Arment</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 21:20:12</pubDate>
</item>
<item>
<title>搜索引擎市场竞争加剧，Helioid搜索引擎专注学术市场</title>
<link>http://oss.org.cn/html/20/n-63020.html</link>
<text>搜索引擎市场竞争加剧，创业公司Helioid推出分类搜索引擎专注学术市场在硅谷，想做出一款优秀搜索引擎的创业公司不少，但基本上都死在了巨人Google面前。现在要想做搜索，如果不是微软这样拥有几十亿资金或者专注垂直搜索的公司，没人能和Google进行正面竞争。但Helioid却想改变这一切。这家初出茅庐的创业公司想通过对搜索信息分类，来满足像学生、老师等那些想在某一主题下进行专业调查的用户群体。Helioid的搜索页面很有趣，它通过颜色对搜索结果进行分类，在页面左边会有对应颜色和搜索内容相关的分类目录。相关性最强的分类排在最前面，每个分类都有隐藏和单独显示按钮。用户点击某一分类之后，Helioid就会将目录中的关键词添加到搜索框中形成新的关键词，而左侧便会出现更详细的目录，然后可以一直这样直到找到最精确的搜索结果。比如我搜索“startup”，它就会给我“News”、“Manager”、“Event”、“Resources”等多个分类。然后我选择“Resources”，它就会把关键词变成“startup resources”，然后左边分类变成了“Individuals”、“Entrepreneurs”、“Resource”、“Idea”等。选择“Entrepreneurs”之后，最终就会显示我想要的结果。创始人兼CEO Kenny Hamilton希望Helioid能够弥补普通搜索引擎的不足，帮助那些在专业学术研究上进行搜索的使用者，比如记者、个人博主、律师、财务专家等。除了在精准投放广告上占据先天优势外，Helioid还计划提供额外的服务，比如为专业用户或企业提供搜索信息的数据统计和分析等。目前Helioid面临的问题是如何让这个复杂的搜索流程简单化，太复杂会失去大量的潜在用户。同时相比于Google用户，Helioid的使用者对搜索结果的专业要求更高。Helioid也希望通过这种服务，为搜索引擎使用者打造一个更专业的搜索平台。当然，Helioid也面临着激烈的竞争，除了Google的关联搜索外，专业的学术资料平台也有搜索功能，而且更加专业。同时Google也可能很快推出相关的搜索产品，毕竟Google的学术搜索做的就不错。Helioid的两位创始人分别是Kenny Hamilton和Peter Lubell-Doughtie。他们是在斯坦福读物理学和符号系统学时认识的。后来Hamilton创办了Helioid，Lubell-Doughtie便一边在Helioid做兼职一边在阿姆斯特丹大学人工智能专业读研究生。目前他们尚不打算寻求融资。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-03 21:13:10</pubDate>
</item>
<item>
<title>Win8平板十大成功理由： 知名度高价格多样</title>
<link>http://oss.org.cn/html/19/n-63019.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 美国 IT 网站 eWeek 今天撰文称，Windows 8 平板电脑即将于明年面市。尽管微软尚未借助 Windows 系统在平板电脑市场夺取太大份额，但部分市场观察人士认为，Windows 8 系统将改变这一现状。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;几乎没有人会质疑平板电脑的广阔前景，及其在 PC 市场未来增长中的重要作用。全球各地的人都在抢购苹果 iPad、三星 Galaxy Tab 10.1 和亚马逊 Kindle Fire 等平板电脑。与此同时，这些企业也都赚得盆盈钵满，而且还吸引了更多企业加入竞争。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;迄今为止，微软是尚未在平板电脑市场有所作为的最重要的科技企业。这家软件巨头很早就意识到平板电脑的重要性，但一直都未能夺取像样的市场份额。但借助 Windows 8，微软有望改变这一状况。如今，包括戴尔和惠普在内的多家企业都计划帮助微软实现这一目标。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;唯一的问题时，并非所有人都相信 Windows 8 能够成为平板电脑市场的赢家。事实上，很多人都认为微软将一败涂地。他们错了，原因如下：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、Windows 8 将获得全面成功&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;与此前的多数 Windows 系统一样，Windows 8 也有可能在台式机和笔记本领域获得成功。一旦厂商将 Windows 8 列为唯一的操作系统，企业用户和消费者都将适应这款新系统，而微软也将再次赚得盆满钵满。但这种成功产生的溢出效应还会对平板电脑市场造成影响，那些对 Windows 8 的使用体验颇为满意的消费者也将购买一款搭载 Windows 8 系统的平板电脑。微软的光晕效应将对 Windows 8 平板电脑今后的普及产生重要影响。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2、厂商准备就绪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;已经有多家平板电脑厂商表示将开发 Windows 8 平板电脑，戴尔和惠普或许是其中最值得关注的两家。惠普 CEO 梅格·惠特曼(Meg Whitman)最近表示，该公司将推出 Windows 8 平板电脑，并对该产品的成功颇有信心。当戴尔、华硕和其他无数家企业纷纷进军这一领域后，他们的忠实用户要不了多久也会购买这些产品。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;3、企业用户青睐 Windows&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;人们很容易被“只有消费者才对平板电脑有意义”的花言巧语蒙蔽。事实上，企业用户也很重要，而且一直都很重要。当 Windows 8 平板电脑发布时，这无疑也将成为重要因素。尽管部分企业或许愿意使用 iPad，但采用 Windows 8 平板电脑才是明智之举。这类设备将提供优秀的兼容性和实用性，从而最大程度地提升生产力。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4、应用和外设也很重要&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;提到平板电脑，就不能忽视第三方产品对提升设备吸引力所发挥的作用。唯一的问题时，iOS 和 Android 平板电脑所能兼容的外设很少。但由于 Windows 8 能够对以前的所有外设提供支持，而且很多应用已经在笔记本和台式机上使用过，因此对很多消费者而言，这将成为一大卖点。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;5、知名度高&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;尽管 Windows 8 采用了完全不同的设计，但内核并无太大变化。这很重要，目前全球有数百万人只用 Windows 系统。而且很多人对其他操作系统很不适应，如果他们决定购买平板电脑，Windows 8 肯定能够从中受益。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6、Android 安全性不佳&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;有部分分析师和研究人员认为，Android 平板电脑将在未来几年占据主导。然而，他们却并未意识到 Android 正面临很多安全问题，而且情况似乎越来越糟。Windows 也有不少安全问题，但 Windows 8 却有望成为有史以来最安全的 Windows，部分观察人士甚至认为无需使用第三方安全软件。如果这两种趋势继续发展下去，预计 Android 将被击退。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;7、iPad 孤军奋战&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;苹果 iPad 目前在平板电脑市场占据主导。但它如何应对 Windows 8 平板电脑的猛攻呢？如上文所述，多家企业都已经准备好推出 Windows 8 平板电脑。只要他们如约发布产品，零售商的货架上就将被这类产品占领。iPad 的销量或许能够超过任何一款 Windows 8 平板电脑，但从整体来看，却可能败下阵来。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;8、时机至关重要&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;有人说微软在平板电脑市场已经姗姗来迟，因此无法收复失地。然而最近的研究显示，平板电脑市场将在 2012 年实现爆发。或许微软的计划恰逢其时。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9、价格多样&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kindle Fire 让我们意识到，低价平板电脑的确是一个不错的思路。Windows 8 明年或许也能借此实现巨大的销量。毕竟有多家厂商支持这一系统，应该会有一些企业推出低价产品，另一些企业则会在高端领域挑战苹果。无论如何，预计 Windows 8 平板电脑的价格都将非常多样化。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;10、微软现金充裕&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;要在平板电脑市场获得成功，资金是一项重要因素。拥有足够的营销和推广资金的企业将最终成功，而那些资金匮乏的公司则会失败。幸运的是，微软目 前的现金非常充裕。因此，微软完全可以为 Windows 8 平板电脑投入巨额推广资金。这是一项重要资产，并将在未来几年对平板电脑市场产生深远影响。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 21:08:11</pubDate>
</item>
<item>
<title>Mozilla考虑终结Firefox对Leopard的支持</title>
<link>http://oss.org.cn/html/18/n-63018.html</link>
<text>编者：Firefox 正在一步步的走向不归路，市场份额首度跌至第三，其产品的快速版本策略一度让业界质疑，用户的反应也不佳。
据国外媒体报道，据火狐开发团队的讨论显示，Mozilla公司正在考虑终结火狐浏览器对使用Leopard操作系统的Mac用户的支持
（Leopard是苹果四年前发布的一款操作系统）。据周三的讨论信息显示，Mozilla的技术经理约书-安斯（Josh&amp;nbsp;Aas）提议，公司在六个月
内取消对Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.5的兼容。他说：“如果保持对Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.5的兼容，那么我们就会消耗很大一部分为Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;开发
所提供的资源。
如果不再为Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.5的兼容提供支持，那么我们就能将更多的资源投入到大部分Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;用户的身上，比如使用Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.6和10.7的用户。”
援引Mozilla的数据，目前Mac使用火狐浏览器的用户有24%配置的是Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.5,&amp;nbsp;即Leopard系统。截至2012年6月（安斯建议在这一时间之前停止兼容），Leopard系统的用户只会占到Mac的火狐浏览器用户的13%。
安斯还注意到，苹果公司已经停止对Leopard的后续开发。苹果于今年6月最后一次为这款2007年发布的操作系统提供了安全更新，几周之后，苹
果发布 
了Mac&amp;nbsp;OS&amp;nbsp;X&amp;nbsp;10.7，即Lion操作系统。通常情况下，苹果公司会在提供两款升级版的操作系统之后，停止对旧版本的安全更新。如果安斯的计划得
 到采纳，那么6月5日发布的火狐浏览器13将会是最后一个支持Leopard操作系统的火狐浏览器。
虽然说开发团队对安斯的提议仍有异议，但是没有人反对最终应该结束火狐浏览器对Leopard操作系统的支持，只是团队还在思考合适的结束时间。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-02 13:02:48</pubDate>
</item>
<item>
<title>Windows 8 全新文件系统 ReFS 首度曝光</title>
<link>http://oss.org.cn/html/17/n-63017.html</link>
<text>在Windows 8开发者预览版中，测试人员发现了一种新的文件系统Protogon，尽管处于锁定状态，但Windows 8开发者预览版的注册表中提及了Protogon文件系统，尤其是在关于“引导文件系统”和库的文件夹中。你甚至可以将硬盘格式化为Protogon格式，Windows 8可以识别这种文件系统类型。文件系统Protogon文件系统Protogon但是，情况出现了变化，自Windows 8 Build 8139之后这个文件系统不见了，取而代之的是另一个名为ReFS的新文件系统。如今再使用DOS命令行已经无法再找到Protogon了：在新版Windows 8中，你可以直接在磁盘格式化中找到ReFS：把VHD格式化为ReFS文件系统：从磁盘管理器中查看：尝试在ReFS分区上安装Windows 8：也许，FAT、FAT32、NTFS之后，Windows 8将要采用文件系统就是这个神秘的ReFS。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-02 12:59:24</pubDate>
</item>
<item>
<title>谷歌向开发者发布Android 4.0 x86版源代码</title>
<link>http://oss.org.cn/html/16/n-63016.html</link>
<text>		&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;北京时间 12 月 1 日消息，据国外媒体报道，作为承诺支持英特尔和 AMD 系统的一部分，谷歌 Android 开发团队发布了支持 x86 芯片的 Android 4.0.1（代号冰淇淋三明治）源代码。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;据悉，此次发布的版本不是很稳定，目前并且不支持英特尔芯片组的声卡、摄像头、网卡和硬件加速，但支持 AMD 芯片组的 Wi-Fi、声卡和硬件加速。Android-x86项目主页: http://www.android-x86.org/下载地址：http://www.android-x86.org/download</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-02 18:12:36</pubDate>
</item>
<item>
<title>微软夸耀Office 365空前成功遭业界质疑</title>
<link>http://oss.org.cn/html/15/n-63015.html</link>
<text>　　导语：美国 IT 网站 PCWorld 今日撰文指出，微软本周宣布，该公司开发的云计算办公软件 Office 365 的销售取得空前成功。但这种说法遭到部分分析师的质疑，他们希望微软能提供更具体的数据来支持这一观点。
　　遭受业界质疑
　　Office 365 是微软)为企业设计的云计算办公软件产品，今年六月发布。微软周二表示，Office 365 的销售速度是之前版本 
Business Productivity Online Suite (BPOS)的 8 倍，正成为微软历史上销量增长速度最快的产品之一。
　　然而，市场研究机构 IDC 分析师梅丽莎·韦伯斯特(Melissa Webster)却希望微软能公布 Office 365 
的更具体数据。韦伯斯特说：“微软并未公布用户或营收数据，所以很难判断 Office 365 当前的确切表现。”韦伯斯特并未过分强调 Office
 365 远比 BPOS 更受欢迎的事实。她说：“BPOS 
发布之时，市场对云计算协作解决方案的兴趣不大，微软的产品难以吸引软件即服务(SaaS)用户的眼球。”
　　市场研究机构 Gartner 分析师马修·凯恩(Matthew Cain)认为，微软在本周的表态与其说是炫耀 Office 365 
初期成功的重大成果，倒不如说是微软对 Google Atmosphere 大会的高调回应。Atmosphere 
大会在两周以前召开，来自全球各地的 350 位首席信息官(CIO)出席。Google 在大会上宣布，将对其云计算办公软件产品 Apps 
进行多项升级。
　　Apps 是 BPOS 和 Office 365 的直接竞争对手。凯恩说：“微软宣布 Office 365 旗开得胜，显然是对 
Google 的有力回击，表明企业云计算协作解决方案市场的竞争渐趋激烈。”在发布 Office 365 以前，微软因未能对 Google 
Apps 做出强有力的回击以及没有及时抓住企业软件向云计算模式的转型而饱受批评。
　　与 Google 直接较量
　　目前，尚不清楚最终谁能统治这个云计算协作与通信套件的新兴市场，Google 早在 2007 年便推出了 Google 
Apps，过去两年一直在积极提升其企业级功能，用以吸引大企业 CIO 与 CTO 
的关注。当然，微软在传统通信与协作软件市场仍处于主导地位，这为其吸引更多的客户奠定了良好基础。
　　Office 365 和 Google Apps 
均支持电子邮件、日历、办公软件、即时信息和其他托管于相应数据中心的工具，但两款软件也存在多方面的差异，其中，最大的不同是，Google Apps
 主要以云计算为主，而 Office 365 侧重于云部署与内部部署(on-premise)的混合模式。换言之，Office 365 
可以充分利用微软现有内部软件，尤其是 Office、Lync、SharePoint 和 Exchange 的内部版本。
　　同大多数云计算软件一样，客户需要按月或按年订阅 Office 365 和 Google Apps。此外，像 Office 365 和 Google Apps 这样的云计算软件宣称可以简化和改善协作能力，因为文件保存于共享服务器中，世界各地的用户可以同时使用这些文件，共同编辑。
　　受小企业欢迎
　　这种软件即服务模式可以降低企业对软件和硬件的前期投资，减少企业在部署和维护应用的时间和精力，近年来深受客户欢迎，尤其是那些 IT 员工极少或根本没有 IT 员工的小企业。事实上，微软在发布会上还突出了一个事实，即迄今超过 90%的 Office 365 客户是员工人数为 50 人或低于 50 人的企业。
　　这种解释也得到了韦伯斯特的更多共鸣。她说：“迄今来自新用户群体的反应是积极的。这些用户无疑已经在使用 Office 
桌面工具，但尚未升级到服务器产品。”市场研究机构 Nucleus Research 曾对 Office 365 的客户做了深入调查，该机构对 
Office 365 在小企业中的受欢迎程度并不吃惊。
　　Nucleus Research 分析师丽贝卡·威特曼(Rebecca Wettemann。)说“Office 365 
赋予他们更大的灵活性，可靠性更强。我们看到，许多企业可以大幅削减技术支持开支以及升级授权使用费用。生产效率也是一个重要因素，所以，对于那些具有大
量工人且他们在不同地点工作的中小企业而言，这是以相对低廉的方式提供全方位协作能力的绝佳途径。”
　　凯恩指出，尽管微软对 Office 365 在小企业(这是 Google Apps 
传统上占据优势的细分市场)的超高普及率十分高兴，但该公司的侧重点注定是在高端市场。凯恩说：“眼下，双方的竞争主要围绕小企业展开，但我们估计这场争
夺会快速升级，双方将展开对中等规模企业的争夺。”
　　转变经营模式
　　微软是否会提供更为具体的 Office 365 销售数据目前尚不得而知，但在魁北克的系统整合商 Cloud-IT.ca，Office 
365 已经成为该公司产品组合的有益补充。Cloud-IT.ca 销售与营销主管史蒂夫·诺伊尔(Steve Noel)说：“我们总体上对 
Office 365 的表现相当满意。”这一定程度上也在侧面证实微软有关 Office 365 尤其受小企业欢迎的说法所言非虚。
　　诺伊尔说，许多潜在客户给该公司打电话，询问 Office 365 的情况，而且 Office 365 在 Cloud-IT.ca 所有产品的销量中排名最靠前。他说：“客户急切地想转变他们的经营方式，所以我们很高兴能抓住新的市场机遇。”
　　诺伊尔承认，对于 Cloud-IT.ca 这样的经销商来说，Office 365 给他们创造的利润并不高。第一年，Office 365 经销商可以从客户使用费中获得 18%的分成，但在接下来这一分成比例会降至每年6%。
　　诺伊尔说，经销商看中的是，他们可以向客户销售辅助性服务，从而提升利润空间，如数据迁移、技术支持，这种技术支持不仅针对 Office 365，还可以覆盖相关产品，如移动设备和其他软件工具。
　　Cloud-IT.ca 还希望，微软能提供更多的工具和技术支持，实现 BPOS 数据向 Office 365 的自动迁移。目前，Cloud-IT.ca 只能手动完成这项操作，费时费力，而且经常出现错误。
　　除了对 Office 365 做出 30 多项重大升级外，微软周二还宣布，新增了对 22 
个国家和地区的支持，其中包括中国台湾、阿根廷、南非，这些市场的用户可免费试用 30 天 Office 365。目前已有 41 
个国家及地区的用户可以使用 Office 365 正式版。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-02 18:04:15</pubDate>
</item>
<item>
<title>Linux Kernel 2011峰会 一位内核开发者的见闻</title>
<link>http://oss.org.cn/html/14/n-63014.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Linux Kernel 峰会（简称 KS）是 Linux 最重要的年度大会，受邀的是开源组织各个子系统的维护者和核心开发者。今年的峰会安排在 10 月 23-25日。作为 Google 内核开发组和 Linux 开源开发的一员，作者受邀参加了今年的 KS 大会。文中记录了一些印象较深的讨论。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What’s Next For Control Cgroup&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cgroup 是内核里用来把用户进程分组的机制。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在此基础上每个子系统（CPU、Memory、Disk 和 Networking）有相应的机制来监控和限制资源利用。用 cgroup 和 resource controller 来实现多个任务的资源共享，同时提供每个任务运行环境的隔离，从而保证任务性能的稳定性。由于与现有的 Virtual Machine 在系统性能上保有优势，包括 RedHat、openSUSE、Google、IBM、Oracle 和 Parallel 等在内的公司都在一定程度上采用了 cgroup。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;由于越来越多的用户需求，今年 KS 上专门安排了有关 cgroup 的讨论。James Bottomley 首先提出了目前 cgroup 开发社区资源不足的问题，包括开发人员和维护者。现有维护者由于某些原因即将退出，大家一致认为需要马上找到新的维护者。Andrew Morton 指出很多在内存管理社区的 patch 都是和 cgroup 相关的，现在的问题是没有专门的 cgroup 开发人员参与讨论和做 Code Review，相应的 patch 进度就会被放慢。当然，同样的问题在其他子系统里也会出现。James 在会后创建了一个新的邮件列表（cgroups@vger.kernel.org)，除了针对 cgroup 的讨论外，所有子系统的 controller 的讨论也建议抄送到这个列表上。不管 cgroup 现有的实现是否理想，但用途已经越来越广。包括 Andrew 和 Linus 都在会上提到 cgroup 的发展是不可逆转的，接下来也希望多一些社区开发者加入到其中的讨论中。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Memory Controller（memcg） Workshop&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Memcg 建立在 cgroup 的基础上，支持 memory isolation 机制。这次难得的机会，很多核心开发人员包括维护者都来到了布拉格，所以在 LinuxCon 会议期间我们组织了个专门的 Workshop。包括来自 Google、RedHat、openSUSE、Fujitsu 和 OpenVZ 的十几位工程师在一起讨论了当前的开发进度和之后的开发计划。这次的 Workshop 我们主要针对最近的几个开发项目进行了讨论，这里简单介绍一下几个重点项目。Kernel Memory Accounting：目前3.1内核中 memcg 只支持 user page accounting，但由于用户进程也会申请大量 kernel memory，没有相关的 kernel memory accounting 会严重影响程序运行性能的稳定性。Google 和 OpenVZ 都在参与相应的开发，目前主要的挑战是怎样在大规模网络服务器的环境下运行并不引入系统 regression。Soft_limit Reclaim In Over-committed Environment：Over-commitment 是普遍采用的提高系统资源利用率的配置。在今年的 LSF 上我提出利用 memcg 已有的 Soft_limit 接口在 page reclaim 里实现 over-commit 得到了积极的认可。这次讨论包括 RedHat、Google 和 openSUSE 在内的工程师把现有的实现做了进一步改善，之后会有具体细节发布在 linux－mm 的邮件列表里面。Per-memcg Dirty Limit Accounting：Linux 支持设置系统允许的 dirty page 数目的上界，但没有支持针对每个 Cgroup 的支持。如果只是依靠系统的设置，很容易造成 Cgroup 被 Out-Of-Memory Kill。Google 的实现方法得到了大家一致的认可，接下来应该很快被引入 upstream 里。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这次会后一个很大的感受是越来越多核心内存管理的开发者加入了 memcg 的讨论和研发。记得 2010 年 10 月我去渥太华参加 Linux Symposium（OLS)，当时和 IBM 的 Balbir Singh（memcg 的作者和维护者）讨论接下来的开发项目和相关细节， 大部分的讨论都是我和他在会后进行的。今年在旧金山的 Linux Storage and Filesystem Summit 上，很大一部分会上时间就开始讨论 memcg 相关的开发细节了。所有这些变化很记 Linux Kernel Summit 2011 大会报道.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;大的一个推动力是不断增大的用户需求，Google 的云计算平台和 OpenVZ 的虚拟计算平台都是基于 Container 的，RedHat 和 openSUSE 近期的 distribution 都有 cgroup 的支持。和 Mel Gorman 会后谈到这个问题，统计过去一段时间内存管理的 patch，大部分都是和 memcg 相关的。同时我们都希望能有更多的工程师，尤其是核心的内存管理和文件系统的开发者加入其中的讨论并给出修改意见。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What to do with Android&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今年的话题是怎样提高 Code Review 的质量。大部分子系统的维护者都谈了自己的想法，问题还是集中在没有足够多的资源和时间对每个 patch 做细致的 Review。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;简单介绍一下 Linux 社区开发的流程：所有的 patch 都要发布在 lkml 的邮件列表上。作者的名字需要标注在“Signedoff-by”后，当然一个 patch 也可能有多个作者，最后一个修改过的“Signed-off-by”出现在最下方。比如所有的内存管理 patch 都要先进入 Andrew 的 mmotm tree，然后 Linus 会 pull mmotm，所以大部分的 patch 最后两个“Signed-off-by”是 Andrew Morton 和 Linus Torvalds。一个 patch 一般都是要经过几轮的 code review，最终才有希望被接受。当然也有些 patch 一开始就被否定掉了，主要原因是要解决的问题没有得到一致的认可。如果被多个人 Review 过，每个 Review 的人会在 Email 里打上“Reviewed-by”（相对仔细看过 patch 的细节）或是“Acked-by”的标注（大致看过 patch 的细节）。 之后每个子系统的维护者会根据情况把 patch 加到各自的 tree 里，最后由 Linus 决定把各个子系统 merge 到 Linux 的 tree 里。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;其中最关键的一步是把要解决的问题阐述清楚，不要一开始就关注实现细节。建议如果是大的 feature proposal，最好先发布一个 RFC 然后附有 patch 的 prototype。另一点是要把正确的人抄送进来，一般是包括维护者和最近在相关代码中改动很多的开发人员。建议多花一些时间做测试，一定量测试结果会 大大增加 reviewer 的信心。最后也是最关键的一点，是要得到用户的认可和支持。每个 feature 的开发目的都是要解决一个实际问题，就像 Linus 在会上对 Android 的评价：“Code that actually is used that is actually worth something。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最后给工程师一点建议&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;贡献 patch 到开源社区一般需要花几倍于开发 patch 本身的时间，但受益是长远的。有的 patch 最终没有被接受，有时只是时间的问题。最难的环节一般在开始，怎样解释清楚要解决的问题。如果问题本身被接受了，接下来的实现方法就容易很多了。最后提一 下测试程序，这个十分关键，我们很多时候花太多时间去描述要解决的问题，但一张测试结果图通常胜过千言万语。文 / 韩莹</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-04 17:59:15</pubDate>
</item>
<item>
<title>Pro Git 中文版 PDF下载【无须用户登录】</title>
<link>http://oss.org.cn/html/83/n-62883.html</link>
<text>下载《Pro Git》： Pro.Git-zh_CN.pdf(4.45 MB)关于《Pro Git》
《Pro Git》是一本介绍软件版本控制系统 Git 的书籍，作者为 Scott Chacon ，由 Apress 出版社出版。同时本书全文可以通过 Attribution-Noncommercial-Share Alike 3.0 United States 协议免费获取。
关于《Pro Git》简体中文版
本书的翻译目前尚未完成。目前您在本站看到的是由几位译者利用业余时间合作完成的初稿。您现在就可以进入目录开始阅读《Pro Git》中文版。本书现在处于全面修订审校阶段，我们热切希望听到您对目前翻译的反馈——无论是针对技术细节的还是翻译方式的。您可以通过电邮或者Group告诉我们您的意见和建议。或者直接在GitHub fork 本书的 Markdown 格式“源码“直接进行修改。http://github.danmarner.com/关于网站（http://github.danmarner.com/）
网站是《Pro Git》简体中文版的一个镜像站点，根据DaNmarner（译者之一）的翻译源码仓库持续自动更新。
《Pro Git》还有另一个镜像基于 chunzi的仓库。
您可以在官方站点http://progit.org找到关于本书的最新资讯。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 23:23:46</pubDate>
</item>
<item>
<title>IE9成为Win7平台成长最快的浏览器</title>
<link>http://oss.org.cn/html/82/n-62882.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;早在 10 月底，微软就曾展望 11 月份浏览器市场格局，认为 IE9 将成为 Windows 7 平台上仅次于 IE8 的最受欢迎的浏览器，超越 Firefox 和 Chrome。如今已经跨入了 12 月，是时候总结回顾一下 11 月份的浏览器状况了，那么微软的展望是否实现了呢？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;根据权威市场调研机构 Net Applications 的最新统计数据，11月份，全球 Windows 7 平台上 IE9 占有率已经超过 Chrome 所有版本和 Firefox 所有版本，仅次于 IE8。微软的展望成真，IE9下一步就是赶超前辈 IE8 了，而这也只是时间的问题。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在美国市场，IE9的优势更加明显，其市场份额比所有 Chrome 和 Firefox 加起来还要多一点点。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;微软指出，对于开发者来说这意味着，大多数 Windows 7 用户都已经采用了一个现代浏览器，可以支持现有的支持互操作的 HTML5，开发人员可以在他们的网站上使用相同的标记（markup）。另外，越来越多的网站意识到了 IE9 的价值。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 22:50:54</pubDate>
</item>
<item>
<title>Flash,Silverlight,Win32：2011三大垂死平台</title>
<link>http://oss.org.cn/html/81/n-62881.html</link>
<text>导读：即将过去的2011年见证了技术与行业的许多重大变迁，Flash、Silverlight、Win32三大拥趸众多的主流开发平台在Web和移动的挑战下危机重重。英国资深IT技术记者Tim Anderson最近甚至撰文“Three dying platforms: Flash, Silverlight, Win32”，称三者已经来日无多，来自WebAppTrend的译文全文如下：
现在就来做全年总结似乎还为时过早，但是现在就已经能够看出2011年软件开发领域发生了许多重大而深刻的变革。虽然我是以用户的角度来说的，但是
 用户与服务提供商一直是紧密联系在一起并相互影响的。举个例子，我听说开发者正从SOAP Web Services转向REST，而他们撤离SOAP
 Web Services的理由并不是因为REST比其他的方法要好，而是因为用户已经逐渐从Windows转向HTML了，这使得SOAP Web 
Service不再适合他们的开发了。
具体有哪些变化呢？简而言之，三大平台的战略部署有所减少。三大平台上的变化现在还难以察觉。许多软件在提供商减少投入甚至是停止开发后仍然被广泛
 
使用。而我下面列举的正在衰退的平台，仍然有许多开发正在上面积极部署；衰退并不意味着消失，数十年以后这些平台也许仍然还在运行。我所做的不过是给大家
 一个善意的提醒：如果你将你的软件部署在这些平台上，那么意味着用户想要使用你的软件将变得越来越困难，而你的软件最终将被新的技术所抛弃。
Silverlight 的衰退
在Microsoft发布Visual Studio 
2010时，我曾对开发者表示：Silverlight是非常重要的，并且它有可能成为Microsoft客户端的未来发展方向。而Microsoft的
 
实际开发路线也的确验证了我的想法。Silverlight的确取得了不少成绩：它是一个轻量级、安全的以云计算为中心的客户端，并且不再受Win32的
 GUI 
限制，可以在浏览器或是桌面应用程序中运行，它同时支持Windows和Mac。正如我在之前的几篇文章中提到的，Silverlight是一个非常优秀
 的.NET客户端平台。
这里并不是要长篇大论讨论为什么Silverlight会失败，而是想要提醒大家在2010年底Microsoft 
有意改变开发方向。在Professional Developers Conference（十月 28-29 2010）上，Microsoft 
并没有提到他们的新战略方向，而是关注HTML和IE9。直到在今年九月的Build会议上，Microsoft 才正式提出他们的新方向。
不仅仅是其他的开发者对Microsoft 这样的转变表示吃惊，就连Microsoft 
内部人员也同样感到意外。虽然在公布Silverlight版本计划时已经有迹象表明Microsoft 
有意不再将Silverlight作为公司的主要发展方向，但是我也不知道这个决定具体是什么时候下的。在2009年十一月推出Silverlight４
 时，公司还有意开发Silverlight 5，这点证明，Silverlight在2010年初还是公司的重要开发计划。今年推出的Visual 
Studio LightSwitch可以视为Silverlight的升级版，但是Silverlight 6似乎已经不在计划之内了。
Silverlight目前还是Windows Phone 7上的开发平台，但是包括我在内的许多观察员认为，这只是为了给新的Windows Runtime版本一个缓冲期。
这是Microsoft 的一次昂贵的实验。如果公司在2007年的时候就选择Windows
 
Runtime而不是Silverlight的话，那么他将在这一领域取得明显的领先优势。但是，对Silverlight的投入并不是完全在浪费时间。
 比如Windows 
Runtime的开发可以继续采用Silverlight中使用的XAML语言，而Silverlight开发中使用的以云计算为中心，有客户端安全机制
 的开发模型也可以运用到Windows Runtime的开发中。
Adobe Flash已经被放弃了
在2007年的时候，Silverlight还是为了应对Adobe Flash的流行才开发出来的。然而近期，Adobe正在经历一个痛苦的变革，公司宣布结束移动浏览器上的Flash开发。并且出于商业考虑，公司将主要业务将从开发领域转向内容的创建和发布领域。
Adobe的情况和Microsoft相似。公司内部对这一决定也表示相当意外，就在不久前的洛杉矶MAX会议上，Adobe还表示对Flash和Flex的未来充满信心。下面是一些开发者对不可避免的裁员未来的反应：
产品经理，宣传人员，社区管理员，开发团队听到这一消息后的反应和你几乎一模一样。他们都被这一消息吓了一跳。在我去墨西哥旅行的第三天，我收到了Adobe正在做大调整的消息，许多像我这样的“enterprise” 
类型员工可能面临裁员。这样的情景在德语中应该叫“berflussig”。我尽量使自己公正客观地评论这件事情。由于放假的原因，我错过了许多官方发布
 的信息，但是通过媒体的报道还是知道了一些相关的消息。
但是Flash在桌面浏览器上不是仍然占有很大的市场吗？Flex SDK在Apache 
Foundation的开源项目中不是仍然占有重要地位吗？我只能说，也许吧。但是Adobe已经放弃他们了；现在Adobe的主要方向是为HTML5，
 封装器，应用程序等开发设计工具。
Adobe同时也表示将会继续维护在以下两个市场中的LiveCycle中间件：
Adobe将继续出售并维护为政府和金融市场提供的LiveCycle产品，在这两个市场上，LiveCycle还有很大的商业价值。
然而，这个发言听来，Adobe似乎只是想让一些重要的客户对Adobe继续保持信心，而不是真的想继续推进LiveCycle。
Win32已被放弃，.NET面临改变
在九月份的BUILD会议上，Microsoft宣布了另外一个重大变化。这一变化或许比Microsoft对Silverlight的策略调整更
 加重大。Microsoft上的Win32平台已经运行了２１年（Windows 
3.0在1990年推出），但是现在，Win32平台开发可能将在Microsoft的工作计划中遭受“排挤”。“排挤”这一词是相当准确的，因为在将要
 推出的Windows 8上，我们还能见到Win32的身影，但是它将逐渐被新的Windows 
Runtime（WinRT）和Metro（提供触屏的友好界面）所替代。公司的主要目标是开发出一个能够和Apple的iOS抗衡的平台。它既能在 
ARM上运行，又能在Intel x86上运行，并且有自己的Windows Marketplace（类似于Apple的App Store）。
撇开WinRT的优点不谈，这里最大的新闻就是：Microsoft终于从Windows桌面中走出来了，过去的二十几年里，我们一直都在使用 
Windows桌面。促成Microsoft转变的原因很简单：面对iOS和iPad的日益崛起，Mac在开发者和笔记本市场取得了巨大成 
功，Windows的市场正在逐渐被吞噬。
你的Win32程序依然可以运行，只是Microsoft将去寻找新的方向了。
客户端的.NET 
Framework的命运又将如何呢？我想它还是会继续发展的，由于C#的优秀表现，我认为它会成为Metro上的主流编程语言。但是部分框架可能不再适
 合Metro，而Metro可能也会支持HTML5和JavaScript。Windows 
8是否能成功现在还言之过早，Microsoft可能会发现平板电脑市场早已被iOS和Android瓜分。
这些也许是Metro的炒作，但Win32的衰退已经是不争的事实了。
各种平台方兴未艾
如果上面提到的平台都在衰退，那么又有哪些平台正在上升呢？答案很简单：Apple iOS, Google 
Android和HTML5。在这些平台中，谁能够像Win32一样在下一个二十年里占据主导地位，谁又会在未来几年里就被放弃呢？现在还很难判断出来；
 如果非得要我给出一个我看好的平台排名的话，那我觉得应该是：&amp;nbsp;
HTML, JavaScript 和CSS&amp;nbsp;Apple iOS&amp;nbsp;Google Android</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 22:45:58</pubDate>
</item>
<item>
<title>Web服务器 Lighttpd 再爆漏洞 影响所有版本</title>
<link>http://oss.org.cn/html/80/n-62880.html</link>
<text>
Lighttpd 是一个德国人领导的开源Web服务器软件，其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的web server环境。具有非常低的内存开销，cpu占用率低，效能好，以及丰富的模块等特点。
Lighttpd是众多OpenSource轻量级的web server中较为优秀的一个。支持FastCGI, CGI, Auth, 
输出压缩(output compress), URL重写, 
Alias等重要功能，而Apache之所以流行，很大程度也是因为功能丰富，在lighttpd上很多功能都有相应的实现了，这点对于apache的用
 户是非常重要的，因为迁移到lighttpd就必须面对这些问题。
相较于其他的网页服务器，lighttpd仅需少 量的存储器及CPU资源即可达到同样的性能。今天lighttpd 
团队对外发布公告，包括最新版本1.4.29在内的所有版本存在通过mod_auth 模块在base64加密字符的时候会出现符号错误导致的越界漏洞。
 
具体信息参见： http://download.lighttpd.net/lighttpd/security/lighttpd_sa_2011_01.txt 
该漏洞影响了当前lighttpd的所有发布版本以及SVN r2806 之前的版本。 
目前官方已经发布了补丁，估计新版本1.4.30也会不久发布。 
下载patch： 
http://redmine.lighttpd.net/attachments/download/1323/lighttpd-fix-base64-signedness.patch 
这个漏洞(http://redmine.lighttpd.net/issues/2370)是一个叫“Xi Wang”的国人发现的。 
注：如果你的lighttpd 没有启用mod_auth 模块，则可以表示影响不大。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 22:40:16</pubDate>
</item>
<item>
<title>亚马逊推云浏览器Silk 大大提高浏览速度</title>
<link>http://oss.org.cn/html/79/n-62879.html</link>
<text>亚马逊今天推出了Silk浏览器，据介绍，它采用“分裂式浏览器（split&amp;nbsp;browser）”架构，在移动设备中，通过利用亚马逊网络云服务（&amp;nbsp;Web&amp;nbsp;Services&amp;nbsp;cloud&amp;nbsp;(AWS)）的运算力和运算速度、给硬件设备加速。Silk浏览器同时驻留在Kindle&amp;nbsp;Fire、亚马逊EC2（亚马逊Elastic&amp;nbsp;Compute）中。一旦提交页面申请，Silk会自动决定移动硬件、亚马逊EC2的分工（比如，确定子组件在哪里运行），它还可以考虑网络环境、页面复杂性、缓冲内容的位置等因素。		　　因此Silk能提供更快的网络浏览体验，Silk目前只配备在Kindle&amp;nbsp;Fire上。Fire可以看电影、听音乐、读书、阅读杂志、下程序、玩游戏并上网。　　亚马逊CEO、创始人贝佐斯说：“Kindle&amp;nbsp;Fire引入一款革命性的新浏览器，它叫亚马逊Silk。我们重建浏览器软件栈，改变其形态，将运算部件引入到AWS中。当你使用Silk（不必细想，也不必做任何明确的事），你就可以访问亚马逊EC2的计算力，加速网络浏览。”　　现代浏览器渐复杂：例如，要构建CNN.COM主页需要161个文件，它由25个独立域提供。这种程序的复杂性已成常识。实际上，一个典型的网页需要80个文件，它由13个独立域提供。无线连接延迟严重，往返需要100毫秒。而向一个网页申请提供服务需要数百个往返，当中只有少数能并列执行。最终，网页加载时间要延长数秒。　　相反，亚马逊EC2彻底、始终与互联网相连，大多网站往返延迟时间只有5毫秒，甚至更少；在无线连接时，它们原本会延迟100毫秒。另外，EC2有强大的计算能力。EC2的CPU、存储、内存比移动设备能力大很多。Silk正是利用了EC2的计算力和速度，它从网站上获取所有组件，然后单程、快速提供给Kindle&amp;nbsp;Fire。　　除了比移动处理器计算力更强，亚马逊AWS还与主要互联网服务提供商有互连关系，因为许多大型网站就是寄存在EC2中的。这意味着大量的网络请求根本不会离开AWS架构，从而将传送时间降到数毫秒之内。更甚者，大多的移动浏览器每次执行量受到了处理、内存限制，而使用EC2的Silk却没有这种限制。如果需要数百个文件建立网页，贯穿数十个域，Silk可以与EC2同时请求获得这些元素，而不必迫使移动设备处理器超负荷运行，牺牲电池续航时限。　　传统浏览器需要等待HTML文件，然后才能下载其它网页内容。Silk不同，它收集数百万网页加载结果，将记录保存在EC2中，可以自动获知网页的特点。当其它浏览器还在与主机建立连接时，在引导浏览器寻得内容地址前，Silk已经将自己获知的内容推入Kindle&amp;nbsp;Fire平板中。　　一般来说，网络申请先从解析域名开始，与服务器建立联系、建立TCP连接，发出HTTP申请。为每个申请建立TCP连接要耗费时间和资源，它降低了传统浏览器的速度。Silk持续与EC相连，始终为加载下一个页面准备就绪。Silk还可以使用EC2来保持与顶级网站的联系。通过此法可以降低延迟时间，它是通过持续建立TCP连结来实现的。更进一步来说，Silk的分裂式架构采用了管道、多路复用协议（multiplexing&amp;nbsp;protocol&amp;nbsp;），可以在一次连接中发送所有内容。　　Silk利用了亚马逊的协同过滤技术、机器学习算法。每天Silk服务器响应数百万页面浏览，它越来越清楚自己渲染的网站，也越来越清楚用户会去哪里。通过观察不同网站的浏览图，它可以改进，对于下一个页面申请进行预判。例如，Silk发现领先新闻网85%的访问者下一步会点击网站头条。了解到这些后，EC2和Silk可以一同作出决定Kindle&amp;nbsp;Fire优先推送的内容。最终，Kindle&amp;nbsp;Fire用户下一个喜欢的页面，可能已经存在于设备缓存中，如此一来便可瞬间在显示屏上显现。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 22:34:37</pubDate>
</item>
<item>
<title>利用 jsTestDriver 进行高效 JavaScript 单元测试</title>
<link>http://oss.org.cn/html/78/n-62878.html</link>
<text>　　一个损坏的 JavaScript 代码示例　　Web 应用程序面临的一个最大挑战是支持不同版本的 Web 浏览器。能在 Safari 上运行的 JavaScript 代码不一定能在 Windows® Internet Explorer (IE)、Firefox 或 Google Chrome 上运行。这个挑战的根源是呈现层中的 JavaScript 代码从一开始就没有进行测试。如果没有对代码进行单元测试，那么在升级或支持新浏览器后，组织可能需要花钱反复测试 Web 应用程序。本文将展示如何通过高效的 JavaScript 代码单元测试降低测试成本。　　一个常见用例是登录表单 JavaScript 验证。考虑清单 1 中的表单。　　清单 1. 登录表单&amp;lt;FORM&amp;gt;    &amp;lt;table&amp;gt;        &amp;lt;tr&amp;gt;            &amp;lt;td&amp;gt;Username&amp;lt;/td&amp;gt;            &amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;username&quot;/&amp;gt;&amp;lt;/td&amp;gt;            &amp;lt;td&amp;gt;&amp;lt;span id=&quot;usernameMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;        &amp;lt;/tr&amp;gt;        &amp;lt;tr&amp;gt;            &amp;lt;td&amp;gt;Password&amp;lt;/td&amp;gt;            &amp;lt;td&amp;gt;&amp;lt;input type=&quot;password&quot; id=&quot;password&quot;/&amp;gt;&amp;lt;/td&amp;gt;            &amp;lt;td&amp;gt;&amp;lt;span id=&quot;passwordMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;        &amp;lt;/tr&amp;gt;            &amp;lt;tr&amp;gt;            &amp;lt;td&amp;gt;&amp;lt;input type=&quot;button&quot; onclick=&quot;new appnamespace.            ApplicationUtil () .validateLoginForm ()&quot; value=&quot;Submit&quot;/&amp;gt;&amp;lt;/td&amp;gt;        &amp;lt;/tr&amp;gt;    &amp;lt;/table&amp;gt;&amp;lt;/FORM&amp;gt;　　这个表单很简单，仅包含用户名和密码字段。单击提交按钮时，将通过 ApplicationUtil 执行一个特定的表单验证。以下是负责验证 HTML 表单的 JavaScript 对象。清单 2 显示了 ApplicationUtil 对象的代码。　　清单 2. 损坏的 ApplicationUtil 对象代码appnamespace = {};appnamespace.ApplicationUtil = function() {};appnamespace.ApplicationUtil.prototype.validateLoginForm =  function(){    var error = true;    document.getElementById (&quot;usernameMessage&quot;) .innerText = &quot;&quot;;    document.getElementById (&quot;passwordMessage&quot;) .innerText = &quot;&quot;;        if (!document.getElementById (&quot;username&quot;) .value) {        document.getElementById (&quot;usernameMessage&quot;) .innerText =         &quot;This field is required&quot;;        error = false;    }        if (!document.getElementById (&quot;password&quot;) .value) {        document.getElementById (&quot;passwordMessage&quot;) .innerText =         &quot;This field is required&quot;;        error = false;    }            return error;        };　　在清单 2 中，ApplicationUtil 对象提供一个简单验证：用户名和密码字段都已填充。如果某个字段为空，就会显示一条错误消息：This field is required。　　上面的代码能够在 Internet Explorer 8 和 Safari 5.1 上工作，但无法在 Firefox 3.6 上工作，原因是 Firefox 不支持 innerText 属性。通常，（上述代码和其他类似 JavaScript 代码中的）主要问题是不容易发现编写的 JavaScript 代码是不是跨浏览器兼容的。　　这个问题的一个解决方案是进行自动化单元测试，检查代码是不是跨浏览器兼容。　　JsTestDriver　　JsTestDriver library 是最好的 JavaScript 单元测试框架之一，它为 JavaScript 代码提供了跨浏览器测试。图 1 展示了 JsTestDriver 的架构。　　图 1. JsTestDriver 架构　　捕获不同的浏览器之后，服务器会负责将 JavaScript 测试用例运行程序代码加载到浏览器中。可以通过命令行捕获浏览器，也可以通过将浏览器指向服务器 URL 来捕获浏览器。一旦捕获到浏览器，该浏览器就被称为从属浏览器。服务器可以加载 JavaScript 代码，在每个浏览器上执行测试用例，然后将结果返回给客户端。　　客户端（命令行）需要以下两个主要项目：JavaScript 文件，即源文件和测试文件配置文件，用于组织源文件和测试文件的加载　　这个架构比较灵活，允许单个服务器从网络中的其他机器捕获任意数量的浏览器。例如，如果您的代码在 Linux 上运行但您想针对另一个 Windows 机器上的 Microsoft Internet Explorer 运行您的测试用例，那么这个架构很有用。　　要使用 JsTestDriver 库，请先下载最新版的 JsTestDriver 1.3.2。jsTestDriver 是开源项目jsTestDriver 是 Apache 2.0 许可 下的一个开源项目，托管在 Google Code 上，后者是一个类似于 SourceForge 的项目存储库。只要使用 Open Source Initiative 批准的 许可，开发人员就能在这个存储库中创建和管理公共项目。还有许多其他 JavaScript 单元测试工具，请参见下面的 参考资料 部分中的其他工具，比如 Dojo Objective Harness (DOH)。　　编写单元测试代码　　现在开始编写 JavaScript 测试用例。为简单起见，我将测试以下用例：用户名和密码字段均为空。用户名为空，密码不为空。用户名不为空，密码为空。　　清单 3 显示了表示 TestCase 对象的 ApplicationUtilTest 对象的部分代码。　　清单 3. ApplicationUtilTest 对象代码的一部分ApplicationUtilTest = TestCase (&quot;ApplicationUtilTest&quot;);ApplicationUtilTest.prototype.setUp = function () {/*:DOC += &amp;lt;FORM action=&quot;&quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Username&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;username&quot;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span id=&quot;usernameMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Password&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;password&quot; id=&quot;password&quot;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span id=&quot;passwordMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/FORM&amp;gt;*/};ApplicationUtilTest.prototype.testValidateLoginFormBothEmpty = function () {    var applicationUtil = new appnamespace.ApplicationUtil ();        /* Simulate empty user name and password */    document.getElementById (&quot;username&quot;) .value = &quot;&quot;;    document.getElementById (&quot;password&quot;) .value = &quot;&quot;;        applicationUtil.validateLoginForm ();    assertEquals (&quot;Username is not validated correctly!&quot;, &quot;This field is required&quot;,     document.getElementById (&quot;usernameMessage&quot;) .innerHTML);    assertEquals (&quot;Password is not validated correctly!&quot;, &quot;This field is required&quot;,     document.getElementById (&quot;passwordMessage&quot;) .innerHTML);    };　　ApplicationUtilTest 对象通过 JsTestDriver TestCase 对象创建。如果您熟悉 JUnit 框架，那么您肯定熟悉 setUp 和 testXXX 方法。setUp 方法用于初始化测试用例。对于本例，我使用该方法来声明一个 HTML 片段，该片段将用于其他测试用例方法。　　DOC 注释是一个 JsTestDriver 惯用语，可以用于轻松声明一个 HTML 片段。　　在 testValidateLoginFormBothEmpty 方法中，创建了一个 ApplicationUtil 对象，并在测试用例方法中使用该对象。然后，代码通过检索用户名和密码的 DOM 元素并将它们的值设置为空值来模拟输入空用户名和密码。可以调用 validateLoginForm 方法来执行实际表单验证。最后，将调用 assertEquals 来确保 usernameMessage 和 passwordMessage span 元素中的消息是正确的，即：This field is required。　　在 JsTestDriver 中，可以使用以下构件：fail (&quot;msg&quot;)：表明测试一定会失败，消息参数将显示为一条错误消息。assertTrue (&quot;msg&quot;， actual)：断定实际参数正确。否则，消息参数将显示为一条错误消息。assertFalse (&quot;msg&quot;， actual)：断定实际参数错误。否则，消息参数将显示为一条错误消息。assertSame (&quot;msg&quot;， expected, actual)：断定实际参数与预期参数相同。否则，消息参数将显示为一条错误消息。assertNotSame (&quot;msg&quot;， expected, actual)：断定实际参数与预期参数不相同。否则，消息参数将显示为一条错误消息。assertNull (&quot;msg&quot;， actual)：断定参数为空。否则，消息参数将显示为一条错误消息。assertNotNull (&quot;msg&quot;， actual)：断定实际参数不为空。否则，消息参数将显示为一条错误消息。　　其他方法的代码包含其他测试用例。清单 4 显示了测试用例对象的完整代码。　　清单 4. ApplicationUtil 对象完整代码ApplicationUtilTest = TestCase (&quot;ApplicationUtilTest&quot;);ApplicationUtilTest.prototype.setUp = function () {/*:DOC += &amp;lt;FORM action=&quot;&quot;&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Username&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;text&quot; id=&quot;username&quot;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span id=&quot;usernameMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;Password&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&quot;password&quot; id=&quot;password&quot;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;span id=&quot;passwordMessage&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/FORM&amp;gt;*/};ApplicationUtilTest.prototype.testValidateLoginFormBothEmpty = function () {    var applicationUtil = new appnamespace.ApplicationUtil ();        /* Simulate empty user name and password */    document.getElementById (&quot;username&quot;) .value = &quot;&quot;;    document.getElementById (&quot;password&quot;) .value = &quot;&quot;;            applicationUtil.validateLoginForm ();        assertEquals (&quot;Username is not validated correctly!&quot;, &quot;This field is required&quot;,     document.getElementById (&quot;usernameMessage&quot;) .innerHTML);    assertEquals (&quot;Password is not validated correctly!&quot;, &quot;This field is required&quot;,     document.getElementById (&quot;passwordMessage&quot;) .innerHTML);    };ApplicationUtilTest.prototype.testValidateLoginFormWithEmptyUserName = function () {    var applicationUtil = new appnamespace.ApplicationUtil ();        /* Simulate empty user name and password */    document.getElementById (&quot;username&quot;) .value = &quot;&quot;;    document.getElementById (&quot;password&quot;) .value = &quot;anyPassword&quot;;            applicationUtil.validateLoginForm ();        assertEquals (&quot;Username is not validated correctly!&quot;,     &quot;This field is required&quot;, document.getElementById (&quot;usernameMessage&quot;) .innerHTML);    assertEquals (&quot;Password is not validated correctly!&quot;,     &quot;&quot;, document.getElementById (&quot;passwordMessage&quot;) .innerHTML);    };ApplicationUtilTest.prototype.testValidateLoginFormWithEmptyPassword = function () {    var applicationUtil = new appnamespace.ApplicationUtil ();        document.getElementById (&quot;username&quot;) .value = &quot;anyUserName&quot;;    document.getElementById (&quot;password&quot;) .value = &quot;&quot;;            applicationUtil.validateLoginForm ();        assertEquals (&quot;Username is not validated correctly!&quot;,     &quot;&quot;, document.getElementById (&quot;usernameMessage&quot;) .innerHTML);    assertEquals (&quot;Password is not validated correctly!&quot;,     &quot;This field is required&quot;, document.getElementById (&quot;passwordMessage&quot;).    innerHTML);    };　　配置用于测试的不同浏览器　　测试 JavaScript 代码的一个推荐实践是将 JavaScript 源代码和测试代码放置在不同的文件夹中。对于图 2 中的示例，我将 JavaScript 源文件夹命名为 &quot;js-src&quot;，将 JavaScript 测试文件夹命名为 &quot;js-test&quot;，它们都位于 &quot;js&quot; 父文件夹下。　　图 2. JavaScript 测试文件夹结构　　组织好源和测试文件夹后，必须提供配置文件。默认情况下，JsTestDriver 运行程序会寻找名为 jsTestDriver.conf 的配置文件。您可以从命令行更改配置文件名称。清单 5 显示了 JsTestDriver 配置文件的内容。　　清单 5. JsTestDriver 配置文件内容server: http://localhost:9876load:  - js-src/*.js  - js-test/*.js　　配置文件采用 YAML 格式。server 指令指定测试服务器的地址，load 指令指出了将哪些 JavaScript 文件加载到浏览器中以及加载它们的顺序。　　现在，我们将在 IE、Firefox 和 Safari 浏览器上运行测试用例类。　　要运行测试用例类，需要启动服务器。您可以使用以下命令行启动 JsTestDriver 服务器：java -jar JsTestDriver-1.3.2.jar --port 9876 --browser &quot;[Firefox Path]&quot;,          &quot;[IE Path]&quot;,&quot;[Safari Path]&quot;　　使用这个命令行，服务器将以 Port 9876 启动，捕获您的机器上的 Firefox、IE 和 Safari 浏览器。　　启动并捕获浏览器后，可以通过以下命令行运行测试用例类：java -jar JsTestDriver-1.3.2.jar --tests all　　运行命令后，您将看到第一轮结果，如清单 6 所示。　　清单 6. 第一轮结果Total 9 tests (Passed: 6; Fails: 3; Errors: 0) (16.00 ms)  Firefox 3.6.18 Windows: Run 3 tests (Passed: 0; Fails: 3; Errors 0) (8.00 ms)    ApplicationUtilTest.testValidateLoginFormBothEmpty failed (3.00 ms):     AssertError: Username is not validated correctly! expected &quot;This field     is required&quot; but was &quot;&quot; Error (&quot;Username is not validated correctly!     expected \&quot;This field is required\&quot; but was \&quot;\&quot;&quot;)@:0()@http://localhost    :9876/test/js-test/TestApplicationUtil.js:16    ApplicationUtilTest.testValidateLoginFormWithEmptyUserName failed (3.00 ms):     AssertError: Username is not validated correctly! expected &quot;This field is     required&quot; but was &quot;&quot; Error (&quot;Username is not validated correctly! expected     \&quot;This field is required\&quot; but was \&quot;\&quot;&quot;)@:0()@http://localhost:9876/test    /js-test/TestApplicationUtil.js:29    ApplicationUtilTest.testValidateLoginFormWithEmptyPassword failed (2.00 ms):     AssertError: Password is not validated correctly! expected &quot;This field is     required&quot; but was &quot;&quot; Error (&quot;Password is not validated correctly! expected     \&quot;This field is required\&quot; but was \&quot;\&quot;&quot;)@:0()@http://localhost:9876/test/    js-test/TestApplicationUtil.js:42      Safari 534.50 Windows: Run 3 tests (Passed: 3; Fails: 0; Errors 0) (2.00 ms)  Microsoft Internet Explorer 8.0 Windows: Run 3 tests (Passed: 3; Fails: 0;   Errors 0) (16.00 ms)Tests failed: Tests failed. See log for details.　　注意，在清单 6 中，主要问题出在 Firefox 上。测试在 Internet Explorer 和 Safari 上均可顺利运行。 　　修复 JavaScript 代码并重新运行测试用例　　我们来修复损坏的 JavaScript 代码。我们将使用 innerHTML 替代 innerText。清单 7 显示了修复后的 ApplicationUtil 对象代码。　　清单 7. 修复后的 ApplicationUtil 对象代码appnamespace = {};appnamespace.ApplicationUtil = function() {};appnamespace.ApplicationUtil.prototype.validateLoginForm =  function(){    var error = true;    document.getElementById (&quot;usernameMessage&quot;) .innerHTML = &quot;&quot;;    document.getElementById (&quot;passwordMessage&quot;) .innerHTML = &quot;&quot;;        if (!document.getElementById (&quot;username&quot;) .value) {        document.getElementById (&quot;usernameMessage&quot;) .innerHTML =         &quot;This field is required&quot;;        error = false;    }        if (!document.getElementById (&quot;password&quot;) .value) {        document.getElementById (&quot;passwordMessage&quot;) .innerHTML =         &quot;This field is required&quot;;        error = false;    }            return error;        };　　使用 --test all 命令行参数重新运行测试用例对象。清单 8 显示了第二轮运行结果。　　清单 8. 第二轮运行结果Total 9 tests (Passed: 9; Fails: 0; Errors: 0) (9.00 ms)  Firefox 3.6.18 Windows: Run 3 tests (Passed: 3; Fails: 0; Errors 0) (9.00 ms)  Safari 534.50 Windows: Run 3 tests (Passed: 3; Fails: 0; Errors 0) (5.00 ms)  Microsoft Internet Explorer 8.0 Windows: Run 3 tests (Passed: 3; Fails: 0; Errors 0)   (0.00 ms)　　如清单 8 所示，JavaScript 代码现在在 IE、Firefox 和 Safari 上都能正常运行。　　结束语　　在本文中，您了解了如何使用一个最强大的 JavaScript 单元测试工具 (JsTestDriver) 在不同的浏览器上测试 JavaScript 应用程序代码。还了解了什么是 JsTestDriver，如何配置它，以及如何在 Web 应用程序中使用它来确保应用程序的 JavaScript 代码的质量和可靠性。　　下载描述名字大小下载方法源代码simple.zip3. 35MBHTTP　　关于下载方法的信息　　参考资料　　学习访问 JUnit.org，了解如何使用 JUnit 测试框架。详细了解 YAML，这是一个针对所有编程语言的人类友好的数据序列化标准。访问 developerWorks Open source 专区获得丰富的 how-to 信息、工具和项目更新以及最受欢迎的文章和教程，帮助您用开放源码技术进行开发，并将它们与 IBM 产品结合使用。　　获得产品和技术如果您对应用程序测试感兴趣，请试用我们的  IBM Rational Functional Tester 试用软件。访问  JsTestDriver 下载页，获取最新代码、插件等资源。访问 dojo 项目网站，了解另一个单元测试工具 Dojo Objective Harness (DOH)。探索 JavaScript 单元测试框架 的范围。　　讨论帮助构建 developerWorks 社区中的 真实世界开源 讨论组。加入 developerWorks 中文社区，developerWorks 社区是一个面向全球 IT 专业人员，可以提供博客、书签、wiki、群组、联系、共享和协作等社区功能的专业社交网络社区。加入 IBM 软件下载与技术交流群组，参与在线交流。　　关于作者　　Hazem Saleh 有 6 年的 JEE 和开源技术经验。他致力于 Apache MyFaces 方面的工作，是 MyFaces 项目许多组件的发起人，比如 Tomahawk CAPTCHA、Commons ExportActionListener、Media、PasswordStrength 等等。他是 GMaps4JSF（一个集成 Google Maps 和 Java ServerFaces 的集成项目）和 Mashups4JSF（集成 mashup 服务和 JavaServer Faces 的集成项目）的创始人，是《The Definitive Guide to Apache MyFaces and Facelets (Apress)》和其他许多 JSF 文章的作者，并且是 developerworks 的投稿人和 JSF 演讲家。他现在是 IBM Egypt 的资深软件工程师和 Web 2.0 技术的主题专家。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-12-01 22:32:12</pubDate>
</item>
<item>
<title>打开MySQL数据库远程访问的权限</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62834</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-30 18:58:11</pubDate>
</item>
<item>
<title>IE10预览版第四版发布，支持多项HTML5技术</title>
<link>http://oss.org.cn/html/33/n-62833.html</link>
<text>今日微软正式发布了IE10平台预览版第四版，继续增加IE10对HTML5技术的支持。IE10的这次更新添加了很多实用的Web开发功能，为配合Metro风格UI做了一些优化。需要注意的是，这次的IE10更新仅针对此前发布的Windows 8开发者预览版，而不是目前Windows 7上可用的IE10平台预览版第二版。微软在官方博客IEBlog列举了此次IE10更新的几个重要功能：1.Cross-Origin Resource Sharing (CORS)&amp;nbsp;-&amp;gt; 跨来源资源共享开启CORS功能后，开发者可以安全地使用XMLHttpRequest在多网域间请求、分享、移动所需要的数据资源。2.File API:Writer&amp;nbsp; -&amp;gt; 文件写入API文件写入API支持用blobBuilder在浏览器内操作大型二进制对象和JavaScript类型数组。3.CSS User-Select -&amp;gt; CSS用户选择这个是前端攻城师比较关注的功能。CSS User-Select允许前端攻城师们控制终端用户能够在网页或网页应用中选择的元素和对象。4.支持 HTML5 视频文本字幕，提供对时间码、字体显示位置和字幕文件格式的设置。至于IE系列对W3C标准支持滞后的老问题，微软表示，新版IE10增强了对HTML5标签的支持，为此还进行了118项全新测试。微软建议开发者严格按照HTML5标准编码，在每个页面上首先加注&amp;lt;!DOCTYPE html&amp;gt;的文档类型声明。此外，兼容性视图Quirks Mode也得到了更新。需要测试的开发者请点此下载新版IE10，技术说明请参考微软官方的IE10开发者指导。&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-30 23:32:20</pubDate>
</item>
<item>
<title>Omnivore Books：电子时代的独立书店</title>
<link>http://oss.org.cn/html/32/n-62832.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 大家都知道，在快速发展的网上购物和电子书籍的冲击下，许多传统的大书店经营的举步维艰，而一些小型书店更是在城市的各个角落迅速消失。难道那个逛书店，去书店买书的时代真的一去不复返了吗？我们是否只需要那种冰冷的虚拟数字商业世界？下面的故事为我们提供了另一种选择。它向我们标明在数字世界的沟通之外，人们仍然需要真实的自我归属感。更加个性化、人文化的书店，成为找寻这种归属感的一个载体，也为真实世界打开了通向未来的大门。	电子书正在消灭实体书，美国第三大连锁书店 Borders 已经在数字大潮中倒闭。那么，独立的小书店能够逃过这场完美风暴吗？O’reilly 网站 给我们讲了一个独立小书店如何在电子时代生存和发展的故事。旧金山的 Omnivore Books 是一家传统的实体书店，以经营烹调书为主，已经开张三年。书店主人 Celia Sack 多数时间都在柜台，但她有一个与网络世界相通的入口：Twitter。她在 Twitter 上建立的书店官方账号 @OmnivoreBooks 目前有 7000 多个热情的跟随者。据 Sack 说，逛书店的读者们通常以 Twitter 上的名字来介绍自己，也会讲到与 @OmnivoreBooks 相关的故事。虽然 Celia Sack 虽然不在官方账号上透露太多个人信息，但是她经常分享自己的感悟，在她看来这可以使人们感到温暖，获得归属感。Sack 从事零售业多年，她相信将自己的个性融入书店之中是成功的关键。关于书店的 Twitter 账号，她遵循一个原则：1/3 的个人感受，2/3&amp;nbsp; 的专业信息。“你不会希望人们经常感觉到这是在推销”她说，“我是书店的脸面，这很重要，在电子世界里也是一样。”Celia Sack 也利用 Twitter 账号联系书籍作者。自书店开张的那天起，她就意识到让书籍作者来书店举办活动的重要，一方面她利用自己的小圈子邀请老朋友，另一方面她也和出版商联系，希望他们将 Omnivore 做为作者作品巡游中的一站。后一种策略不怎么成功，似乎出版商们并不热心。偶尔会有书籍作者直接跟她联系，表示乐意去书店演讲。Sack 也希望和作者直接联系，但是这并不容易。2009 年的时候，一位朋友向她介绍了 Twitter。Sack 立刻喜欢上了这个服务，并很快意识到她可以在 Twitter 上直接联系书籍作者。事实证明，她的做法非常有效。与作者在 Twitter 上的联系对书店作用很大：一方面，作者们向出版商介绍了&amp;nbsp; Omnivore Books 书店，烹饪书出版商们现在经常联系她；另一方面，当她在 Twitter 上和作者交流的时候，跟随他们的人会评论并传播书店的信息。Sack 以自己的个性声音赢得了顾客和作者的认同。她意识到应该将个性融入言谈，展示趣味，那要比单纯追求跟随者数量重要。她说，”我的策略是使人们感觉到归属而不是疏离，让他们感觉是你世界的一部分。“她谈到一个例子：有个人想要在书店里向他的女友求婚。Sack&amp;nbsp; 感到紧张而兴奋，她直播了这个过程。这在她的跟随者们中引起了轰动，世界各地传来了许多对新人的祝福。当她把这些祝福展示给这对新人的时候，他们兴奋极了。那一天她获得了 100 多个新的跟随者。Celia Sack 的小书店能够在数字大潮中顺利发展，给了我们许多启示。书店成功的原因除了 Twitter 的传播效应，主人的经营理念和独特个性也是关键。连锁大书店曾凭借货源丰富、设备完善击败了独立小书店。如今网络的发展击溃了连锁书店存在的根基，而个体书店展现的人性和趣味，反而在网络时代成为新的亮点，为自己赢得了再次成长的机会。这也算电子时代一个有趣的现象吧。本文素材来自 O’Reilly， 图片来自 Passionate Foodie</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-30 11:10:38</pubDate>
</item>
<item>
<title>Ubuntu One 放弃对 CouchDB 的使用</title>
<link>http://oss.org.cn/html/88/n-62788.html</link>
<text>本月21号，Ubuntu One的开发团队在Ubuntu邮件列表中发表了一则声明，题为《EOL for couchdb and desktopcouch》，宣布终止对CouchDB和desktopcouch的使用。在过去三年，他们一直与CouchDB所在公司合作，使用CouchDB来解决其扩展性问题。但是他们自身需求的特殊，使得他们并不能使用 CouchDB来解决一些特别的问题，也无法使CouchDB在数百万用户规划下进行良好的扩展，因此，Ubuntu One团队决定放弃对CouchDB的使用。其中用户笔记及播放列表相关的数据库还是会继续提供服务，但是直接的外部访问将会被关闭。而其它使用CouchDB存储的一些数据将会被全部清除。而对于其维护的desktopcouch，也会停止使用、开发及维护。他们在文章中称，如果有人愿意接手，他们很愿意把这块业务交付出去。在即将发布的12.04版本中，新的安装包将不会包含对CouchDB或者desktopcouch的依赖。对于此事，很多人怀疑这意味着CouchDB的失败，并将此看作CouchDB即将寿终正寝的信号。而CouchDB的官方Twitter只做了下面一句回应：Reports of my death are greatly exaggerated.对于我将会死掉的说法，有点太言过其实了。用还是不用CouchDB，用还是不用NoSQL，关键还得看自己的应用场景是否适合。是否真的能从中得到好处。希望正在使用或即将使用NoSQL的朋友都做好自己的考量。Apache CouchDB 是一个面向文档的数据库管理系统。它提供以 JSON 作为数据格式的 REST 接口来对其进行操作，并可以通过视图来操纵文档的组织和呈现。 CouchDB 是 Apache 基金会的顶级开源项目。CouchDB落实到最底层的数据结构就是两类B+Tree 。与现在流行的关系数据库服务器不同，CouchDB 是围绕一系列语义上自包含的文档而组织的。 CouchDB 中的文档是没有模式的（schema free），也就是说并不要求文档具有某种特定的结构。 CouchDB 的这种特性使得相对于传统的关系数据库而言，有自己的适用范围。一般来说，围绕文档来构建的应用都比较适合使用 CouchDB 作为其后台存储。 CouchDB 强调其中所存储的文档，在语义上是自包含的。这种面向文档的设计思路，更贴近很多应用的问题域的真实情况。对于这类应用，使用 CouchDB 的文档来进行建模，会更加自然和简单。与此同时，CouchDB 也提供基于 MapReduce 编程模型的视图来对文档进行查询，可以提供类似于关系数据库中 SQL 语句的能力。 CouchDB 对于很多应用来说，提供了关系数据库之外的更好的选择。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-29 22:14:20</pubDate>
</item>
<item>
<title>叫板Google，YaCy发布开源搜索引擎</title>
<link>http://oss.org.cn/html/87/n-62787.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 听说过YaCy吗？一个名叫 YaCy（http://yacy.net/en/index.html） 的项目要在搜索市场上向 Google 叫板，放出了一个开源搜索引擎，在互联网和内联网皆可使用。YaCy 引擎基于点对点连接，而不是通过中央服务器进行搜索查询。用户下载该软件后就可以进行搜索，保证内容不被审查、搜索结果不会被中央服务器记录和分析。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;“我们在网络上的大多数行为都和搜索有关，这是我们和所要信息的关键一环。对于这样一个至关重要的功能，我们不能仅依赖于几家大公司，并在过程当中让步我们的隐私。”YaCy 项目领袖 Michael Christen 在一份声明中说道。“YaCy 的自由搜索是自由用户和自由信息的关键所在，YaCy 把搜索的控制权交还给我们自己。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;安装成功后，电脑会整理出自己的独立搜索索引和排名，所有的搜索请求都被加密，以保证用户隐私。该软件的第一个版本已经发布，目前有 14 亿份文档已编入索引，已完成了 13 万次搜索。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;“我们正抛弃‘服务要被集中控制’的想法，意识到保持独立的重要性，要创造一个不会失败的架构，”欧洲自由软件基金会主席 Karsten Gerloff 说，“在一个分布式的、点对点系统的未来世界里，像 YaCy 这样的免费搜索引擎软件意义非凡。”YaCy 无疑是一个非常有趣的软件，但还有许多工作要做。比如 SEO 滥用，就必须在软件流行起来前得到解决，某些搜索关键词也会带来法律问题。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;集结号已经吹响，该系统需要开发者和代码人进一步发展才能完善，开源社区要开始热闹起来了。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-29 21:41:47</pubDate>
</item>
<item>
<title>如何利用iptables限制服务器下载速度</title>
<link>http://oss.org.cn/html/86/n-62786.html</link>
<text>iptables中有个limit模块，遗憾的是他只能限制packet，而不是Bytes&amp;nbsp;
不过……&amp;nbsp;先来看一段资料
[root@platinum&amp;nbsp;root]#&amp;nbsp;ifconfig
eth1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Ethernet&amp;nbsp;&amp;nbsp;HWaddr&amp;nbsp;00:E0:4C:39:6D:96
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:119.254.229.29&amp;nbsp; Bcast:172.25.39.255&amp;nbsp;&amp;nbsp;Mask:255.255.255.0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;BROADCAST&amp;nbsp;RUNNING&amp;nbsp;MULTICAST&amp;nbsp;&amp;nbsp;MTU:1500&amp;nbsp;&amp;nbsp;Metric:1
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:691411&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:960662&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:1000
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:82794610&amp;nbsp;(78.9&amp;nbsp;Mb)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:976909968&amp;nbsp;(931.6&amp;nbsp;Mb)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Interrupt:11&amp;nbsp;Base&amp;nbsp;address:0xc800

lo&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Link&amp;nbsp;encap:Local&amp;nbsp;Loopback
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inet&amp;nbsp;addr:127.0.0.1&amp;nbsp;&amp;nbsp;Mask:255.0.0.0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UP&amp;nbsp;LOOPBACK&amp;nbsp;RUNNING&amp;nbsp;&amp;nbsp;MTU:16436&amp;nbsp;&amp;nbsp;Metric:1
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;packets:1106&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;frame:0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TX&amp;nbsp;packets:1106&amp;nbsp;errors:0&amp;nbsp;dropped:0&amp;nbsp;overruns:0&amp;nbsp;carrier:0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;collisions:0&amp;nbsp;txqueuelen:0
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RX&amp;nbsp;bytes:314982&amp;nbsp;(307.5&amp;nbsp;Kb)&amp;nbsp;&amp;nbsp;TX&amp;nbsp;bytes:314982&amp;nbsp;(307.5&amp;nbsp;Kb)

这样唯一不好的是，不一定每个packet都是1500&amp;nbsp;Bytes，这样的限制只是一个大概，并非精确，一般速度均有所偏差eth1是服务器的WAN网卡

从上面的资料可以看到MTU这个东西，eth0和eth1都是1500，ppp0是1492，ppp37是1480（如果客户端是WIN2000则也是1492）

什么是MTU？
MTU是Maximum&amp;nbsp;Transmission&amp;nbsp;Unit的缩写。意思是网络上传送的最大数据包，单位是字节。如果本机的MTU比网关的
MTU大，大的数据包就会被拆开来传送，这样会产生很多数据包碎片，增加丢包率，降低网络速度。把本机的MTU设成比网关的MTU小或相同，就可以减少丢
包。不同的接入方式，MTU值是不一样的，下面是常用的几种接入方式默认的MTU值：
EtherNet&amp;nbsp;（以太网）1500
PPPoE（ADSL）&amp;nbsp;1492
Dial-up（modem）&amp;nbsp;576

由此可以看出，一个标准以太网Frame是1500&amp;nbsp;Bytes，那么我们知道了这一点，可以利用iptables来进行带宽限制

iptables中有个limit模块，遗憾的是他只能限制packet，而不是bytes
但是我们现在已经知道了一个标准Ethernet&amp;nbsp;Frame是1500&amp;nbsp;Bytes，这样就好做了

下面给大家演示一个限制upload速率的实例（已经通过测试）
#&amp;nbsp;Limit&amp;nbsp;Platinum
iptables&amp;nbsp;-A OUTPUT -s 119.254.229.29 -m&amp;nbsp;limit&amp;nbsp;--limit&amp;nbsp;20/s&amp;nbsp;-j&amp;nbsp;ACCEPT
iptables&amp;nbsp;-A OUTPUT -s 119.254.229.29 -j&amp;nbsp;DROP

当然，用这种方法可以比tc更灵活，可以基于IP、PORT去进行控制，也可以针对INPUT/OUTPUT/FORWARD进行限制

</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-29 17:07:53</pubDate>
</item>
<item>
<title>5个在Firefox中解决“标签页过多”综合症的有效途径</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62742</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-28 21:41:11</pubDate>
</item>
<item>
<title>CentOS/RHEL上Apache访问出现403 Forbidden解决方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62740</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-28 16:07:11</pubDate>
</item>
<item>
<title>jQuery淡入淡出特效实现(英文好文章)Jquery Fade In, Fade Out Effect</title>
<link>http://oss.org.cn/html/39/n-62739.html</link>
<text>
Hello welcome to another tutorial by hv-designs, today we’ll be re-visiting the “jQuery Fade In, Fade Out Effect” that i posted up earlier last year. There was no point updating the old post as it is over a year old, so here’s the new one.

Dont Know jQuery?
Dont worry its real simple to use and implement. If you really want 
to get stuck into jquery then nettuts have wrote a complete series on 
the subject SEE THIS LINK.
Whats jQuery?
Firstly whats jquery? i hear you ask, well jQuery is a lightweight JavaScript library that emphasizes interaction between JavaScript and HTML.
What can i do with this code your about to give me? 
Basically its a fade in fade out effect. The effect fades an element to 
50% on arrival of the website, then when you hover over it, it fades to 
100%. The effect can be assigned to basically anything in a website 
wether it be an image, text, a link or even a div.
New Revised Code
12345678910111213141516171819202122$(function() {// OPACITY OF BUTTON SET TO 50%$(&quot;ELEMENT HERE&quot;).css(&quot;opacity&quot;,&quot;0.5&quot;);&amp;nbsp;// ON MOUSE OVER$(&quot;ELEMENT HERE&quot;).hover(function () {&amp;nbsp;// SET OPACITY TO 100%$(this).stop().animate({opacity: 1.0}, &quot;slow&quot;);},&amp;nbsp;// ON MOUSE OUTfunction () {&amp;nbsp;// SET OPACITY BACK TO 50%$(this).stop().animate({opacity: 0.5}, &quot;slow&quot;);});});
The code is pretty much the same as the last snippet only this time 
is contains some “stop” functions which stops the transition from 
repeating over and over again. This seemed to be major problem with the 
last tutorial.
Adding The Effect Into Your Website
Now im going to show you how to add this all into your website. Ive put together a small download which contains a simple example. 
Extract the contents of “example_one.zip” to your desktop, inside the
 folder “example one” create a new folder called “js”. Then inside the 
“js” folder place the jquery libary file which can be found here. 
Create a blank notepad file then go to “file &amp;gt; save as”, save the 
blank notepad file inside the “js” folder called “custom.js”. Inside the
 “js” folder there should be 2 files. “jquery1.3.min.js” and 
“custom.js”. 
Open up the custom.js file in dreamweaver then copy and paste the jquery effect code into the document, then save. 
You should be all set to go, just a couple of things to take note of.
 If you look inside the HTML code of the example you will notice inside 
the HEAD tags there are some lines of javascript.
12&amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/custom.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
Its basically the same as linking a .CSS file only its javascript. 
Without this bit of HTML code jquery wont work. Make sure the filenames 
of the .js files match yours, i do believe you need to change the 1st 
one from “jquery” to “jquery-1.3.min.js”.
The Effect
Now for the effect, as i said before you can use the effect on almost
 anything inside of a HTML document, now we want to add the effect to 
the individual images we have in our example HTML file, if you look at 
the code in the HTML file regarding the images you will notice they have
 a class of “class=”latest_img”. 
The class is defined in the .CSS file. The class is a form of ID in 
which the images can be identified by. If we open up “custom.js” in 
dreamweaver then locate the words “ELEMENT HERE” inside two quotes, 
change “ELEMENT HERE” to the class which is “.latest_img” the effect 
will apply its self to everything with a class of “latest_img” in our 
case the images. Your .js code should look like this.
12345678910111213141516171819202122$(function() {// OPACITY OF BUTTON SET TO 50%$(&quot;.latest_img&quot;).css(&quot;opacity&quot;,&quot;0.5&quot;);&amp;nbsp;// ON MOUSE OVER$(&quot;.latest_img&quot;).hover(function () {&amp;nbsp;// SET OPACITY TO 100%$(this).stop().animate({opacity: 1.0}, &quot;slow&quot;);},&amp;nbsp;// ON MOUSE OUTfunction () {&amp;nbsp;// SET OPACITY BACK TO 50%$(this).stop().animate({opacity: 0.5}, &quot;slow&quot;);});});
Save it, then view your HTML file in your browser. The effect should have been applyed to the single images. See Demo.
More Demo’s
Pretty cool ah?, Now the effect doesnt stop there as you can apply it
 to other things within an HTML document, how about applying it to some 
text? See Demo.
The text within my HTML document is in P tags within a div so if i 
apply the effect to the p tag within a certain div you get the effect 
above. You can also apply the effect to a whole div, which means 
everything in that div will fade even the div itself. See Demo.
Here are all the effects on one page.
Why dont you try and incorparate the fade in fade out effect in your 
designs, or just play around and see what you can come up with ;)
Thanks for reading
	
	


 
   
 
  
   

 
  







About The Author: Richard Carpenter


Hi im Richard Carpenter and im a freelance web and graphics designer 
from England. I am also a regular Blogger, Tutorial Writer, and owner of
 Photoshop Plus. You can follow me on twitter HERE. You may also view my portfolio HERE.&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 23:16:44</pubDate>
</item>
<item>
<title>19本Web开发与设计人员应该收藏的免费电子书</title>
<link>http://oss.org.cn/html/38/n-62738.html</link>
<text>　　本文介绍了对 Web 开发及设计人员非常有用的19本免费电子书，希望你会喜欢。　　1. Design Your Imagination 《打造你的想象力》　　2. HTML5 WTF? 《告诉你什么是 HTML5》　　3. JavaScript Programming for the Absolute Beginner&amp;nbsp; 《JavaScript 菜鸟编程》　　4. Photo Editing Business Startup 《图片编辑入门》　　5. Taking Your Talent to the Web 《让 Web 爱上你的天赋》　　6. Data Structures and Algorithms 《数据结构与算法》　　7. Foundations of Ajax 《Ajax 基础教程》　　8. Using Joomla: Building Powerful and Efficient Web Sites 《使用 Joomla：打造强大高效的 Web 网站》　　9. Faster, and More Secure Webfonts 《更快、更安全的网页嵌入字体》　　10. CSS Cookbook 　　11. Ajax design patterns 《Ajax 设计模式》　　12. Head first HTML with CSS &amp;amp; XHTML 《Head First HTML 与 CSS、XHTML 》　　13. Integrating Accessibility Through out Design 《问：网页设计无障碍通道》　　14. HTML5 Quick Learning Guide 《HTML5快速学习指南》　　15. Browsers and the Web 《浏览器与 Web》　　16. Essential JavaScript And jQuery Design Patterns – A Free New Book 《JavaScript 与 jQuery 的基本设计模式》　　17. The Woork Handbook 《Woork 手册》　　18. Time Management for Creative People – Free E-book 《创意人员的时间管理》免费电子书　　19. Special edition using HTML and XHTML 《Using HTML and XHTML》特别版　　Via&amp;nbsp; DJDESIGNERLAB</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 23:12:33</pubDate>
</item>
<item>
<title>23个 jquery 淡入淡出效果</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62737</link>
<text>有很多人真正喜欢玩jQuery。但是，有一些人却不懂得编码。他们想通过使用一些易用的插件才实现效果。jQuery插件的伟大之处在于，您可以不需要懂得编码，也可以轻松实用。
为了达到这个目的，在这里我收集的23个真正有用的jQuery的淡入淡出效果。这些jQuery插件将帮助您，应用于您的网站上。
1. Jquery Fade In.Fade Out

Demo
2. A Simple jQuery Slideshow

Demo
3. Fade In and Out Images from a Single Directory Using  jQuery

Demo
4.  Fade Transition Plugin for jQuery

Demo
5. jQuery Image Gallery with Fade in, Fade out, and Delay

Demo
6. CrossSlide

Demo
7. Simple JQuery Image Slide Show with Semi-Transparent  Caption

Demo
8.  Making a Slideshow with jQuery

Demo
9. Simple jQuery slideshows

Demo
10. Supervised

Demo
11. The 820 byte Compact jQuery Slideshow Component

Demo
12. InnerFade with JQuery

Demo
13. jQuery Hover Fade Method (Modified)

Demo
14. PictureSlides

Demo
15.  Slide Show using jQuery

Demo
16. jQuery Slideshows With the Cycle Plugin

Demo
17.  jQuery Cycle Plugin

Demo
18.  GalleryView: A jQuery Content Gallery Plugin

Demo
19.  Pikachoose

Demo
20.  s3Slider jQuery Plugin

Demo
21. Galleriffic

Demo
22. jQuery Plugin – An image Gallery

Demo
23. jQuery Slideshow Plugin

Demo


译自：23 jQuery Fade in Fade out Effect</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 22:50:59</pubDate>
</item>
<item>
<title>CSS定位属性Position详解</title>
<link>http://oss.org.cn/html/36/n-62736.html</link>
<text>1. position:static所有元素的默认定位都是：position:static，这意味着元素没有被定位，而且在文档中出现在它应该在的位置。一般来说，不用指定 position:static，除非想要覆盖之前设置的定位。#div-1 { position:static;}2. position:relative如果设定 position:relative，就可以使用 top,bottom,left 和 right 来相对于元素在文档中应该出现的位置来移动这个元素。【意思是元素实际上依然占据文档中的原有位置，只是视觉上相对于它在文档中的原有位置移动了】#div-1 { position:relative; top:20px; left:-40px;}3. position:absolute当指定 position:absolute 时，元素就脱离了文档【即在文档中已经不占据位置了】，可以准确的按照设置的 top,bottom,left 和 right 来定位了。#div-1a { position:absolute; top:0; right:0; width:200px;}4. position:relative + position:absolute如果我们给 div-1 设置 relative 定位，那么 div-1 内的所有元素都会相对 div-1 定位。如果给 div-1a 设置 absolute 定位，就可以把 div-1a 移动到 div-1 的右上方。#div-1 { position:relative;}#div-1a { position:absolute; top:0; right:0; width:200px;}5. 两栏绝对定位现在就可以使用相对定位和绝对定位来做一个两栏布局了。#div-1 { position:relative;}#div-1a { position:absolute; top:0; right:0; width:200px;}#div-1b { position:absolute; top:0; left:0; width:200px;}6. 两栏绝对定位定高一种方案是给元素设定固定高度。但这种方案对大多数设计来说不太适合，因为一般我们不知道元素中会有多少文本，或者将要使用的精确的字号。#div-1 { position:relative; height:250px;}#div-1a { position:absolute; top:0; right:0; width:200px;}#div-1b { position:absolute; top:0; left:0; width:200px;}7. 浮动对于可变高度的列来说，绝对定位就不起作用了，以下是另外一个方案。我们可以浮动一个元素，使它移动到左边/右边，并且是文本环绕着它。这主要用于图像，但这里我们把它用于一个复杂的布局任务(因为这是我们唯一的工具)。#div-1a { float:left; width:200px;}8. 浮动列如果我们把一个元素向左浮动，并且把第二个元素也向左浮动，they will push up against each other。#div-1a { float:left; width:150px;}#div-1b { float:left; width:150px;}9. 清除浮动列在浮动元素之后，我们可以清除浮动来使其他元素正确定位。#div-1a { float:left; width:190px;}#div-1b { float:left; width:190px;}#div-1c { clear:both;}糖伴西红柿说：虽然我一直用浮动布局，但是掌握好 position 也是必须的，其实也没那么难的。。。原文来自经典的：Learn CSS Positioning in Ten Steps</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 22:18:58</pubDate>
</item>
<item>
<title>微处理器40年发展史（超大图）</title>
<link>http://oss.org.cn/html/35/n-62735.html</link>
<text>		&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1971年11月15日，全球第一款微处理器“Intel 4004”从 Intel 公司诞生，时至今日已走过40年的岁月。虽然微处理器在现代计算设备里是核心，是大脑，但是就像汽车，大楼背后的设计师一样，它们总是位居幕后，因此很少被人认知赞美。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;那么微处理器在现代计算设备的发展中作出的贡献有多大？其出现后计算技术的进程发生了多大的加速？我们一起来看一张超大信息图：</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 17:42:16</pubDate>
</item>
<item>
<title>雅虎声称对Apache Hadoop的贡献巨大</title>
<link>http://oss.org.cn/html/34/n-62734.html</link>
<text>								&amp;nbsp;&amp;nbsp;&amp;nbsp; 几周前，Hortonworks在博客上强调了雅虎这几年来对Hadoop作出的巨大贡献。这有两重含义：一、向前雇主致敬；二、证实雅虎仍然是Hadoop的主要贡献者。&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个星期初，Cloudera回复了我们的博客，称我们报道了一个误导性的新闻。虽然我们通常不回复其他供应商的博客（即使他们说了一些有疑议的事情），但我们觉得这次一定要回复。&amp;nbsp;&amp;nbsp;&amp;nbsp; 在下面的许多文字中，他们声称Cloudera才是本年度Apache Hadoop的最大贡献者。   &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; 虽然Cloudera在过去的几个月里确实增加了他们投放的补丁数，但将补丁数作为评判一个公司对Apache Hadoop贡献的最重要指标是有误导性的。&amp;nbsp;&amp;nbsp;&amp;nbsp; 为什么？因为根据投入的时间和工作量的不同，补丁是不同的。在贡献者不断获取经验并开始进行更复杂的任务时，他们的补丁通常会变大。一个补定可以像一个新功能或子系统一样复杂，也可以像更正文档里的一行拼写错误一样简单。通常来说，新手贡献小的修复补丁，而专家贡献需要很大工作量的复杂补丁。&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们相信代码的行数是一个重要的更为中肯的标准。虽然改正拼写错误很有用，但它远不如添加新功能或修改重大错误来得重要。&amp;nbsp;&amp;nbsp;&amp;nbsp; 和一两行的补丁比较：&amp;nbsp;&amp;nbsp;&amp;nbsp; HDFS Federation：将近15000行代码&amp;nbsp;&amp;nbsp;&amp;nbsp; HDFS EditLogs Re-write：将近10000行代码（由Cloudera的工程师发起）&amp;nbsp;&amp;nbsp;&amp;nbsp; NextGen MapReduce：超过150000行代码&amp;nbsp;&amp;nbsp;&amp;nbsp; 当你了解到今年Apache Hadoop收到的补丁有将近40%少于10行后，你就会意识到，只用补丁数量作为指标将对事实造成严重的扭曲。&amp;nbsp;&amp;nbsp;&amp;nbsp; 有一个事实就是，Hortonworks和雅虎一起贡献的代码行数达到了Apache Hadoop收到的代码总行数的80%。这个数字（正如Owen在他的方法里描述的那样）归功于那些雇佣开发者完善Apache Hadoop的公司。那些公司通过支持员工为Apache Hadoop编写代码来帮助Apache Hadoop的发展，而这只有在这些企业得到认可时才显得公平。&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里有一个图标展示了2006年以来Apache Hadoop收到的代码的总行数，这表基于在贡献时期雇佣了开发者的公司。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; Cloudera声称认可应该给开发者的现任雇主，不应考虑前雇主的投资。我们同意个人，而非公司，才是开源项目贡献者；但我们不认为我们可以忽略公司对建造Apache Hadoop所作出的投入。只有把在雅虎时的作出的贡献和雅虎作出的贡献都考虑进去才显得公平。&amp;nbsp;&amp;nbsp;&amp;nbsp; 不管怎样，我们使用Cloudera的方法计算了从2006年到现在贡献给Apache Hadoop的代码行数，并得到如下结果： &amp;nbsp;&amp;nbsp;&amp;nbsp; 这个图标着重于显示那些最活跃的Apache Hadoop贡献者现在都在那里就职。我们为当时的同事感到骄傲，现在他们去了像Facebook、LinkedIn、eBay等公司去传播他们的知识和经验。值得注意的是这个方法对Hortonworks和其他公司有利，但没有很大地改变Cloudera的贡献。&amp;nbsp;&amp;nbsp;&amp;nbsp; 虽然现在有一个积极的生态网让人才（多为雅虎的人才）在各公司中流动，但Hortonworks和雅虎雇佣的开发者仍然贡献了Apache Hadoop的大部分代码。&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果你只看用Cloudera的方法算出的2011年的结果，那么情况大致一样：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; 正如你所看到的，Hortonworks和雅虎是Apache Hadoop的两大贡献者，它们目前贡献了大约68%的代码行数。正如Owen在他博客里强调的及我常说的，我们很高兴看到其他公司对Apache Hadoop的贡献率上升。我认为这是一个健康的、正在成长的生态系统的表现。&amp;nbsp;&amp;nbsp;&amp;nbsp; 最近有一些图表带有代码行数和补丁数两个数值，根据贡献者在他们贡献期时的雇主。第一个表展示了自2006年来的总数以说明一些历史的观点： &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 第二个表展示了2011年贡献的代码行数和补丁数： &amp;nbsp;&amp;nbsp;&amp;nbsp; Cloudera在他们的博客中指出：他们已经增加了贡献给Apache Hadoop的补丁量，对此我们赞赏他们的这一行为。然而，他们省略了很重要的一点，那就是Hortonworks和雅虎仍然是Apache Hadoop项目的最大贡献者。这是一个不争的事实。&amp;nbsp;&amp;nbsp;&amp;nbsp; 最后，让我指出我们聚焦于Apache Hadoop核心的分析，即是Common、HDFS和MapReduce。每个分布都包含了两个或两个以上这些项目，没有这些项目我们无法建立Hadoop。&amp;nbsp;&amp;nbsp;&amp;nbsp; 雅虎也帮助了其他项目比如ZooKeeper、Pig、HCatalog、Avro及Ambari。雅虎和Hortonworks都有专业的技术并将继续帮助这些项目。其他公司也在其它项目中提供专业技术，比如Facebook对Hive，及Facebook、Stumbleupon和TrendMico对HBase。Cloudera在近期提交给Apache的项目中也有专业技术，包括Bigtop、Sqoop、Whirr和Flume。生态系统中也有一些项目可以加到分析中，包括Azkaban、Cascading、Cassandra、Giraph、Hama、Hypertable、Kafka、JAQL、Mahout、Mesos、OpenMPI、R、Spark及Thrift等等。在Hadoop项目的分析中添加任意一个项目都会改变主题。&amp;nbsp;&amp;nbsp;&amp;nbsp; 总结&amp;nbsp;&amp;nbsp;&amp;nbsp; 让我重申一遍：Hortonworks是Apache Hadoop的重要贡献者，它加速了Hadoop的发展及它在全球的普及度。我们很激动地看到了不断有个人和公司作出贡献。我们很高兴能与Apache Hadoop社区一起工作，对此我们已经做了将近6年。&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们相信，Apache Software Foundation对Hadoop的持有是Hadoop的一个重要优势。我们为自己不持有代码而感到骄傲。我们把100%的代码都贡献给了Apache。我们没有任何专利软件。我们所有的代码都给了Apache，以此来让Apache变得更好。我们相信这是创造一个有活力的Hadoop社区和生态系统最快最好的方法。&amp;nbsp;&amp;nbsp;&amp;nbsp; 最后，我们深信我们是Apache Hadoop领域最资深的公司，我们在协助企业和技术供应商与Apache Hadoop中也处于很重要的位置。			                          									 			 			 声明：			 				 				 本文系移动Labs独家稿件，版权为移动Labs所有。未经本网授权不得转载、摘编或利用其他方式使用上述作品。已经本网授权的媒体、网站，欢迎转载，但请务必注明出处（移动Labs）及作者，同时不得对本网内容原意进行曲解、修改，否则必将追究法律责任。				 				 				 						 </text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-28 17:29:27</pubDate>
</item>
<item>
<title>开源世界中流行的那些数据库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62690</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-27 14:01:11</pubDate>
</item>
<item>
<title>把成熟的代码从.NET移植到Mono</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62689</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-27 14:12:11</pubDate>
</item>
<item>
<title>大数据: 发展还是变革？</title>
<link>http://oss.org.cn/html/88/n-62688.html</link>
<text>无论你是使用关系型数据库系统、哈希表，还是其它结构来维护数据，你肯定对NoSQL和大数据有所耳闻。 目前，谷歌、雅虎和亚马逊等公司都已经在开发或者使用大数据/NoSQL的解决方案。但除了一些非常具体的案例外，这些大数据的实现方案真的那么有用吗？在近期的一篇文章中，凯捷咨询公司的史蒂夫·琼斯甚至指出有时候大数据可能就是一大骗局，或者至少还不能完全成为一种万能药，可以解决原有关系型数据库管理系统实现方案中的各种问题，这些你可能都已经注意到了：
我注意到市场上对大数据的宣传已成泛滥之势。有些公司将这种容量的爆炸式增长看作是历史、新技术、新方法延续的一部分，只是发展
而不是变革。诚然，Map Reduce技术很酷，但它的技术难度也远胜于SQL和数据库设计，因此这也意味着该技术远不能成为一种商业上的万能药。
史蒂夫接着指出，可用于存储极为重要且有一定规模数据集的内存数据库技术（基于关系型数据库管理系统）不久将成为现实。他通过引用一篇文章来阐述自己的观点，该文章讨论了数年前，雅虎是如何使用一种经过重大修改的Postgres实现来存储2PB数据的：
下面是大数据的要点：它95%以上都只是以指数级持续增长的数据，这是与增强的处理能力和存储容量相匹配的，或者至少是随之增长
的。（……）当然，对索引的优化可能更难，并且你可能要将数据来回移动到固态硬盘上，但严格来说，这样数据量就变得“更大”了，而不是一次简单的数据移
动。
我们过去也从Mike Stonebraker这些人那里听说过类似的事情，他表示许多用户都将受益于诸如重新构建的关系型数据库管理系统和列存储等方法，从而尽可能多地利用主存和固态硬盘，同时仍能保持传统较强的一致性、ACID语义，并在某些情况下可以使用SQL。但史蒂夫接着重新强调了Map Reduce技术，并且认为这一实现方案背后的模型需要你就如何存储、查询和操作数据有一种不同的思维方式，在某种程度上，用户要将这种解决方案集成到他们现有的投资环境中就变得更加困难了。
就像不会有那么多人能够准确地用多线程的方式思考一样，也不会有那么多人能够用Map Reduce的方式思考。
当我们经常听到新的实现方案，或者厂商指望着能鼓动我们采用他们的解决方案时，这又把大数据置于何地呢？根据史蒂夫的观点：
我们发现人们使用大数据的方式和使用SOA一样，贴个标签，然后就宣称 
“集成了Hadoop”或“集成了社交媒体（social 
media）”，或者换个说法，“我们已经建立了一个连接器”。看看刚刚那个让你大跌眼镜的说法吧。它只是一种老式的学校企业应用集成（EAI）连接器，
不过连接到新数据源或新ETL连接器而已。
这可能算是一种笼统的说法，但也说明了一些事实。因为现在有过多的炒作，并且太多的厂商都在自己的实现方案上贴上了NoSQL/大数据的标签，但其
实这些实现方案对于手头上的任务并不适合，那么在这种“新的数据解决方案”的背后是否有丢失核心信息的风险呢？正如史蒂夫所指出的，这种状况可能跟SOA
的早期应用状况相似，那时各厂商都在自己的解决方案上贴上SOA的标签，但实际上大多数方案都根本不是SOA。那么你如何准确衡量你需要的是大数据的解决
方案，还是提供给你的是场大骗局（正如史蒂夫所言）呢？史蒂夫提出了一些建议，至少可以在评估厂商的解决方案时使用。其中包括：

    你可以用“大数据库（Big Database）”来代替“大数据”吗？如果可以，那它就只是一次更新。
    “高级”可以简化成“我们刚刚获得一个企业应用集成连接器”吗？
    是否与2009年的产品基本相同，只不过在新产品上贴上了大数据/NoSQL的标签？
    有什么方法可以将处理流程移动到数据上进行，而不是到处移动数据吗？这是过去包括Jim Grey在内的很多人都建议的做法。

不幸的是这些“规则”都不具有科学性，并且都需要某种程度的主观判断。那么还有其它规则可用吗？如果你已经从传统的关系型数据库管理系统迁移到别的
平台上，那么你是使用什么来决定迁移的必要性，以及如何选择要迁移到的具体实现方案呢？这种迁移工作是否成功？如果不成功，又是为什么呢？

查看英文原文：Big Data: Evolution or Revolution?</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-27 15:28:56</pubDate>
</item>
<item>
<title>eBay使用Hadoop和HBase成功构建下一代搜索</title>
<link>http://oss.org.cn/html/87/n-62687.html</link>
<text>eBay在Hadoop世界（Hadoop World)大会的主题演讲中展示了一种全新的搜索引擎Cassini的架构，该引擎预计在2012年上线。它对所有的内容和用户的元数据进行索引来得到更好的排名，并每小时刷新索引。它使用Apache Hadoop来支持每小时进行的索引更新，使用Apache HBase对
随机存取信息提供支持。Hugh E. 
Williams（eBay交易市场的搜索平台和体验部门的副总裁）发表了演讲，介绍了项目的规模、使用的技术和完全重建eBay核心站点搜索过程中得到
的经验。这次重建工作由100多位工程师耗时18个月完成。新Cassini平台将能支持：

    9700万活动的买家和卖家
    每天2.5亿次查询
    2亿多件商品和5万多种分类

eBay已经在Hadoop和Teredata[1]集群存储了9PB用来做分析的数据，但这将是生产环境里提供给用户直接使用第一个应用。新系统将会比当前的系统（Galileo）规模更大：
老系统: Galileo
            新系统: Cassini
        
        
            10个排名因子
            100个排名因子
        
        
            默认只匹配标题
            默认使用所有字段匹配
        
        
            上线、监测、修复需要人工干预
            上线、监测、修复不需要人工干预
        
    

&amp;nbsp;
Cassini将保留90天的历史数据在线——按照目前的规模是10亿条数据记录，包括用来做排名的用户和行为数据。支持搜索系统所需的大部分
工作是由每小时在Hadoop上运行的批处理作业完成的。各种不同索引将在同一集群中生成（对Galileo的一项改进）。Hadoop环境使eBay能
够恢复或重新分类整个站点的库存，这是一项重大改进。
&amp;nbsp;
记录存储在HBase里，通常在每个小时索引更新的时候进行扫描。当一条新的记录上线，几分钟内就能从HBase里进行查询，并被加入实时索引里。HBase还支持批量和增量写操作和快速读写记录注释。
&amp;nbsp;
Williams提到，团队熟悉Hadoop的运维，系统运行很稳定，基本没出什么问题。与此相反，他指出HBase似乎很难驾驭。
Williams表示eBay仍然致力于使用该技术，向社区提交发现的问题的补丁。在过去的两个星期里，事情已经顺利很多了。团队对于使用HBase还是
新手，在测试规模的时候遇到一些问题：
* 产品集群的负载配置
* 硬件问题
* 稳定性：不稳定的区域服务器，不稳定的主服务器，在切换的时候区域服务被堵塞
* 监控HBase的健康：往往直到问题影响到线上服务的时候才被发现，尽管团队已经加入大量的监控装置
* 管理多步MapReduce作业
&amp;nbsp;
总体来说，Williams觉得项目虽然宏大，但是目前进展顺利，团队已经使用Hadoop和HBase构建出一种显著改善的搜索体验。
译注 
[1] Teradata 是数据仓库创新和分析性解决方案开发领域公认的全球领先者. 主页：http://www.teradata.com
查看英文原文：eBay readies next generation search built with Hadoop and HBase</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-27 15:08:19</pubDate>
</item>
<item>
<title>最受欢迎的ASP.NET的CMS下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62643</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-26 17:20:11</pubDate>
</item>
<item>
<title>Linux 下载工具 wget 实现断点续传的方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62642</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-26 22:31:11</pubDate>
</item>
<item>
<title>使用简单命令服务器LVM存储空间增加容量</title>
<link>http://oss.org.cn/html/41/n-62641.html</link>
<text>LVM (Logic Volume 
Management,逻辑卷管理)，是传统商业Unix就带有的一项高级磁盘管理工具，异常强大。后来LVM移植到了Linux操作系统上，尽管不像原
来Unix版本那么强大，但瘦死的骆驼比马大，Linux的LVM仍然非常强大，可以在生产运行系统上面直接在线扩展硬盘分区，可以把分区umount以
后收缩分区大小，还可以在系统运行过程中把一个分区从一块硬盘搬到另一块硬盘上面去等等，简直就像变魔术，而且这一切都可以在一个繁忙运行的系统上面直接
操作，不会对你的系统运行产生任何影响，很安全。

还是拿JavaEye的网站服务器随便举个小例子吧。话说今天晚上我登录JavaEye网站服务器随便这么一查看磁盘使用状况：
#df&amp;nbsp;-h &amp;nbsp;

竟然发现/home分区的磁盘消耗的很快
Filesystem&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size&amp;nbsp;&amp;nbsp;Used&amp;nbsp;&amp;nbsp;Avail&amp;nbsp;Use%&amp;nbsp;&amp;nbsp;&amp;nbsp;Mounted&amp;nbsp;on&amp;nbsp;&amp;nbsp;/dev/mapper/system-home&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;40G&amp;nbsp;&amp;nbsp;&amp;nbsp;32G&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;8G&amp;nbsp;&amp;nbsp;80%&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/home&amp;nbsp;&amp;nbsp;

有点出乎意料，已经使用了80%，如果用光了，可就有点麻烦了，所以为了安全，把/home分区扩大5GB，多给它点硬盘空间，敲入两条shell命令
#lvextend&amp;nbsp;-L&amp;nbsp;+5G&amp;nbsp;/dev/system/home&amp;nbsp;&amp;nbsp;#resize_reiserfs&amp;nbsp;-s&amp;nbsp;+5G&amp;nbsp;/dev/system/home&amp;nbsp;&amp;nbsp;&amp;nbsp;
先把逻辑卷扩大5GB，再把上面的reiserfs文件系统扩大5GB，前后耗时不超过3秒钟。再df -h查看一下：
Filesystem&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size&amp;nbsp;&amp;nbsp;Used&amp;nbsp;&amp;nbsp;Avail&amp;nbsp;Use%&amp;nbsp;&amp;nbsp;&amp;nbsp;Mounted&amp;nbsp;on&amp;nbsp;&amp;nbsp;/dev/mapper/system-home&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;45G&amp;nbsp;&amp;nbsp;&amp;nbsp;32G&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;13G&amp;nbsp;&amp;nbsp;71%&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/home&amp;nbsp;&amp;nbsp;

哈哈，/home立刻多了5GB，搞定收工，这是不是很像变戏法，我没停任何服务，没重起服务器，大家没有任何感觉，就一切搞定，说实话我也一直
觉得LVM很cool，所以我一直是LVM+Reiserfs的忠实拥趸。有兴趣学习LVM的同学可以下载后面的附件，这可是我珍藏多年的LVM秘籍！

另外强烈推荐Daniel Robbins在IBM DW网站上面关于LVM的系列文章：

通用线程: 学习 Linux LVM，第 1 部分
通用线程：学习 Linux LVM，第 2部分

			
			
			
			</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-26 18:50:33</pubDate>
</item>
<item>
<title>Linux LVM 使用指南［下载］</title>
<link>http://oss.org.cn/html/40/n-62640.html</link>
<text>非常非常好的一篇LVM技术及应用白皮书，不敢独享，分享给大家： lvm_whitepaper.pdf(372 KB)下面是网上找到的有关LVM的技术资料，可以作为阅读这篇技术白皮书的铺垫。什么是LVMLVM是逻辑盘卷管理（Logical Volume Manager）的简称，它是Linux环境下对磁盘分区进行管理的一种机制，LVM是建立在硬盘和分区之上的一个逻辑层，为文件系统屏蔽下层磁盘分区布局，从而提高磁盘分区管理的灵活性。通过LVM系统管理员可以轻松管理磁盘分区，如：将若干个磁盘分区连接为一个整块的卷组（volume group），形成一个存储池。管理员可以在卷组上随意创建逻辑卷组（logical volumes），并进一步在逻辑卷组上创建文件系统。管理员通过LVM可以方便地调整存储卷组的大小，并且可以对磁盘存储按照组的方式进行命名、管理和分配，例如按照使用用途进行定义“development”和“sales”，而不是使用物理磁盘名“sda”和“sdb”。而且当系统添加了新的磁盘，管理员就不必将磁盘的文件移动到新的磁盘上以充分利用新的存储空间，而是通过LVM直接扩展文件系统跨越磁盘即可。 LVM基本术语1．物理卷（Physical Volume，PV）物理卷在LVM系统中处于最底层。物理卷可以是整个硬盘、硬盘上的分区或从逻辑上与磁盘分区具有同样功能的设备（如：RAID）。物理卷是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。2．卷组（Volume Group, VG）卷组建立在物理卷之上，它由一个或多个物理卷组成。卷组创建之后，可以动态地添加物理卷到卷组中，在卷组上可以创建一个或多个“LVM分区”（逻辑卷）。一个LVM系统中可以只有一个卷组，也可以包含多个卷组。LVM的卷组类似于非LVM系统中的物理硬盘。3．逻辑卷（Logical Volume, LV）逻辑卷建立在卷组之上，它是从卷组中“切出”的一块空间。逻辑卷创建之后，其大小可以伸缩。LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统（比如，/home或者/usr等）。4．物理区域（Physical Extent, PE）每一个物理卷被划分为基本单元（称为PE），具有唯一编号的PE是可以被LVM寻址的最小存储单元。PE的大小可根据实际情况在创建物理卷时指定，默认为4 MB。PE的大小一旦确定将不能改变，同一个卷组中的所有物理卷的PE的大小需要一致。5．逻辑区域（Logical Extent, LE）逻辑区域也被划分为可被寻址的基本单位（称为LE）。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。和非LVM系统将包含分区信息的元数据保存在位于分区的起始位置的分区表中一样，逻辑卷以及卷组相关的元数据也是保存在位于物理卷起始处的卷组描述符区域（Volume Group Descriptor Area, VGDA）中。VGDA包括以下内容：PV描述符、VG描述符、LV描述符、和一些PE描述符。图2-3描述了它们之间的关系。LVM与文件系统之间的关系图2-4描述了LVM与文件系统之间的关系。&amp;nbsp;图2-3&amp;nbsp; PV-VG-LV-PE关系图&amp;nbsp;图2-4&amp;nbsp; LVM与文件系统之间的关系图 注意：/boot分区不能位于卷组中，因为引导装载程序无法从逻辑卷中读取。如果你想把/分区放在逻辑卷上，必须创建一个与卷组分离的/boot分区。PV-VG-LV的设备名PV-VG-LV的含义及设备名如表2-1所示。表2-1&amp;nbsp; PV-VG-LV的含义及设备名&amp;nbsp;含&amp;nbsp;&amp;nbsp;&amp;nbsp; 义设&amp;nbsp; 备&amp;nbsp; 名PV 物理卷：磁盘或分区 /dev/sda? VG 卷组：一组磁盘和/或分区/dev/&amp;lt;VG name&amp;gt;/（目录）LV 逻辑卷：LVM分区 /dev/&amp;lt;VG name&amp;gt;/&amp;lt;LV name&amp;gt;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-26 18:33:34</pubDate>
</item>
<item>
<title>Chrome浏览器增加游戏功能 明年将原生支持手柄</title>
<link>http://oss.org.cn/html/96/n-62596.html</link>
<text>Chrome浏览器明年将原生支持手柄

　　新浪科技讯 北京时间11月25日凌晨消息，谷歌Chrome开发者保罗·肯兰(Paul Kinlan)表示，Chrome到明年一季度时将增加对游戏手柄、摄像头、麦克风以及WebRTC视频和音频通信技术的原生支持。

　　肯兰是在利物浦举行的开发者大会上披露了上述信息，该会议专注于游戏领域。肯兰称，到明年一季度时，Chrome将更新原生支持摄像头和麦克风，而不需要任何插件。他还暗示，Chrome还有可能增加虚拟现实游戏和玩家追踪功能。

　　Chrome还将支持开源视频聊天应用WebRTC，该应用将直接在浏览器内运行，不需要插件的辅助。同时，Chrome还将对OnLive云游戏服务开放，谷歌目前正在为此工作，不过服务器基础设施和发行协议将是他们需要解决的一个问题。

　　谷歌此举旨在显示Chrome浏览器的潜在游戏功能，HTML5现在被广泛认为将取代Flash。谷歌也在Chrome中加入了对硬件3D图形
加速WebGL的支持，并且每六周就对浏览器版本更新一次。Chrome现在拥有2亿用户，预计将在年底前超越火狐成为第二大浏览器。(晓明)</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-11-25 12:07:23</pubDate>
</item>
<item>
<title>CentOS开启/关闭图形界面(x window)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62552</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-24 09:36:11</pubDate>
</item>
<item>
<title>CentOS系统如何快速关闭SELINUX</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62551</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-24 09:38:11</pubDate>
</item>
<item>
<title>CentOS Linux如何关闭iptables防火墙</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62550</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-24 09:39:11</pubDate>
</item>
<item>
<title>CentOS后台服务详解 关掉不用的服务以提高性能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62549</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-24 09:49:11</pubDate>
</item>
<item>
<title>Linux Mint 12 正式版发布 本站下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62548</link>
<text>Linux Mint 12 正式版已经发布，Linux Mint&amp;nbsp;亲们可以从以下地址下载 ：http://ftp.heanet.ie/pub/linuxmint.com/stable/12/Linux Mint 12 &amp;nbsp;的开发代号为 Lida 。- 亮点：基于 Ubuntu 11.10;Linux kernel 3.0;不提供 Ubuntu Unity 图形界面;GNOME 3.2.1;MGSE (Mint Gnome Shell Extensions); Linux Mint 自主开发的 Shell 扩展，提供类似于开始菜单的功能。MATE 界面 (GNOME 2 分支);Mozilla Firefox 8.0;Mozilla Thunderbird 7;一键安装多媒体解码及扩展程序;新的桌面主题，称之为 Mint-Z;一组新的墙纸;LightDM login manager;LibreOffice 3.4 办公套件;- 截图</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-24 18:35:49</pubDate>
</item>
<item>
<title>uchome、supesite 等程序中 $ 函数与 jquery 冲突的解决办法</title>
<link>http://oss.org.cn/html/46/n-62546.html</link>
<text>

uchome、supesite 等程序中 $  函数与 jquery 冲突的解决办法

2011-08-19  11:34




1.替换选择器函数将原程序中的：function $(id) {&amp;nbsp; &amp;nbsp; return document.getElementById(id);}&amp;nbsp;替换为：function $(id) {&amp;nbsp; &amp;nbsp;&amp;nbsp;if (typeof jQuery == 'undefined' || (typeof id == 'string' &amp;amp;&amp;amp; document.getElementById(id))) {&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;return document.getElementById(id);&amp;nbsp; &amp;nbsp;&amp;nbsp;} else if (typeof id == 'object' || !/^\w*$/.exec(id) || &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;/^(body|div|span|a|input|textarea|button|img|ul|li|ol|table|tr|th|td)$/.exec(id)){&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;return jQuery(id);&amp;nbsp; &amp;nbsp;&amp;nbsp;}&amp;nbsp; &amp;nbsp;&amp;nbsp;return null;}做
一个兼容，对于以前直接用字符串ID的调用依旧使用document.getElementById(id)去获取DOM对象；而如果传入的ID是对象，
或者里面有特殊符号（如 #&amp;nbsp;. : ^ 等 jQuery 选择器符号）或者是常用的html标签，就使用jQuery选择器去获取jQuery对象。2.需要先加载jquery的库，然后加载声明这个兼容的 $ 函数的js文件，以覆盖掉jquery的 $ 函数。&amp;lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;source/script_jquery.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;source/script_common.js&quot;&amp;gt;&amp;lt;/script&amp;gt;…………假如有个TAG的ID是'ctrl_with_id'，使用 $('ctrl_with_id') 取得的是DOM的对象，使用$('#ctrl_with_id')可取得jQuery对象，互相不会冲突。如此，原来程序中的 $ 函数依旧工作，而且同时可以使用 $ 作为jQuery的选择器。这么解决冲突，暂时还未发现问题。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-24 17:09:10</pubDate>
</item>
<item>
<title>Google Flash转换HTML5工具Swiffy测试版发布</title>
<link>http://oss.org.cn/html/45/n-62545.html</link>
<text>Google今年六月推出的Flash转换HTML5工具已经从实验室转为测试版，并新增一个Flash Professional扩充模组，可以直接将档案储存为HTML5格式。一开始Swiffy仅以网站方式，让使用者上传Flash的.swf档案，支持Flash所使用的swf 8格式与ActionScript 2.0 指令集。其输出格式为HTML5，主要针对Chrome、Safari等Webkit所开发的浏览器，新增加的Flash Professional扩充模组支持Flash CS4及之后的版本。
访问：Google Swiffy Beta
除了Google Swiffy之外，Adobe早在今年三月透过其实验室提供一个Flash转换HTML5工具Wallaby，可以将Flash原始档案格式.fla转换为HTML5格式。Adobe八月还推出一个针对HTML5开发的编辑工具Edge。
由于使用Flash的网站众多，而且Adobe及Google所提供的转换工具主要目的在转换简易的Flash程式，因此有其他厂商如Dyad Communications等，提供工具程式让大量使用Flash技术的网站在转换为HTML5时可以节省部分人力。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-24 13:19:39</pubDate>
</item>
<item>
<title>感恩节，IT工作者应当感激的十件事</title>
<link>http://oss.org.cn/html/44/n-62544.html</link>
<text>1620年，一些朝拜者乘坐&quot;五月花&quot;号船去美国寻求宗教自由。他们在海上颠簸了两个月之后，终于在酷寒的十一月里，在现在的马莎塞州的普里茅斯登陆。但是在第一个冬天，半数以上的移民都死于( die  )饥饿和传染病，活下来的人们在第一个春季即1621年开始播种。整个夏天他们都热切地盼望着丰收的到来，他们深知自己的生存以及殖民地的存在与否都将取决于即将到来的收成。后来，庄稼获得了意外的丰收，为了感谢上帝赐予的丰收，举行了3天的狂欢活动。从此，这一习俗就沿续下来，并逐渐风行各地。1863年，美国总统林肯宣布每年十一月的第四个星期四为感恩节。这便是感恩节的由来。
今天是西方的感恩节，作为IT工作者，有十件事情我们应当心怀感激：
1，人员短缺
科技浪潮下IT企业遍布全球，因而该行业人力资源的供求关系显然更有利于IT工作者。
2，更加规范
虽然更多的规则导致工作越来越忙碌，但是也给IT工作者处理问题和纠纷提供了依据和保障。
3，美元贬值
谈到海外的开发工作，美元的贬值将使美国以外的企业更加坚实有竞争力。
4，自动精简配置（Thin Provisioning)
虽然EMC和IBM在这方面的脚步相对缓慢一些，但随着戴尔收购  EqualLogic，利用这种虚拟存储有望在未来节省大量费用。
5，虚拟服务器的新工具
由于会不断出现虚拟服务器来让你管理，这会让你不禁地感到慌乱，但是新的管理工具也将及时出现以改变这种状况。
6，Google的掘起
就企业范畴来说，Google年头并不长，但是他的出现产生了对抗微软的平衡性力量，因为他提供了更多的灵活性。
7，多核处理器
多核使每台机子上可以运行更多的应用，从而用更少的硬件管理更多的软件，在你人手不足时，这一优势显得尤为重要。
8，智能手机
越来越多的商务人士使用手机随处发送电子邮件，智能手机的出现让笔记本电脑厂商的前台服务热线清闲了不少。
9，惠普归来
曾经一度惠普引领DEC，（DEC即Digital Equipment  Corporation被誉为个人电脑真正的先驱。DEC将显示器这一最基本的用户交互设备与计算机嫁接在一起，这些创新使DEC公司在计算机时代开始的时候就站在了较高的起点上。1998年1月DEC公司被康柏以96亿美元的价格收购，2001年惠普康柏宣布合并。 ），而今他的归来打破了IBM和Dell全球硬件的垄断。
10，管理服务
IT服务公司在适当的时候不断地推出新产品，以解决过渡工作并帮助人员短缺的公司。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-24 12:51:51</pubDate>
</item>
<item>
<title>从哪里开始学习图形编辑工具Gimp</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62500</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-23 22:46:45</pubDate>
</item>
<item>
<title>GitHub推出Enterprise服务：全面超越SourceForge</title>
<link>http://oss.org.cn/html/99/n-62499.html</link>
<text>GitHub最近宣布推出了它们的GitHub Enterprise服务，为公司提供自托管的代码存取及版本管理服务。方便、安全、强大根据Github官方博客，GitHub Enterprise包括了Github之前的所有主要功能，包括提交历史、代码浏览、比较视图、推送请求、问题追踪、Wiki、Gist共享代码段、团队管理等，此外，还提供了更强大的API以及一个更漂亮的Web界面。在GitHub Enterprise上，你甚至可以在自己的服务器本地运行这些功能。不仅如此，GitHub Enterprise还支持LDAP和CAS，可使用企业已有的认证服务。提供所有数据的完整系统备份机制，自定义的服务器端Git Hooks，提供HTTPS访问支持等安全措施。Github表示，GitHub Enterprise定价为每年每20用户5000美金，无需购买、安装和管理其他软件。同时GitHub Enterprise还提供了45天的免费试用期。GitHub推出Enterprise服务，就不能不提到另一个开源托管平台SourceForge。SourceForge曾是全球最大的开源软件开发平台和仓库。不过根据最近的一份研究报告，GitHub已超过了SourceForge，以及Google Code和微软的CodePlex成为最流行的开源项目托管平台。 SourceForge最初是也作为一个开源软件推出，然后经历商业化，改名为“SourceForge Enterprise”。在挣扎了几年后，2007年它被CollabNet收购。在此期间，开发人员时常抱怨SourceForge的功能缺乏及服务等问题。SourceForge Enterprise的历史在GitHub身上会重演吗？还是GitHub会走出与其不同的漂亮一步呢？</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-23 21:36:57</pubDate>
</item>
<item>
<title>Github 成为最流行的开源托管平台</title>
<link>http://oss.org.cn/html/98/n-62498.html</link>
<text>来自 Black Duck 的统计数据显示，自2011年1月到5月之间的代码递交（Commit）量，Github有 1,153,059次 
commit，Sourceforge为624,989，Google 
Code为287,901，CodePlex为49,839。根据这些数据，Black 
Duck统计出开发者最常用的语言依次为：C++，Java，Python，C，JavaScript，Ruby，PHP，C#，Perl，Shell。

该数据表明： Github 现在是最流行的开源项目托管平台，超过了Sourceforge、Google Code和微软的CodePlex。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-06-30 21:35:15</pubDate>
</item>
<item>
<title>Chrome份额超越Firefox，成为全球第二大浏览器</title>
<link>http://oss.org.cn/html/97/n-62497.html</link>
<text>根据StatCounter最新的统计数据显示，Chrome的全球市场份额已经超越Firefox，仅次于IE，位居第二。统计的时间范围为2011年第45周（11月7日~11月13日），在这一周中，Chrome和Firefox的市场份额均有所下降，只不过Firefox下降得更多。截止到11月13日，Chrome的市场份额为25.47%，而Firefox为25.32%。这一周中，份额唯一上升的浏览器是IE，其市场份额从40.32％（11月第1周）上升到了40.78％。目前各大浏览器的市场份额数据是不断变化的，由于Chrome和Firefox目前的市场份额过于接近，Firefox有可能会重夺第二名的宝座。但是从长远来看，IE的市场份额逐渐下降，Firefox的份额也是稳中有降，而Chrome的市场份额正逐步上升，且增速较快，也许在不久的将来会全面超越Firefox。数据来源：StatCounter</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-23 21:26:11</pubDate>
</item>
<item>
<title>多进程 Firefox 开发暂缓，快速改善界面响应优先</title>
<link>http://oss.org.cn/html/96/n-62496.html</link>
<text>　　Mozilla 经过最近的讨论，将 Firefox 按照多进程方式重构的项目 Electrolysis (E10S) 计划暂缓，转而通过一些见效更快的方式改善用户界面响应。
　　Electrolysis (E10S) 的主要目的是改善界面相应时间，主要通过以下两点实现：
将用户界面绘制进程和内容绘制进程分离开。改善垃圾回收机制。
　　同时还有一些次要目标：
对于多核系统的支持。挑战：现阶段 DOM 依然是单线程的。改善内存管理。崩溃保护。沙箱安全。
　　目前 Firefox for Android 
已经完全实现了多进程，但是桌面版本的重构难度比预期的要大，尤其是如何保证原有的扩展还可以在多进程模式下正常工作这个问题还没有比较好的解决方法。结
合其他因素，Mozilla 决定将有限的资源调整到其他可以在短期内实现的改善界面相应时间的措施上，包括：
优化自在 Firefox 3.6.14 起实现的进程外插件管理(Out of Process Plugin)。Places 优化(Places-optimization)。递增式垃圾回收。
　　Mozilla 方面认为通过优先实现以上改善，可以使最终用户更快体会到在界面响应方面的进步。另一方面，多进程 Firefox 项目 Electrolysis (E10S) 将暂缓，但不会取消。
　　多进程 Firefox 重构详细目标</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-23 21:19:48</pubDate>
</item>
<item>
<title>为什么项目经理拿的钱比程序员多？</title>
<link>http://oss.org.cn/html/52/n-62452.html</link>
<text>　　偶然在programmers.stackexchange.com 上看到了这个有趣的问题，有人问：既然普遍认为编程是比较难的工作，为什么业务分析人员和项目经理们会拿比程序员更多的薪水？虽然大多数的时候程序员都被发现是最晚离开公司的人，可那些家伙的工作却能拿更多的报酬，为什么会这样?
　　回答的人很多，但似乎只有一个是比较合情合理的，它是从经济学原理的角度分析的这个问题。

人们所能获得的报酬往往会低于老板们的“最高标准”，而高于人们自己的“最低要求”。在这个范围内，你的实际收入依赖于你相对于你的老板的讨价还价的能力。


假设你给公司提供的服务价值每天1000美元。如果你用枪指着他，他会给你这个价格，因为他别无选择。如果你别无选择，你只能接受每天100美元水平。这是你的浮动范围。


假设你是一个新手，没有背景关系，不出名，你的老板是谷歌。谷歌有很强的讨价资本，它可以等待，去雇用其他人，很多人都想为它工作。你的资本很少，你需要付房租，所以你只能接受每天100多美元，而不是1000美元。


假设你是地球上最后一个会 COBOL 语言的程序员，而你的老板的主机上正跑着 COBOL 程序。那么，你拥有很强的讨价还价的资本，你将能得到接近每天1000美元的报酬。


所以，要么是你的项目经理或业务分析员对公司更有价值，要么就是他们有更多的讨价还价的资本。我并不认为是前一种情况，也就是说，应该是后一种情
况。善于人际交往的人很少。这种事情也不能外包——因为他们需要接触客户。他们的相对稀缺给了他们更多讨价的资本，所以他们有了更高的报酬。

　　这个巧妙的回答来自 NRM，尽管跟其它的各种和政治相关的解答比起来有点乏味，但它确实反映了实际情况。就像他提到的，善于交际的人稀少，这种人在任何公司都能来到巨大的好处，尤其是在软件开发领域。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-22 21:57:00</pubDate>
</item>
<item>
<title>每个程序员都应该挖一口属于自己的井</title>
<link>http://oss.org.cn/html/51/n-62451.html</link>
<text>　　编注：这篇文章综合了两位博主（wallwind&amp;nbsp;和&amp;nbsp;DoEver）对一则故事的感触，这则故事出自张锦喜的一本职场书：《挖一口属于自己的井》。　　两个和尚的故事　　两个和尚住在隔壁，所谓隔壁就是隔壁那座山，他们分别住在相邻的两座山上的庙里。两座山之间有一条溪，这两个和尚每天都会在同一时间下山去溪边挑水，久而久之，他们便成为了好朋友。　　就这样，时间在每天挑水中不知不觉已经过了5年。突然有一天，左边这座山的和尚没有下山挑水，右边那座山的和尚心想：“他大概睡过头了。”便不以为意。　　哪知道第二天左边这座山的和尚还是没有下山挑水，第三天也一样。过了一个星期还是一样，直到过了一个月，右边那座山的和尚终于忍不住了，他心想：“我的朋友可能生病了，我要过去拜访他，看看能帮上什么忙。”　　于是他便爬上了左边这座山，去探望他的老朋友。　　等他到了左边这座山的庙里，看到他的老友之后大吃一惊，因为他的老友正在庙前打太极拳，一点也不像一个月没喝水的人。他很好奇地问：“你已经一个月没有下山挑水了，难道你可以不用喝水吗？”左边这座山的和尚说：“来来来，我带你去看。”于是他带着右边那座山的和尚走到庙的后院，指着一口井说： “这5年来，我每天做完功课后都会抽空挖这口井，即使有时很忙，能挖多少就算多少。如今终于让我挖出井水，我就不用再下山挑水，我可以有更多时间练我喜欢的太极拳。”　　wallwind&amp;nbsp;的感触　　不论在什么行业，尤其是在我们这个吃年轻饭的的 IT 行业，尤其是敲代码的程序员。我们就应该要记住上面这个道理。　　很多人用一种打工的心态过日子，在公司领薪水。薪水领得再多，那都是“挑水”。人的力气总是有限的，年纪大了，挑水就常常体力不支。　　很多人之所以人生旅途不如意，或者早年春风得意，老来则风烛残年，就是因为一辈子都在挑水，不懂得挖一口属于自己的井；　　很多人知道需要挖井，却不知道如何挖井；　　很多人知道如何挖井，却不知道去哪里挖井，挖什么井；　　很多人知道去哪里挖井，挖什么井，却总是半途而废；　　很多人挖到一口井了，以为一劳永逸，却不知道水源的流向是会随时间和环境而变动的……　　没想到自己需要一口井、不挖井、不知道去哪里挖井、不知道挖什么井、不知道如何挖井……总是有各种各样的借口或理由；如何在工作之中或工作之余找井源、找工具、挖井，一定有方法和步骤……　　还有一部分人知道应该挖一口属于自己的井，而且一辈子都很努力，但他们之中大多数没有挖出井来，因为他们并不了解，其实，很多东西原本就是“命中注定”的……　　DoEver&amp;nbsp;的感触　　作为一名普通的程序开发人员，每天的程序员工作就如同挑水一样，如果只把目光放在每一天的程序开放上，就会一辈子在挑水，并且总有挑不动的那一天。所以要去追求一口属于自己的井，也许最终无法得到，但毕竟努力过了，也人生无憾矣。　　因此在工作之余，要利用自己所熟悉的技能，在自己所熟悉的领域，慢慢的钻研和积累，其实就是那句古话：不积小流无以成江海，不积跬步无以至千里。不要因为今天工作加班了，不要因为今天工作累了，不要因为那个朋友来了，等等这样的理由为借口，当然，作为一个现实生活中的人，这些日常的人际交流都是合理的也是必不可少的，只是我们应该利用每一个点滴可以利用的时间去学习、去思考、获得知识技能的同时能够提高自己的思想高度。　　不只是程序员，每个人，都该去追求一口属于自己的井。　　补充：《挖一口属于自己的井》的内容简介　　《挖一口属于自己的井》的理论，被称为职业规划的“恐怖主义”曾经遭到大量培训咨询机构的批判与封杀，因糨它在提供一个绝无仅有的职业生涯规划方法、揭示 “挖井的秘密”的同时，使得很多培训机构和培训师丢了铁饭碗。对命运“三分天”的独特见解、对“职”“业”“生”“涯”的独特定义、对人们长期奉行的信念的批判，否定了只要努力就会成功、提出“三分天”命运论……一系列独特而又振聋发聩、醒醐灌顶的经验之谈，结合职业生涯规划、创业、跳槽、自我管理、“充电”、执行力等令人困惑的流行热门话题，为你揭示自己的命运主题提供密码，为你发掘自己大脑的最佳潜能区提供方法，为你挖一口属于自己的井提供成功的利器和途径。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-22 21:55:02</pubDate>
</item>
<item>
<title>袁萌：深圳超算中心启用刺痛了谁的心？</title>
<link>http://oss.org.cn/html/50/n-62450.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至今，深圳超算中心已经正式启用，时间已经过去几天，但是，围绕它的争论仍然不断，远未完全平息。为什么？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 位于深圳的国家超算中心是目前国内规模最大的超算中心，是执行国家863计划的产物。据有关报道，该超算中心超算中心主机系统曙光6000超级计算机（MIPS处理器），由中国科学院计算技术研究所研制、曙光信息产业（北京）有限公司制造，完全实现国内自主研发。其系统由曙光TC3600刀片系统集群组成，超过10万个计算核心（所谓“Core“），运行Linux操作系统（不提是否为国产Linux），最大浮点性能1.271千万亿次每秒，相当于20万台个人电脑运算能力的总和。2010年5月经世界超级计算机组织实测确认，其运算速度达每秒1271万亿次（理论峰值为每秒3000万亿次），排名世界第二；但是，根据最新数据显示，目前排名为世界第四。&amp;nbsp;&amp;nbsp;&amp;nbsp; 建设一个现代化的强大国家，为什么需要“超级计算机”？使用手摇计算机不行吗？这里，我打个比方，关于园周率的计算，到底该怎么算？在远古时代，人们只能依靠繁琐的公式推演得到其近似值：3.1416。但是，到了现代，利用超级计算机就不用这样极为繁杂的公式推演算法了，而是采用所谓“蒙特卡罗随机数统计法”（又称“随机数模拟法”），比如：在一个单位正方形内，做一个内切圆，我们设想，随机地向该正方形内投掷一些“几何点”，统计落入该单位圆内的比率，再乘法以4，就是园周率的统计值，而且，要多么精确都行。类似气象预报、交通堵塞，农业收成，等等，都采用类似的数字模拟方法。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 曙光刀片服务器采用的处理器是高档MIPS处理器，也是一种精简指令集（RISC）处理器，不可能支持Windows操作系统。中标麒麟与微软（中国）签约合作完全背离了我们的国情。深圳超算中心实质上是一座Linux的丰碑，没有给Windows留有“余地”。在我们中国，Linux用户登录不了国家重要网站将成为历史。说白了，在过去，某些外国势力老是喜欢欺负我们，我们只好忍受。现在，情况不同了。你能算的，我也能算，相比过去，我们就是硬气多了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 有一位自称是Windows程序员的“小毛头”，天天在我的博文后面留言，说深圳超算中心的坏话。这次，我真的生气了。给他三次机会，否则，他发的帖子，我一律删除，不再理他。对于执行863战略计划的产物岂能容忍随意抹黑？我们这一代人（57年入学）靠的是手摇计算机起家，曾参与制造国内第一台M104电子管计算机，打掉老美U-2间谍飞机。现在，我们有了深圳超算中心，可以更好地保卫国家的“电子边疆”，包括辽阔的南海边疆！谁胆敢再欺负我们，我们绝对不答应。深圳超算中心的启用，为我们增强民族自信心和自豪感提供了坚实的基础或根据。有人天天说苹果与谷歌如何如何“强大”，把国内的大男人都说软了，你们到底想干什么？中国已经走上强盛之路，谁也不能再走回头路！盗版XP四处泛滥，吃人嘴短，让我们的民族自信心受到极大的伤害。中国人盗版XP的毒瘾真的就没有法儿”治愈“吗？非也。深圳超算中心就是我们的一根硬骨头，我们要站起来了，唤起民族的自豪感，找回我们的自信心，精心培养、教育我们的下一代，要热爱这个伟大的国家，不能整天幻想着”拥抱亲嘴“混日子。国家建设需要有志气、有理想的年轻人，......</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-22 21:33:55</pubDate>
</item>
<item>
<title>Mozilla确认Firefox 10开始研发静默更新特性</title>
<link>http://oss.org.cn/html/49/n-62449.html</link>
<text>　　Mozilla Firefox 六周一个大版本的更新速度惹毛了用户特别是企业用户，因此公司宣布正在研发静默更新机制，最大限度减少 
Firefox 更新时打扰用户的问题，正在开发的 Firefox 10 中已经安排了静默更新的功能，但不清楚何时会嵌入到正式发布的产品中。
　　Mozilla 目前正在研究的问题是如何在更新后最大程度地实现对附加组件的兼容性，以免扩展弹出的警告信息影响了用户。
　　Google 的 Chrome 浏览器早已有了静默更新特性，Mozilla 早在 Firefox 4 的开发工作时就考虑到了该特性，但由于一些问题被迫推迟，且当时 Firefox 的更新频率并不快，因此问题并不突出。
　　预计 Firefox 10 将在明年年初发布。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-22 12:46:54</pubDate>
</item>
<item>
<title>近期 Chromium 新特性：语音输入 API、history2、半透明窗口</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62405</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-21 08:53:11</pubDate>
</item>
<item>
<title>英国卫报：互联网服务没有免费午餐</title>
<link>http://oss.org.cn/html/04/n-62404.html</link>
<text>导语：英国《卫报》网络版今日发表署名约翰·诺顿(John Naughton)的文章指出，互联网服务没有“免费的午餐”，谷歌、Facebook等公司打着“免费”服务的幌子，其实是通过另一种资源从用户身上获利，这种资源便是用户的个人信息。
以下为文章全文：
物理学有牛顿的第一定律(亦称惯性定律)，即一切物体在不受任何外力的作用下，总保持匀速直线运动状态或静止状态，直到有外力迫使它改变这种状态为止。而互联网服务同样也存在“第一定律”，而且更容易理解，那就是这个领域没有“免费的午餐”。
奇怪的是，谷歌、Facebook、Twitter和其他“免费”服务的大多数用户似乎只是朦朦胧胧感觉到这一定律的存在。例如，Facebook负责管理7.5亿用户的页面，以便使其中一多半用户可以每天访问和更新他们的页面。
完成这一步骤需要运算和通信资源(如服务器、带宽和技术人才等)，这些所谓的“免费服务”必然要承担一定的成本。但我想大多数Facebook用户没有想过这个问题。而且这笔成本绝非小数目，每个月高达数百万美元。这笔投入被称为“烧钱率”。
这一词汇源于投资者，他们不断疯狂地向股市投入现金，或持有高利润企业的股票，寄希望于在股价上涨时获得巨大回报。在互联网时代，一个深受全行业推
崇的策略就是“尽快形成规模”。但是连火箭科学家都知道，尽快形成规模的最佳途径并不是提供免费服务。但谷歌、Facebook和Twitter恰恰就这
样做了。
这就带来一个略显尴尬的问题：如何将所有这些“免费搭车者”变成收入？每个人迄今所能给出的唯一答案便是—广告。但这种策略又是如何奏效的呢？目前为止，答案就是：谷歌的广告收入十分丰厚，Facebook具有一定的广告收入，而Twitter根本没有。
谷歌的成功源于一个事实：即它可以通过互联网搜索向用户针对性地投放广告：如果弹出来的广告与用户搜索的东西相关，那么他们就更有可能去关注。
Facebook向广告商提供的一大卖点便是，它清楚用户的真实身份，这样从理论上讲，就可以发布根据每一个用户量身打造的针对性广告。
至于Twitter的广告策略，目前尚不得而知。但值得注意的是，上述所有付费服务的商业模式就充分利用了他们所掌握的用户信息。具体来说，如果用户使用“免费”服务，那么他们必须接受一个事实，即他们本身(更准确地说是用户的个人信息)已成为这些服务的产品。
现在大多数用户终于明白了，所谓的“免费服务”在某种程度已变得更具侵入性——无论是对默认隐私设置进行修改，还是对更改用户更新和新闻流的方式突
然进行调整。最初简洁、清晰的用户界面，突然看上去杂乱无章，但一切调整的背后都有其特定目的，那就是悄无声息地加强对用户的控制。
如果人们是Facebook或谷歌的用户，他们会注意到这种趋势。但Twitter似乎仍然没有加入Facebook或谷歌的行列。事实
上，Twitter自上线以来用户界面变化的确不大：仍然是清晰、直观。这并不是因为Twitter的管理层比扎克伯格更具人性化，而是因为这家微博客网
站尚未找到如何从庞大的用户群获利的办法。
Twitter陷入了与不少互联网企业一样的两难境地：从采用从用户身上盈利所必需技术的那一刻起，许多Twitter用户就会马上意识到这种侵入
性便是他们为获得“免费”服务所必需付出的代价。当然，Twitter大可不必这样做，它可以探寻另一种商业模式：让用户为在线服务支付一定费用。
例如，电子邮件管理网站pobox.com就采用这种服务模式。Pobox.com的服务虽非免费，但35美元的年费相信不会对任何人构成负担。用户可通过Pobox.com将电子邮件转发到任意数量的设备和服务，同时还可以拦截垃圾邮件。而且，这家网站的用户界面简洁、直观，过去几年也曾做出过大
幅改动，但这种调整主要是为了提升服务质量。
然而，Pobox.com最令人称道之处便是，它采用非侵入式解决方案，原因很简单：其商业模式不依赖于挖掘用户个人信息用于广告目的。它遵循互联网服务的“第一定律”。所以说，这个领域不存在“免费的午餐”。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 16:24:52</pubDate>
</item>
<item>
<title>2011网络十大事件</title>
<link>http://oss.org.cn/html/03/n-62403.html</link>
<text>
一年的网络风云和信息喧嚣之下，我们看到的是网络社会的制度缺失和道德浮动。商业道德、传播伦理在和人性、利益的战争中一败涂地，或者说，它们根本就从没建立？
&amp;nbsp;
&amp;nbsp;
1.百度风波不断
虽说在2010年百度的死对头谷歌走了，但接下来的2011年，百度却并没有什么好名声。
首先出击的是作家。2011年3月15日，贾平凹、刘心武、阎连科、张炜、麦家、韩寒、郭敬明、李承鹏等近50位中国作家联合发表了“讨百度书”，状告百
度文库收录了他们几乎全部的作品，在没有取得任何授权的情况下向用户收费阅读——作家们声称，“百度已经彻底堕落成了一个窃贼公司，把百度文库变成了一个贼赃市场”。

作家们退下后不久，央视就来了。2011年8月15日、16日连着两天，央视财经频道《经济与法》栏目对着百度火力全开，炮轰百度：由竞价排名升级而来的
凤巢系统根本就是变相吞钱，让假资质、假公司搜索排名第一，广告排名不顾品牌声誉质量、只管要钱……而这也并非是央视第一次把矛头对准百度，早在2008
年11月15日，央视就在《新闻30分》播出名为《记者调查：虚假信息借网传播，百度竞价排名遭质疑》的节目，曝光在百度搜索中排名第一的“假医院”、
“假教授”，用紧张的医患关系狠狠扇了百度一个耳光。

但不管是做书的还是做电视的，都只让百度栽了个小小的跟头——在央视炮轰之后，百度的股价也不过只跌了3.67%而已。对于挤走谷歌后再来参与新旧媒体之战的百度来说，老去的旧媒体们根本不具备伤其元气的功力。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/于青）

2.网站做手机
移动互联网的入口是什么？是系统、软件还是硬件？这个问题在各大论坛被争论得很火热，答案其实很简单，没有硬件，你以为你可以玩转系统和软件？

百度在世界大会上展示了“百度·易”手机，阿里巴巴推出了“阿里云”手机，一个由戴尔代工，一个和天语合作，这是国际山寨和本土山寨的较量，大家看起来都
很有信心。PC的时代还没有过去，但智能手机和平板电脑的时代已经提前到来，所有IT从业者都必须跟着大势走进移动互联网。强势者能够更自如地面对改变，
比如腾讯，它依靠庞大的用户基数可以让自己的软件在各式手机上占有一席之地，同样依靠庞大的用户基数，它可以让腾讯应用中心向安卓市场和苹果商店的方向发
展。百度和阿里巴巴在互联网里是巨头，细分到移动互联网层面则未必，在软件上没有足够的产品线，转向硬件是个顺势而为的选择。

网易、新浪、搜狐会不会也加入到手机的研发竞争中，这个悬念只有时间能给答案。但加入到手机战争中的网站们应该还记得My
Space，它几年前就推出过自己的手机，但用户上一次登陆My
Space是什么时候？硬件配置和用户体验始终是手机的卖点所在，从现在看，无论是“阿里云”系统还是“百度·易”平台都还没有奉献出一流的互联网享受。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/胡尧熙）

3.阿里巴巴事端频出支付宝脱离雅虎、马云表态收购雅虎、小卖家围攻淘宝商城，今年是阿里巴巴事端频出的热闹
年。这些事件都指向一个主题——淘宝必然会上市。在上市之前，马云需要改造股权结构和董事会，保持绝对权力，因此人们看到了他在未经董事会的授权下将支付
宝剥离出雅虎，牺牲契约精神换来实质利益。雅虎在北美日渐没落，它的大部分价值体现在亚洲，或者说体现在阿里巴巴。当支付宝和雅虎再无牵连后，雅虎的亚洲
资产也随之贬值。这是马云和阿里巴巴的胜利，它说明了在中国的互联网环境中，商业道德和利益很难两全其美，只能二选一。受害的还有软银，雅虎和软银持有阿
里巴巴集团70%的股份，马云把阿里巴巴的核心资产支付宝以低价转移至自己的公司名下，软银也随即丧失了支付宝升值可能带来的利润。软银和雅虎觉得马云很
坏，马云觉得它们很笨，无论如何，坏人赢了笨人。

觉得马云坏的还有淘宝的小卖家们，他们围攻淘宝商城的战役取得暂时性的胜利，从10月10日淘宝宣布年费和保证金上涨，到10月17日马云宣布该规定延期
执行，淘宝新政的寿命只有一个星期，造反者瞬间革命成功。但这次马云好像并没有做错，通过提高门槛挤掉小卖家、引进大客户，原本就是正常的商业模式。其实
小人物通过上网开店就能创造财富的神话早就破灭了，B2C的年代，大商家才能在电子商务中领先。淘宝商城的小卖家们用恶意下单的方式摧残无辜的大卖家，即
使背后有再多苦衷，也活生生把自己变成了乌合之众。

是的，马云认错了，但他是在商务部表态后作出了暂缓新政的决定，这个细节委婉地告诉人们，马云没有向小卖家低头，他只是输给了“有关部门”，小卖家们才真应该感谢国家。（文/胡尧熙）
&amp;nbsp;

4.争夺通讯录能把手机改成对讲机的智能手机语音聊天应用微信和米聊在2011年都很火。但论起时间来，还是2010年12月23日小米公司发布的米聊比微信早——2011年1月，腾讯才发布微信。

在得知总有7亿QQ用户做后盾的腾讯紧跟着自个儿发布同类应用后，小米公司CEO雷军对员工们说：“米聊与腾讯的微信真的不一样，米聊是做手机上的SNS，而不是手机上的IM。”

事实上，米聊也确实与微信有着大不同：米聊与2010年10月19日在海外蹿红网络的Kik应用类似，走“熟人社交圈”路线，点对点传播信息，而微信则能
在1000米范围内搜索陌生人，点对面传播信息。米聊能够与新浪微博对接，微信则能在米聊对视频下手之前提供视频发布功能。米聊有售价1999元的小米出
产智能手机做后盾，微信嘛，则有与7亿QQ用户绑定的腾讯微博和QQ邮箱。

在这场被誉为草根与富二代的手机通讯录争夺战中，小米取得的成绩可算得上不俗：发布半年后，米聊宣布注册用户突破400万。对于没有7亿后盾用户的草根来
说，这个成绩让小米成了新一代创业偶像。但是，富二代依旧是富二代——此时微信用户已突破了1500万，是米聊的近4倍。草根米聊似乎真成了富二代微信的
前菜——用雷珂投资董事长王雨豪一篇文章中的一句话来说，“主菜一来，前菜就得撤了”，马化腾又成功做了一次黄雀。

但现在盖棺论定尚且太早，这场战争尚未结束。小米公司CEO雷军“要做手机上的SNS”这一大志尚未完成，富二代能否再次横刀夺爱？且等2012年看分晓。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/于青）
&amp;nbsp;

5.郭美美引发慈善危机2011年6月。@郭美美Baby，加V，微博认证：中国红十字会商业总经理。

2011年11月。@郭美美Baby，未加V，微博简介：工作事宜请短信联系我的工作室
186****8227。网页背景的写真照里，这个20岁的湖南艺人郭美玲，站在西部大漠的老树枯枝间欢快地撩拨着五彩轻纱。
中国网络热点新闻排行榜里，郭美美将达芬奇、袁莉、卢美美、海底捞、李阳压在身下长达3个月之久。郭美美还顺势糟蹋了一家机构——中国红十字会，一个名词——干爹，一个人——郎咸平，一本杂志——《嘉人》。

事情的起因其实很简单，自恋型人格的@郭美美Baby玩着微博自拍，炫着大别墅、玛莎拉蒂、爱马仕，但是，有人发现她竟是“中国红十字会商业总经理”：太
尼玛让人心寒了！你一腔热血献爱心，却献到了郭美美的腰包里。虽然中国红十字会跳出来大呼受伤，称郭只是因“干爹”中红博爱董事王军的一句戏言而随手拟了
个名号，但整个中国慈善业却未逃脱遭遇有史以来最大信任危机的宿命。

关于“人肉炸弹”郭美美的杀伤力，有段子为证：“奢华，被达芬奇毁了；脊梁，被倪萍毁了；故宫，被文盲毁了；慈善，被红十字会毁了；干爹，被郭美美毁了；
股神，被郭美美她妈毁了；老郎，被郭登峰毁了。”“中国四大青春无敌的坑爹者，正好可以凑一桌麻将，李启铭的筹码是‘我爸是局长’，郭美美的筹码是‘我爸
是会长’，卢美美的筹码是‘我爸是主席’，李天一的筹码是‘我爸是少将’。”果然，长江后浪推前浪，一爹更比一爹强。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/何雄飞）

6.随手拍照解救乞讨儿童
在微博传播历史上，这是一起值得被铭记的事件。
1月25日，中国社科院教授于建嵘在新浪微博上开通了名为“随手拍照解救乞讨儿童”的微博，期望借助博友的力量，拍摄街头乞讨儿童，为寻找被拐儿童提供线索。一时间，微博与“打拐”成为春节期间的重要关键词。至今已经有近20万的粉丝加为关注。

发起人于建嵘称，起因是1月17日一名母亲让他帮忙发微博，寻找失踪的孩子杨伟鑫。微博发出后，立刻引起网友关注，并且有网友提供信息，2010年年初曾
在厦门看到一名和杨伟鑫相似的孩子在乞讨，并上传了孩子乞讨时的照片。随后，孩子的家人立刻赶往厦门寻找其下落。这个事情过后，不少网友都让于建嵘帮忙发
寻找孩子的信息，于是他专门建立了一个“随手拍照解救乞讨儿童”的微博，希望通过网友的力量，让丢失孩子的母亲在这个微博里看到希望。

“微博打拐”活动迅速引发了连锁反应。公安、社会组织与机构、媒体、明星纷纷行动起来，共同参与解救行动。“随手拍照解救乞讨儿童”在成为兔年第一个网络
热点的同时，也演绎出了兔年第一个网络流行体，“随手拍照解救大龄男/女青年”等微博相继发力，从解救被拐儿童的严肃话题变成了一场自拍自救“全民娱乐”
的狂欢。

众所周知，拐卖儿童比任何事情更容易引发公愤，牵动人心，话题本身的张力与名人的个人影响力因素，这把火不得不旺。在这场微博“打拐”事件中涌动的不可小视的是民间力量，这种力量促使政府与民间行为统一合力，形成了难以阻挡的“打拐”力量。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/汪璐）
&amp;nbsp;

7.分类信息网站火爆要问谁是近期的广告宠儿，答案很可能是：分类信息网站。
“赶集啦！我有一只小毛驴，我从来也不骑。”从2月初开始，由姚晨代言的15秒钟赶集网广告片同时在中央电视台、地铁和公交移动电视等媒体上循环播放，开
展“地毯式”的营销轰炸，让人无法不记住这个平民化的分类信息网站。《2亿广告费炒红赶驴网》等文章一夜之间在网上广为传播，内容大多称百姓网不费吹灰之
力，仅花费200元注册了赶驴网的域名“ganlvwang”，就坐享赶集网数亿元广告效果，并放出口号：“赶驴网，啥没有？”而赶集网的口号则是“赶集
网，啥都有”。

相比之下，刚开始58同城还是显得很沉默。当更多人发出58同城是否会“在沉默中爆发”的疑问时，猛然发现，58同城找来号称“穿越女王”的杨幂玩“穿
越”，紧随姚晨的“赶集啦”，杨幂也亮开嗓门大喊“一个神奇的网站，58同城”，发动新一轮的攻势，与赶集网相比，可谓有过之而无不及。58同城的这次推
广，无疑使分类信息网站上市赛跑的游戏变得更加刺激。

分类信息网站又俗称跳蚤市场，盈利模式比较单一。2005年，百姓网成立之后，国内很多大型门户网站和电子商务网站都陆续推出旗下的分类频道。2006年
年底，分类信息网站达到历史最高的2000家。随后几年的各种洗牌，直到2009年年底，全国做分类的网站已不到100家，真正运营的不超过20家。到目
前，也只有百姓网、赶集网、58同城这三家做大了。

据了解，2010年至今，58同城和赶集网均得到了上亿美元的注资，资本密集进入后根本就不差钱，才有了这一轮高密度的广告轰炸。如果赶集网和58同城对接下来怎么做品牌还没有明晰的思路，而是还要视情况再想着如何拍续集，那就很恐怖了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/汪璐）

8.团购网站衰落
团购网站在2010年年初进入国内，到了2011年8月，总数就超过了5500家。根据DCCI互联网数据中心的抽样调查，团购网站平均每天新生10个，死掉10个——这么看来，团购网站似乎摇身一变，变成了个有生命的物种，实时上演进化论。

根据《IT时代周刊》的报道，到2011年10月28日，光北京地区，就有116家团购网站成了“僵尸网”。而早在2011年4月，在团购网站中交易额排
到第一的美团网就关闭了马鞍山等4个城市的分站。8月，腾讯与Groupon合作的高朋网更是开始大规模裁员，储备资本过冬。再到10月，因窝窝团撤掉韶
关站而失业的十几名员工更是跑到了窝窝团深圳大区讨说法——从9月到10月底，窝窝团裁员已经达到1500人，济南、青岛、成都、南京、哈尔滨、大连、深
圳、天津、武汉、重庆等10个大区、35个分站关闭。在《时代商报》的采访中，行销专家黄禹涵分析了“提前入冬”的原因：团购网站“进入门槛低，同质化极
其严重，用户黏性非常低”。而这一次的千团大战也不是没有源头，上世纪80年代的家电业血拼，就是换汤不换药的“前车之鉴”。

糯米网总经理沈博阳曾在人人网上说过这么一句话：“这是一场长跑，也是一场割喉战。”不论行业是新是旧、笑到最后还是中途被割喉，总喜欢一窝蜂赶大趟的“参赛选手”们，别忘了早就为你们挂在起跑线上的那句老话：“冲动是魔鬼，大浪总淘金。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/于青）

9.乔布斯去世
国内互联网上可追溯的最早关于乔布斯逝世的消息来自微博。10月5日，各大微博网站变成了“乔帮主”的追悼会主场。有数据表明，提及乔布斯的微博，新浪每秒17条，腾讯每秒187条。人们把这种疯狂调侃为：“生前刷我们的卡，死后刷我们的屏。”

新浪微博把所有发自苹果设备的来源签名变成了“来自乔布斯的iPhone”、“来自乔布斯的iPad”。伴随着铺天盖地的哀嚎，各种真假难辨的乔布斯语录
疯转，千奇百怪的纪念仪式层出不穷：有人晒Logo——咬一口苹果，拍一张照片；有人晒祭坛——摆上iPad灵位，上两炷香。甚至连乔布斯灵堂网站也出现
了：在那里，你可以“选择点烛”，或是“选择烧钱”。所有微博促销活动都改变了主题：“纪念乔布斯！圆您苹果梦！”、“iPhone4、iPad2大抽
奖，0元送出，你hold得住吗？”。

“乔布斯活着，影响IT界。乔布斯死了，影响出版界。”10月24日，乔布斯唯一授权的官方传记《史蒂夫·乔布斯传》中文版全球同步上市，身处价格大战的
网络书商们史无前例地统一了售价，并随各大实体书店在早上10点05分准时发售，以此纪念乔布斯的逝世日。卖服装的凡客诚品也首次加入图书销售行列，并推
出了T恤、徽章等20余款乔布斯周边产品。开卷公司预测：《史蒂夫·乔布斯传》中文版将以单书500万册(包括纸质和电子书)的销量，创造中国出版业的奇
迹。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
（文/丁晓洁）

10.网络书商冲击现实书商家电经销商苏宁易购杀入了图书在线销售，直接引发了网络书商的一场血战。当当网、京东商城轮番上阵，和苏宁易购捉对厮杀。

这不是网络书商战争的第一声号角，自2010年京东商城高调进军图书销售领域以来，与当当网、卓越亚马逊之间的“图书血拼”就从未消停。随着苏宁易购的加入，电商网站正逐渐控制传统的图书营销，如今的图书市场早已是现实书商式微、网络书商志得意满。

网络书商有着现实书商不可比拟的优势，它们或靠量大价廉取胜，或靠差异化服务生存，从大众到小众，满足着各种爱书人的口味。
以中国图书网、蔚蓝网上书店、99网上书城为代表的老牌网络书店生机勃勃。北京的北发图书网、广州的精彩网、常州的博库书城则依靠本地城市读者博得人心。
孔夫子旧书网、有路网、天下旧书网和中国收藏热线，各种绝版旧书一应俱全。甚至在淘宝网，你可以找到各种最新的港台原版书籍杂志代购店。而去年6月上线的
“快书包”，因为其“一小时到货”服务而备受青睐。

价格低廉、送货上门，网上购书正在成为人们的常态。实体书店备受网络书商冲击——10月，因为资金链断裂，中国最大的民营连锁书店“光合作用书房”宣布关
门。此前不久，曾被誉为“北京三大民营书店”之一的“风入松”书店也因为房租问题暂停营业。据统计，过去4年里，全国已有上万家民营书店倒闭。正像人们感
叹的那样：“文艺青年们只去书店却不买单，回家后精打细算地比较几个网店后选择价格最低的下单”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; </text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 15:08:47</pubDate>
</item>
<item>
<title>【Linux私房菜】安装 FC4 与多重开机小技巧（5）</title>
<link>http://oss.org.cn/html/02/n-62402.html</link>
<text>Linux 安装的第一步『规划』
由 上一章的 Linux 主机规划 我们大致上可以了解： 『Linux 主机的配备要求与 Linux 主机所提供的服务有关』， 所以啰，要安装 Linux 的第一步就是先进行 Linux 主机的未来蓝图规划啦！那么该如何规划？ 由前一章的内容，我们不难了解，要规划好一个 Linux 主机的话，需要： 

决定 Linux 主机的角色定位； 
根据步骤一，选择适当的硬件配备； 
根据步骤一，决定实体硬盘的分割状态； 
根据主机上面的操作系统，选择适当的开机加载程序 ( boot loader ) ， 以便安装在主要开机扇区中 ( Master Boot Recorder, MBR )； 
根据步骤一，选择所需要的 Linux 程序套件； 好了，既然已经知道大概需要规划的原理之后，底下我们就实地的来操练一遍吧！好让您不会很快的忘掉去！

一个练习机的规划
假设：这部主机主要是为了我自己练习 Linux 之用， 不过，未来可能会接触到网络的实际练习。而为了方便数据查询，因此，我需要 X Window 系统的支持， 而且由于不熟悉 Linux ，因此也需要预留硬盘空间作为日后练习之用。如果是这样的状态， 您应该要如何规划你的主机呢？ 

Linux 主机角色的定位由上面的假设状态，您可以知道这部主机主要是作为练习之用，需要 X Window ， 而且由于操作者是新手，因此，建议将所有的套件都安装上去呢！
硬件的配备选择：因为我使用 Linux 来作为练习，而且含有 X Window 在里面，预计是将所有的套件都装上去的， 因此，硬盘不能少，CPU/显示卡等等的等级也必须要适中，不可用等级太低的。而且， 内存也应该大于 256MB 以上比较妥当。我使用的练习机设备为：

主机板与 CPU： 我的练习机 CPU 是 AMD 的 AthlonXP 1800+，搭配 Asus 的 A7V8X 主机板。 
内存：我安插了 256MB 的内存。 
硬盘：使用一颗淘汰下来的 20GB 硬盘。因为我只有一部主机， 为了要同时使用 Windows 与 Linux 操作系统，因此，我选择了抽取式硬盘盒来帮忙抽换。 这样一来，比较大的优点是可以让我完全掌控一部主机，而不需要担心将 Windows 的系统删除。 
网络卡：用最阳春的螃蟹卡(Realtek 8139 芯片)。 
显示卡：这个重要，因为我要使用 X Window ，因此， 我用的是 32MB 的 ATI 的9200 芯片组(现在这个等级已经算很差的配备了)。 
其它的输出/输入装置：一部 DVD 光驱、 pc104 键盘、光学鼠标、300W 电源供应器及 19 吋的传统映像管屏幕。 一般来说，这样的配备算是前一阵子的入门级机种了！目前的入门级机种都比这个配备好太多！ 您也可以利用您的 CPU 等级为 P-III 的主机来进行练习啊！ 但不建议使用 P-II 以下等级的机种。除非您不要使用 X Window ！请参考前一章的介绍。
关于硬盘分区的分配：因为是练习机，建议您主要分为 / 与 Swap 两个即可。不过，还是需要留下一些硬盘空间来作为练习之用。 我的 8GB 硬盘主要分为 6GB 为 / ， 512MB 为 swap ， 1GB 为 /home ，另外的磁盘空间则不规划！。 至于磁盘分割与各目录的相关意义，我们会在 磁盘文件系统 当中来进行说明，切莫着急啊！ ^_^。至于如果您的硬盘大于 60GB 以上时，可能会有开机扇区的问题，那就必须要独立出 /boot 这个磁盘槽了，请参考 本章最后一节的说明。
选择 MBR 当中的开机管理程序：在 Linux 里面预设使用两种开机管理程序，分别是 LILO 与 GRUB 这两个好东西，其中， LILO 算是比较早期的开机管理程序，不过， 鸟哥个人倒是还蛮喜欢 LILO 的， 毕竟他虽然比较死板，但是还蛮好用的，磁盘代号设定上面与 Linux 上的磁盘代号相同， 所以没有什么太大的困扰。而较新的 GRUB 其实是很棒的一套开机管理程序，我个人认为， 他最大的功能也最具魅力的地方是具有『动态搜寻核心档案』的功能， 他可以让您在开机的时候，可以自行编辑您的开机设定系统档案，呵呵！所以即使您不小心设定错了 grub ，没关系！开机的时候自行编辑一下就好啦！这方面的技巧， 我们会在 开机流程与 Loader 的时候再来详细的介绍， 还是慢慢的从头学习起来呦！
选择所需的套件：虽然将光盘上面的全部套件都安装，是有点浪费硬盘空间，不过我们是练习机嘛！ 所以还是完整的都给他安装下去的好。(如果您想要选择套件的话， 特别建议您，务必将『系统开发工具』，也就是 gcc, kernel-headers, kernel-source 等等安装上去喔！) 到了这一步之后，嘿嘿！规划就已经差不多了，所以，这个时候，基本上已经可以开始来安装 Linux 啦！但是，还是有个困扰耶，那就是，在第三步骤的时候，我要怎么在安装的时候分割我的硬盘呀！？ 上一章里面有提过硬盘的排线与硬盘在 Linux 里面的磁盘代号有关，那么该如何分割？ 另外，有什么自订的方式可以来帮我分割硬盘吗？呵呵！底下我们就来提一提如何进行这些动作啰！ 

硬盘的连接与代号
硬盘分区与配置的好坏，会影响到未来您的主机的使用情况，此外，好一点的分割方式， 会让您的数据保有一定的安全性！怎么说呢？这么想好了，如果你的 Windows 硬盘里面，仅有 C 槽的话，那么当 Windows 需要重新安装的时候，你又想要重新格式化 ( format ) 时，而 C 槽里面很不巧的，已经放了很多重要的档案数据，这个时候怎么办？ 光是搬这些重要数据到其它空间就受不了！ 所以，比较聪明的玩家，都喜欢分割成两槽以上，将系统档案与数据文件分开， 可以达到比较好的管理效果！除此之外，磁盘分割的好坏，还可以影响到系统存取数据的效能呢！ 这个部分我们在后面几章再来谈一谈！所以啰，正常使用情况下的 Linux 主机，通常会依照目录与主机的特性，来分割硬盘， 以达到比较好的管理成效。不过，由于 Linux 的硬盘分区比较具有弹性，同时， Linux 硬盘分区程序 fdisk 功能很强悍，此外，要分割的好，必须要了解一下基础的硬盘架构， 所以，底下我们先来介绍一下硬盘的基本架构，然后再来介绍如何分割吧！现在的主流硬盘应该是 SATA 小排线的那一种接口硬盘。他与旧 IDE 硬盘的分别， 我们已经在前一章谈过了，这里就略过不提。但不论是 SATA 或者是 IDE 接口的硬盘， 他在 Linux 当中的硬盘代号都是一样的！所以，这里我们依旧以 IDE 硬盘来稍作说明啰！通常在 586 之后生产的主机板上面都有两条接排线的接口 ( 排线就是用来连接硬盘与主机板的那一个东西啦！)，而我们称这种界面为 IDE 接口，这也是之前的主流硬盘接口(目前已被 SATA 取代) ，为了区隔硬盘读取的先后顺序，所以主机板上面的这两个接口就分别被称为 Primary ( 主要的 ) 与 Secondary ( 次要的 ) IDE 界面啰， 或者被称为 IDE1 ( Primary ) 与 IDE2 ( Secondary )。而如果你有仔细观察的话，那么每一条排线上面还有两个插孔，也就是说一条排线可以接两个 IDE 接口的装置 ( 硬盘或光驱 )，而你有两条排线，因此 一个主机板在预设的情况中，应该都可以接四个 IDE 接口的装置。好了，那么每条排线上面该如何判别哪一个是主硬盘 ( Master )，哪一个是副硬盘 ( Slave ) 呢？这个时候就需要调整硬盘上面的跳针 ( jump ) 才可以知道！请察看一下您的硬盘机吧！上面应该都会有图示说明才对。 (注：硬盘的 master/slave 判断方法中，除了利用 jump 主动调整之外， 还可以透过 cable 自动选择。)好了，所以如果我有一个光驱了，那么我最多就只能再安装三部 IDE 接口的硬盘在我的主机上面。OK！那么由于我的硬盘与 Linux 的磁盘代号有关，那么我怎么知道这个硬盘的代号呢？没问题啦，由 IDE 1 ( Primary IDE ) 的 Master 硬盘先计算，最后是 IDE 2 的 slave 硬盘，所以各个磁盘的代号是：　 



IDE\Jumper
Master
Slave

IDE1(Primary)
/dev/hda
/dev/hdb

IDE2(Secondary)
/dev/hdc
/dev/hdd假如我只有一颗硬盘，而且这一颗硬盘接在 IDE 2 的 Master 上面，那么他在 Linux 里面的代号就是 /dev/hdc 啰！OK！好像没问题了呦！呵呵！才不是呢，问题很大呦！ 因为，如果我这个磁盘被分割成两个磁盘分割槽(Partition)，那么每一槽在 Linux 里面的代号又是如何？如何知道每个 partition 的代号呢？

认识硬盘的 partition
基本上，硬盘是由最小的物理组成单位元元 扇区 ( sector ) 所组成的，而数个扇区组成一个同心圆时，那就称为 磁柱 ( cylinder ) ，最后构成整个硬盘的容量大小。关于硬盘的管理我们在后续章节再来介绍， 这里我们比较想要知道的是，如何分割硬盘，所以先简单的将硬盘变成如下的图标：　 
图1、硬盘数据示意图在上面的图示中，我们可以很清楚的知道，在硬盘里面有分为两个区域，一个是放置这个硬盘的信息区，我们称为 Master Boot Recorder, MBR ( 主要开机扇区 )， 一个则是实际档案数据放置的地方。MBR 可以说是整个硬盘最重要的地方了，因为在 MBR 里面记录了两个重要的东西，分别是：开机管理程序，与磁盘分割表 ( partition table )。因此，只要 MBR 物理实体坏掉了，那么这颗硬盘就差不多要报废了！ 因为，如果系统找不到 partition table ，就无法使用这块硬盘，所以数据即使没有丢掉，但是没有 MBR ，呵呵，还是不能使用的啦！首先来看一看什么是 partition table 呢？简单的说，我们说的『 硬盘分区』就是在修改这个 partition table 而已！他基本上定义了『第 n 个磁盘区块是由第 x 磁柱到第 y 个磁柱』，所以，每次当系统要去读取 n 磁盘区块时，就只会去读取第 x 到 y 个扇区之间的数据！呵呵！这样知道了吗？很简单吧！下次记得人家在谈磁盘分割的时候， 不要以为系统真的会在硬盘上面用力、努力的划标签！实际上，他最大的功能就是修改 MBR 里面的 partition table 啦！不过，由于这个 MBR 区块的容量有限，所以，当初设计的时候，就 只有设计成 4 个分割纪录，这些分割记录就被称为 Primary ( 主分割 ) 及 Extended ( 延伸分割 ) ，也就是说，一颗硬盘最多可以有 4 个 ( Primary + Extended ) 的扇区，其中， Extended 只能有一个， 因此，你如果要分割成四块磁盘分割的话，那么最多就是可以： 
P ＋ P ＋ P ＋ PP ＋ P ＋ P ＋ E的情况来分割了。其中需要特别留意的是，如果上面的情况中， 3P + E 只有三个『可用』的磁盘，如果要四个都『可用』，就得分割成 4P 了！( 因为 Extended 不能直接被使用，还需要分割成 Logical 才行， 底下我们会继续说明的！ )。那么为什么要有 Extended 呢？这是因为如果我们要将硬盘分区成 5 个区块的话，那么怎么办？这个时候就需要 Extended 的帮忙了。由于 MBR 仅能保有四个 partition 的数据记录，那如果超过 4 个以上时， 系统允许在额外的硬盘空间放置另一份磁盘分割信息，那就是 Extended 了！ 假设您将您的硬盘分区成为 3P + E ，那么那个 E 其实是告诉系统，磁盘分割表在另外的那份 partition table， 也就是说，那个 Extended 其实就是具有『指向 (point)』正确的那个额外的 partition table 啦！ 本身 Extended 是不能在任何系统上面被使用的，还需要再额外的将 Extended 分割成 Logical ( 逻辑 ) 分割才能被使用，所以啰，藉由这个 Extended 的帮忙，我们就可以分割超过 5 个可以利用的 partition 啰！ 不过，在实际的分割时，还是容易出现问题的，底下我们来思考看看： 

思考一：如果我要将我的大硬盘『暂时』分割成四个 partition ，同时，还有其它的空间可以让我在未来的时候进行规划，那么该如何分割？说明：
由刚刚的说明，我们可以知道， Primary + Extended 最多只能有四个 partition，而如果要超过 5 个 partition 的话，那么就需要 Extended 的帮忙。因此，在这个例子中，我们『千万不能分割成四个 Primary 』为什么呢？假如您是一个 20 GB 的硬盘，而 4 个 primary 共用去了 15 GB ，您心想还有 5 GB 可以利用对吧？错！剩下的 5 GB 『完全不能使用』，这是因为已经没有多余的 partition table 纪录区可以记录了，因此也就无法进行额外的分割，当然啰， 空间也就被浪费掉了！因此，请千万注意，如果您要分割超过 4 槽以上时，请记得一定要有 Extended 分割区，而且必须将所有剩下的空间都分配给 Extended ，然后再以 logical 的分割区来规划 Extended 的空间。 另外，考虑到磁盘的连续性，一般建议将 Extended 的扇区分割在最后面的磁柱内。 
思考二：我可不可以仅分割 1 个 Primary 与 1 个 Extended 呢？说明：
当然可以！基本上， Logical 的号码可达 63 号，因此， 你可以仅分割一个主分割，并且将所有其它的分割都给 Extended ，利用 Logical 分割来进行其它的 partition 规划即可！ 
思考三：假如我的硬盘安装在 IDE 1 的 Master ，并且我想要分割成 6 个可以使用的硬盘扇区，那么每个磁盘在 Linux 底下的代号为何？说明：
由于硬盘在 Primary ＋ Extended 最多可以有四个，因此，在 Linux 底下，已经将 partition table 1 ~ 4 先留下来了，如果只用了 2 个 P + E 的话，那么将会空出两个 partition number 呦！再详细的说明一下，假设我将四个 P + E 都用完了， 那么硬盘的实际分割会如同下图所示：
图2、六个硬盘的分割示意图实际可以使用的是 /dev/hda1, /dev/hda2, /dev/hda3, /dev/hda5, /dev/hda6, /dev/hda7 这六个 partition！至于 /dev/hda4 这个 Extended 扇区本身仅是用来规划出让 Logical 可以利用的磁盘空间而已！(其实在每个 partition 的最前面扇区，会有一个特殊的区块， 称为 super block，我们的 Extended 指向的，就是 /dev/hda4 的 super block 处， 该处就是额外记录的那个 partition table 啦！)那么万一我只想要分割 1 个 Primary 与 1 个 Extended 呢？这个时候你的磁盘分割会变成如下所示：
图3、六个硬盘的分割示意图注意到了吗？因为 1~4 号已经被预留下来了，所以第一个 Logical 的代号由 5 号开始计算起来，而后面在被规划的， 就以累加的方式增加磁盘代号啰！而其中 /dev/hda3, /dev/hda4 这两个代号则是空的， 被保留下来的代号。 

Linux 安装模式下，硬盘分区的选择(极重要)
实际上，在 Linux 安装的时候，已经提供了相当多的预设模式让您选择分割的方式了， 不过，无论如何，分割的行为都不是很能符合自己主机的样子！因为毕竟每个人的『想法』都不太一样！ 因此，强烈建议使用『自订安装, Custom 』这个安装模式！ 在某些 Linux distribution 中，会将这个模式写的很厉害，叫做是『 Expert, 专家模式 』，这个就厉害了，请相信您自己，了解上面就自称为 专家 了吧！没有问题！
自订安装『Custom』： 


A：初次接触 Linux ：只要切割『 / 』及『 Swap 』即可！ 好了，通常初次安装 Linux 系统的朋友们，我们都会建议他直接以一个最大的扇区『 / 』来安装，这样有个好处，就是不怕分割错误造成无法安装的困境！例如 /usr/ 是 Linux 的可执行程序及相关的文件摆放的目录，所以他的容量需求蛮大的， 万一你分割了一块扇区给 /usr ，但是却给的不够大，那么就伤脑筋了！ 因为会造成无法将数据完全写入的问题，就有可能会无法安装啦！因此上， 如果你是初次安装的话，那么可以仅分割成两个扇区『 / 与 Swap 』即可！
B：建议分割的方法：预留一个备份的扇区！就如同前面几个心得分享文章中提到的，由于 Linux 预设的目录是固定的，所以，通常我们会将 /var 及 /home 这两个目录稍微加大一些，如果硬盘够大的话，加个几 GB 也不为过！另外， /usr 至少给他 3~5 GB 吧，如果硬盘真的大的话！而 / 也可以给个几 GB 的空间。最后，由于我们的 Linux 可能是在『试用』阶段，所以很有可能会重复的一再安装，因此上，鸟哥 都会预留一个扇区来备份我的核心啦与实作过程中觉得不错的 scripts ( 就有点像 DOS 的批次档 ) ，当然，我的 /home 底下的咚咚也可以有备份的地方， 而安装套件的源文件也可以摆在这里！有个最大的好处是，当我的 Linux 重新安装的时候，我的一些套件马上就可以直接在硬盘当中找到！ 呵呵！重新安装比较便利啦！ 
选择 Linux 安装程序提供的预设硬盘分区方式： 
对于首次接触 Linux 的朋友们，通常不建议使用各个 distribution 所提供预设的 Server 安装方式，因为会让你无法得知 Linux 在搞什么鬼，而且也不见得可以符合你的需求！注意：选择 Server 的时候，请『确定』您的硬盘数据是不要的！因为 Linux 会自动的把你的硬盘里面旧有的数据全部杀掉！此外，硬盘至少需要 2 GB 以上才可以选择这一个模式！ 硬盘方面的规划大致上就是如此啦！要规划硬盘的时候，请特别的小心呦！

开始安装 Fedora Core Release IV
Linux 安装之前要准备什么呢？就是刚刚前面已经讲过的几个咚咚啦！归纳一下： 

Linux 主机规划单：就是刚刚我们规划好的那个数据啰！ 
Linux distribution ：利用一些映象站台下载各版本的 Linux ，或者直接以本书提供的四块 CD 装的 FC4 进行安装啰！ 
主机硬件信息收集：根据主机规划单的内容， 去收集一下你的硬件信息吧！其中特别重要的是，先检查一下是否可以使用光盘开机呢？如果 BIOS 不能支持光盘开机的话，那么就需要先行安装可开机软盘。 
网络硬件联机：这部份本书先不谈，否则内容就太多了， 阿！再写下去鸟哥会疯掉……所以请大家先上网查阅一下网络的硬件联机吧！ 
网络信息：包括你的 IP, netmask, gateway, dns IP 、是否为拨接等等，都需要先知道呦！ 然后，其实各个套件的安装步骤都差不多，大概都是： 

A. 选择安装模式：主要分为图形接口安装与文字接口安装； 如果是图形接口安装的话，还可以选择语系，这个时候我们就有中文可以使用啦！ 
B. 搜寻硬件信息：然后安装程序会去搜寻一下系统的硬设备， 以利后续的处理，有的安装程序会在这个地方让您加入一些参数，以驱动不明的装置设备； 
C. 设定键盘、鼠标模式：这个可是很重要的项目呀！ 
D. 硬盘分区设定：就是刚刚提到的几个注意事项； 
E. 套件选择：这是很重要的部分呢！请特别留意！ 
F. 网络与安全性设定：连上 Internet 的模式与驱动网络卡的方式等设定； 
G. 超级管理员与一般身份使用者账号设定：最重要的是设定 root ( 超级管理员 ) 的密码啰！ 
H. 设定 X-Window 与开机片：如果有安装 X-Window 相关的软件，那么 X-Window 就需要设定并且测试一下！ 大概就是这样子吧！好了，底下我们就真的要来安装啰！

 1. 选择开机次序并开机：
因为目前几乎所有的 Linux Distributions 都是支持光盘开机的， 而我们的主机板也几乎都是支持光盘开机。只是，您必须要确定系统的第一个开机搜寻装置为光驱就是了。 我们可以在 BIOS 里面设定开机的次序，看看能不能以光驱开机！ 设定方式为： 

按电源键开机； 
在进入系统之前会出现 Del 字样（每个厂牌不太相同），此时按下键盘上的 Delete 键； 
进入 BIOS 之后以方向键选择 『BIOS Features Setup』这一项，或者是 『Advanced BIOS Features』，不管如何，反正只要看到 『BIOS Features』字样的那一项就对了！； 
将方向键移动至 『Boot Sequence』 或者是 『First Boot Device』； 这一项，按键盘上的『Page Up』 或 『Page Down』 按键，选择『CD-ROM』 为第一开机顺位即可。这里注意一下，如果你的机器并不支持 CD-ROM 开机的话，你一定找不到 CD-ROM 这一项。这就比较麻烦，因为目前有些 Linux distributions 仅支持光盘开机的说～所以，您就得要找比较早期的版本或者其它方式来安装了。 
按键盘上 『ESC』 键退出； 
将方向键移动至 『Save and Exit』 这一项按 『Enter』 及 『Y』 确认后重新开机即可！ 在进行完上面的步骤之后，请将第一片 Fedora Core IV 可开机光盘放入光驱中，按下电源，给他开机去！




Tips:其实，目前除了一般的光盘片之外，很多版本的 Linux 也提供可开机 DVD 片了！ 所以，如果您嫌 4 片装的 FC4 太麻烦，那么可以到义守大学下载 DVD 版本的 FC4 喔！http://ftp.isu.edu.tw/pub/Linux/Fedora/linux/core/4/i386/iso/ 另外，那个 FC4-i386-rescuecd.iso 档案也可以下载！那个是救援光盘～ 如果发生不可预期的错误时，利用这个光盘可以救回来您的 FC4 喔！ 


 2. 选择安装模式：
在进行完上面的动作之后，理论上，您的主机已经以 FC4 可开机光盘开机成功了！ 如果发生一些错误讯息时，很可能是由于： 1)硬件不支持； 2)光驱会挑片； 3)光盘片有问题； 如果是这样，那么建议您，再仔细的确认一下您的硬件是否有超频？或者其它不正常的现象。 而，您的光盘来源也需要再次的确认！(如果是书上附赠的光盘， 却发现无法开机成功，先确定一下您的光驱是否会挑片？换一台光驱试看看。 如果还是无法开机，可以寄回您的书商，请他们帮忙您换一组光盘呢！这是您的权利喔！)一般 Linux 都会支持至少两种安装以上的安装模式，分别是文字(text)与图形(graphic)接口。 正常的话，以光盘开机后，会出现如下图示。
图 4 、选择安装模式如果想要以图形接口来安装，可以直接按下 &amp;lt;enter&amp;gt; 按键，如果想要以文字接口来安装， 可以在箭头指的地方输入『 linux text 』来让安装程序以文字接口安装。 不过，要注意的是，如果在 10 秒左右您没有在 boot: 后(箭头处)输入任何按键的话， 那么安装程序就会以预设的模式来安装，预设是以图形接口来安装的喔！我们这里也使用图形接口来介绍。 其实，两个接口都很像啦！只是图形接口还可以使用中文就是了！ ^_^在按下 Enter 之后，安装程序就会开始去侦测硬件，并且将信息列在屏幕上给您参考， 如下图所示。由于鸟哥为了捉图的需要，所以使用 VMWare 之类的软件来仿真安装。 不过，就如同前面介绍的，不建议您用这样的软件来安装喔！这里只是作个介绍而已。 图 5 的箭头处就指出一些 IRQ 的利用，以及安装程序侦测到的硬件相关信息(例如 VMWare 仿真的硬盘！)
图 5 、进行硬件侦测过程硬件侦测完之后，会出现一个是否检查光盘的画面，如下图所示。 注意，如果要检查光盘的话，会花去很多时间的！所以，如果确定光盘来源没有问题， 请选择『 Skip 』选项即可！
图 6 、是否检查光盘？请选择 skip 喔！略过光盘检验工作后，因为我们使用的是图形接口的安装模式，所以安装程序就会去侦测： 屏幕、键盘、鼠标等等相关的硬件啰！如下图所示啊！
图 7 、安装程序侦测到的屏幕、显示卡与鼠标等信息

 3. 选择安装程序的语系与键盘配置：
在完成了一些硬件方面的侦测之后，顺利的话，就可以进入图形接口的安装了！ 安装的画面如下图所示。基本上，分为左右两个区块，左边主要是作为『说明』之用， 右边才是真正的操作区块！如果您搞不懂这个安装画面是干嘛用的，可以参考左边区块的说明。 至于右下角则是下一步或者回到上一步的按钮喔！给他按下一步吧
图 8 、FC4的欢迎画面之后就是选择语系啦！因为安装程序可以使用很多不同的语言来呈现。 我们可以选择中文来进行安装喔！如下图所示，先选择『繁体中文』按『下一步』即可！
图 9 、语系的选择嘿嘿！此时竟然是以中文来显示我们所需要的画面了！啊！真是太高兴了！ ^_^ 接下来，则要选择『键盘的配置』。因为每个地区的键盘上面的字母配置都不一样， 我们使用的是英文的键盘配置，所以，选择『美式英文』就可以了！如下图所示。
图 10 、键盘配置的选择

 4. 安装的系统类型与磁盘分割：
什么是『安装的系统类型』呢？基本上， FC 4 已经帮您规划好一些主机利用的方式了。 举例来说，如果您想要使用桌上型计算机的功能，那么可以选择下图的『个人计算机』项目， 他会主动的帮您进行好磁盘分割以及相关的套件选择啊！不过，缺点是， 可能您的硬盘 partition 就交给系统主动去判断处理，在学习上，会比较不好， 而且，系统的预设分割与套件的选择，也不见得就会跟您想象的一样！ 因此，这里强烈的建议您，务必选择『定制』喔！
图 11 、预设的安装系统类型好了，接下来自然就是要进行磁盘的分割动作了！这是我们在安装与规划的部分一直强调的地方呢！ ^_^ 此时，请选择『使用 Disk Druid 』工具来自行进行磁盘分割呢！这可是很重要的喔！
图 12 、磁盘分割的模式(自动/手动)如果是一颗全新的硬盘，可能会发生如下的错误讯息，这个讯息仅是告知您， 安装程序找不到 partition table 而已，还不需要太担心啦！此时， 直接按下『是』就可以了！
图 13 、确定是否删除 partition table接下来的画面则是在操作磁盘分割的主要画面了！这个画面主要分为三大区块， 最上方为硬盘的分割示意图，目前因为我的硬盘并未分割，所以呈现的就是一整块而且为 Free 的字样。 中间则是指令区，下方则是每个分割槽(partitions)的启始磁柱、结束磁柱、所占容量大小， 以及相关的文件系统与挂载点了。关于挂载点我们会在后面几个章节加以介绍， 这里您只要知道我们要将磁盘分割槽挂载到 /home 以及 / 还有 swap 即可。至于指令区，总共有六大区块，其中 RAID 与 LVM 是硬盘特殊的应用， 我们先略过不谈(在基础篇的最后面硬件维护的章节，我们会来谈一谈 LVM)。 指令的作用如下： 

『新增』是增加新分割，亦即进行分割动作，以建立新的磁盘分割槽； 
『编辑』则是编辑已经存在的磁盘分割槽，您可以在实际状态显示区点选想要修改的分割槽， 然后再点选『编辑』即可进行该分割槽的编辑动作。 
『删除』则是删除一个磁盘分割槽，同样的，您得要再实际状态显示区点选想要删除的分割槽喔！ 
『重设』则是恢复最原始的磁盘分割状态！ 需要注意的是，您的系统与鸟哥的系统当然不可能完全一样，所以，您的屏幕上的硬盘信息， 应该不会与鸟哥的相同的喔！所以看到不同，不要太紧张啊，那是正常的！
图 14 、磁盘分割的主画面好了！准备来进行分割的动作吧！按下『新增』之后，会出现如下图的窗口～ 我们得选择挂载点，我首先规划出来的是根目录 / 的分割槽，所以先点选如下图最上方箭头指的地方， 然后选择 / 即可；
图 15 、选择根目录的磁盘分割接下来，因为我仅有一颗硬盘，所以在『可使用磁盘驱动器』就没有办法选择，一定是固定的那一颗啦！ 而我想要的磁盘文件系统类型就选择标准的 ext3 即可！再来则是选择分割的状态了。 首先，我要规划出 6GB 左右，因此，在『大小』那个地方填入 6000 (大约是 6000M = 6G)。 然后我想要固定大小，因此选择『固定分割区大小』且选择『强制成为主要分割区』，这个就是 primary 的 partition 啦！最后按下确定。(注意，如果您想要将系统的所有套件安装 这里至少需要填入 10000 ，亦即 10GB 的空间才足够喔！)
图 16 、选择根目录的磁盘分割之后会回到主画面，就如下图所示，在『示意图』方面就已经有一个大区块出现了！ 在实际状态区，则有 /dev/hda1 出现了！很简单吧！好了，继续来进行虚拟内存 swap 的分割吧！
图 17 、已经分割出 / 的画面同样的按下『新增』然后就会出现同样的画面，此时，我们直接在『文件系统类型』的地方， 选择『swap』这个类型即可！这个 Swap 有什么功能呢？简单的说，他可以被看做为 『虚拟内存』啰，那么虚拟内存是什么？ 您可以这样想象，当你的物理内存只有 64 MB 的时候，但是你的系统负荷突然之间太大了， 例如突然之间有数十个人连上你的 Web 服务器时，那么你的物理内存将不足以负荷这些计算的数据！ 怎么办？这个时候我们可以使用硬盘来仿真内存的数据存取，这个就是所谓的『虚拟内存』啰！ 不过，虚拟内存的速度会比较慢呦！当有数据被存放在物理内存里面，但是这些数据又不是常被 CPU 所取用时， 那么这些不常被使用的程序将会被丢到虚拟内存当中， 而将速度较快的物理内存空间释放出来给真正需要的程序使用！ 这就是虚拟内存 的功效之一啦！通常 Swap 建议的值大约是『RAM 的两倍大』， 但是这个因地制宜啦！像鸟哥的 Proxy 主机本身的内存就达到 1GB 了， 那么是否还需要虚拟内存呢？见仁见智啰！
图 18 、新增加 swap 磁盘分割然后，我们要将 swap 规划为 512 MB ，所以，如下图所示，直接填入 512 ，并且同样的强制为主分割， 以及固定分割区的大小，按下确定即可！
图 19 、新增加 swap 磁盘分割再次回到主画面！呵呵！看到了吗？又多了一个 partition 出现啦！这次是 /dev/hda2 呢！
图 20 、含有 / 与 swap 的主画面继续来新增 /home 这个分割槽吧！如下图所示，我们给予 /home 大约 1GB 的磁盘空间吧！ 同样也是选择标准的 ext3 文件系统！
图 21 、规划 /home 的磁盘分割槽回到主画面后，这就是我们最终的分割结果了！注意到，我们还有一部份的剩余空间没有使用到喔！ 那个没有被使用到的空间，可以做为我们未来的磁盘练习啦！别将他规划了！ ^_^ 另外，您也可以自行测试一下以不同的方式来分割您的磁盘，举例来说，您也可以这样分割： 

Swap 约 100 MB； 
/var 给 3~5 GB； 
/usr 给 3~5 GB； 
/ 给 1 GB 以上； 
/home 可以给大一些； 
/backup 用来做为备份的扇区 无论如何，我们这个练习机的分割最终结果如下图：
图 22 、分割完成的最后结果

 5. 选择开机管理程序：
分割完硬盘之后，接下来就来选择开机管理程序啦！在 Linux 里面主要有 Lilo 与 grub 这两套开机管理程序，不过，目前 Lilo 已经比较少使用，取而代之的就是 grub 这个好用的管理程序啰！ 所以，我们可以看到如下的画面：比较值得注意的是，开机管理程序可以被安装在 MBR 也可以安装在每个 partition 最前面的 super block 处(这个我们会在后面继续说明！看不懂先有印象即可！)。 在下图当中，我们安装在 /dev/hda 内，这就是『MBR』的安装点，如果是类似『/dev/hda1』这个就是 super block 的安装处啦！在下图中，显示了我们目前仅有一个开机选单，那就是 『Fedora Core』 这个选项而已。 我们可以透过『新增』、『编辑』与『删除』来管理开机时，要显示的项目。 举例来说，如果您有安装 Windows 在这个系统当中，那么此时，您就可以按下『新增』， 将 Windows 可开机扇区加到这个画面当中来喔！至于最底下的『密码』与『进阶设定』， 我们在后续相关的章节谈到时，再深入来研究啊！
图 23 、安装 grub 开机管理程序上图中，如果按下『新增』就会出现如下所示的图样，此时，您可以选择所需要的 partition， 以及开机时选单内的名称(标签)，按下确定即可。如果没有额外的开机区， 就略过这个步骤吧！
图 24 、安装 grub 开机管理程序

 6. 网络与防火墙设定：
再来，如果您的网络卡可以被系统捉到的话，那么您就可以设定网络参数了！ 例如下图所示的模样！目前各大版本几乎都会预设网络卡 IP 的取得方式为『自动取得IP』， 也就是所谓的『DHCP』网络协议啦！不过，由于这个协议需要有 DHCP 主机的辅助， 开机的过程中可能会等待一段时间。因此，您可以改成手动设定。不过，无论如何， 都要与您的网络环境相同才是。如果您不懂网络如何设定，没有关系，我们会在服务器篇好好的深入介绍的，在这里，还没有需要了解他！ 您可以照着鸟哥的设定值设定就好了！未来了解了网络架构，再回来这里进行修订的工作即可！
图 25 、安装程序预设的网络参数设定值说过啦！不要用 DHCP 啊！利用手动设定即可！你也可以设定开机就驱动网络卡喔！ 如下图的箭头指的地方。至于 IP 嘛！嘿嘿！就跟鸟哥的一样就好了！别担心！
图 26 、设定网络卡 IP上图中给他按下确定之后，就会出现如下的图示啦！您必须要替自己的 Linux 主机取的名称。 一般来说，我们都不建议取的名称太大众化！因为，可能会造成未来设定主机的一些困扰。 所以，这里鸟哥以自己的名字取一个主机名称呢！您也可以依样画葫芦喔！ 另外，那个网关器与 DNS 的设定嘛！就跟鸟哥设定的一样就好了！不知道原理没关系！ 以后我们再来设定好！
图 27 、设定主机名称与 Gateway, DNS设定好网络之后，再来则是跟网络有相当大关系的防火墙啦！因为我们是练习用的主机，这里就先不要使用防火墙。 另外，那个 SELinux 的设定值得特别留意！ SELinux 是 Security Enhanced Linux 的简写，这个套件是由 National Security Agency (NAS, http://www.nsa.gov/selinux/) 所发展的，他主要的功能可以代管整个 Linux 系统的存取控制(access control)， 可藉以避免一些可能造成我们 Linux 操作系统安全问题(Security)的软件的破坏， 虽然 SELinux 会有比较好的系统防护能力，不过，如果不熟悉他，那么启动了 SELinux 之后，嘿嘿！ 您未来的服务可能会因为这个较为严密的安全机制，而导致无法提供联机的问题，或者无法进行数据存取的问题， 所以，暂时也将他关闭吧！ ^_^
图 28 、防火墙的设定因为我们停用防火墙，安装程序很好心的会提示我们：『你没有启用防火墙喔！』，嘿嘿！ 没关系！继续吧！因为我们在服务器篇里面会提到自己设定的防火墙功能啊！ 
图 29 、无防火墙的警告讯息

 7. 选择时区与设定 root 密码：
因为全世界被细分为 24 个时区，所以，得要告知系统我们的时区在哪里才行啊！ 如下图所示，您可以选择台北，或直接用鼠标在地图上面点选也可以！ 要特别注意的是那个 『UTC』，他与所谓的『日光节约时间』有关。 不过，我们不需要选择这个，不然的话，还可能造成时区被影响，导致系统显示的时间会与本地时间不同。




Tips:事实上， UTC 与所谓的 GMT 时间是一样的！就是格林威治时间，那是标准的地球时间啦！ 以格林威治(英国)所在地为 GMT 0 点，而将地球切为 24 个时区，我们台湾在 GMT 的东方， 时间比较早，所以台湾本地时间为 GMT+8 小时。 

图 30 、时区的选择再来则是最重要的『系统管理员的密码』设定啦！ 在 Linux 底下，系统管理员的预设名称为 root ，请注意，这个密码很重要！ 虽然我们是练习用的主机，不过，还是请您养成良好的习惯，最好 root 的密码可以设定的严格一点。 可以设定至少 8 个字符以上，而且含有特殊符号更好，例如：I&amp;amp;my_dog 之类，有点怪， 对您又挺好记的密码！
图 31 、系统管理员密码的设定
图 32 、系统开始读取套件数据

 8. 套件的选择：
在进行完套件的读取之后，接下来，则是选择您要的套件啦！ 咦！我怎么知道我要什么套件？哈哈！您当然不可能会知道～知道的话.....就不会来这儿查阅数据了 @_@ 没有啦！开开玩笑....呼～好冷～～基本上，鸟哥不建议您使用安装程序预设的套件来安装！因为，会缺乏很多需要的套件的！ 如果您的硬盘够大，建议您，像下图一样，选择『全部安装』，一劳永逸！不必怕什么咚咚没有装。 当然啦，这是针对练习机来进行的安装。如果您已经具有基本的套件管理知识，那么鸟哥会建议您选择『最小值』来安装， 不过，要有心理准备，就是很多数据您都得在安装成功后，再自行由光盘中的档案来安装！ 但是，优点是，会占用比较少的空间，而且系统会比较干净。那有没有折衷的方法啊？有的，假设您不需要 X Window ，但却需要一些有的没有的工具的话， 那么您可以选择底下这些相关的套件啊！ 

编辑器 
文字接口的因特网 
编写与出版 
服务器设定工具 
开发工具(这个最重要！一定要选择！) 
兼容旧式软件开发 
语言支持 
管理工具 
系统工具 
打印支持 这样的套件大约需要 1833 MB 的硬盘空间。而如果您想要使用 X Window 的话，那么最上方的 『X 窗口系统』与 『KDE桌面环境』也可以将他选择的啦！仔细注意到下图的最下方， 有个『总安装大小： xxxxxM』吧？！那就是您选择的套件总共会占用多少硬盘空间啦！ 选择看看吧！
图 33 、套件的选择检查过相依属性的问题后，会出现一个说明窗口，里面说的是， 等一下就会主动的将所有选择的套件安装妥当，而且，所有安装的信息都会被纪录在 /root/install.log 及 /root/anaconda-ks.cfg 这两个档案中呢！
图 34 、安装前的说明由于您所选择的套件分别在这几张光盘当中，所以会出现这个窗口，告知您， 必须要有这四片光盘才可以安装妥当喔！
图 35 、确定您所拥有的光盘呵呵！开始安装啰！在安装的这个画面中，会显示还需要多少时间， 每个套件的名称，以及该套件的简易说明呢！
图 36 、安装过程的画面一片一片的将光盘拿出来～放进去～花费的时间可不少呢！
图 37 、光盘更换警示等到所有的安装光盘都安装之后，一切就都 OK 了！最后出现这个画面， 请将光驱的片子拿出来，准备按下『重新开机』去开机吧！
图 38 、光盘更换警示在重新开机时，会出现如下的画面，这是正常的！别担心！系统就要重新开机啰！ 接着请看下一章相关的开机与关机内容啊！
图 39 、光盘更换警示

 9. 其它注意事项：
在安装完毕之后，有些地方还是需要提醒您的： 

你可能会觉得很奇怪，为什么你的安装过程会跟我的不一样？！ 呵呵！因为每个人选择的套件都不尽相同，因此， 如果你在安装的过程中选择了跟我不一样的套件，不用担心，安装过程会有些许的不相同是正常的！ 
在安装完成之后，请千万记得『取出光盘片』，不然又会在进入一次安装画面喔！ 
同时建议，安装完成之后，请进入您的 BIOS 当中，将开机的顺序改回来『 C、A 』或『 C only 』反正就是让硬盘开机啦！这样比较安全一些！ 好了！这样应该就已经安装完毕了！请继续往下看看吧！而且，相当的建议您，在正式的进行架站之前， 请依序看一下底下的网页，最好不要跳着看，不然的话，嘿嘿嘿嘿！出现什么问题可不要怪我！因为，照着顺序看会对你的 Linux 认识比较有帮助啦！附带额外提醒一点，由一些 bug reports 的数据显示， FC4 预设的 X Window 对于 Intel 以及一些 G550 的显示卡在支持度上可能有问题，这是因为编译的过程里面下达的参数不佳所致。完整的 bug reports 可以参考： 
https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=161242简单的来说，就是 Intel 的显示卡与 G550 的显示卡硬件在 FC4 的编译过程中， 可能无法对这两种显示卡做比较好的处理，导致 tty1 ~ tty7 都没有东西跑出来。 那怎么解决呢？如果您是初次接触 Linux 的话，那么请先参考 Linux 档案与目录管理 章节当中的 cp 这个复制指令的介绍，然后将 FC3 的这个档案 /usr/X11R6/lib/modules/libvgahw.a 复制到 FC4 底下的相同档案去， 经过重新开机后，应该可以克服这个问题。该档案可以在底下取得： 
ftp://people.redhat.com/mharris/libvgahw.a在这里或许您还看不懂上面写些什么，没关系，这很正常，等到下一章后， 您就晓得这个地方在讲啥了～所以，如果您在下一章的文字、图形接口变换时发生问题， 记得来这里看看呦！ 　 

多重开机安装流程与技巧
很多的朋友，包括我自己，由于工作的需要，常常需要两部不同的操作系统来处理日常生活与工作的杂事！ 那么我是否需要两部计算机呢？并不需要，只要一部计算机使用多重开机的方式来进行安装，嘿嘿！这样就 OK 啊！理论上是如此，不过实际上还需要一些小技巧呢！不过，就如同鸟哥之前提过的，多重开机系统是有很多风险存在的，而且您也不能随时变动这个多重操作系统的开机扇区， 这对于初学者想要『很猛烈的』玩 Linux 有点妨碍～所以，鸟哥不是很建议新手使用多重开机啦！ 所以，底下仅是提出一个大概，您可以看一看，未来我们谈到后面的章节时， 您自然就会有『豁然开朗』的笑容出现了！ ^_^
硬盘重新规划的多重开机系统： 
如果你想要在你的 Linux 机器上同时安装 Windows ？可行吗？当然可行啰！ 况且目前很多的朋友手边只有一部计算机，但是又想要同时学习一下 Linux ，呵呵！那么安装多重操作系统实在是必须要的！好了！那要如何安装呢？以鸟哥前一阵子帮一个朋友规划的 Win98, Win2000, Linux 为例，我先将硬盘以 spfdisk 切割成两个 FAT partition，分别是 2GB 与 3GB ，预计安装 Win98 与 Win2000 （分别是 C: 与 D: ），然后再以 CD 开机后，分割最后的磁盘成为 / 与 Swap 两个！好了！如何安装：

先以 Spfdisk 分割硬盘：由于 Windows 的 Fdisk 实在太慢了，我蛮喜欢使用 spfdisk 这个全中文的磁盘分割接口的！简单又方便！将硬盘切割成 C: 2GB, D: 3GB即可！详细的 Spfdisk 执行</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:49:26</pubDate>
</item>
<item>
<title>【Linux私房菜】以 spfdisk 分割硬盘的一个范例（4）</title>
<link>http://oss.org.cn/html/01/n-62401.html</link>
<text>什么是硬盘分割？ 
在开始进行 Linux 之前，应该有很多的工作要做的！最重要的就如同前面『Linux 主机规划』当中说的，要如何规划硬盘呢？！到底要如何分割硬盘才好！是要将 swap （虚拟内存）规划的大一点比较好？或者是只要一个根目录就可以了呢？另外，如果我的硬盘上面已经有 Windows 系统，我又不想要将 Windows 杀掉，想使用多重开机来安装我的多个操作系统，那要怎么做呢？！况且，由于 DOS 的 fdisk 不认识 Linux 的档案格式，那么我要如何将 Linux 完全的从我的硬盘中移除呢？！呵呵！这里就来说一下该如何是好吧！
由于不同的操作系统所使用的档案架构并不相同，有些甚至是不兼容的，例如 Windows 所使用的是 FAT 表，而 Linux 所使用的是 ext2 这个档案格式，这两种格式完全不相同，在 Linux 底下还可以藉由编辑核心来支持 Windows 的 FAT 档案格式，但是 Windows 则完全无法读取 Linux 的档案格式了！此外， Windows 使用的磁盘分割工具 fdisk ，很抱歉的，并不认识 Linux 的 ext2 这个档案格式，所以如果您有一棵已经安装有 Linux 系统的硬盘，呵呵，使用 Windows 的 fdisk 是完全无法分割这块硬盘的！
那么到底什么是硬盘分割呢？真的要将硬盘用刀子割一割吗？！不是这样的，实际上，硬盘是以 blocks, clusters, partitions 这些东西来作为储存的单位，而最底层的硬盘单位就是 blocks 了，通常一个 blocks 大约是 512 bytes 左右。那么 partition 是什么？简单的来说，你知道你的 Windows 有所谓的 C:, D: 是吧！其实他们是同一颗硬盘，只是利用『磁盘分割表』(partition table)来将实体的硬盘规划出不同的区块。举个例子说，假设你的硬盘总共有 1024 个 clusters （利用 blocks 结合而成的硬盘计算单位），那么你在这块硬盘的文件头地方（就是磁盘分割表，可以想成要读取一块硬盘时最先读取的地方）如果写入你的 partitions 共有两块，一块是 primary 一块是 extended ，而且 extended 也只规划成一个 logical ，那么你的硬盘就是只有两个槽啦（对于系统来说，真正能使用的有 Primary 与 Logical 的扇区， Extended 并无法直接使用的！需要再加以规划成为 Logical 才行！ ) ，而且在 partition table 也会记录 primary 是由『第 n1 个 cluster 到第 n2 个 cluster 』，所以啰，这样子一来，当系统要去读取 primary （就是 c 槽）的时后，就只会在！n1~n2 之间的实体硬盘当中活动啰！
基本上， Windows 98 系统中的 Fdisk 这支程序仅支持一个 primary 与一个 extended ，其中， extended 可以再细分成多个 logical 的硬盘槽。NT 很抱歉，小弟不熟，所以就不提了！那么 Linux 呢？嗯！基本上最多可以有 4 个 primary 的硬盘，而可以支持到 3 个 primary 与一个 extended ，其中， extended 若再细分成 logical 的话，则全部 primary + extended + logical 应该可以支持到 64 个之多。底下我们将以 spfdisk 这个全中文接口的 fdisk 磁盘分割工具来介绍如何分割硬盘！

硬盘分割 ==&amp;gt; SPFdisk 
SPFdisk 是一套由国人开发完成的全中文接口的硬盘分割工具，他要比微软出的 Fdisk 功能强多了，他的好处除了==&amp;gt;全中文接口让你一定可以看的懂之外，简单的类图形接口可以让你轻易的进行硬盘分割，除此之外，这套软件的『DOS工具』内的『格式化工具』格式化硬盘的速度真是 DOS 比不上的，我格式化一个 30GB 的硬盘不用十秒就可以格式化完全！&amp;lt;==另外，其它的优点我在此也不多说了，若有需要你可以自行自一些搜寻网站下载最新的程序，或从这里下载我有的程序，不过可能旧一点。
另外，由于 DOS 的 Fdisk 并不认识 Linux 的分割表，所以用 DOS 的 Fdisk 是无法将 Linux 的分割表去除的。因此，你要删除 Linux 的分割表，只有两个比较快的方法，一个是以 Linux 直接再分割，一个则是使用 SPfdisk 分割啦！
由于这个页面的档案很大，有时候会有没办法显示的情况发生，这时请在画面上『按鼠标右键』，再选择『显示图片』这个选项，即可显示画面啦！
硬盘分割主要可分为下面几个步骤： 

将旧有的分割表删除； 
建立新的主分割及扩充分割（若有需要的话）； 
贮存分割表； 
以 DOS 工具格式化以分割的硬盘。 

1. 删除原有分割： 
假设你的主机中没有任何系统存在，则请以 Windows98 制作开机片后，将 spfdisk 拷贝至开机片。以此磁盘开机之后，执行： 



A:&amp;gt;spfdisk
会出现如下欢迎画面。

按任意键后出现下面画面：

以方向键移动光标至『硬盘分割工具』按 Enter 键后会出现画面如下：

这是向你询问是否需要使用 FAT32 的档案系统，由于 Windows 98 支持的长文件名及相关的档案型态是以 FAT32 为准，所以当然按『Y』！按了 Y 之后会出现硬盘的信息，如下所示：

因为我是在我原有的机器上执行这个程序，所以会有两颗硬盘，如果你的系统只有一颗硬盘的话，则只会显示你有的硬盘数据，在上图中，1.19GB 的硬盘其总磁柱仅有 621 单位，比可开机扇区范围（0 ~ 1023）小得多，所以可以随意分割。将光标以方向键移动至 1.19GB 这颗硬盘后，按 Enter ：

因为这颗硬盘之前被我灌过 Linux ，所以会显示 Linux 的扇区划分情况。上面的意义为： 

启动：由于系统开机时会去先去找分割表，由分割表所设定的『可开机扇区』进行开机程序，因此若这个扇区为开机扇区，则『启动』项目会有一个心型的符号存在！ 
起始磁柱与结束磁柱：这一个被分割的扇区的开始与结束扇区。 
MBytes：这个扇区的硬盘容量。 
系统 ID 与系统种类：这一个分割表的类型。因为这是 Linux 的分割类型，所以其 ID 显示为 83，若是 FAT32 的话，则为 0b。 将光标以方向键移动至这个扇区后，按 Enter ：

在这个画面中，将光标以方向键移动至『删除分割』这个项目，并按下 Enter ：

出现此画面后，确定要删除这个分割就按『[Y]是』这个项目。

删除分割之后你的硬盘中就没有分割表的存在了，所以这个硬盘的系统种类则变成了&amp;lt;未规划&amp;gt;。2. 建立主要分割扇区： 
在上面的画面中，按下 Enter 键，会出现下面画面。

由于这一颗硬盘的分割表被删除了，所以『系统ID』与『删除分割』被取消了。这时按下『建立分割』会出现如下画面：

然后选择『建立主分割』，那何谓主分割与扩充分割呢？所谓的主分割在 windows 系统下即是 『C槽』 啦！但是扩充分割并非『逻辑分割』，这里要注意一下，所谓的『逻辑分割』是包含在扩充分割中的，例如当你的扩充分割共有 10GB 但是你想将之分为两槽，则可以使用逻辑分割将扩充分割分为两槽，这两槽即称为『逻辑分割』。所以这里要注意啦，建立扩充分割的时候就要选择『配置整个区域』啦！好！下一步按下『建立主分割』：

这里会问你是否要将整个硬盘分割为仅有一个磁盘区？由于我们要将硬盘分为两槽，所以这里当然选择『[N]否』啦！

由于你选择了『不要配置整个区域为一块扇区』，所以这时程序要你输入你所需要的扇区。通常在第一步是输入『启始磁柱』，这时只要按 Enter 就可以啦，然后会要你输入『结束磁柱』，结束磁柱的输入方法有两种模式，一种是输入磁柱区，一种是输入你所需要的 MB 数，通常我是输入 MB 数啦，例如如上所示，我所需要的空间大小是 600MB ，所以输入『+600』即可，而如果你的硬盘很大，你要输入 4GB 时，则需要输入 『+4000』，以此类推！输入『+600』并按 Enter 之后出现如下画面。

这时出现了你刚刚划分的硬盘信息啦，由于我们是划分为 DOS 分割区，所以系统种类是 FAT-32 ，而 ID 则为 0b 。至于另外尚未划分的就会显示为 &amp;lt;未规划&amp;gt; 啦！如果你还需要再继续划分的话，这时将光标移动至 &amp;lt;未规划&amp;gt; 的那一个扇区按 Enter 后选择『扩充分割』即可继续划分。如果划分完毕之后，当然就是贮存分割表啰。这里注意一下，因为刚刚的动作均尚未完成贮存的工作，所以要反悔还来得及！3. 贮存分割表： 
接下来要做贮存的动作了，按下『Esc』键（键盘左上角那个键）后会出现如下画面：

按『[Y]是』，将刚分割好的分割表贮存至硬盘中！然后出现如下画面：
 
 
 
 

这里的动作是连续的： 

程序会先跟你确认你的硬盘有没有错误，这里还可以反悔。 
然后程序会问你是否需要使用破坏贮存，一般来说是需要使用『破坏贮存』的，因为需要将你的硬盘划分完全啦！所以要按 [Y]； 
为了可以让你以后回复分割情况，所以你可以选择 『建立 UNDO』档，所谓的 UNDO 文件即是记录你之前硬盘分割表信息的档案啦。 这样一来你的硬盘就划分完毕而且贮存啦！这时要做的就是重新开机并格式化硬盘。格式化硬盘可以使用 DOS 的 Format ，当然也可以使用 spfdisk 的内建功能喔！4. 格式化硬盘 
再进入刚刚你划分完毕的那个硬盘区，按下 Enter 之后会出现一串选单，然后最下方的选单为『DOS 工具』，选择这一项并按 Enter 后，会出现另一个选单：

在这个次选单中的第二项即是快速格式化，这个格式化的动作非常的快喔！比 DOS 的格式化快多了！不过，这里也必须指出一个问题，那就是若你的硬盘有坏轨的话，那最好还是使用 DOS 的 format 比较完整一点。
</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:29:37</pubDate>
</item>
<item>
<title>【Linux私房菜】如何规划 Linux 主机（3）</title>
<link>http://oss.org.cn/html/00/n-62400.html</link>
<text>认识计算机硬件配备 
『什么？学 Linux 还得要玩硬件？！』呵呵！没错！Linux 与微软 Windows 在硬件之认知上有相当大不同的差异！其实由前面『 Linux 是什么 』那个章节中您或许已经知道了， Linux 其实主要就是那个『核心』啰，而『核心』的功能就是在管理硬件啰，所以，操作系统与硬件本来就具有很高的相关性的！此外，由于每个人的主机用途都不一样，例如有的人把 Linux 主机当作频宽分享的工具，有的人将 Linux 主机当作桌上型计算机在使用，这些不一样的用途所需要的硬件要求都不相同！我们举个另外的简单的例子来说明，家里有小孩，或者自己仍然算是小孩的朋友大概都知道，『要用来打 Game 的 &quot;游戏机计算机&quot; 所需要的配备一定比办公室用的 &quot;工作机计算机&quot; 配备更高档』，为什么呢？因为『计算机游戏』所需要的显示、CPU需要适合比较大量运算的配备，所以等级上面不能太差啊(例如 Athlon 或者是 P4 系列 ) ！至于办公室软件，通常我们不太可能会使用到太复杂的软件，所以，等级不需要太好 ( 例如K6-2 500 ) ，就可以运作的很顺畅啦！所以啰，底下我们得先来约略了解一下计算机主机里面的各个配备，以及他们对于系统性能的影响啰！
一般来说，计算机主机里头最重要的就是主机板了！因为你所有的硬件配备都是给他装在主机板上面的！并且，所有的输出、输入装置也都是透过主机板来进行沟通的呢！而当你将主机的外壳拆掉之后，你会发现主机板有点像底下这个样子： 
上图中，中间上面的部分就是中央处理器 ( CPU ) 的插槽了，至于 CPU 右边那三个直直的则是内存 ( RAM ) 的插槽；而在中间偏下有几个 PCI 的咚咚，那就是一些适配卡的插槽了。包括 SCSI 适配卡、网络卡，还有一些声卡等等，都是接在 PCI 卡上面的！至于在 PCI 上面还有一个 AGP 插槽是干嘛的？那个就是目前主流显示卡 ( AGP 界面 ) 的插槽了！此外，在内存的右边还有几支黑黑的咚咚，那就是使用『排线』连接主机板与硬盘的接口插槽，我们称他为『IDE接口』，这个部分相当的重要，等一下我们会再提到的！底下我们来谈一谈关于几个主要的组件，然后再介绍整体的运作吧！


中央处理器 ( CPU ) ：CPU 是一部计算机内的心脏啦！因为不论你做什么事情都需要 CPU 来加以运作的！(虽然有时工作量大、有时工作量小！)，在 586 以前的计算机( 包含 386, 486, 与 586 ) ，CPU 的规格蛮固定的！只要是 586 ，那么全部的 586 CPU 都是同一规格的，你可以使用任何一家的 586 CPU 来安装到你的系统中。不过，近年来 CPU 的规格变化的很大，光是一个 Intel 就有4种以上的规格，再加上他的最大对手 AMD 也有至少两种以上的 CPU 规格，哇！光是 CPU 规格就有够热闹呢！目前( 2003/02 )最热门的 CPU 规格应该是 Intel 的 P-III ( Socket 370 )、 P4 以及 AMD 的 K7 ( Socket A )，各个 CPU 都有其卖点，我们不谈哪一个好用，而是得来了解一下 CPU 的速度问题。 


CPU 有所谓的『倍频』与『外频』，外频是所有系统的接口设备运作时候的速度，至于倍频则是 CPU 本身运算时候加上去的一个运算速度！两者相乘才是 CPU 的频率。不过，由于接口设备并没有这么快的速度，所以，一些接口设备需要将外频除上一个数字，才可以进行沟通。例如一般 PCI 接口的正常速度是 33 ，所以，如果你的 CPU 外频是 133 时，么接口设备的速度就要再除以 4 才能跟系统沟通！一般来说，越快的频率代表越快的 CPU 运算速度。以 Intel 的 PIII 频率 933 MHz 为例， 



CPU 外频与倍频： 133(外频) X 7(倍频) MHz 
RAM 频率：通常与 CPU 之外频相同，为 133 MHz 
PCI 接口( 包含网络卡、声卡等等的接口喔 ) 133/4=33 MHz 
AGP 界面 ： 133 / 2 = 66 MHz (这是 AGP 正常的频率喔！) 

如果你将 CPU 超频呢？会怎样？呵呵！如果是超外频的话，例如到 166 MHz 时，你的 AGP 将达 (166/2=83) 而 PCI 也将达 (166/4=41.5) ，高出正常值甚多，通常，越快的外频由于所有的设备运作频率都会提升，所以，可以让效能提高不少，但也可能会造成系统不稳定！在 Linux 系统中，『不建议超频』，因为，即使 CPU 可以耐的住这么高的频率，但是系统的运作是全面性的，只要有一个设备当机，那么你的系统就跟着当掉啦！而因为超频之后，系统频率高出正常值太多，所以当然容易造成不稳定呢！


另一个需要注意的是，『CPU 是有分等级的』，而目前很多的程序都有对『CPU 做最佳化』的行动，所以就会有所谓的 i386, i586, i686 为附档名的档案产生啦！基本上，在 P MMX 以及 K6-III 都称为 586 的 CPU ，而 Intel 的赛扬以上等级与 AMD 的 K7 以上等级，就被称为 686 的机器了！万一改天你发现一些程序是注名给 686 的 CPU 使用时，就不要将他安装在 586 以下等级的计算机中，否则可是会无法执行该软件的！不过，在 686 倒是可以安装 386 的软件喔！也就是说，这些东西具有向下兼容的能力啦！ 

内存 ( RAM )：内存对于系统来说，真是一个重要的家伙，怎么说呢？刚刚提到，计算机真正运作的核心是 CPU ，但是真正『喂给』 CPU 运算数据的，那就是内存 (RAM) 啦！所以你的操作系统的核心啦、软硬件的驱动程序啦、所有你要读取的档案啦等等的，都需要先读入内存之后，才喂给 CPU 来进行数据的运作！您瞧！ RAM 可重要的很吧！此外，一些比较优良的操作系统，也会将常用的档案或程序等数据，给他常驻在内存内而不直接移除，如此一来，下次取用这个数据时，就不需要在去周边读取一次，呵呵！对于系统速度来说，真是不无小补喔！所以啰，您就会晓得，如果你常常开启大容量的档案，以及执行一些很占资源的软件，那么你就必须要『很大量的内存』来帮助你存放这些数据，瞧！很重要的一个项目吧！内存目前的规格也不少，主要有三种，分别是 SDRAM, DDR, RAMBUS 等，新一代的内存通常使用 DDR 这种规格的内存，不过还得配合主机板与CPU来选择 RAM 的规格才行！对于一个系统来说，通常越大的内存代表越快速的系统，这是因为系统不用常常释放一些内存内部的数据。 

显示卡 ( VGA card )：目前三 D 的画面在计算机游戏接口与工作接口很大量的被使用，而由于如果这些三 D 画面没有先经过处理而直接进入 CPU 来做处理的话，将会影响到整体运作的速度，因为 CPU 的工作实在太多了！这个时候就有所谓的 GPU 出现了！那是什么咚咚呢？为了避免由于大量的 3-D 画面造成 CPU 的困扰，所以显示卡开发商就在显上卡上面安插一个可以处理这些很耗 CPU 运算时间的硬件来处理这些画面数据，如此一来，不但图形画面处理的速度增快了， CPU 的资源也会多出来以执行其它的工作喔！显示卡也有两种主要规格，一种是以传统 PCI 接口来进行传输的接口，一种则是以较快的 AGP 接口来传输数据！由刚刚我们提到的 CPU 运作频率中，我们可以知道 PCI 的接口标准速度是 33MHz ，但是 AGP 标准是 66 MHz ，你说，那个快？所以，目前新的主机板上面，通常都会安插一个 AGP 插槽的，这也是目前的主流规格喔！至于 PCI 接口的显示卡，目前已经很少见了！ 

硬盘与存取装置：目前最常见的主流存取接口应该是 IDE 界面吧！所以，所有的开发商都是依据 IDE 这个接口来开发他们的硬件装置的！通常一块主机板上面有两个 IDE 接口(参考上图)，而每个 IDE 接口接的排在线又有两个插槽，所以，正常来说，应该至少会有四个可以使用的 IDE 装置！这些装置包含了硬盘、光盘、刻录机等等的周边储存装置。由于一个 IDE 插槽可以接两个 IDE 接口的装置，那么系统怎么知道那个是那个？此时就需要 IDE 装置的跳针 (Jumper) 来设定了！你可以在一个 IDE 接口接的两个装置上面，以排线接一个 Master 以及一个 Slave 的装置！而 Master 与 Slave 可以在任何一个 IDE 装置上面找到的！也就是说，如果你有两颗硬盘，那么你可以将任何一颗调成 Master ，但是另外一颗则必须为 Slave 才行！否则 IDE 接口会无法分办，而造成系统的当机喔！至于硬盘的一些相关数据我们在后面的章节再来提！ 

PCI 适配卡：PCI 适配卡是安插在 PCI 接口上面的功能卡，主要有网络卡、声卡以及 SCSI 适配卡等等。 


网络卡：网络卡很重要吧！因为他是让你可以连接上 Internet 的重要功臣！网络卡的传输速度目前都已经可以支持 10/100Mbps 的主流速度了！但是网卡的好坏却差很多！同样是 10/100Mbps ，但是 Intel 与 3Com 的卡硬是要比一般的杂牌卡多出 1000 元新台币以上，原因无他，因为网络卡的稳定性、消耗 CPU 资源的特性与其它特殊功能等，Intel 与 3Com 要比其它的厂牌优良的多！至于网络线连接的接口上面，目前则几乎已经都是 RJ-45 的接口插孔了，这种接口有点像是电话线插孔，不过要稍微大一点。 


SCSI 适配卡：这个东西可以用来连接 SCSI 的接口的装置！以硬盘为例，目前的硬盘分为 IDE 接口(刚刚说过了)以及这个 SCSI 界面！由于 SCSI 接口的装置比较稳定，而且装置的运转速度较快，因而速度也会快的多，目前 SCSI 适配卡是一般大型服务器主机的硬盘传输接口，不过，用在个人计算机上面的话， IDE 界面就够了！因为， SCSI 接口的硬盘很贵呢！ 

主机板：注意到上面图示的那个『主机板芯片组』了没？我们刚刚说主机板是所有设备连接的『媒体接口』，而负责这个媒体接口最重要的『沟通』工作的，就是这个主机板芯片组啦！由于主机板上面的芯片组将负责与 CPU、RAM 及其它相关的输出、输入装置，所以，芯片组设计的好坏也相差甚多喔！另外，由于芯片组在设计的时候，即是针对某种规格的 CPU 与内存来设计的，因此： 


芯片组的功能：芯片组就是在沟通 CPU、 RAM 、输出与输入装置的重要角色！还记得刚刚我们在 CPU 时候提到的频率问题吧？在这里我们再次的强调， CPU 的外频就是芯片组与其它周边沟通的速度啰，假如使用刚刚的 P-III 933 MHz 做为例子的话，那么你的芯片组运作频率应该是以 133 为基准，所以 CPU 与芯片组沟通是 133 ，芯片组与 RAM 亦是 133 的速度，与 PCI 接口则通常是 33 (133/4)，而与 AGP 则是 66 (133/2)啰！所以，一个芯片组就需要负责这么多不同的频率操作喔！呵呵！所以啰，芯片组的好坏对于系统的影响也是相当大的！另外，目前很多的技术可以提升各个与芯片组之间沟通的频率速度，例如 DDR 内存，可以将频率再提升一倍，所以，如果刚刚是 133 ，那么使用 DDR 内存时，就可以提升成为 266 啰！至于 P4 则芯片组与 CPU 之间则可以提升四倍的频率速度，遗憾的是，芯片组能支持的规格，只有一种，并无法支持所有的规格，也就是说，你的 Intel 芯片组的主机板，只能支持 Intel 的 CPU 与芯片组能沟通的内存规格； 


CPU、内存与芯片组(就是主机板啦)在选购的时候需要一起考虑，因为芯片组(主机板)能够支持的 CPU 只有一种规格，而芯片组对内存的支持通常也仅支持一种规格，所以，当你选择 Intel 的主机板芯片组时，那就不能使用 AMD 的 CPU 啰！这在购买的时候要特别小心您主机板上芯片组所能支持的规格喔！使用者最容易搞错的就是这里了！大家总是认为 DDR 最好，所以拼命也要买 DDR，但是，如果你主机板芯片组本来就不支持 DDR 内存的话，那你买来的 DDR 是找不到地方插的！所以，如果您想要升级你的系统时，请特别留意你的主机板芯片组是否有支持喔！ 


I/O 地址与 IRQ 岔断：既然主机板是负责各个计算机系统组件之间的沟通的，但是计算机的东西又太多了，又有输出输入、又有不同的储存装置，主机板芯片组怎么知道如何负责沟通吶？这个时候就需要用到所谓的 I/O 与 IRQ 啰！I/O 有点类似门牌地址啦，每个装置都有他自己的地址，一般来说，不能有两个装置使用同一个I/O地址，否则系统就会不晓得该如何运作，例如，如果你家门牌与隔壁家的相同，那么邮差怎么送信到你家啊？不过，万一还是造成不同的装置使用了同一个 I/O 而造成 I/O 冲突时，就需要手动的设定一下各个装置的 I/O 啰！而除了 I/O 地址之外，还有个 IRQ 岔断这个咚咚，如果 I/O 想成是门牌号码的话，那么 IRQ 就可以想成是各个门牌连接到邮件中心 ( CPU ) 的专门路径啰！IRQ 可以用来沟通 CPU 与各个装置啦！目前 IRQ 只有 15 个，如果你的周边接口太多时，可能就会不够用，这个时候你可以选择将一些没有用到的周边接口关掉，以空出一些 IRQ 来给真正需要使用的接口喔！当然，也有所谓的 sharing IRQ 的技术就是了！ 


BIOS ：BIOS 是 Basic Input/Output System 的缩写，刚刚上面我们提到了很多的输出与输入以及 I/O, IRQ 等等的咚咚，你要如何设定呢？可以透过操作系统，也可以透过主机板提供的 BIOS 功能来设定喔！当你开机的时候，屏幕上不是会出现一些版本的讯息吗？那就是 BIOS 的设定啰！你可以在开机的时候按下 DEL 按键，以设定开机顺序、 I/O ，以及 IRQ 等等！ 


其它输出输入接口：目前主机板上面通常会内建一些基本的接口，这些接口通常是在主机机壳的后面，例如： 

PS2界面：这是目前最常见的键盘与鼠标的接口，在插孔的地方是圆形的，这种接口速度上面会比较好一些，但是最麻烦的地方在，如果你的键盘与鼠标松脱了，通常只能以重新开机来再次驱动键盘或鼠标啰； 
九针串行端口：这个是以前用来接鼠标的接口，常常被称为 com1 ； 
25针并列埠：这通常用来连接打印机的接口，通常称为 LPT1, LPT2...； 
声音输出、输入与麦克风：这个是一些圆形的插孔，而必须你的主机板上面有内建音效芯片时，才会有这三个东西； 
USB 界面：目前相当流行的一个接口，支持随插即用，目前已经推出到 USB 2.0 了，这个规格改变了速度上的问题，目前 USB 2.0 的速度已经足够了，相当的快速！不像之前 1.xx 版时， copy 一些数据到 USB 硬盘时，会吐血.... 

关于速度：对于速度来说的话，由刚刚我们看到的芯片组所负责沟通的工作来看，您就应该晓得啦！速度的快慢与『整体系统的最慢的那个设备有关！』，如果你是使用最快速的 P4 ，使用最快的 DDR 内存，但是配上一个慢慢的两倍速的过时显示卡，那么整体的速度效能将会卡在那个显示卡上面喔！很重要的呢！所以，在购买整套系统时，请特别留意需要全部的接口都考虑进去喔！ 
这些咚咚就是系统所必备的一些组件了！当然啦，还有光驱、鼠标、键盘我们没有介绍，因为那个东西比较简单啦！只是要注意的是，他与主机板提供的连接接口是否相同呢？如果不同的话，自然就无法连接啰！例如你拿 PS2 的接头要去接九针串行端口的插槽，试问，可以连接吗？？所以，买接口设备的时候，要考虑到整体性喔！底下我们再来介绍一下

选择硬件配备 
认识了主要的计算机系统硬件之后，接下来就得知道，那么你的硬件需要怎样的等级才能符合你的操作系统需求呢？刚刚我们也提到了，不同的主机服务需要的主机等级是不相同的！基本上，如果你的 Linux 是做为终端机之用 ( 也就是当作你的工作机，并不对 Internet 提供其它服务 )，并且也不玩 X-Window 的话，那么由于 Linux 所需要的硬件资源是很低的，只要你有 Pentun-133 以上等级的机器就可以跑得很顺畅啰！所以，若你手上有升级后要汰换的设备，千万别急着丢掉，可以尝试着组装一下，然后来玩玩 Linux 呀！ 但是，万一您的 Linux 机器是预计用来作为您公司内部的 mail server 或者是您学校的 Web server, proxy server 时，或者是要玩 X-Window 的话，那么你就必须要选择高档一点的计算机配备了，尤其是 RAM 的大小、显示卡的内存容量与 硬盘 的空间容量！
另外，由于 Linux 是近来才崛起的梁山泊好汉，而且参与开发 Linux 核心者是一些『公益团体』呵呵！所以他可以支持的硬件相对的是比 Windows 少上很多的！如果你手上的设备是很旧 ( 老古董的两倍数光驱... ) ，或者很新 ( 最新的一些高效能 CPU，还有高档显示卡 Geforce 4 Ti等等的设备 ) 的咚咚，是非常有可能无法进行 Linux 的安装的！因此，你需要了解一下你的硬件。要了解你的硬件是否被 Linux 支持，除了在每一版的 kernel 的文件资料中查询之外，你可以到下面这个网站上去看看，相信会有所帮助的！


台湾 Linux/FreeBSD 硬件支持数据库 
Red Hat Linux 的硬件支持 底下我们稍微谈一下 Linux 至少所需要的硬件配备是如何吧！假设一台 Linux 主机，他主要的功能是用来作为 NAT 主机，所谓的 NAT 主机也就是类似『IP分享器』 的功能，而且用这台 NAT 主机的 PC 数并不多，那你只需要 Pentun-166, 32MB RAM, 及一块不太特殊的显示卡及网络卡也就够了！当然，硬件的需求与你服务的对象多寡是有相当的相关性的！在这个一般家庭的 NAT 主机的环境下，你所需要的硬件大致的需求如下： 

CPU ( 微处理器 )：Pentun-166 以上等级就可以了。不过建议使用 K6-2 300 以上等级的CPU，当然了，CPU的等级与你旧有的主机板兼容程度是有相关性的； 

RAM ( 内存 )：至少32MB 以上。其实除了 CPU 之外，在 Linux 系统中最重要的应该是内存的大小了，因为如果你的服务开得太多，而你的内存不够大，势必要使用类似 Windows 的『虚拟内存』的东西 ( 在 Linux 当中称为 Swap ) ，这个 Swap 是使用硬盘的空间来仿真内存的存取型态，所以，你可以知道，在内存中跑的数据却以速度较慢的硬盘来跑，呵呵！这东西可操硬盘的紧！所以虽然内存最低的需求是 32MB 就可以了，不过强烈建议最好是有 64MB 以上比较好，尤其是如果你还要玩 X-Window的话！ ( 注：目前新出版的 Linux distribution 当中，由于提供的服务越来越多，且 X-Window 接口越做越好，所以对于内存的要求，实际上也越来越高！事实上，最好要求您的 Linux 具有 128 MB 以上的内存，不过，如果您跟 VBird 一样不碰 X-Window 的话，那么使用 64 MB 就已经吓吓叫了！ ) 

Hard disk ( 硬盘 )：最好有 2GB 以上。当然是越大越好，最好至少为 3GB 的硬盘！（注：同样的，目前的 Linux 提供的数据太多了！所以某些出版商提供的 Linux 在选择完整安装之后，硬盘竟然占用了 4.5 GB 左右的空间，相当的可怕！不过，如果您已经学会了 Linux 的话，那么事实上，透过选择的套件内容，将不需要用到这么多硬盘空间，尤其不玩 X-Window 的话，硬盘空间几乎可以减少一半以上。） 

VGA ( 显示卡 )：如果是旧设备的话，最好是 S3 早期的显示卡。 Linux 对于最新的显示卡支持的并不是很足够，而且通常 VBird 是建议人家使用淘汰的零件当主机使用，并且如果你又不玩 X-Window 的话，一块 1MB 内存的 S3-775 显示卡就够了！重要的是， Linux 对于 S3 旧的 VGA 卡 ( 如 Virge 系列 ) 支持的程度相当的成熟，所以我推荐他！然而，如果您想要将 X-Window 建置在您的 Linux 机器上面，那么最好是『一定要有 8 MB 以上的显示卡内存』，否则光是等待的时间，会磨尽您原本具有的耐心指数…. 

Network Card ( 网络卡 ) ：一块极其普通的 10/100 MB 的网卡就可以了，建议用具有 RTL8139或者是NE2000兼容的芯片的网卡，因为 Linux 本身就有支持，不用再额外加挂驱动程序！强烈的建议使用 Realtek RTL8139 芯片的 PCI 接口网络卡，便宜又蛮好用的！不过，还是得提醒一下，如果您的 Linux 是用来架设大流量的网站时，那么好一点的网络卡将是不能节省的花费！如果能够使用 Intel 或是 3Com 的网络卡，那将是不错的选择呀！ 

光盘、软盘、键盘与鼠标：不要太旧的就可以了。基本上除了键盘之外，其它的装置都是非必备的，以 VBird 为例，在安装 Linux 的时候先拿别部计算机的光驱、软盘机与鼠标来安装，等到安装完毕之后，关机，将所有的装置拔掉，只要剩下硬盘与电源供应器就可以啦！等到所有的设定都完成之后，连屏幕都可以搬走了！剩下的 Linux 会自动搞定！因为通常服务器这东西最需要的就是稳定，而稳定的最理想状态就是平时没事不要去动他是最好的！ 不过，请千万注意了，上面提到的是『规模很小的主机系统』可以这样玩！如果是『企业内部的 Linux 主机』，呵呵，可能就要做修正啰！例如某些学校内部架设的 Proxy 系统，由于服务的机器数非常的大，所以建议至少需要： 

CPU 等级至少需要 P-III 500 以上； 
RAM 最重要，最好至少 512 MB 以上，越大越好； 
网络卡最好可以选择较佳一些的，例如 Intel 或 3COM 的！ 
硬盘至少需要数十 GB 以上的，分割成多槽， Proxy 执行效率较好； 
其它的就随意啦！ 所以啰！不同规模的服务器，他的硬件要求等级也就会不相同！除此之外，不同的 Linux distribution 对于硬件的要求也不一样！举例来说，在 Open Linux 的 server 3.1.1 就『严格要求』您的系统必须是 i686 ( 也就是 PII 等级以上的 CPU ) ，所以，您必须要针对您即将安装的 Linux 所需要的硬件需求进行了解呢。稍微提一下各个不同的 Linux 功能主机所需要的硬件等级好了！ 　 




配备\主机类型

一般小型主机 不含 X Window

桌上型 Linux 系统 含 X-Window

中大型 Linux Server

中大型 Linux Server 含 X-Window


用途
家庭用 NAT 主机，或者是小型企业用来架设非图形接口的小型主机。
就是您用来学习 Linux ，并且打算在该计算机上面玩跟 X-Window 有关的软件。
中小型企业或者是学校单位用来作为全校的 mail, ftp....等的主机。
中小型企业或者是学校单位用来做为全校的主机，同时，还支持图形化接口操控！


CPU
大于 Pentun 133 即可
好一点的，最好是 K6-III 400 以上等级，例如 P-III 或者是 P4 ，或是 k7 ，因为这部 Linux 计算机会被你用来工作，所以要好一些。
最好是 P-III 以上等级，因为大型主机会用到很多的 CPU 资源！
最好是 P-III 以上等级，因为大型主机会用到很多的 CPU 资源！


RAM
大于 32 即可，不过，最好还是有 64MB 比较妥当！
一定要大于 128 以上，最好可以 256 MB 以上，因为你会在上面工作吶！越大越好！
最好大于 256 MB 以上，512 MB是标准配备。
最好大于 256 MB 以上，512 MB是标准配备。


NIC ( 网络卡 )
普通的 10/100 Mbps 的 RJ-45 接头的网络卡即可！通常就是大卖场里面最便宜的那一项就对啦！
普通的 10/100 Mbps 的 RJ-45 接头的网络卡即可！通常就是大卖场里面最便宜的那一项就对啦！
越快速的越好！通常由于我们不搞 Cluster (丛集式计算机 )所以还不需要 1000Mbps 的网络卡！不过，一张稳定又功能性强的网络卡是需要的， Intel 或者是 3Com 的 10/100 Mbps 是需要的！
越快速的越好！通常由于我们不搞 Cluster (丛集式计算机 )所以还不需要 1000Mbps 的网络卡！不过，一张稳定又功能性强的网络卡是需要的， Intel 或者是 3Com 的 10/100 Mbps 是需要的！


显示卡(VGA)
只要能用就好了！因为你不用 X-Window ，所以，老期的 PCI 接口的 S3 厂牌及其内存 1MB 就可以啦！
一定至少有 8 MB 以上内存的 RAM ，当然，越大越好！例如目前主流已经渐渐朝 64MB 发展，那就是很棒的配备啦！( AGP 界面 )
与一般小型主机一样，由于不用 X-Window ，所以显示卡并不是这么重要！
至少有 16MB 以上的显示卡内存，目前市面上的显示卡应该都可以符合这个功能！除非你的 Linux 还必须用来发展图形软件，否则，目前主流显示卡接口就够了！( AGP 界面 )


硬盘
硬盘空间足够将你所需要的服务安装完毕即可！例如，如果单纯的 NAT 主机，那只要 640 MB 以上的硬盘即可！但是如果你还需要其它的服务功能，例如 FTP, Mail 等等，那就需要大一点。通常，一般家庭或者是小型企业的 Linux 主机， 2~4 GB 的小硬盘也够了！
越大越好！因为你还得玩那个很耗系统资源的 X-Window ，加上如果你还想要玩一些多媒体的话，一个转速快，且高容量的硬盘是需要的！
越大越好，最好还可以做成磁盘阵列，数据会更安全一些，可以的话，还可以转成 SCSI 接口的硬盘喔！比较快且稳定！通常 10GB 的空间跑不掉！因为一些空间还得用来存放您工作单位或者是学校单的其它教室或老师的教学数据吶！所以空间要预留的比较多喔！
越大越好，最好还可以做成磁盘阵列，数据会更安全一些，可以的话，还可以转成 SCSI 接口的硬盘喔！比较快且稳定！通常 10GB 的空间跑不掉！因为一些空间还得用来存放您工作单位或者是学校单的其它教室或老师的教学数据吶！所以空间要预留的比较多喔！　 反正要注意的就是未来你的 Linux 主机规划的『用途』来决定你的 Linux 主机硬件配备喔！相当的重要呢！

硬件与硬件在 Linux 中的装置代号 
了解了硬件之后，接着下来得了解一下个硬件在 Linux 当中所扮演的角色啰！在 Linux 系统当中，每个装置都被当成一个档案来对待！举例来说，硬盘的文件名称即为 /dev/hd[a-d]，其中，括号内的字母为 a-d 的任何一个，亦即由 /dev/hda, /dev/hdb, /dev/hdc, 及 /dev/hdd这四个档案的意思（注：这种型式的表示法在后面的章节当中会使用得很频繁，请特别留意）。那么光驱与软盘呢？分别是 /dev/cdrom, /dev/fd0 啰！好了，其它的接口设备呢？底下列出几个常见的装置与其在 Linux 当中的代号啰： 　 




装置

装置在 Linux 内的代号


IDE 硬盘机

/dev/hd[a-d]


SCSI 硬盘机

/dev/sd[a-p]


CDROM

/dev/cdrom


软盘机

/dev/fd[0-1]


打印机

/dev/lp[0-2]


鼠标

/dev/mouse


磁带机

/dev/ht0 (IDE)或 /dev/st0 (SCSI 界面)


网络卡

/dev/ethn ( n 由 0 开始 )　 需要特别留意的是 IDE 硬盘机，每个磁盘驱动器的磁盘分割 ( partition ) 不同时，其磁盘代号还会改变呢！关于 IDE 硬盘机的分割与配置将在安装 Linux 时再提及。此外，您会发现怎么档案开头都是 /dev 呢？呵呵！那个咚咚就是我们放置装置档案的目录啦！而需要特别注意的是磁带机的代号，在某些不同的 distribution 当中可能会发现不一样的代号，需要稍微留意。总之，你得先背一下 IDE 硬盘的代号就是了！其它的，用的到再来背吧！

选择 distribution 
就如同前面几节中说明的， distribution 是由于各个不同的开发商所发展的不同套件所致！不过，其架构则差异不大！因此，这里不评论哪一个 distribution 比较好！请选择您自己喜欢的套件即可！目前台湾地区使用较多的两个套件分别是 Mandrake 及 Red Hat 这两个，因为使用者较多，所以支持度与网络文章自然也比较多，对于新手而言，这两套 Linux distributions 是蛮好的入门版本喔！并且，在各大 FTP 站中都有提供下载！以下列出 VBird 最常去的 FTP 站，您可以进入其中并选择您所想要的 distribution 啰！ 

云科大的 FTP ： 
中山大学的 FTP ： 当然还不止此，您可以到各大专院校的 BBS 站的精华区去搜寻一番！网友就提供了一个相当棒的多种 Linux Distributions 的下载网站： 

http://www.linuxiso.org 要注意的是，您所下载的档案为 image 档（所谓的映象档，可能是 .iso 的附档名），你必须要将该档案烧录成为可开机的光盘片之后才能真正的使用他！（提供一下个人的经验：您可以使用 IE 或 Netscape之类的浏览器下载上述的 image 档，不过，很抱歉的是，由于档案太大了（一个映象档需要 600～700 MB 之间），使用 http 协议来捉档案的话，很容易造成断线、或者是不明原因的问题，产生捉取的档案有问题，这个时候您还得再重新捉一次呢！因此这里特别建议使用具有续传功能的 ftp 软件下载上述的档案，例如 cute ftp 等等！）
各家 distribution 所需要的光盘档案大小不一，以 Open Linux 3.1.1 与 Red Hat 8.0 为例，前者仅需要一块 CD 即可，后者却需要 3 块 CD 才行！此外，这些 distribution 的 CD 基本上均提供含有原始程序代码的 Source RPM (SRPM) 及可直接安装的 binary RPM，下载之前请先了解各 distribution 的 CD 内容，以免占用您与他人的网络频宽！

主机的服务规划 
前面已经提过，由于主机的服务目的不同，所需要的硬件等级与配备自然也就不一样！底下提一提每种服务可能会需要的硬件配备规划，当然，还是得提醒，每个朋友的需求都不一样，所以设计您的主机之前，请先针对自己的需求进行考虑。而，如果您不知道自己的考量为何，那么就先拿一部普通的计算机来玩一玩吧！记得！不要将重要数据放在练习用的 Linux 主机上面！

打造 Windows 与 Linux 共存的环境： 因为一般硬件对于 Windows 的支持度比较足够，而若你也希望这架机器在不使用 Linux 的情况下还能以 Windows 系统作业，这时你就需要使用多重开机选单了！ Linux 本身就有至少两个很不错的多重开机程序，分别称为 LILO 与 Grub ，如果你需要两个以上的操作系统在你这台主机上的话，例如 Windows98 与 Linux 共存，那你必须先安装 Windows98 再灌 Linux 系统就可以了！当然啰，如果你先安装了 Linux 再安装 Windows 系统呢？还能不能成功的制作多重开机？当然可以啦！不过，你需要学会知道什么是『多重开机』的概念，这部分我们会在后面再继续谈，不要着急喔！基本上，多重开机涉及硬盘规划的问题，如果你的硬盘有 6GB ，那你可以先以 DOS 的 Fdisk 或其它的分割程序如 SPFdisk 进行硬盘的划分。仅割出 Windows 要的扇区就好。例如你要分 1GB 给 windows ，那以 Fdisk 分割一个 1GB 的主分割就好了！其它的等 Linux 灌的时候再弄就可以啦！这部分会在后面再提到！
再来提到您的 Linux 主机系统，我这里要跟大家报告的是，如果您是使用较为老旧的计算机来做为主机的处理，并且他上面可能预计会安装 mail, WWW 等服务器软件，因此需要全天、全年开机的，所以安装 Windows 与 Linux 共存的环境是可以，但是请将 Windows 的硬盘规划的小一点！好让您的 Linux 主机可以有更多的空间提供更完善的服务。好了！现在来说说你需要的主机服务有哪些呢？一般而言，对于非企业或者是小型企业或者是学校单位，通常你需要的服务有底下这几个： 
NAT ( Network Address Transfer )： 如果您是一般小型企业，或者是一般的中小学学校，那么贵单位对外的联机应该通常是：『申请一个固定制的 IP ，然后透过 IP 分享器 ( IP sharing ) 来达到全校的计算机皆可连上 Internet 的联机机制』吧！咦！要连上 Internet 不是需要实体 IP 吗( Public IP )，那每部计算机不是都需要一个 IP 吗？那么您只有申请一个 Public IP ，其它计算机的 IP 要怎么设定呢？早在当初规划这个 IPv4 协议时( 就是目前的 IP 设定啰！ )，就考虑到可能的 IP 不足啦！此时，就有专门给内部网域设定用的 Private IP 了( 或者称为私有 IP 或保留 IP ) ，需要注意的是，这些 Private IP 都不能直接与 Internet 上面的 Public IP 互相沟通！那怎么我学校内部的计算机还是可以透过 IP 分享器连出去呢？这就是所谓的 NAT( Network Address Transfer )功能啦！当内部计算机要连接上 Internet 时，需要通过 NAT 的技术，将你内部计算机的数据封包中，关于 IP 的设定都设定成 NAT 主机的实体 IP ，然后才传送出去 Internet ，如此一来，你的内部计算机虽然是使用私有 IP ，但是在联机上 Internet 时，就可以透过 NAT 主机的 NAT 技术，将 IP 来源给改了改！哈哈！如此一来，就可以向 Internet 要求资料啰！这部分我们在网络基础篇会再提及的！通常使用旧计算机来做为主机时，最大的效用就是用来作为 NAT 了！若你的主机仅单纯提供 NAT 服务，那么在这个服务当中，比较重要的就属网络卡而已！其它的 CPU、RAM、硬盘 等硬件的影响相对就小了相当多！

SAMBA： 在 Windows 里面可以很轻易的就以『网络上的芳邻』来分享彼此的档案数据，那么 Linux 要如何与 Windows 分享呢？呵呵！使用 SAMBA 就可以啦！这也是最普遍的 file server （档案服务器）。由于分享的数据量可能较大，那么对于系统的网络卡与硬盘的大小及速度就比较重要，如果您针对不同的使用者提供档案服务器功能，那么 /home 可以考虑独立出来，并且加大容量。

Mail： Linux 一安装完毕就已经提供了 Sendmail 或 Postfix 的邮件服务！由于我们如果向外面的公司申请免费的 E-Mail 信箱，了不起容量大致上到 20 MB ，但是，要知道有时候我们一不小心就会让邮件容量超过了 20 MB，这样一来，呵呵，您的免费信箱就爆了！真抱歉....但是，如果你自己架设一个 mail server 呢？哈哈！哪么你的信箱就可以到达几 GB 这么大！很过瘾吧！在 mail server 上面，重要的也是硬盘容量与网络卡速度，在此情境中，也可以将 /var 独立出来，并加大容量。

Web： WWW 几乎是每个主机上面都会安装的一个套件了！当然，要推销你自己的话，那么 WWW 服务器是绝对不会被你忘掉的！在 Web server 上面，CPU 的等级有时候不能太低，而最重要的则是 RAM 了！要增加 WWW 系统的稳定度，提升 RAM 是一个不错的考虑。

DHCP： NAT 搞定之后，要晓得的是，你的 Client （客户端）每一部都需要经过设定才能上网 ( 刚刚提到的私有 IP 的概念！ ) ！阿！好麻烦！那么使用 DHCP 就可以改善这个问题啰！呵呵！ Client 端都不必设定任何咚咚，马上将可以上网了！快乐吧！这个咚咚的硬件要求可以不必很高啰。

Proxy： 这也是常常会安装的一个服务器软件，尤其像中小学校的频宽较不足的环境下， Proxy 将可有效的解决频宽不足的问题！当然，你也可以在家里内部安装一个 Proxy 喔！但是，这个服务器的硬件要求可以说是相对而言最高的，他不但需要较强有力的 CPU 来运作，对于硬盘的速度与容量要求也很高！自然，既然提供了网络服务，网络卡则是重要的一环！

FTP： FTP的功能是真的很好啦！但是对于 拨接制 ADSL 使用者来说，架设 FTP 实在是一件不智的事情！因为对你的频宽影响太大了！ VBird 相当不建议架设 FTP 的啦！尤其安全性上面也很伤脑筋！对于 FTP 则是您的硬盘容量与网络卡好坏相关性较高。
大致上我们会安装的服务器软件就是这一些啰！假设您需要 NAT 的服务，那么通常会建议安装『两块网络卡』在您的主机上面，因为可以顺便解决您内部计算机的安全问题！假如您需要 mail 与 Web 服务器，那么就建议申请 DNS 或者是直接申请免费的动态 DNS 系统的 domain name 啰！如果您需要 Proxy 的服务，那么在当初设计硬盘规划的时候，就要小心硬盘的切割了，因为不同的切割方式会使得您的 Proxy 效能有差异！如果你对于上面的几个服务还不是很熟悉，没有关系，未来网络架站篇会再详细的介绍给大家的啦！

主机硬盘的主要规划 
系统对于硬盘的需求跟刚刚提到的主机开放的服务有关，那么除了这点之外，还有没有其它的注意事项呢？当然有，那就是数据的分类与安全性的考虑。常常会发现网络上有些朋友在问『我的 Linux 主机因为跳电的关系，造成不正常的关机，结果导致无法开机，这该如何是好？』呵呵，幸运一点的可以使用 fsck 来解决硬盘的问题，麻烦一点的可能还需要重新安装 Linux 呢！伤脑筋吧！另外，由于 Linux 是多人多任务的环境，因此很可能上面已经有很多人的数据在其中了，如果需要重新安装的话，光是搬移与备份数据就会疯掉了！所以硬盘的分割考虑是相当重要的！同时，硬盘的规划对于 Linux 新鲜人而言，那将是造成您『头疼』的主要凶手之一！因为硬盘的分割技巧需要对于 Linux 档案结构有相当程度的认知之后才能够做比较完善的规划的！所以在未来的几个章节当中，鸟哥将会着重在这方面的探讨，这可是相当重要的入门知识呢！因为如此，所以特别建议 Linux 新鲜人先只切两个扇区就好，分别是根目录 / 与 Swap ！无论如何，底下还是说明一下基本硬盘分割的模式吧！ 

最简单的切割方法：Linux 安装的过程中，至少要有两个 partition 才行，一个是『 / 』，另一个则是虚拟内存『 Swap 』，如果你的硬盘很小（例如小于 1GB 的小硬盘），那么使用这个分割的方法会比较好！但是，保证是比较不保险的切割方式啦； 

稍微麻烦一点的方式：在预设的情况下，由于 Linux 的操作系统都是摆在 /usr/ 当中，所以啰，你可以将这个部分切割的大一点，另外，由于使用者的信息都是在 /home 底下，因此这个也可以大一些，而 /var 底下是记录所有预设服务器的登录档，且 mail 与 WWW 预设的路径也在 /var 底下，因此这个空间可以加大一些喔！所以，需要的目录就有： 

/ 
/usr 
/home 
/var 
Swap 以 VBird 为例，通常我会希望我的邮件主机大一些，因此我的 /var 通常会给个数 GB 的大小，如此一来就可以不担心会有邮件空间不足的情况了！另外，由于我开放 SAMBA 服务，因此提供每个研究室内人员的数据备份空间，所以啰， /home 所开放的空间也很大！至于 /usr/ 的空间，大概只要给 2?3 GB 即可！凡此种种均与您当初预计的主机服务有关！因此，请特别注意您的服务项目！然后才来进行硬盘的规划！
无论如何，一开始玩 Linux 时，还是建议先将所有的套件都安装在同一个分割区内，也就是那个根目录 / ，等到学习了后面的相关信息，尤其是 Linux 档案与目录的使用架构之后，再重新将 Linux 安装与规划，那么一定可以得到您所需要的环境的！

VBird 的两个范例 
这里说一下我曾经规划过的两个范例，要先声明的，我的范例不见得是最好的，因为每个人的考虑不同，我只是提供相对可能较佳的方案喔！
案例一： 

提供服务：提供家里的五部计算机 ADSL 联机分享、同时架设 NAT Server、Mail Server、 WWW Server、SAMBA等服务。此外，为多重开机系统。 
架设硬件： 

CPU 使用 P-166； 
内存大小为 64MB 的 RAM； 
网络卡为 螃蟹卡； 
硬盘机容量为 3.2 GB； 
显示卡选择 S3 Virge VGA。 
安装完毕之后拔掉 CD-ROM、鼠标、键盘、屏幕等等配备！只剩下网络线及电源线跟主机连接！ 
硬盘切割： 

提供 500 MB 给 Windows 98； 
1GB 给 /var (特别针对邮件设定)； 
100 MB 给 Swap； 
剩下的空间都给 / 案例二： 

提供服务：提供整个单位的 Proxy 服务器服务，同时提供单位内相关人员的数值模式仿真（这个模式很耗系统资源！）。 
架设硬件： 

使用双 CPU 架构（因为需要大量的运算）； 
使用 GeForce 2 MX 显示卡（因为数值模式仿真完毕之后，需要将图标显示在屏幕上除错）； 
使用 30 GB 硬盘两颗（数值模式所需的储存、 Proxy 所需要的空间）； 
使用 3COM 网络卡（ Proxy 呦！）； 
使用 512 MB RAM。 
硬盘切割： 

6 GB 给 Proxy （/proxy1, /proxy2, /proxy3 各占 2 GB）； 
1GB 给 Swap （数值模式需要）； 
5 GB 给 /； 
剩下的都给 /disk1 及 /disk2 在上面的案例中，案例一是属于小规模的主机系统，因此只要使用预计被淘汰的配备即可进行主机的架设！唯一可能需要购买的大概是网络卡吧！呵呵！；而在案例二中，由于我需要大量的数值运算，并且由于提供了很多计算机的 Proxy 服务，因此就需要较大的硬盘空间、与较佳的网络卡来搭配了！这些工作请先记得，因为下一章节在实际安装 Linux 之前，您得先进行主机的规划呀！</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:28:41</pubDate>
</item>
<item>
<title>【linux私房菜】如何学习Linux（2）</title>
<link>http://oss.org.cn/html/99/n-62399.html</link>
<text>Linux 的应用： 
要谈到 Linux 如何学习之前，我们得就 Linux 目前的一般应用来说明一下，才好理解您需要什么样的学习方式！ 

桌上型计算机： 所谓的桌上型计算机就是一般使用者在屏幕前面工作时候的常见的操作系统了！我们称之为『Desktop』系统，就是简称的桌上型计算机了！说到桌上型计算机就不能不提一下 X-Window System 。 

由前一章提到的 Unix 与 Linux 的历史中，我们知道在 1986 年美美的窗口画面就已经在 Unix 上面出现过了，那个时候窗口画面被简称为 X 系统，而后来到了 1994 年的时候正式被整合在 Linux 里头！至于微软的 Windows 则是在 1995 年才出现！ 
所谓的 X Window System 就是以 XFree86 这个计划释出的 X11 这个窗口软件为管理显示核心的一套窗口接口的软件，我们常常简称他为图形使用者接口( Graphical User Interface )。这个 XFree86 只是 Linux 核心上面的一套软件而已，他主要的工作就是管理图形接口输出的时候，几乎所有显示相关的硬件的控制，例如显示卡、屏幕、键盘、鼠标、等等，都是 XFree86 管理的！或者，我们可以称 XFree86 为 X-Window System 的服务器，简称为 X Server 。 
至于我们所看到的美美的窗口画面，则是使用 X Server 提供的显示相关硬件的功能，来达到图形显示的『窗口管理员( Window Mananger, WM )』所发挥的能力啦！这也就是说， WM 是挂在 X Server 上面来运作的一套显示窗口接口的软件，例如我们常见的 KDE, GNOME 等等都是 WM。 那么这个桌上型计算机平时都在干些什么？简单的说，桌上型计算机的日常工作是： 

上网浏览； 
文书处理； 
网络接口之公文处理系统； 
办公室软件( Office Software )处理数据； 
收发电子邮件； 大致上就是这些工作啰！在这些工作中， Linux 有美丽的图形接口 X Window System 提供良好的使用者接口 ( GUI ) ，此外，目前发展中的 WM 也都具有中文化的功能！至于 Office 软件则有类似 Open Office 的软件支持，所以，基本上在桌上型计算机型态的使用中， Linux 已经足以应付大部分的上班族群的工作了。

工作站计算机： 工作站计算机与桌上型计算机不太一样的地方，在于工作站通常得要应付比较重要的公事应用，例如工程界流体力学的数值模式运算、娱乐事业的特效功能处理、软件开发者的工作平台等等。Linux 上面有强大的运算能力，以及支持度相当广泛的 GCC 编译软件，因此在工作站当中也是相当良好的一个操作系统选择。例如我们研究室目前就要将 Sun Unix 上面执行的大型模式移转到 Linux 上面，据美国环保署内部人员的测试，发现 Linux 不但比较便宜 ( X86 系统嘛！ )而且速度还比较快呢！

网络服务器： 承袭了 Unix 的良好传统， Linux 上面的网络功能特别的强大！此外，由于 GNU 计划，让 Linux 上面的服务器软件几乎都是免费的！因此，做为一部网络服务器，例如 WWW, Mail Server, File Server, FTP Server 等等， Linux 绝对是上上之选！

嵌入式系统： 近年来电子相关产业相当的蓬勃发展，其中，小型微电脑的发展甚为重要！例如家电产品、PDA、以及其它微型的计算机配备。这些计算机配备通常是直接嵌入于产品当中的，例如 PDA 本身就是一个小型的计算机操作系统啦！这些系统我们就称为嵌入式系统。而要让这些嵌入式系统能够动作，自然就需要制作一套简单的操作系统啰，这个时候，可修改核心让功能变简单的 Linux 则是很好的选择。因此，近年来有相当多的嵌入式系统选择 Linux 做为发展的平台呢！上面这些就是目前常见的几个 Linux 的应用方向。那么根据上面的应用，你觉得应该要怎样学习 Linux 呢？

从『头』学起 
其实，不论学什么系统，『从头学起』是很重要的！还记得你刚刚接触微软的 Windows 都在干什么？还不就是由档案总管学起，然后慢慢的完到控制台、玩到桌面管理，然后还去学办公室软件，我想，你总该不会直接就套过这一段学习的历程吧！？那么 Linux 的学习其实也差不多，就是要从头慢慢的学起啦！不能够还不会走路之前就想要学飞了吧！ ^_^！
常常有些朋友会写信来问鸟哥一些问题，不过，信件中大多数的问题都是很基础的！例如：『为什么我的使用者个人网页显示我没有权限进入？』、『为什么我下达一个指令的时候，系统告诉我找不到该指令？』、『我要如何限制使用者的权限』等等的问题，这些问题其实都不是很难的，只要了解了 Linux 的基础之后，应该就可以很轻易的解决掉这方面的问题呢！所以请耐心的，慢慢的，将后面的所有章节内容都看完。自然你就知道如何解决了！
此外，网络基础与安全也很重要，例如 IP 的基础，网络的 Gateway 设定基础与网络的相关概念！很多的朋友一开始问的问题就是『为什么我的 mail server 无法收到信件？』这种问题相当的困扰，因为发生的原因太多了，而朋友们常常一接触 Linux 就是希望『架站！』根本没有想到要先了解一下 Linux 的基础！这是相当伤脑筋的！尤其近来计算机怪客 ( Cracker ) 相当多， ( 真奇怪，闲闲没事干的朋友还真是不少.... ) ，一个不小心您的主机就被当成怪客跳板了！甚至发生被警告的事件也层出不穷！这些都是没能好好的注意一下网络基础的原因呀！
所以， 鸟哥希望大家能够更了解 Linux ，好让他可以为你做更多的事情喔！而且这些基础知识是学习更深入的技巧的必备条件呀！因此建议： 

先理解一下基础的硬件知识，不用一定要全懂(没那么多时间)，但是至少要『听过、有概念』即可； 
先了解一下 Linux 的基础知识，这些包含了『使用者、群组的概念』、『权限的观念』，『程序的定义』等等； 
必需至少学会一种以上的文书编辑器，例如最好学会通用版本的 vi 啰！ 
实际操作 Linux 时，必定要学习的 Shell ，最好 Shell scripts 也能够了解； 
如果上面你都通过了，那么网络的基础就是下一阶段要接触的咚咚，这部份包含了『IP 概念』『路由概念』『TCP/IP』等等； 
如果连网络基础都通过了，那么网站的架设对你来说，简直就是『太简单啦！』 
在一些基础知识上，这里推荐一下 Study-Area 里面的基础文章，相当的实用！ 

计算机基础 
网络基础 

选择一本好的工具书 
『工具书』对于学习者而言是相当重要的！不过，一本错误观念的工具书却会让新手整个误入歧途....，以下有几个网站有特别介绍了几本书籍，如果有兴趣的话，欢迎参考看看！实在是很建议买一本『基础一点』的工具书来学习 Linux ，等到有一定的基础之后，才来买架设网站以及『安全防护』方面的书籍，尤其是『安全防护』的书籍， VBird 认为，网络安全一定会越来越受到重视的！当然，有兴趣的话，小弟的『鸟哥的 Linux 私房菜 -- 基础学习篇』也可以参考看看啰！ ^_^ 

请推荐有关网络的书 
小红帽技术论坛 

实作经验 
要增加自己的体力，就是只有运动；要增加自己的知识，就只有读书；当然，要增加自己对于 Linux 的认识，大概就只有实作经验了！所以，赶快找一部计算机，赶快安装一个 Linux 套件，然后快点进入 Linux 的世界里面晃一晃！相信对于你自己的 Linux 能力必然大有斩获！除了自己的实作经验之外，也可以参考网络上一些善心人士整理的实作经验分享喔！例如最有名的 Study-Area ( http://www.study-area.org )等网站。
此外，人脑不像计算机的硬盘一样，除非硬盘坏掉了或者是数据被你抹掉了，否则储存的数据将永远而且立刻的记忆在硬盘中！在人类记忆的曲线中，你必须要『不断的重复练习』才会将一件事情记得比较熟！同样的，学习 Linux 也一样，如果你无法经常摸索的话，那么，抱歉的是，学了后面的，前面的忘光光！学了等于没学，这也是为什么鸟哥当初要写『鸟哥的私房菜』这个网站的主要原因，因为，我的忘性似乎比一般人还要好～～呵呵！所以，除了要实作之外，还得要常摸！才会熟悉 Linux 而且不会怕他呢！
好了，底下列出几个学习网站来提供大家做为参考实作的依据：（注：由于不同的网站当初撰写的时候所用的 Linux 套件或版本与目前的主流并不相同，因此参考他人的实作经验时，必须要特别留意对方的版本，否则反而可能造成你的困扰喔！）


Study-Area 
鸟哥的私房菜馆 
狼主的网络实验室 
卧龙大师的网络技术文件 
大南国小（林克敏主任文件集） 
张毓麟先生的小文章 
台湾 Linux 社群 
吴仁智的文件集 

X-Window 还是 command line 
由前面的介绍我们可以知道，虽然目前 X-Window 的接口越做越漂亮，而且也已经渐渐的可以来控管整个系统了！但是必须要注意的是， X-Window 毕竟还只是一个 Linux 上面的软件，并不是一套『操作系统』，所以实际上使用他来设定系统的时候，还是有相当多的困扰的，因为毕竟他无法完全的管理好我们的 Linux 啊！虽然就以 Desktop 的型态来说，X-Window 是让 Linux 立刻深入人心的方法。不过， X-Window 在使用的时候还是有相当多的问题的，最大的问题来自于『系统资源的有效应用』，以 VBird 的使用情况来说，我的系统资源并没有很好，但是 X-Window 本身相当的消耗系统资源，如果一开 X-Window ，那么你的内存几乎都被 X-Window 吃光了！您要如何来用剩下的系统资源来进行高效率的其它工作呢？！这也是为什么很多的书籍与网站都会希望使用者架设网站的时候，不要启动图形使用者接口 的原因啰！
以下再来说说 X-Window 学习与 command line 学习的角度。

X-Window 如果您对于 Linux 的要求是『桌上型计算机』，并且你又不架设网站的话，那么学习 X-Window 对您而言，绝对是需要的！至于指令列模式对你就不是这么必要了！但是，如果 Linux 对你而言是『服务器与工作站』的话，那么 X-Window 可能就不是这么重要，但是指令列模式可就大大的重要啦！
因为，如果以 X-Window 作为学习 Linux 的方式，那么未来一定会有死角，这是因为 X-Window 了不起也只是 Linux 的『一套软件』而不是『Linux 核心』此外，目前发展出来的 X-Window 对于系统的管理上还是有无法掌握的地方， 举个例子来说，如果 Linux 本身捉不到网络卡的时候， 请问如何以 X-Window 来捉这个硬件呢？！还有，如果需要以 tarball 的方式来安装软件并加以设定的时候， 请以 X-Window 来架设他！这可能吗？当然可能，但是这是在考验『X-Window 开发商』的技术能力， 对于了解 Linux 架构与核心并没有多大的帮助的！所以说，如果只是想要『会使用 Linux 』的角度来看， 那么确实使用 X-Window 也就足够了，反正搞不定的话，花钱请专家来搞定即可；但是如果想要更深入 Linux 的话，那么指令列模式才是不二的学习方式！

服务器端 如果 Linux 对你而言是『生财』的工具，呵呵！那可不是只要学习 X-Window 能够解决的了！举个例子来说好了，假如你的客户人在台北，而你人在远方的台南，他的 Linux 服务器出了问题，要你马上解决他， 请问：要您亲自上台北去修理？还是他搬机器下来让你修理？！或者是直接请他开个账号给你进去设定即可？！想当然尔，就会选择开账号给你进入设定即可啰！因为这是最简单而且迅速的方法！然而这个方法使用的方式却不是 X-Window 作的到的！因为 X-Window 太耗资源，实在不容易让您这样子联机（很麻烦的啦！）所以啰！文字界面是相当重要的！尤其如果想要深入 Linux 的核心时，那么以文字界面来了解 Linux 就更需要了！所以说，不要怕麻烦，还是多摸一些文字界面的东西吧！！帮助会比较大哩！
所以基本上， VBird 还是希望大家可以多多的以 文字接口( command line )的方式来学习 Linux 啦！

网络数据查询 
其实，在网络上面已经有相当多的 FAQ 整理出来了！所以，当你发生任何问题的时候，除了自己检查，或者到上述的实作网站上面查询一下是否有设定错误的问题之外，最重要的当然就是到各大 FAQ 的网站上查询啰！以下列出一些有用的 FAQ 网站给您参考一下： 

CLDP 中文文件计划 
Unix 的一般常见问题 
asklinux 还有相当的的网络资源可以查询！如果你有发现更新的信息时，记得来信通知 VBird 喔！

真的没办法、发问吧 

天助自助者： 一般而言， Linux 在下达指令的过程当中，或者是 log file 里头就可以自己查得错误信息了，举个例子来说，当您下达： 
ls -l /vbird时，由于系统并没有 /vbird 这个目录，所以会在屏幕前面显示： 
ls: /vbird: No such file or directory这个错误讯息够明确了吧！系统很完整的告诉您『查无该数据』！呵呵！所以啰，请注意，发生错误的时候，请先自行以屏幕前面的信息来进行 debug ( 除错 )的动作，然后，如果是网络服务的问题时，请到 /var/log 这个目录里头去查阅一下 log file ，这样可以几乎解决大部分的问题了！

讨论区的提问： 万一真的经过了自己的查询，却找不到相关的信息，那么就发问吧！不过，在发问之前建议您最好先看一下『提问的智慧』这一篇讨论！然后，你可以到底下几个讨论区发问看看：


Study-Area 讨论区 
鸟哥的私房菜馆讨论区 
狼主的网络实验室讨论区 
小红帽技术论坛 
LinuxFab 
竹猫星球 
不过，基本上每一个讨论区的内容是大同小异的，发问的时候一定要注意到某些礼节！最好是先以搜寻的方式搜寻一下该讨论区是否有您需要的文章之后，在发问！这样可以获得事半功倍的功能喔！此外， Netman 兄提供的一些学习的基本方针，提供给大家参考：


在Windows里面﹐程序有问题时﹐如果可能的话先将所有其它程序保存并结束﹐然后尝试按救命三键(Ctrl+Alt+Delete)﹐将有问题的程序(不要选错了程序哦)“结束工作”﹐看看能不能恢复系统。不要动不动就直接关机或reset。 
有系统地设计档案目录﹐不要随便到处保存档案以至以后不知道放哪里了﹐或找到档案也不知道为何物。 
养成一个做记录的习惯。尤其是发现问题的时候﹐把错误信息和引发状况以及解决方法记录清楚﹐同时最后归类几定期整理。别以为您还年轻﹐等你再弄多几年计算机了﹐您将会非常庆幸您有此一习惯。 
如果看在网络上看到任何好文章﹐可以为自己留一份copy﹐同时定好题目﹐归类存档。 
作为一个使用者﹐人要迁就机器﹔做为一个开发者﹐要机器迁就人。 
学写 script 的确没设定 server 那么好玩﹐不过以我自己的感觉是﹕关键是会得“偷”﹐偷了会得改﹐改了会得变﹐变则通矣。 
在Windows里面﹐设定不好设备﹐您可以骂它﹔在Linux里面﹐如果设定好设备了﹐您得要感激它﹗ 

其它的一些建议 
除了上面的学习建议之外，还有其它的建议吗？确实是有的！其实，无论作什么事情，对人类而言，两个重要的因素是造成我们学习的原动力： 

成就感 
兴趣 很多人问过我，鸟哥是怎么学习 Linux 的？由鸟哥之前的 自我介绍 与对于 Linux 的接触历程，你大概会知道，原来我本人对于计算机就蛮有兴趣的，加上工作的需要，而鸟哥又从中得到了相当多的成就感，所以啰，就一发不可收拾的爱上 Linux 啰！因此，鸟哥个人认为，学习 Linux 如果玩不出兴趣，他对你也不是什么重要的生财工具，那么就不要再玩下去了！因为很累人ㄋㄟ～而如果你真的想要玩这么一套优良的操作系统，除了前面提到的一些建议之外，说真的，得要培养出兴趣与成就感才行！那么如何培养出兴趣与成就感呢？可能有几个方向可以提供给你参考： 

建立兴趣：Linux 上面可以玩的东西真的太多了，你可以选择一个有趣的课题来深入的玩一玩！不论是 Shell 还是图形接口等等的，只要能够玩出兴趣，那么再怎么苦你都会不觉得喔！ 
成就感：成就感是怎么来的？说实在话，就是『被认同』来的！怎么被认同呢？写心得分享啊！当你写了心得分享，并且公告在 BBS 上面，自然有朋友会到你的网页去瞧一瞧，当大家觉得你的网页内容很棒的时候，哈哈！你肯定会加油继续的分享下去而无法自拔的！那就是我啦...... ^_^！而且，就鸟哥的经验来说，你『学会一样东西』与『要教人家会一样东西』思考的纹路是不太一样的！学会一样东西可能学一学会了就算了！但是要『教会』别人，那可就不是闹着玩的！得要思考相当多的理论性与实务性方面的咚咚，这个时候，你所能学到的东西就更深入了！鸟哥常常说，我这个网站对我在 Linux 的了解上面真的的帮助很大！ 
协助回答问题：另一个创造成就感与满足感的方法就是『助人为快乐之本！』当你在 BBS 上面告诉一些新手，回答他们的问题，你可以获得的可能只是一句『谢谢！感恩吶！』但是那句话真的会让人很有快乐的气氛！很多的老手都是因为有这样的满足感，才会不断的协助新来的朋友的呢！此外，回答别人问题的时候，就如同上面的说明一般，你会更深入的去了解每个项目，哈哈！又多学会了好多东西呢！ 
参与讨论：参与大家的技术讨论一直是一件提升自己能力的快速道路！因为有这些技术讨论，你提出了意见，不论讨论的结果你的意见是对是错，对你而言，都是一次次的知识成长！这很重要喔！ ^_^ 此外，除了这些鸟哥的经验之外，还有在 BBS 上面有一封对于 Linux 新手相当有帮助的文件数据，大家可以多看一看： 

Linux 初学者之旅 2002/01 
Linux 初学者之旅 2002/07 
最新的 Linux 初学者之旅 
信息人的有效学习(洪朝贵教授网页) 里面提到了几乎新手都会有的问题！此外，在网络上还有另外一篇介绍 Linux 的文章，也蛮好玩的，不过他是 Word 版本，目前并不打算将他修改一番，因为要保持原文件的风貌呀！呵呵！有兴趣的朋友真的可以好好的看一看： 
Linux 初学者入门</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:27:00</pubDate>
</item>
<item>
<title>【Linux私房菜】什么是Linux?（1）</title>
<link>http://oss.org.cn/html/98/n-62398.html</link>
<text>什么是 Linux ？什么是操作系统？ 
要了解 Linux 之前，就不能不知道什么是操作系统 ( Operation System, OS )，所以，首先我们来简单的说一说什么是操作系统吧！先来想一想，当我们使用计算机时，屏幕上面显示的咚咚是由哪里来的？嗯！是由显示卡与屏幕显像的；那么你现在可以藉由网络看到这篇文章，则是藉由 Internet 、网络卡、网络线以及所有相关的电子器材与网络器材所完成的一项任务！如果你要看 VCD 呢？那么就需要光驱、光盘、声卡的发声等等的支持。这么说来的话，所以在『工作』的东西都是『硬件』的工作呀！对了！就是这些计算机硬件在工作的。那么硬件怎么工作呢？那就是藉由『操作系统』来达成的啰！这个操作系统就是在沟通你这个使用者跟硬件之间的讯息传递啦！也就是说，没有操作系统，那么你的计算机硬件就只是一堆废铁，什么工作都不能做的！
那么操作系统里面含有什么东西呢？简单的来说，操作系统主要分为两个东西，一个是『核心』、一个是『一堆核心提供的工具』我们以使用者常使用的 Windows 计算机来做一个简单的说明好了。大家应该都使用过 Windows 计算机里面的档案总管吧？那么当你开启档案总管的时候，他是否会显示你硬盘当中的数据？这个显示硬盘里面的数据，就是『核心』帮你做的，但是，你要核心去显示硬盘哪一个目录下的数据，则是由『档案总管』这个『工具』帮你达成的！这样可以理解吗？再来，如果您曾经使用过 Windows 2000 或 Windows XP 的话，那就更好了！你就应该听过有所谓的『FAT32 与 NTFS 档案格式』吧？在 Windows 98 这个早期的 Windows 版本中，他并无法读取或者是找到 Windows XP 的 NTFS 档案格式的硬盘，为什么呢？因为他的『核心』本来就不认识 NTFS 啊！所以，即使你有档案总管，但是由于核心根本不认识 NTFS ，所以，档案总管也是没有能力帮你达到你想要做的事情！这样应该就更清楚了吧？没错！你的整个硬件是由核心来管理的，而如果核心不认识你的硬件，那么你将无法使用该硬设备，例如上面提到的 NTFS 档案格式的硬盘！核心就是『 Kernel 』，他是一个操作系统的最底层的东西，由他来掌管整个硬件资源的工作状态，而 Linux 有 Linux 自己的核心， Windows 也有他自己的核心。所以说，当有新的硬件加入到你的系统中的时候，那么若你的『 Kernel 』并没有支持他的时候，呵呵，这个新的硬件就肯定无法工作的，因为控制他的 Kernel 并不认识他呀！这样了解了吗？！先有个概略性的了解，后面我们提到『核心编译』的时候会在更详细的谈到他！ 
一般来说，Kernel 管理的事项有： 

System call interface ：一些服务与 kernel 沟通之后，将硬件的资源进一步的利用； 
Process control ：系统过程控制中心，所以核心编的越小越好； 
Memory management ：控制整个系统的内存管理； 
File system management ：档案系统的管理，例如 I/O 等等的工作啦！还有不同档案格式的支持啦等等，如果你的核心不认识某个档案系统，那么您将无法使用该档案格式的档案啰！例如上面提到的 Windows 98 不认识 NTFS 档案格式的硬盘； 
Device drivers ：就如同上面提到的，硬件的管理是 Kernel 的主要工作之一，当然啰，装置的驱动程序就是核心需要做的事情啦！好在目前都有所谓的『可加载模块』功能，可以将驱动程序编辑成模块，就不需要重新的编译核心啦！这个也会在后续的核心编译当中提到的！ 所以啦！所有硬件的资源都是他来管理的！至于我们要达成一些工作时，除了藉由核心本身提供的功能 ( 例如上面提到的档案总管 ) 之外，还可以藉由其它的应用软件来达成喔！举个例子来说，你要看 VCD 影片是吧！那么除了 Windows 提供的媒体播放程序之外，你也可以自行安装 VCD 播放程序来播放 VCD 啰！这个播放程序就是应用软件啰，而这个应用软件可以帮你去控制核心来工作 ( 就是放映影片啰 ) ，因此，我们可以这样说，核心是控制整个硬件支持的咚咚，也是一个操作系统的最底层，然而要让整个操作系统更完备的话，那还需要含有相当丰富的核心提供的工具，以及核心相关的应用软件来支持！
OK！提到这里那么您知道 Linux 是什么了吗？呵呵！对啦！其实 Linux 就是一个操作系统，这个操作系统里头含有最主要的 kernel 以及 kernel 提供的工具啦！他提供了一个完整的操作系统当中最底层的硬件控制与资源管理的完整架构，这个架构是沿袭 Unix 良好的传统来的，所以相当的稳定而功能强大！此外，由于这个优良的架构可以在目前的个人计算机 ( X86 系统 ) 上面跑，所以很多的软件开发者将他们的工作心血移转到这个架构上面，那就是很多的应用软件啦！虽然 Linux 仅是其核心与核心提供的工具，不过，由于核心、核心工具与这些软件开发者提供的软件的整合，使得 Linux 成为一个更完整的、功能强大的操作系统啰！我们可以将 Linux 的系统与使用者的相关性看成底下的图示：
 图一、使用者、使用者接口与核心工具、核心、与硬件之相关性
约略了解 Linux 是何物之后，接下来，我们要谈一谈，『为什么说 Linux 是很稳定的操作系统呢？他是如何来的？』

从 Unix 到 Linux 这一段历史 
为什么大家常常会说， Linux 是很稳定的一套操作系统呢？这是因为， Linux 他有个老前辈，那就是 Unix 家族啰！有这个前辈的提携，让 Linux 这个小老弟很快的就成为一套稳定而优良的操作系统啦！所以，底下我们来谈一谈 Unix 到 Linux 的这一段历史吧！
早在 Linux 出现之前的二十年 ( 大约在 1970 年代 )， 就有一个相当稳定而成熟的操作系统存在了！那就是 Linux 的老大哥『 Unix 』是也！怎么这么说呢？！他们这两个家伙有什么关系呀？这里就给他说一说啰！众所皆知的， Linux 的核心是由 Linus Torvalds 在 1991 年的时候给他开发出来的，并且丢到网络上提供大家下载，后来大家觉得这个小东西 ( Linux Kernel ) 相当的小而精巧，所以慢慢的就有相当多的朋友投入这个小东西的研究领域里面去了！但是为什么这的小东西这么棒呢？！然而又为什么大家都可以免费的下载这个东西呢？！嗯！等鸟哥慢慢的唬xx....喔不！听我慢慢的道来！

一个没有完成的梦想： Bell, MIT 与 GE 的『 Multics 』系统 早期的计算机并不像现在的个人计算机一般，他可不是一般人碰的到的玩意儿，除非是军事或者是高科技用途才有可能接触到这类的 Computer ！而如前面所言，有计算机硬件还需要操作系统的配合才能够发挥计算机的效能，不过，在那个年代，由于计算机算是『奢侈品』，喔～应该说是『贵重物品』，所以，可能一间学校就只有一部大型主机当然，那个年代所谓的大型主机仍然无法提供适度的运算能力的。不过，既然只有一部大型主机，然而有许许多多的教师、学生要想要来使用，怎么办呢？为了解决这个问题，在 1960 年代初期，麻省理工学院 ( MIT ) 发展了所谓的『兼容分时系统 ( Compatible Time-Sharing System, CTSS )』，就字面上的意义来看，他主要让大型主机可以提供多个终端机联机进入主机使用主机的资源， ( 附带一提，当时的终端机 ( Terminal ) 本身并没有软件或者可供使用的资源，这些终端机要能使用，一定必需要联机登入主机之后，才能够使用主机的资源来工作！) 当时可以让约 30 位使用者联机使用主机。而为了让这个分时系统更加的强大，所以，在 1965 年前后由贝尔研究室 ( Bell )、 麻省理工学院 ( MIT ) 及奇异电器公司 ( GE ) 开始来共同开发一个名为 Multics 的大型计划，目标是想让大型主机可以联机 300 位以上的使用者。不过，在奋斗了四年之后，该计划仍然宣告不治...喔！是失败啦！(注： Multics 有复杂、多数的意思。)

一个小型档案系统的产生：1969 年 Ken Thompson 的小型 file server system 在复杂的 Multics 系统的计划失败后，贝尔研究室当然就退出该计划。就在这个计划解散之后，曾经参与 Muitics 的贝尔研究室的成员 Ken Thompson 由于自己工作上的需求，需要一套档案存取的小型操作系统，便在 1969 年的时候以 DEC 公司 ( Digital Equipment Corporation ) 的计算机 PDP-7 为硬件基准，设计了一个适合自己工作环境的小型档案系统，其中也含有他自行开发的一些小工具。那个系统就是最早期的 Unix 的源头！当初 Ken 设计这个档案系统时，主要是为了自己的存取方便所设计的简单 OS ，因此将原有的 Multics 系统大幅度的简化，不过，在当时还并没有 Unix 这个名词的出现！

Unix 的正式诞生：1973 年 Ritchie 等人以 C 语言写出第一个正式 Unix 核心 由于 Thompson 写的那个操作系统实在太好用了，所以在 Bell 研究室内部广为流传，并且数度经过改版。到了 1973 年， Bell 研究室的 Dennis Ritchie 等人为了让这个系统的执行效能更佳化，所以使用编译效能更好的 C 语言将原有的 1969 年的那个系统之核心大幅度的改写过，并且确定该操作系统名称为 Unix，呵呵！那就是最早的 Unix 操作系统啰！不过，由于这个操作系统是由这一群工程师所开发完成的，而且使用者也大多是这方面的工程师，因此造成了后来 Unix 系统接口较难被一般使用者接受的情况 @_@ (注： 相对于 Multics ，Unix 具有单一的意思！)

重要的 Unix 分支： 1977 年 BSD 的诞生 在 Unix 早期的发展中，有一件相当重要的事情，那就是 BSD 的诞生！由于 C 语言是一种高级语言，他可以被应用在不同的硬件架构上面，而 Unix 本身就是 C 语言写成的！在 Unix 发表之后， 柏克莱大学 ( Berkeley ) 的教授对于这个操作系统相当的有兴趣，在经过取得 Unix 的原始码，并且几经修改之后，终于在 1977 年发表了第一代的 Berkeley Software Distribution ( BSD ) 。这个 BSD 是 Unix 的一个分支，他的发展对于 Unix 有相当大的影响，例如后来的 Sun 公司就是使用 BSD 发展的核心进行自己商业的 Unix 版本的发展的！

百家齐鸣的 Unix 版本： 由于 C 语言是一个相当高阶的程序语言，他与硬件没有很直接的相关性，例如你的 Windows 也可以执行 C 程序语言！而由于 Unix 是由 C 语言写成的，因此，也就是说，你只要经过稍微的原始码修改程序，就可以在不同的硬件架构上面执行这个操作系统！后来，由于 Unix 的方便性，因此很多的商业公司及学术机构就加入这个操作系统的研发啰。不过，也由于 Unix 的便利性与改写容易，因此就造成了很多的不同版本的 Unix 啰，例如 ATT 的 System V 、 加州大学的 BSD 版、 IBM 的 AIX 等等。
由于『操作系统的核心 ( Kernel ) 必须要跟硬件配合，以提供及控制硬件的资源进行良好的工作！』，而在早期每一家生产计算机硬件的公司还没有所谓的『协议』的概念，所以每一个计算机公司出产的硬件自然就不相同啰！因此他们必须要为自己的计算机硬件开发合适的 Unix 系统，所以，他们自行开发的 Unix 当然只能配合本身的硬件配备啰！例如在学术机构相当有名的 Sun 、 Cray 与 HP 就是这一种情况，他们开发出来的 Unix 并没有办法在其它的硬件架构下工作的！ ( 我们都称呼这种系统与配备为『超级计算机』 ) ！由于没有厂商针对个人计算机设计 Unix 系统，因此，在早期并没有支持个人计算机的 Unix 操作系统的出现 ( 当然，这是由于早期的个人计算机并没有现在这样风行就是了！ ) ，每一家公司自己出的 Unix 虽然在架构上面大同小异，但是却真的仅能支持自身的硬件，所以啰，早先的 Unix 只能与服务器 ( Server ) 或者是大型工作站 ( Workstation ) 划上等号！
此外，由于版本太多了，而大家都是同样来自于 Unix 这个老祖宗，当然也都称自己是 Unix ，好了，如此一来，许多商业公司自然就会有类似的软件发表，喝！那么自然就有些许的商业纠纷啰！真是伤脑筋～

1984 年的 GNU 与 Free Software Foundation： Unix 在商业上面的问题让许多对于 Unix 喜好者感到相当的忧心，其中一个就是有名的 Richard M. Stallman 先生。他认为， Unix 是一个相当好的操作系统，在这个系统上面，如果大家能够将自己所学的贡献出来，那么这个系统将会更加的优异！Stallman 先生认为最大的快乐就是让自己发展的良好的软件让大家来使用了！而且，由于每个人的工作环境 ( 指软硬件平台 ) 可能都不太相同，所以，他也强调应该要有 Open Source 的概念，让大家都能够分享这一份的心得！他认为，有了 Open Source 之后，你的程序将有很多的人可以帮忙检验，将使得 Unix 社群更佳的茁壮。为了自己的理想， Stallman 在 1984 年实际创立了 GNU 与 自由软件基金会 ( Free Software Foundation, FSF )，并创作了许多『自由软件』供大众来使用，此外，对于其作品以自由 ( free ) 的 GNU General Public License ( GPL ) 的授权模式提供大众使用。这个 FSF 的核心观念是『版权制度是促进社会进步的手段，版权本身不是自然权力。』对于 FSF 有兴趣或者对于 GNU 想要更深入的了解时，请参考朝阳大学的洪朝贵教授的网站，里面有更为深入的解说！而且，Stallman 的 GNU General Public License 一直强调 Free 这个字眼！他是这样说的：『&quot;Free software&quot; is a matter of liberty, not price. To understand the concept, you should think of &quot;free speech&quot;, not &quot;free beer&quot;. &quot;Free software&quot; refers to the users freedom to run, copy, distribute, study, change, and improve the software』大意是说，自由软件并不是指『免费』的，而是指具有『自由度, freedom』的软件，什么是自由度呢？也就是你在取得这个软件之后，可以进行修改、进一步发表与复制在不同的计算机平台上面。这无疑是个好消息！因为如此一来，你所拿到的软件可能原先只能在 Unix 上面跑，但是经过原始码的修改之后，你将可以拿他在 Linux 或者是 Windows 上面来跑！Stallman 先生更直接对自由度下了这样的说明：


你可以根据任何你想要的提议 ( purpose ) 来跑这个 Free 的程序； 
你可以在理解了这支 Free 的程序的运作之后，将他修改成你所想要的样式与功能； 
你可以将你自己修改过的 Free 的程序再次的发表，以帮助你的朋友们； 
你可以将这支 Free 的程序进行改良，并将改良过的程序公开发表，以造福社群！ 
简单的来说， GPL 授权具有几个特点：


任何软件挂上 GPL 授权之后，即为自由的软件，任何人均可取得，同时，亦可取得其原始码 ( Source Code )； 
取得 GPL 授权之软件后，任何人均可进行修改原始码，以符合自己的喜好； 
除此之外，经过修改的 Source Code 应回报给网络社会，提供大家来参考！ 
但请特别留意，并非挂上 GPL 之后的软件就不可贩卖，这个是不同的两回事呦！举个例子来说，在 Red Hat 的官方网站上面提供 Red Hat 释出的 Linux 安装光盘提供大众下载，但是 Red Hat 本身依然有在卖 Linux 的套件，而且还卖的『很不便宜！』为何可以如此呢？呵呵！因为 Red Hat 他们卖的数据当中，含有相当大量经过整了的文件数据，这些数据虽然在网络上面可以下载，然而花了这么多的时间来整理这些数据，当然应该要给予相当程度的报酬啰！您说是吧！所以，请留意喔！并非 GPL 不可用来营利！
这个 GNU 对于后来的 Linux 有相当深远的影响，由于 Stallman 先生发展了 GNU 这个计划中，主力在推出各种方便而优异的工具软件，例如广为大家所知的 Emacs 文书编辑器、GCC, BASH..然而没有作业平台怎么使用这些软件呢？然而，由于他倡导的自由软件，让后来的心血能很快的接触原始码来发展软件，这就是后来的 Linux 的故事....这是后来的故事，等一下来说～

1988 年的图形接口 X-Free86 project： 有鉴于图形使用者接口 ( Graphical User Interface, GUI ) 的需求日益加重，在 1984 年由 MIT 与其它协力厂商首次发表了 X Window System ，并且更在 1988 年成立了非营利性质的 XFree86 这个组织。所谓的 XFree86 其实是 X window system 与 Free 及 x86 系统架构的整合名称呢！而这个 XFree86 的 GUI 接口更在 Linux 的核心 1.0 版于 1994 年释出时，整合于 Linux 操作系统当中！

1991 年 芬兰大学生 Linus Torvalds 的一则简讯： 在后来的几年内，由于计算机硬件工业的强力运作，以 intel 主导的 x86 系统架构的个人计算机大行其道，所以个人计算机算是相当流行的一个机器了！但在此时，人们使用的大多还是旧旧而且需要吃很多系统资源的 DOS 系列或其它的操作系统。 此时，有个芬兰的郝尔辛基大学 (Helsinki )Linus Torvalds 学生做了件不寻常的事情！ Linus 手边有个 Minix 系统 ( 这也是 Unix 的分支 ) ，他对这个操作系统相当的有兴趣！此外，由于当时他正好买了一部 386 的计算机，所以他就想说，咦！这个 Unix 这么棒！这么稳定，那我可不可以将他移植到个人计算机 ( X86 架构 ) 来使用呢？！好在由于 Stallman 提倡的 Open Source 风气，他得以接触到一些 source code ，而就经由这样的一个想法，呵呵！他就很有心的读取 Unix 的核心，并且去除较为繁复的核心程序，将他改写成可以适用于一般个人计算机的 x86 系统上面，到了 1991 年，他终于将 0.02 版的 hobby 放到网络上面供大家下载，并且由于 hobby 受到大家的肯定，相当多的朋友一起投入这个工作中！终于到了 1994 年将第一个完整的核心 Version 1.0 释出！并且造成目前的大流行.....由于 Linux kernel 的发展是由『虚拟团队』所达成的，大家都是透过网络取得 Linux 的核心原始码，经由自己精心改造后再回传给 Linux 社群，进而一步一步的发展完成完整的 Linux 系统，至于 Torvalds 先生是这个集团中的发起者。由于这个群策群力的缘故， Torvalds 先生将 Linux 定为同样造福大家的 GNU 授权模式！

企鹅的来源： 1994年发表 Linux 正式核心 1.0 的时候，大家要 Linus Torvalds 想一只吉祥物，怪怪的 Torvalds 突然想到小时候去动物园被一只企鹅追着满地打滚～还被咬了一口！既然想不到其它的吉祥物了，干脆就以这支企鹅来当吉祥物算了！所以，呵呵！目前我们常常看到这一只企鹅就是这么来的咯！

什么是 distribution 
好了，经由上面的说明，我们知道 Linux 是个『操作系统』，而且他是 GNU 的授权模式，并且有个老大哥是 Unix 。不过，毕竟由 Torvalds 先生负责维护的 Linux 提供的仅是『核心』与『核心工具』的集合，对于需要更完整功能的操作系统来说，毕竟还不够完备，例如如果你要桌面程序，还得要加入 X-Window 系统对吧！？如果你要架设 WWW 还得加入服务器软件对吧？所以，虽然 Linux 的核心已经提供了相当多的支持与工具程序，但毕竟还不足以构成一个很完整的操作系统。
好在，由于 Linux 的稳定性良好，并且可以在便宜的 x86 架构下的计算机平台运作，所以吸引了很多的套件商与自由软件的开发团队在这个 Linux 的核心上面开发相关的软件，例如有名的 sendmail, wu-ftp, apache 等等。此外，亦有一些商业公司发现这个商机，因此，这些商业公司或者是非营利性的工作团队，便将 Linux 核心、核心工具与相关的软件集合起来，并加入自己公司或团队的创意的系统管理模块与工具，而释出一套可以完整安装的操作系统，这个完整的 Linux 操作系统，我们就称呼他为 distribution，或者是中文所谓的『安装套件』啰！当然啰，由于是基于 GNU 的架构下，因此各家公司所发行的光盘套件是可以在网络上面自由下载的。不过，如果想要有较佳的服务，那么购买该公司发行的光盘也是不错的！
不过，由于发展的 Linux 公司实在太多了，例如有名的 Red Hat, OpenLinux, Mandrake, Debian, SuSE 等等，所以很多人都很担心，如此一来每个 distribution 是否都不相同呢？这就不需要担心了，由于各个 distribution 都是架构在 Linux Kernel 下来发展属于自己公司风格的 distribution，因此大家都遵守 Linux Standard Base ( LSB ) 的规范，也就是说，各个 distribution 其实都是差不多的！反正用到的都是 Linux Kernel 啊！只是各个 distribution 里面所使用的各套件可能并不完全相同而已。所以啰，大家可以按照自己的喜好来选择 Linux 的 distribution 光盘啰！底下列出几个主要的 Linux 发行者网址： 

Red Hat: http://www.redhat.com 
Mandrake: http://www.linux-mandrake.com/en/ 
Slackware: http://www.slackware.com/ 
SuSE: http://www.suse.com/index_us.html 
OpenLinux: http://www.caldera.com/ 
Debian: http://www.debian.org/ 
Linpus: http://www.linpus.com.tw/ 
UniteLinux:http://www.sco.com/unitedlinux/ 
当然发行套件者不仅于此，您可以查阅其它的 Linux 新闻来发现喔！而其中中文化较为有名的就属 CLE 这个套件发行者了！另外，台湾还有另一家 Linux 开发商，称为 Linpus (百资)，有兴趣的话也可以到底下的网页上看看！ 

CLE：http://cle.linux.org.tw/ 
百资：http://www.linpus.com.tw/ 好了，那么哪一个安装套件比较好呢？！就如同 VBird 前面提到的，每一个发行者所使用的 Linux 核心其实是一样的，都是由 www.kernel.org 开发出来的核心呀！所以其架构，甚至包括其档案放置的目录，都是大同小异的，基本上除了某些内容套件不太一样之外 ( 例如有人使用 wu-ftpd 有人使用 proftpd 等等 ) ，其它的档案架构与指令系统其实几乎都是相同的，因此我们不去探讨哪一个套件比较棒！而是要来介绍如何学习与使用一个套件！至于下载的地点，网友提供了一个相当棒的多种 Linux distributions 的下载网站： 
www.linuxiso.org同时底下的网站还有各个著名的 Linux distribution 的比较！包括使用的热门情况、市场占有率、以及套件的相依程度等等： 
http://www.distrowatch.com/

Linux 的功能与优缺点 

Linux 的起源： 前面提到了，Linus Torvalds 先生一直以来就喜欢那个小小的操作系统核心，而核心是管理一个系统的最底层的东西，所有的硬件资源都是由 kernel 来管控的！但是，就如同前面说的，早期的 Unix 并不支持 x86 的个人计算机架构，一直到了 1991 年在 BBS 里面 Linus 先生贴了个小布告之后，才有了重大的转变： 



Hello everybody out there using minix- I'm doing a (free) operation system (just a hobby, won't be big and professional like gnu) for 386(486) AT clones.这封 BBS 的邮件即是由当时还是芬兰的大学生 Linus Torvalds 所发表的，他说他修改了一个简单的操作系统核心，核心名称为 hobby，这个 hobby 的核心 ( Kernel ) 即为第一个 Linux 的核心系统！此外，由于他是基于 GNU 的协议而开发这个操作系统，所以他是 Free 的，任何人都可以下载使用！( 注：hobby 是个人兴趣，just a hobby, won't be big and professional like gnu，其意思是：仅为个人兴趣，不会玩得跟 gnu 那么大啦~~~)
Linus 所开发的这个 hobby 是基于 Unix 的系统所发展出来的，他将 Unix 里面的很多数据又加以简化，并且使之可以适用于 intel 主导的 x86 的系统下（当初的个人计算机系统为 386 与 486 架构），因此当初他所发表的这个最新的系统核心就被称为 linus's unix ，简称为 Linux ！当然，由于这个核心很像是当时的 Unix 系统，因此也称为 Unix-like 系统啰！( 注：其实 Unix-Like 可以说是目前服务器类型的操作系统的统称啦！因为，不论是 FreeBSD, BSD, Sun Unix, SCO Unix, HP Unix, Red Hat Linux, Mandrake Linux 等等，都是由同一个祖先『Unix』来的，因此，这些咚咚都被统称为 Unix-Like 的操作系统啰！ )
那么这个系统有什么特异功能呢？简单的说：


免费：由于他是基于 GPL ( General Public License ) 的架构之下，因此他是 Free 的，也就是任何人都可以免费的使用或者是修改其中的原始码的意思！这就是所谓的『开放性架构』，这对科学界来说是相当重要的！因为很多的工程师由于特殊的需求，常常需要修改系统的原始码，使该系统可以符合自己的需求！而这个开放性的架构将可以满足各不同需求的工程师！因此当然就有可能越来越流行啰！ 


配备需求低廉：而他可以支持个人计算机的 X86 架构，系统资源不必像早先的 Unix 系统那般，仅适合于单一公司 ( 例如 Sun ) 设备！单就这一点来看，就可以造成很大的流行啰！ 


功能强大而稳定：而且由于功能并不会输给一些大型的 Unix 工作站，因此，近年来越来越多的公司或者是团体、个人投入这一个操作系统的开发与整合工作！ 


独立作业：另外，由于很多的软件套件逐渐被这套操作系统拿来使用，而很多套件软件也都在 Linux 这个操作系统上面进行发展与测试，因此， Linux 近来已经可以独力完成几乎所有的工作站或服务器的服务了，例如 Web, Mail, Proxy, FTP.....。 
所以，目前他已经是相当成熟的一套操作系统啰！而且不耗资源又免费，呵呵，可以说造成微软相当大的压力呀！此外，由于他的系统硬件要求很低，加上目前很多的人由于『Intel 的阴谋』（呵呵！开玩笑的，因为 Tom 的硬件评论网站常常这样说 Intel 的不是！呵！很好笑！）而造成手边有相当多的淘汰掉的硬件配备， Linux 在这些被淘汰的硬件中就可以执行的相当的顺畅与稳定！因此也造成相当多朋友的关注啰！
这也是造成 Linux 成为最近几年来最受瞩目的操作系统之一，如前所述，他会受到瞩目的原因主要是因为他是『free』的，就是免费的操作系统啦！然后他是开放性的系统，也就是你可以随时的取得程序的原始码，这对于程序开发工程师是很重要的！而且，虽然他是免费的，不过功能却很强大！另外， Linux 对于硬件的需求是很低的，这一点更造成他流行的主因，因为硬件的汰换率太快了，所以很多人手边都有一些很少在用的零件，这些零件组一组就可以用来跑 Linux 了，反正做一个工作站又不用使用到屏幕 ( 只要主机就可以啰 ) ，因此 Linux 就越来越流行啰！(插个嘴，也就是因为 Linux 具有 1.硬件需求低、 2.架构开放、 3.系统稳定性及保密性工能够强、 4.完全免费，所以造成一些所谓『反微软联盟』的程序设计高手不断的开发新软件！以与 Microsoft 进行抗衡！)

Linux 的优点： 那干嘛要使用 Linux 做为我们的主机系统呢？这是因为 Linux 有底下这些优点：


稳定的系统：Linux 本来就是建立在 Unix 上面发展出来的操作系统，因此，Linux 具有与 Unix 系统相似的的程序接口跟操作方式，当然也继承了 Unix 稳定并且有效率的特点。常听到安装 Linux 的主机连续运做一年以上而不曾当机、不必关机是稀松平常的事； 


免费或少许费用：由于 Linux 是基于 GPL 的基础下的产物，因此任何人皆可以自由取得 Linux ，至于一些『安装套件』的发行者，他们发行的安装光盘也仅需要些许费用即可获得！不同于 Unix 需要负担庞大的版权费用，当然也不同于微软需要一而再、再而三的更新你的系统，并且缴纳大量费用啰！ 


安全性、漏洞的修补：如果你常玩网络的话，那么你最常听到的应该是『没有绝对安全的主机』！没错！不过 Linux 由于支持者日众，有相当多的热心团体、个人参与其中的开发，因此可以随时获得最新的安全信息，并给予随时的更新，亦即是具有相对的较安全！ 


多任务、多使用者：与 Windows 系统不同的， Linux 主机上可以同时允许多人上线来工作，并且资源的分配较为公平，比起 Windows 的单人假多任务系统要稳定的多啰！ 这个多人多任务可是 Unix-Like 上面相当好的一个功能，怎么说呢？你可以在一部 Linux 主机上面规划出不同等级的使用者，而且每个使用者登入系统时的工作环境都可以不相同，此外，还可以允许不同的使用者在同一个时间登入主机，以同时使用主机的资源。 


使用者与群组的规划：在 Linux 的机器中，档案的属性可以分为『可读、可写、可执行』等参数来定义一个档案的适用性，此外，这些属性还可以分为三个种类，分别是『档案拥有者、档案所属群组、其它非拥有者与群组者』。这对于项目计划或者其它计划开发者具有相当良好的系统保密性。 


相对比较不耗资源的系统：Linux 只要一部 p-100 以上等级的计算机就可以安装并且使用愉快啰！还不需要到 P-III 等级的计算机呢！不过，如果你要架设的是属于大型的主机（服务上百人以上的主机系统），那么就需要比较好一点的机器了。不过，目前市面上任何一款个人计算机均可以达到这一个要求啰！ 

Linux 的缺点： 反正 Linux 好处说不完啦！不过虽然 Linux 具有这样多的好处，但是他先天上有一个足以致命的地方，使他的普及率受到很大的限制，就是 Linux 需要使用 『指令列』 的终端机模式进行系统的管理！虽然近年来有很多的图形接口开发使用在 Linux 上面，但毕竟要熟悉 Linux 还是以指令列来使用是比较好的，因此要接受 Linux的玩家必须比较要能熟悉对计算机下指令的行为，而不是用鼠标点一点 icon 就行了！不过如果只是要架一些简单的小站呢？是不是大家都可以做的到？没错！其实只要对 Linux 做一些小小的设定就可以架站了！


没有特定的支持厂商：因为所有的套件都是免费的，自然也就没有专人会到府服务啦！不过，这点倒是不需要担心，因为拜网络风行之赐，你要问的问题几乎在网络上都可以找到答案喔！看你有没有用心去找就是了！ 


图形接口作的还不够好：其实是因为 VBird 不玩 X-window 啦，所以也不知道目前发展到怎样的一个地步了！基本上 VBird 常说的一句话就是：『Windows 上面有的咚咚 Linux 上面也一定可以找的到！，但 Linux 有的服务 Windows 可不见得有喔！』只不过，您可得自己找到自己想要的接口啰！ 

一些名词（GNU, GPL ？？） 

Linux Standard Base ( LSB ) 由于 Linux 是一个没有『规格品』样式的新鲜玩意儿，如果大家都自己玩自己的，那么可想而知的是，未来想要在 Linux 这个操作系统上面发展软件与硬件的厂商一定会无所适从的！为了让软件开发商、与硬件发展者有一个依循的方向，因此而有 Linux Standard Base 这个玩意儿的诞生！所以，各个 distribution 也都要遵循 LSB 上面的规范，软硬件发展者也都会依循 LSB ，所以啰，我们才会常常说，各大 distribution 虽然在提供的工具与创意上面有所不同，但是基本上，他们的 Linux 架构都是很类似的！因此，你只要玩一套 Linux distribution 也就够了！其它的 distribution 应该就难不倒你啰！

Unix-Like 其实 Unix-Like 可以说是目前服务器类型的操作系统的统称啦！因为，不论是 FreeBSD, BSD, Sun Unix, SCO Unix, HP Unix, Red Hat Linux, Mandrake Linux 等等，都是由同一个祖先『Unix』来的，因此，这些咚咚都被统称为 Unix-Like 的操作系统啰！目前，很多的软件在开发的时候，基本上，都已经可以是用在各个 Unix-Like 的平台上的！了不起，更改一些原始码就可以适用你所在的平台啰！

服务器、工作站、终端机... 由于网络的盛行，我们或许常常会听到一些名词ㄋㄟ～所以，底下先来介绍几个简单的网络名词吧！ ^_^，来认识一下什么是 服务器 ( Server )、工作站 ( Workstation ) 与终端机 ( Ternianl )？简单的来说，你可以这样认为：


服务器 ( Server )：提供 Internet 一种以上的网络服务的主机，例如 yahoo 提供的是 WWW 的服务，那么 yahoo 就可以称之为 服务器 了！那么，你自己架设一台 mail server 呢？呵呵！那也是一个小型的服务器啰！所以，你必须要清楚的知道，服务器是有规模大小之分的！目前一部 Linux 上面就可以架设多个服务器软件啰！例如 WWW 服务器的 Apache 软件、 FTP 服务器的 Wu-ftp 软件等等的； 


工作站 ( Workstation ) ：基本上，工作站可以视为仅提供一群特定人士，作为数值分析、科学用途的机器。例如我们研究室有一部 Sun 的机器，他仅提供我们研究室内部几部计算机的联机，当我们有需要使用到 Fortran 这个程序语言时，就联机进入 Sun 这部机器，并在上面进行我们所需要的计算工作！这个就是工作站啦。而工作站与服务器的差别，大概就在于有没有提供 internet 上面的服务而已，例如，如果我将 Sun 上面的 mail server 开启之后，那么这部机器就可以称之为服务器 了！同时也是我们的工作站喔！当然，更广义的定义是，只要是没有对 Internet 上面提供网络服务的，那就是工作站了！这当然也就包含所谓的终端机！ 


终端机 ( Terminal ) ：简单的说，就是 end-user ( 就是你啦 ) 前面的那部计算机！呵呵，例如我都是使用我的工作机 ( Windows ) 连上我们的主机来工作，那么这一部 Windows 的计算机，就可以称为 terminal 机器啰！不过，更狭义的来说，『终端机』本身应该是不具备任何可以作业的软件的，在终端机上面一定要连上 Server 之后，才能进行各项作业！那才是最狭义的终端机啰！例如我们前面说过的早期的大型主机联机模式！ 
大致上的分别可以用上面的观点来看！

几个常见的授权模式与定义 说说几个常见的授权模式吧：


GNU General Public License ：这个可以由刚刚的说明了解，他主要定义在『自由软件』上面，任何挂上 GPL 授权的软件，需要公布其原始码 ( Open Source )，GPL 有几个主要的大方向： 

任何个人或公司均可释出自由软件 ( free software )； 
任何释出自由软件的个人或公司，均可由自己的服务来收取适当的费用； 
该软件的原始码 ( Source Code ) 需要随软件附上，并且是可公开发表的； 
任何人均可透过任何正常管道取得此一自由软件，且均可取得此一授权模式。 


Freeware ：不同于 Free software ， Freeware 为『免费软件』而非『自由软件！』虽然他是免费的软件，但是不见得要公布其原始码，端看释出者的意见啰！这个东西与 Open Source 毕竟是不太相同的东西喔！此外，目前很多标榜 免费软件 的程序很多都有小问题！例如假借免费软件的名义，实施使用者数据窃取的目的！所以『来路不明的软件请勿安装！』 


Shareware ：共享软件这个名词就有趣了！与自由软件有点类似的是， Shareware 在使用初期，他也是免费的，但是，到了所谓的『试用期限』之后，您就必须要选择『付费后继续使用』或者『将他移除』的宿命～通常，这些共享软件都会自行撰写失效程序，让你在试用期限之后就无法使用该软件。 


Berkeley Software Distribution (BSD) ：使用 BSD source code 最常接触到的就是 BSD 授权模式了！这个授权模式其实与 GPL 很类似，而其精神也与 Open Source 相呼应呢！ 


Open Source ：Open source 表示软件释出时，一定伴随着原始码的释出喔！通常他有几个好处： 

程序设计师通常会等到程序成熟之后才会释出 ( 免得被笑, ^_^ )，所以通常程序在雏形的时候，就已经具有相当的优良体质； 
Open Source 的精神，相信当程序原设计人将程序原始码释出之后，其它的程序设计师接受这份原始码之后，由于需要将程序改成自己所需的样式，所以会经由本身的所学来加以改良，并从中加以改良与除虫，所以程序的 debug 功能会比传统的 close source 来的快！ 
由于程序是伴随原始码的，因此，系统将会不易存在鲜为人知的木马程序或一些安全漏洞，相对而言，会比较更加的安全！ 


Close Source ：程序的核心是封闭的，优点是有专人维护，您不需要去更动他；缺点则是灵活度大打折扣，使用者无法变更该程序成为自己想要的样式，此外，若有木马程序或者安全漏洞，将会花上相当长的一段时间来除错！ 

GNU General Public License ( GPL ) 上面我们提到了 Linux 是基于 GPL 的情况下而允许大众可以做最大限度的使用！那么 GPL 是什么呢？基本上他是基于 GNU 的架构下的！简单的说， GNU 就是『自由软件』的意思，『自由软件』是放置于网络上供人免费下载使用的软件，基本上他会提供原始程序代码与编译完成的执行档（有的仅提供原始码，要编译得自己来才行），并鼓励使用者修改程序使符合使用者本身的服务需求，当然啰，如果你将这些自由软件修改之后，以商业的手法来贩卖，也不会触犯到什么法律上的责任啦，只是如此一来则违反了自由软件的创作美意了！在目前的台湾教育界中，有一群老师也是在积极的从事这一种『自由软件』的集体创作呢！如此一来将有助于台湾中小学教师的计算机程度，并提供良好的学习环境呢！当真是很不错呦！以下将 GNU/GPL 的中文译本附上，大家可以稍微看一看啰！
版权所有 (C) 1989，1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307USA 
允许每个人复制和发布这一许可证原始文件的副本，但绝对不允许对它进行任何修改。声明 
This is an unofficial translation of the GNU General Public License into Chinese. It was not published by the Free Software Foundation, and does not legally state the distribution terms for software that uses the GNU GPL-- only the original English text of the GNU GPL does that. However, we hope that this translation will help Chinese speakers understand the GNU GPL better. 这是一份 GNU 通用公共许可证非正式的中文翻译。它不是自由软件基金会所发布，并且不能适用于使用 GNU GPL 的软件 ── 只有 GNU GPL 英文原文的版本才行。然而，我们希望这份翻译能帮助中文的使用者更了解 GNU GPL。序言 
大多数软件许可证的用意在于剥夺您共享和修改软件的自由。相反的，GNU 通用公共许可证力图保证您共享和修改自由软件的自由 ── 保证自由软件对所有使用者都是自由的。GNU GPL 适用于大多数自由软件基金会的软件，以及任何因信任而采用 GNU GPL 的作者所开发的软件。(有些自由软件基金会软件受 GNU 函式库通用许可证的保护)。您也可以将它用到您的程序中。 　 当我们谈到自由软件 ( free software ) 时，我们指的是自由而不是价格。我们把 GNU 通用公共许可证设计成您的　保障，让您保有发布自由软件的自由 ( 您可以自由决定是否要对此项服务收取费用 )；确保您能收到程序原始码或者在您需要时能得到它；确保您能修改软件或将它的一部分用于新的自由软件；而且还确保您知道您拥有这些权利。 　 为了保护您的权利，我们需要作出规定：禁止任何人剥夺您的权利，或者要求您放弃这些权利。如果您修改了自由软件或者发布了软件的副本，这些规定就转化为您的责任。 　 例如，如果您发布这样一个程序的副本，不管是免费的还是收费的，您必须将您具有的一切权利给予您的接受者；您必须确认他们能收到或得到原始程序代码；并且将这些条款给他们看，使他们知道他们有这样的权利。 　 我们采取两项措施来保护您的权利： 
1.用版权来保护软件。 2.提供您许可证，赋予您复制，发布和修改这些软件的法律许可。同样，为了保护每个作者和我们自己，我们需要清楚地让每个人明白，自由软件没有担保 ( no warranty )。如果由于某人修改了软件，并继续加以传播，我们需要它的接受者明白：他们所得到的并不是原来的自由软件。由其它人引入的任何问题，不应损害原作者的声誉。 　 最后，由于任何自由软件不断受到软件专利的威胁，故我们希望避免这样的风险。如果自由软件的再发布者以个人名义获得专利许可证，也就等同将软件变为私有。为防止这一点，我们必须明确声明：任何专利必须以允许每个人自由使用为前提，否则就不准许有专利。 　 下面是有关复制、发布和修改的确切的条款和条件。GNU 通用公共许可证 有关复制，发布和修改的条款和条件 
凡是版权所有者在其程序和作品中声明其程序和作品可以在 GNU GPL 条款的约束下发布，这样的程序或作品都受到本许可证约束。下面提到的 &quot;程序&quot; 指的是任何这样的程序或作品。而 &quot;程序的衍生作品&quot; 指的是这样的程序或者版权法认定下的衍生作品，也就是说包含此程序或程序的一部分的套件，可以是原封不动的，或经过修改的，和/或翻译成其它语言的 ( 程序 )。( 在下文中，&quot;修改&quot; 一词的涵义一律包含翻译作品。) 每个许可证接受人 ( license ) 用 &quot;您&quot; 来称呼。 　 本许可证条款不适用于复制，发布和修改以外的行为。这些行为超出这些条款的范围。执行本程序的行为不受条款的限制。而程序的输出只有在其内容构成本程序的衍生作品 ( 并非只是因为该输出由本程序所产生 ) 时，这一条款才适用。至于程序的输出内容是否构成本程序的衍生作品，则取决于程序具体的用途。 　 

只要您在每一程序副本上明显和恰当地宣告版权声明和不承担担保的声明，并原封不动保持此许可证的声明和没有担保的声明，并将此许可证连同程序一起给其它每位程序接受者，您就可以用任何媒体复制和发布您收到的程序的原始码。 　 您可以为转让副本的实际行动收取一定费用。您也可以自由决定是否以提供担保来换取一定的费用。 　 
您可以修改程序的一个或几个副本或程序的任何部分，以此形成基于这些程序的衍生作品。只要您同时满足下面的所有条件，您就可以按前面第一款的要求复制和发布这一经过修改的程序或作品。 　 

您必须在修改过的档案中附有明显的说明：您修改了此一档案及任何修改的日期。 
您必须让您发布或出版的作品，包括本程序的全部或一部分，或内含本程序的全部或部分所衍生的作品，允许第三方在此许可证条款下使用，并且不得因为此项授权行为而收费。 
如果修改的程序在执行时以交谈方式读取命令，您必须使它在开始进入一般的交谈使用方式时打印或显示声明：包括适当的版权声明和没有担保的声明 ( 或者您提供担保的声明 )；使用者可以按此许可证条款重新发布程序的声明；并告诉使用者如何看到这一许可证的副本。 ( 例外的情况：如果原始程序以交谈方式工作，但它通常并不打印这样的声明，那么您基于此程序的作品也就不用打印声明 )。 　 这些要求适用于整个修改过的作品。如果能够确定作品的一部分并非本程序的衍生产品，且可以合理地单独考虑并将它与原作品分开的话，则当您将它作为独立的作品发布时，它不受此许可证和其条款的约束。但是当您将这部分与基于本程序的作品一同发布时，则整个套件将受到本许可证条款约束，因为本许可证对于其它许可证持有人的授权扩大到整个产品，也就是套件的每个部分，不管它是谁写的。 　 因此，本条款的意图不在于剥夺您对完全由您自身完成作品的权利，而是履行权利来控制基于本程序的集体作品或衍生作品的发布。 　 此外，将与本程序无关的作品和本程序 ( 或本程序的衍生作品 ) 一起放在贮存媒体或发布媒体的同一卷上，并不导致将其它作品置于此许可证的约束范围之内。 　 
您可以以目标码或可执行形式复制或发布程序 ( 或符合第 2 款，本程序的衍生作品 )，只要您遵守前面的第 1、2 款，并同时满足下列三条中的任一条。 　 

在通常用作软件交换的媒体上，和目标码一起附有机器可读的完整的本程序原始码。这些原始码的发布应符合上面第 1，2 款的要求。或者 
在通常用作软件交换的媒体上，和目标码一起，附上书面报价，提供替第三方复制原始码的服务。该书面报价有效期不得少于 3 年，费用不得超过完成原程序发布的实际成本，原始码的发布应符合上面的第 1，2 款的要求。或者 
和目标码一起，附有您收到的发布原码的报价信息。 ( 这一条款只适用于非商业性发布，而且您只收到程序的目标码或可执行码，和按 b 款要求提供的报价 ) 　 作品的原始码指的是对作品进行修改最优先择取的形式。对可执行的作品而言，完整的原始码套件包括：所有模块的所有原始程序，加上有关的接口的定义，加上控制可执行作品的安装和编译的 script。至于那些通常伴随着执行本程序所需的操作系统组件 ( 如编译器、核心等 ) 而发布的软件 ( 不论是原始码或可执行码 )，则不在本许可证要求以程序原始码形式伴随发布之列，除非它是本程序的一部分。 　 如果可执行码或目标码是以指定复制地点的方式来发布，那么在同一地点提供等价的原始码复制服务也可以算作原始码的发布，然而第三方并不需因此而负有必与目标码一起复制原始码的义务。 　 
除了本许可证明白声明的方式之外, 您不能复制，修改，转发许可证和发布程序。任何试图用其它方式复制，修改，转发许可证和发布程序是无效的，而且将自动结束许可证赋予您的权利。然而，对那些从您那里按许可证条款得到副本和权利的人们，只要他们继续全面履行条款，许可证赋予他们的权利仍然有效。 　 
您没有在许可证上签字，因而您没有必要一定接受此一许可证。然而，没有任何其它东西赋予您修改和发布程序及其衍生作品的权利。如果您不接受许可证，这些行为是法律禁止的。因此，如果您修改或发布程序 ( 或本程序的衍生作品 ) ，您就表明您接受这一许可证以及它的所有有关复制、发布和修改程序或基于程序的作品的条款和条件。 　 
每当您重新发布程序 ( 或任何程序的衍生作品 ) 时，接受者自动从原始许可证颁发者那里接到受这些条款和条件支配的复制、发布或修改本程序的许可。您不可以增加任何条款来进一步限制本许可证赋予他们的权利。您也没有强求第三方履行许可证条款的义务。 　 
如果由于法院判决或违反专利的指控或任何其它原因 ( 不限于专利问题 ) 的结果，使得强加于您的条件 ( 不管是法院判决，协议或其它 ) 和许可证的条件有冲突时，他们也不能令您背离许可证的条款。在您不能同时满足本许可证规定的义务及其它相关的义务来发布程序时，则结果您只能够根本不发布程序。例如，如果某一专利许可证不允许所有直接或间接从您那里接受副本的人们，在不付专利费的情况下重新发布程序，唯一能同时满足两方面要求的办法是停止发布程序。 　 如果本条款的任何部分在特定的环境下无效或无法实施，就使用条款的其余部分，并将这部分条款作为整体用于其它环境。 　 本条款的目的不在于引诱您侵犯专利或其它财产权的要求，或争论这种要求的有效性。本条款的主要目的在于保护自由软件发布系统的完整性。它是通过公共许可证的应用来实现的。许多人已依赖同是出自此系统的应用程序，经由此系统发布大量自由软件而做出慷慨的供献。作者 / 捐献者有权决定他/她是否通过任何其它系统发布软件，许可证接受者不能强迫作者 / 捐献者做某种特定的选择。 　 我们相信许可证其它部分已涵盖本节所述状况，本节目的只在更明确说明许可证其余部分可能产生的结果。 　 
如果由于专利或者由于有版权的接口问题使程序在某些国家的发布和使用受到限制，则以本许可证发布程序的原始作者可以增加发布地区的限制条款，将这些国家明确排除在外，并在这些国家以外的地区发布程序。在这种情况下，这些限制条款如同写入本许可证一样，成为许可证的条款。 　 
自由软件基金会可能随时出版通用公共许可证的修改版或新版。新版和当前的版本在精神上保持一致，但在细节上可能有出入，以处理新的问题与状况。 　 每一版本都有不同的版本号。如果程序指定可适用的许可证版本号以及 &quot;任何更新的版本&quot; ，您有权选择遵循指定的版本或自由软件基金会以后出版的新版本。如果程序未指定许可证版本，您可选择自由软件基金会已经出版的任何版本。 　 
如果您愿意将程序的一部分结合到其它自由程序中，而它们的发布条件不同，请写信给作者，要求准予使用。如果是自由软件基金会加以版权保护的软件，请写信给自由软件基金会，我们有时会作为例外的情况处理。我们的决定受两个主要目标的指导，这两个主要目标是：我们的自由软件的衍生作品继续保持自由状态，以及从整体上促进软件的共享和重复利用。 　 
没有担保 由于程序准予免费使用，在适用法准许的范围内，对程序没有担保。除非另有书面说明，版权所有者和/或其它提供程序的人们 &quot;一样&quot; 不提供任何类型的担保，不论是明确的，还是隐含的，包括但不限于可销售和适合特定用途的隐含保证。全部的风险，如程序的质量和性能问题都由您来承担。如果程序出现缺陷，您应当承担所有必要的服务、修复和改正的费用。 　 
除非适用法或书面协议的要求，在任何情况下，任何版权所有者或任何按许可证条款修改和发布程序的人们都不对您的损失负有任何责任。包括由于使用或不能使用程序引起的任何一般的、特殊的、偶然发生的或重大的损失 ( 包括但不限于数据的损失，或者数据变得不精确，或者您或第三方的持续的损失，或者程序不能和其它程序协调运行等 ) 。即使版权所有者和其它人已被告知这种损失的可能性也不例外。 条款结束 　 ( 译注：以下不是法律条文，只是要教一般的程序设计师如何使用 GNU GPL ) 如何将这些条款用到您的新程序 　 
如果您开发了新程序，而且您需要它得到公众最大限度的利用，要做到这一点的最好办法是将它施以 GNU GPL，使得每个人都能循此条款来修改和重新发布你写的软件。 　 为了做到这一点，请将程序附上下列声明。最安全的方式是将它放在每个原始码档案的开头，以便最有效地传递没有担保的信息。每个文件至少应有 &quot;版权所有&quot; 行以及在什么地方能看到声明全文的说明。 　 用一行空间描述程序的名称和它的用途版权所有 (C) 19XX 作者姓名 　 本程序是自由软件，您可以遵照自由软件基金会 ( Free Software Foundation ) 出版的 GNU 通用公共许可证条款 ( GNU General Public License ) 第二版来修改和重新发布这一程序，或者自由选择使用任何更新的版本。 　 发布这一程序的目的是希望它有用，但没有任何担保。甚至没有适合特定目的而隐含的担保。更详细的情况请参阅 GNU 通用公共许可证。 　 您应该已经和程序一起收到一份 GNU 通用公共许可证的副本。如果还没有，写信给： Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. 　 此外还应加上如</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:25:28</pubDate>
</item>
<item>
<title>Google开源其Eclipse插件</title>
<link>http://oss.org.cn/html/97/n-62397.html</link>
<text>Google的Eclipse插件GPE（Google Plugin for Eclipse）已经到达了它的一个新里程碑。Google今天在一篇博客中宣布，将该项目进行开源——开源协议基于Eclipse公共许可证（EPL）v1.0。

Google Plungin for Eclipse是Google推出的一款Eclipse插件，使用该插件，你可以从Eclipse 中创建、测试和上传App Engine应用程序，它同时支持Google Web Toolkit（GWT）开发。据Google Web Toolkit的官方博客介绍，GPE其实包括了一系列软件开发工具，用于帮助Java开发者快速设计、构建、优化及部署那些基于云的应用程序——使用GWT、Speed Tracer、App Engine及其他Google云服务。
Google表示，目前围绕GWT、App Engine以及其他Google云服务开发的生态系统已经逐渐成熟，Google的首要任务是帮助开发者而不是开发那些专有（proprietary）的开发工具。开源GPE对该生态系统的构建很有意义，而且也可以让社区更方便地改进及扩展该工具。
属于GPE开源项目的还有另外一个GWT Designer工具（ 可单独运行或与GPE集成 ）。GWT Designer是GWT Toolkit中的一个用户界面生成工具。它构建于Eclipse的WindowBuilder工具之上，该工具由Instantiations公司开发。去年八月Google收购Instantiations，然后即将WindowsBuilder捐献给了Ecllipse。
目前，你已可以从Google Code的GPE和GWT Designer项目页面下载相应代码。Google鼓励开发者提交Bug或在论坛上进行讨论，以促使GPE项目更加完善。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 11:07:23</pubDate>
</item>
<item>
<title>百度地图上线卫星图功能 中国四维提供影像数据</title>
<link>http://oss.org.cn/html/96/n-62396.html</link>
<text>
百度地图卫星图上的北京后海
新浪科技讯 11月16日上午消息，百度地图今日正式上线了卫星图功能，目前首批覆盖的城市包括北京、上海、广州、深圳等35个城市，由中国四维提供影像数据。
据介绍，与其他地图产品或服务相比，卫星图由于涉及资金投入庞大和技术能力限制，准入的门槛非常高。这也是目前国内很少有企业提供这一服务的原因。
百度地图负责人介绍说，卫星图产业链涵盖商用卫星采集方、卫星影像代理方及影像使用方等众多产业链环节。影像使用方拿到卫星原始影像数据后，还需要进行“选取原始图像、坐标校正、图片调色、拼接镶嵌、质检出图”等众多技术的制作环节。
首批推出的百度地图卫星图涵盖了北京、上海、广州、深圳等35个城市，到今年年底将实现对全国300多个城市的全部覆盖，这些卫星图的时效基本是2010-2011年的。
百度地图负责人透露，此前百度已经为此投入了很大的资源和努力，所用的卫星遥感图像由中国四维测绘技术有限公司提供。
据了解，中国四维的影像数据全部来自商业卫星数据提供商美国DigitalGlobe公司。中国四维是美国该公司在中国的总代理，拥有QuickBird、WorldView1和WorldView2三颗半米级卫星的总代理权。（艾橙）</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-21 10:38:42</pubDate>
</item>
<item>
<title>推荐20个基于PHP的开源内容管理系统新秀</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62352</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-20 21:49:11</pubDate>
</item>
<item>
<title>HTML4和HTML5之间的10个主要不同</title>
<link>http://oss.org.cn/html/51/n-62351.html</link>
<text>　　本文是从 10 Essential Differences Between HTML4 and HTML5 这篇文章翻译而来。
　　HTML5是最新的 HTML 标准，或迟或早，所有的 web 
程序员都会发现需要使用到这个最新的标准，而且，很多人都会感觉到，重新开发一个 HTML5 的网站，要比把一个网站从 HTML4 迁移到 
HTML5 上容易的多，这是因为这两个版本之间有很大不同之处。
　　事实上，HTML5 并没有对 HTML4 做什么重大的修改，它们很多东西都是相似的。
　　可是，其中有一些很重要的区别你需要知道。下面列出的就是一些 HTML4 和 HTML5 之间主要的不同之处(并不是全部，全部列出来是不可能的)：
　　1. HTML5 标准还在制定中
　　这头一个不同之处显而易见，但非常重要，我需要先从它开始。也许你已经注意到了关于 HTML5 很酷的言论到处都是，但是事实情况是，HTML5是一个还未完成的标准。HTML4已经有10岁了，但它仍是当前正式的标准的事实没有改变。
　　另一方面，HTML5 
仍处在早期阶段，以后的修改会不断的出现。你必须考虑到这些，因为你在网站上使用的这些新增加或修改的网页元素会每年都出现一些变化，你需要不停的更新升
级你的网站，这可不是你希望的。这就是目前为止，你最好在产品里使用 HTML4，只在实验里使用 HTML5 的原因。
　　2. 简化的语法
　　更简单的 doctype 声明是 HTML5 里众多新特征之一。现在你只需要写&amp;lt;!doctype html&amp;gt;，这就行了。HTML5的语法兼容 HTML4 和 XHTML1，但不兼容 SGML。
　　3. 一个替代 Flash 的新 &amp;lt;canvas&amp;gt; 标记
　　对于 Web 用户来说，Flash 既是一个惊喜，也是一种痛苦。有很多的 Web 开发人员对 HTML5 对 Flash 
产生的威胁很不满。但对于那些忍受着要花几年时间加载和运行的臃肿的 Flash 视频的人来说，用新的 &amp;lt;canvas&amp;gt; 
标记生成视频的技术已经到来。
　　目前， &amp;lt;canvas&amp;gt; 标记并不能提供所有的 Flash 具有的功能，但假以时日，Flash 必将从 web 上淘汰。我们拭目以待，因为很多人还并不认同这种观点。
　　4. 新的 &amp;lt;header&amp;gt; 和 &amp;lt;footer&amp;gt; 标记
　　HTML5的设计是要更好的描绘网站的解剖结构。这就是为什么这些&amp;lt;header&amp;gt; 和&amp;lt;footer&amp;gt; 等新标记的出现，它们是专门为标志网站的这些部分设计的。
　　在开发网站时，你不在需要用&amp;lt;div&amp;gt;标记来标注网页的这些部分。
　　5. 新的 &amp;lt;section&amp;gt; 和 &amp;lt;article&amp;gt; 标记
　　跟&amp;lt;header&amp;gt;和&amp;lt;footer&amp;gt;标记类似，HTML5 中引入的新的&amp;lt;section&amp;gt;和&amp;lt;article&amp;gt;标记可以让开发人员更好的标注页面上的这些区域。
　　据推测，除了让代码更有组织外，它也能改善 SEO 效果，能让搜索引擎更容易的分析你的页面。
　　6. 新的 &amp;lt;menu&amp;gt; 和 &amp;lt;figure&amp;gt; 标记
　　新的&amp;lt;menu&amp;gt;标记可以被用作普通的菜单，也可以用在工具条和右键菜单上，虽然这些东西在页面上并不常用。
　　类似的，新的 &amp;lt;figure&amp;gt; 标记是一种更专业的管理页面上文字和图像的方式。当然，你可以用样式表来控制文字和图像，但使用 HTML5 内置的这个标记更适合。
　　7. 新的 &amp;lt;audio&amp;gt; 和 &amp;lt;video&amp;gt; 标记
　　新的&amp;lt;audio&amp;gt; 和 &amp;lt;video&amp;gt; 标记可能是 HTML5 中增加的最有用处的两个东西了。正如标记名称，它们是用来嵌入音频和视频文件的。
　　除此之外还有一些新的多媒体的标记和属性，例如&amp;lt;track&amp;gt;，它是用来提供跟踪视频的文字信息的。有了这些标记，HTML5 使
 Web2.0 特征变得越来越友好。问题在于，在 HTML5 还未被广泛的接受之前，Web2.0 还是老的 Web2.0。
　　8. 全新的表单设计
　　新的 &amp;lt;form&amp;gt; 和 &amp;lt;forminput&amp;gt; 标记对原有的表单元素进行的全新的修改，它们有很多的新属性(以及一些修改)。如果你经常的开发表单，你应该花时间更详细的研究一下。
　　9. 不再使用 &amp;lt;b&amp;gt; 和 &amp;lt;font&amp;gt; 标记
　　对我个人来说，这是一个让我不太理解的改动。我并不认为去除 &amp;lt;b&amp;gt; 和 
&amp;lt;font&amp;gt;标记会带来多大的好处。我知道，官方的指导说这些标记可以通过 CCS 
来做更好的处理，但这样一来，为了在文章一两个地方出现的这种标记，你就需要在独立的 css 
和文本两个地方来实现这一的功能，岂不笨拙。也许我们以后会习惯这种方法。
　　10. 不再使用 &amp;lt;frame&amp;gt;, &amp;lt;center&amp;gt;, &amp;lt;big&amp;gt; 标记
　　事实上，我已经记不清曾经何时用过这些标记了，所以，我并不为去除这些标记感到悲哀。相同的原因，有更好的标记能实现它们的功能——这很好，任何作废的标记从标准中剔除都是受欢迎的。
　　这10个 HTML5 和 HTML4 之间的不同只是整个新的规范中的一小部分。除了这些主要的变动外，我还可以略提一下一些次要的改动，比如修改了&amp;lt;ol&amp;gt; 标记的属性，让它能够倒排序，对&amp;lt;u&amp;gt;标记也做了修改。
　　所有这些次要的改动数量众多。而且新的修改也在不断的增加，因此，如果你想实时跟踪最新的动向，你需要经常的查看 w3.org 的 HTML4 和 HTML5 之间的不同这个页面。如果你很心急，想在你的工作中使用这些新的标记和属性，我劝告你最好只是做实验，原因已经说的很清楚了，这些新标记和新属性在将来也许会有很大的改变，所以，除非你不断的更新你的代码，它们很可能会过期失效。
　　尽管如今大多数流行的浏览器的最新版都支持 HTML5，但有些新的(或修改的)标记和属性它们并不支持，所以你的网页在用户的屏幕上有可能前后显示的不一致。耐心等待，等待 HTML5 真正可以实用时候。目前还不是时候。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 22:51:15</pubDate>
</item>
<item>
<title>GitHub们如何运作：创新很重要</title>
<link>http://oss.org.cn/html/50/n-62350.html</link>
<text>　　导读：Github 公司的职员 Zach Holman 写了一篇关于“GitHub 如何运作管理”的文章，文章分三部分，这是第三部分：创新很重要。（第一部分和第二部分，下面是全文）
　　我们想创造一个创新的环境。员工做项目的时候会爱上这样的环境，它让人振奋，振奋是容易感染人的，可以从一个项目传递到另一个项目。甚至如果我们没有在一个项目上赚到钱，而振奋感仍旧会带入到能够让我们赚钱的项目中去。
　　酒精
　　在 GitHub 有相当多的人喜欢喝酒，这已经不是什么秘密了。我的意思是，我们在每个办公室的储物柜里都有四种啤酒随时可以取用。但酒精并不只是能使人上瘾，它还有更多其他的用途。
　　聚会。在我们的赞助酒会上，我们要和来自旧金山和世界各地的友人会面。啤酒能让人们为我们的产品感到激动，员工会感到为 GitHub 工作是一个很激动人心的事情。(和某人喝上几杯，在一个气氛轻松的环境下雇佣员工，比靠大规模紧张的面试的方式更可靠些。)
　　建立友谊。我们在一起工作，我们不仅是工作伙伴，还是朋友。我们在工作中建立友情。很难区分开我们是在讨论
工作还是在聊天。这不单是自我感觉良好。当你和某人关系很好时，你会对他更诚恳。如果别人有了个点子，那么你直接告诉他们你的想法，帮助他们改进。这正是
社交的一方面，所以说酒精被称作社交润滑剂。
　　头脑风暴。酒吧是个适合做假设分析的场所。不要太具体化–可以谈谈工业发展方向，能否应用到你的产品上，我们三年后会发展成什么样。我们许多的产品功能都来源自于旧金山酒吧里不太具体的讨论。
　　求同存异
　　我们为没有实战经验的程序员在办公室里设置了 Arduino 商店。GitHub 每个月都会组织健身活动。我们会为谁能在 Twitter 上赢得最多的粉丝而展开激烈的哲学辩论。我们鼓励员工讨论任何事情，可以是晦涩的编程难题，可以是爬山。
　　鼓励员工对不同领域感兴趣，激励他们，让他们用完全全新的方式去思考。这样不仅提高了个人，也帮助改善了公司。
　　创新意味着自我引导
　　最初 Chris 问我的一个问题，也是我写这篇博客的原因，就是因为我相信，很多人都不能只是自己想做的产品，这是事实。
　　当然有些事情更加紧迫，例如在事件表影响到整个网站前就修改它，这比创建一个新的 footer 重要，但是在 GitHub，最重要的在于自我引导，如果你对某一件事情感兴趣，那么就做最感兴趣的吧。往往伟大的作品都出自对作品本身有热情的人之手。
　　我们能够这样做是因为我们更多的讨论的是我们的产品，每个人都有机会参与。Pull Requests 
给了我们一个平台，我们可以在产品发布出来尝试我们的新想法。我们做不同的尝试，避免哗众取宠。如果你真的对某个点子感兴趣，就去做吧。我们会跟着你的原
型去做。这个方式很棒，催生出很多产品。Kyle 从设计的角度出发，写了许多关于使用 GitHub 发布产品的文章。
　　原文链接：How GitHub Works: Creativity is Important</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 22:46:02</pubDate>
</item>
<item>
<title>GitHub们如何运作：异步工作</title>
<link>http://oss.org.cn/html/49/n-62349.html</link>
<text>　　导读：Github 公司的职员 Zach Holman 写了一篇关于“GitHub 如何运作管理”的文章，文章分三部分，这是第二部分：异步工作。参见第一部分。（下面是全文）
　　这是到目前为止我在 GitHub 工作最喜欢的方面：每件事都是异步的。
　　聊天
　　GiHtub 在最初的两年没有办公室。我们用聊天室(Campfire)来沟通。现在我们已经搬到了第二个办公室，但仍然使用 Campfire。这是因为聊天可以是不同步的。
　　用这种异步的交流方式，我可以出去吃饭，然后当我回来的时候我仍能跟得上对话；我可以问同事一个问题，不用担心会打扰到她，因为当她有时间的时候她自然会回复；我可以去 Minnesota 的乡村，也可以同平常一样好像在办公室工作。
　　Pull Requests
　　（编注：“Pull Requests”是 GitHub 上的一种讨论形式，有关代码讨论、代码审查、管理代码的变化。 Pull Requests = 代码 + 问题 + 代码注释。）
　　我们的开发工作流程中涉及 Pull Requests，我想在以后的博客中更加详细的讲述这一流程。现在我只想表达我对这种方式的喜爱之情。以前那些需要进行复杂的分支操作的日子一去不复返了，取而代之的是只需要自己对着屏幕查阅代码的简洁方式。
　　如果我想增加一个新功能，或者会修改代码，我会将代码 push 到一个新分支，并且新建一个 Pull 
Requests。如果我的代码会影响我同事的代码，或者他们对我的代码感兴趣，或者他们时间充裕的话，他们可以查看我的代码。这时我们可以将那个分支发
布到其他机器上，调试新功能，如果一切正常的话，就可以将这个分支合并到主分支去。
　　有了 Pull Requests 的工作方式，我就不需要特别去开个会，方便了每个人。还有个原因：
　　开会是有害的
　　37signals 在《Getting Real》一书中讨论过“开会是有害的”这个主题。相对于37signals，我对于开会的厌恶是有过之而无不及，我讨厌开会。
　　往往你正在忙的时候，就要开会了。他们还经常会请一些不相关的人开会。即使你对会议的主题很感兴趣，你也会最终被搞得懊恼。因为开会，你不得不
停止手头的工作，而开会却是跟你“谈论”你正在的工作。开会期望你提前在白纸上设计出完美的系统，而显然 push 一个分支，查看 diff，基于 
diff 来修改代码更简单些。
　　除此之外，开会的内容很容易被遗忘。即使你做了会议记录，你也不能保证你能记录所有内容。有某些你没有来得及记下来，你想会后再补上记录。但是
三个星期过去了，你回忆起好像某些东西没有记录下来，显然那次讨论才是更重要的。如果采用聊天记录的方式，就不存在这个问题。另外文字沟通的方式也减少了
开会时开小差的情况。
　　我们在 GitHub 也会开会，但是过去的一年半中开会的次数屈指可数。
　　最佳状态
　　再回到我的上一篇文章：你想要你的雇员处于“最佳状态”。但是如果他们只能在那种状态下工作一个小时就要开会了，这将打乱他们。
　　我们发现，如果让那些负责任的人按照他们自己的时间来安排工作，他们不仅能完成重要的工作，也能保证其他工作的高效率。
　　英文原文：How GitHub Works: Be Asynchronous</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 22:41:18</pubDate>
</item>
<item>
<title>GitHub开源Campfire机器人Hubot</title>
<link>http://oss.org.cn/html/48/n-62348.html</link>
<text>														　　今天，著名的代码存储与分享库 GitHub 宣布重写 Campfire 机器人 Hubot 代码并将其开源。　　许多希望自动化日常工作的开发者可以考虑使用并重新开发这款机器人。另外你还可以免费将自己的机器人 Hubot 托管在 Heroku 上。Hubot 代码可以用 CoffeeScript 或者 Javascript 编写。　　以下是一些代码案例，想要查看更多的可以点击此处。				</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-10-29 22:37:15</pubDate>
</item>
<item>
<title>Redis zipmap内存布局分析</title>
<link>http://oss.org.cn/html/47/n-62347.html</link>
<text>														　　Redis 被称为 key/value 应用中的瑞士军刀，除了其丰富的数据结构支持，更重要的是高效的内存使用，分析源码可以发现作者使用每一个 byte 都精打细算。在 hashtable 实现中，Redis 引入了 zipmap 数据结构，保证在 hashtable 刚创建以及元素较少时，用更少的内存来存储，同时对查询的效率也不会受太大的影响。下面就以源码和例子结合的方式来分析一下 zipmap 的内存布局。　　先来看一下 zipmap 提供的和存储相关的3个 API：　　zipmapNew：创建一个 zipmap 字符串。zipmap 创建时只有2个字节，后面会随着 set 和 delete 操作动态扩展和收缩。　　zipmapSet： 加入新的 key/value 或者修改 zipmap 中已有 key 对应的 value。　　zipmapDel：从 zipmap 中删除 key/value。　　下面给出一段伪代码并分析其内存布局的变化，如下图：　　&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;zipmapNew ();&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　&amp;nbsp;&amp;nbsp; &amp;nbsp;zipmapSet (key1,value1);　　&amp;nbsp;&amp;nbsp; &amp;nbsp;zipmapSet (key2,value2);&amp;nbsp; 　　&amp;nbsp;&amp;nbsp; &amp;nbsp;zipmapSet (key1,value3);　　&amp;nbsp;&amp;nbsp; &amp;nbsp;zipmapDel (key2);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 　　&amp;nbsp;&amp;nbsp; &amp;nbsp;zipmapSet (key1,value4);　　1. zipmapNew ();　　创建一个 zipmap 结构体，包含两个字节，第一个字节(zmlen)是长度为1个字节的无符号整数，用来保存 zipmap 当前元素个数（而非字符串长度）。当 zipmap 的元素个数大于等于254时，zmlen 将不再起作用，zipmap 需要遍历整个字符串来获取当前元素个数。最后一个字节为255，表示 zipmap 的结束。　　2. zipmapSet (key1, value1)　　一个元素（key/value）在 zipmap 中有5部分组成: &amp;lt;len&amp;gt;&amp;lt;key&amp;gt;&amp;lt;len&amp;gt;&amp;lt;free&amp;gt;&amp;lt;value&amp;gt;。　　&amp;lt;len&amp;gt;表示紧跟其后的 string（key 或者 value）的长度。如果 string 的长度小于254（这里代码和注释不统一，注释是253，但代码是254，以代码为准），&amp;lt;len&amp;gt;用一个字节就可以表示（254和255有特殊含义），如果 string 的长度大于等于254，&amp;lt;len&amp;gt;需要5个字节来表示，第一个字节设置为254，紧跟其后的4个字节通过编码（按主机字节序）来表示&amp;lt;len&amp;gt;的值。zipmapEncodeLength 和 zipmapDecodeLength 就是用来对&amp;lt;len&amp;gt;进行编解码的。&amp;lt;key&amp;gt;和&amp;lt;value&amp;gt;是 char 型 string，&amp;lt;free&amp;gt;在第6步进行说明。　　3. zipmapSet (key2, value2)　　调用 zipmapSet 加入新的 key/value 时，zipmap 将根据 key2/value2的长度调用 zipmapResize 扩展空间，并将 key2/value2插入到新分配的空间。同时将 zipmap 元素的个数加1（如果&amp;lt;zmlen&amp;gt;小于254）。　　4. zipmapSet (key1,value3)&amp;nbsp;　　调用 zipmapSet 对已有的 key 修改其 value，且新的 value 值大于现有 value 占用的空间时（加 free 的空间），zipmap 将再次调用 zipmapResize 扩展空间，并调用 memmove 将 key1/vaule1之后的字符串向后顺移。这里只调用一次 memmove，不会对性能有太大影响。　　5. zipmapDel (key2)　　调用 zipmapDel 删除 key2/value2时，zipmap 将把 key2/value2之后的字符串前移，并调用 zipmapResize 收缩占用的内存空间。同时将 zipmap 元素个数减1。　　6. zipmapSet (key1, value4)&amp;nbsp;　　调用 zipmapSet 对已有的 key1 修改其 value，且新的 value 值小于现有 value 占用的空间时，zipmap 不会马上去调用 zipmapResize 做内存空间收缩，而是将空闲字节数存入 free 中，用于后面对这个 key 再次修改 value 时，避免调用 zipmapResize（要根据新 value 的长度而定）。当然 free 的空间也不能太多，否则会造出空间的浪费。zipmap 在 free 字节数大于等于 ZIPMAP_VALUE_MAX_FREE（代码中定义为4）时，就对 free 的空间进行收缩。　　以上就是 zipmap 内存布局和扩展收缩的过程，你可能会问 zipmapGet 岂不是O(n)的吗？没错，但因为 key 和 value 都是确定长度的字符串，所以这个n是 zipmap 中元素的个数，而不是 zipmap 整个串的长度。只要在使用 zipmap 时保证元素个数不是很多，就可以在时间复杂度和空间复杂度两方面找到很好的平衡点。redis.conf 中默认配置 hash-max-zipmap-entries 为512。				</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 22:32:02</pubDate>
</item>
<item>
<title>GitHub们如何运作：时间并不决定一切</title>
<link>http://oss.org.cn/html/46/n-62346.html</link>
<text>				
					
					　　英文原文：How GitHub Works: Hours are Bullshit
　　导读：Github 公司的职员 Zach Holman 写了一篇关于“GitHub 如何运作管理”的文章，文章分三部分，这是第一部分：时间并不决定一切。
　　弗雷德里克·温斯洛·泰罗在1911年写了一篇有关管理和效率的惊世之作：《科学管理原理》。他是用科学方法阐述工业生产中最优效率的第一人。时间就是金钱。效率越高越好，时间越多越好。
　　“时间决定一切”不适用于我们
　　在很多行业中，时间是评判效率的准则，但不是我们的标准。在创业公司工作是完全不同的。你不可能花太多时间来解决一个问题。编程是一件需要创造力的事情，你需要在最佳状态才能编出高质量的代码。
　　想想上次你消沉或愤怒时候，你的效率如何？再想想上一次你真正高效的时候吧，代码好像从你的指尖飞出来的，你编码不仅速度快，代码的质量也高。在状态好的时候编码远远超过机械式的敲键盘。
　　我们希望雇员们更多的处于最佳状态，但规定上班时间会影响他们进入这种状态。如果强迫我早上九点钟上班，我将不会达到最佳状态。但 GitHub 一半的同事在早上工作都是最高效的。
　　如果创造一个更随意的工作时间，程序员会更积极工作，最终会促进程序员工作更久，更加高效。他们甚至会周末工作，晚上工作，因为他们感觉在做的事并不是别人要他们做的工作。
　　在 GitHub 的一天
　　每个在 GitHub 工作的人的时间安排都是不一样的。我没有平均计算过每一天的时间，但大致是这样的：
早上10点起床，查看 Campfire 日志，处理过夜支持请求坐巴士上班，在十二点或一点钟左右吃饭从下午一点开始工作，直到下午六点或晚九点下班回家工作或休息到凌晨两点钟。
　　我们有同事早上七点来到办公室(简直是疯子)，也有人下午三点来。有一些同事在家里工作更有效率，如果你不喜欢来办公室，你不需要每天都来(尽管大部分同事每天都来)。
　　为什么我们的每一天都如此“松散”？这是因为：1. 我们可以随时随地用聊天室来交流，2. 我们想创造一个让所有人都高效的环境。没有一个工作时间是适合每个人的，所以我们没有强制工作时间。
　　强制工作时间
　　我们现在有35个雇员，队伍在不断壮大。上班时间灵活随意，对我们的团队来说运作的非常好。但是经理们喜欢规定时间是有原因的：这样做可以给他们一个错觉，工作时间的长短可以转化为评判表现的标准。
　　经理们如果不看雇员们的工作时间，就得看他们其他方面的表现。他们代码的质量如何？他们修复了错误吗？他们在专心工作吗？更大的灵活性是否让他们更消极？
　　确实很难将以上这些评判标准进行量化。但是程序员的价值远比一天工作十小时要高。如果你认为时间决定一切的话，那么程序员在乎的将只是时间，而不是代码的质量。
　　原文：How GitHub Works: Hours are Bullshit
				</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 22:28:00</pubDate>
</item>
<item>
<title>SupeSite资讯首页如何显示一级分类区块的所有子分类文章</title>
<link>http://oss.org.cn/html/45/n-62345.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
			SupeSite 7.0是康盛创想(Comsenz)公司于2009年3月推出的一款社区CMS产品，作为Comsenz旗下的社区产品SupeSite 7.0 全面支持对 Discuz!、UCenter Home 的聚合功能。对于那些已经安装使用 Discuz! 和 UCenter Home 的站长来说，通过 SupeSite 7.0 可以快速搭建一个社区门户。下面笔者就详细的介绍下在SupeSite7.0资讯首页如何显示子分类信息。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 默认的 SupeSite 资讯首页的各个分类模块显示的都是一级分类下的资讯信息，并不调用其子分类信息，但是有不少站长一级分类下没有文章，想读取子分类的信息到资讯首页显示，其实系统是支持的，只需要到后台设置一下就可以了，具体方法请看后面的介绍。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 首先，我们看一下设置之前的演示，比如“科技世界”这个分类，我们演示其扩展读取子分类“计算机”，后台分类如下图所示：　		　　图 1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 前台设置前资讯首页“科技世界”模块文章显示如下图所示：　		　　图 2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子分类“计算机”下的文章如下图所示：　　		　　图 3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 进入 SupeSite 7.0 后台 =&amp;gt; 信息管理 =&amp;gt; 资讯分类，点击“科技世界”后面的“编辑”：　		　　图 4&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在进入的界面找到“扩展读取分类设置”，勾选“计算机”子分类，然后“提交保存”即可。　　		　　图 5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 该设置功能介绍：通过“扩展读取分类设置”，您可以设置当前分类下面同时也读取其他分类的信息资源。默认只读取当前分类信息资源。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 现在我们返回到资讯首页看一下设置后的效果：绿色为一级分类“科技世界”下的文章、“蓝色”为子分类“计算机”下的文章。　		　　图 6</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 13:14:41</pubDate>
</item>
<item>
<title>如何在一级页面的一个区块中单独显示子分类信息</title>
<link>http://oss.org.cn/html/44/n-62344.html</link>
<text>问题分析：
很多用户咨询，如何在日志、资讯等页面显示子分类的信息呢？
解决方法：
打开 templates\*\**_header.html.php （注：* 是指 templates 目录下的您使用的模板的目录，** 是指各个频道的名称，如 news_header.html.php）
找到 isroot/1/&amp;nbsp; 删除掉即可。
例如：打开 news_header.html.php 文件，找到
	
	

		CODE: [COPY]&amp;lt;!--{block&amp;nbsp;name=&quot;category&quot;&amp;nbsp;parameter=&quot;type/news/isroot/1/ischannel/2/order/c.displayorder/limit/0,100/cachetime/10800/cachename/category/tpl/data&quot;}--&amp;gt;&amp;nbsp;

	
修改为：
	
	

		CODE: [COPY]&amp;lt;!--{block&amp;nbsp;name=&quot;category&quot;&amp;nbsp;parameter=&quot;type/news/ischannel/2/order/c.displayorder/limit/0,100/cachetime/10800/cachename/category/tpl/data&quot;}--&amp;gt;&amp;nbsp;

	
注意：如果您的子分类过多可能会导致页面变乱。所以在修改文件之前，请一定备份好源文件。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-20 13:12:09</pubDate>
</item>
<item>
<title>6个人让1200万人Instagram了世界</title>
<link>http://oss.org.cn/html/00/n-62300.html</link>
<text>		　　“简单，灵感，他们很 High”　　6个人让1200万人 Instagram 了世界。（instagram理念的相关背景信息）　　一款互联网工具的“动词化”，通常意味着它成为一个被引爆的流行—比如 Digg、Google 和 Twitter。现在最时髦的口号变成了“Let’s Instagram the world”。　　三个星期前，Instagram 创始人凯文·希斯特罗姆（Kevin Systrom）出现在 TechCrunch Disrupt 北京的论坛上。他分享的数字几乎颠覆了人们运营一家公司应具备的常识—这款仅在 iPhone 上可以使用的图片拍摄与分享工具，已在全球100多个国家和地区散布着超过1200万的用户，先后融资700万美元，团队成立刚满一年，迄今只有6个人，其中最后一个人是3个月前加入的。　　更多的故事隐藏在这些戏剧性的数字背后—那些热衷于借助这款程序把 iPhone 当成数码相机的拍照爱好者和分享者被称为“Instagrammer”：他们每天累计上传超过150万张照片，在50个国家结成了700多个 Instagram 社区，举办各种 Instagram 拍照分享的主题聚会—“InstaMeet”。现在，全球至少有2500个围绕着 Instagram 的第三方扩展程序，形成了一个独立且庞大的开发者社区，恐怕其中不少开发团队的人员规模，都超过了仅有6名员工的 Instagram 本身。　　就像它提供给人们的拍照与分享体验那样，Instagram 的团队本身也是一个精致与简单的组合，他们在旧金山第二街和第三街之间的“南方公园”164号办公—这曾经是 Twitter 的办公室。Slide、Zack 和 MySpace，还有著名科技杂志《连线》也都分布在周围低矮的建筑里。办公区只有两张条形的书桌，6个人分坐在周围，墙上是一长条画满产品草图的白板。除了 Mac 电脑和苹果 Cinema Display 显示屏之外，还陈列着各种老式古旧的照相机—他们甚至在办公室里搭了一个微型的摄影棚。　　这让它更像一家创意而并非技术公司。“我们一直努力招聘高质量的工程师，”凯文·希斯特罗姆对《第一财经周刊》说，“但你知道对我们来说，招人是一件很挑剔的事。”最近，他从自己的碎纸机里迸发了一个灵感—邀请挑战者写一个脚本，输出一幅被他的碎纸机粉碎的照片重拍之前的图像，它需要自动检测照片中每条碎片丝的宽度并把它复原。如果方案足够漂亮，将获得一次面试 Instagram 的机会。　　过去的9个月，凯文只招聘了一名合格的工程师和一名 Instagram 的狂热爱好者，负责日益庞大和复杂的社区关系—杰西卡·佐尔曼（Jessica Zollman）在3个月前成为 Instagram 的第6名员工。她也是 Instagram 的第一位女性成员。“在我还有一份正经工作的时候几乎就已经全扑在 Instagram 上了。”杰西卡对《第一财经周刊》说。她修习过新闻、文学和音乐等好几个专业，供职过一系列创业公司。作为 Instagram 的最早期用户，在通过不断拍摄和分享照片获得大量关注者，并志愿协助 Instagram 维系各种社区沟通相当长一段时间后，她如愿以偿成为其中一员。　　这个团队一直在避免任何麻烦和复杂的事。这也许与凯文的经历相关—在斯坦福大学科学与工程管理专业学习的时候，凯文曾在一家名为 Odeo 的公司实习了几个月，那是一家视频播放服务提供商，正与苹果等竞争对手进行着令人绝望的博弈。他当时的几个同事杰克·多尔西（Jack Dorsey）、比兹·斯通（Biz Stone）和伊万·威廉姆斯（Evan Williams）试图推翻以前的所有想法创造一个新的产品改变这一切。尽管凯文很快就回斯坦福大学继续学习了，但那几个家伙后来独立出来创造了一个简单易用的工具—Twitter。　　“分享是我从 Twitter 学到重要的东西，”凯文对《第一财经周刊》说。他回忆着在 Odeo 工作的经历，“他们不断强调让一切尽可能保持简单。”　　其实在创办 Instagram 的过程中，凯文几乎复制了 Twitter 诞生的经历。他一开始想做一个基于 HTML5 的网页程序应用，包含有地理位置签到、签到计划、好友互动、上传照片甚至游戏元素。但最后他和另一位创始人迈克·克里格（Mike Krieger）终于觉得这太复杂了。“我们都很喜欢摄影，觉得移动摄影的领域需要有个平台来和别人分享，并且我们认为移动摄影可以比过去通常的那种做法更好玩，你可以很快地拍好一张很好的图片。”凯文说。　　这让他们砍掉了这款产品原型上绝大部分的功能，只留下了照片拍摄、分享和评论，并把 Burbn 改成一个更像是照相机的名字“Instagram”—这总共花了他们8个多月的时间。而当年 Twitter 从 Odeo 逐渐衍变、砍掉各种复杂元素，并最后做出把字数限制在140个字符以内的产品模型并推向市场，花了足足两年，达到1000万用户花了780天。　　别把 Instagram 想得一帆风顺，在凯文向人们展示产品的第一天—他们只有一台计算机—演示机器宕机了。“我们浪费了半天的时间，但是后来我们进行了展示，人们都非常喜欢。”在 TechCrunch Disrupt 北京论坛上，凯文回忆说。其他的难点还包括决定接下来要做什么产品，各种不同的方向摆在他们面前。“我们的目标、任务是要作为编辑者，我们要给人们提供最佳的体验，让人们去移动分享自己的生命的精彩时刻。不管这个方向在哪里，我们都希望看到自己的发展。在每一征程的过程当中，我们都要确保做正确的事情，而不是做很多事情。”　　幸运的是，Instagram 的成长曲线比 Twitter 漂亮得多。2010年10月6日，在上线的第一天 Instagram 获得了2.5万名下载用户。来自世界各地的照片陆续出现在 Instagram 的界面上，其中60%以上来自美国，其它来自海外，其中日本用户在海外用户中占比最重。现在，日本用户已占25%的比例。　　“我想这可能是因为他们更频繁地使用 Twitter。”凯文说。　　这是个很有趣的现象。Instagram 具备极强烈的 Twitter 属性—甚至它就是一款影像版的 Twitter。它有五个简单的按钮，点击“分享”进入拍照界面，切换镜头并按下快门，接着选择最合适的滤镜效果，写一句最简单的注释，然后分享呈现在 Instagram 的界面上，任何一个追踪你的“粉丝”都能看得到它，并且转发分享给其它人，或者进行评论。当然，你也可以选择把它分享在 Facebook 和 Twitter 上，或添加你的地理位置信息。　　滤镜和图片质量就成了 Instagram 这款产品的核心，它的重要性相当于 Twitter 140 个字符的设置，但却复杂得多。对大部分人来说，图像是比文字更有穿透力的语言—它最大限度地超越了时间、地理、文字、种族和肤色，让人们变得更容易交流和沟通。Twitter 的创始人杰克·多尔西最近曾说，Twitter 创造了一种让世界变得更小、让人们产生面对面直接沟通体验的方式—其实以图像为语言的 Instagram 更容易实现这一点。　　这就要求 Instagram 必须在图片质量上下工夫，这恐怕是比招聘工程师更重要的事，也是这个团队似乎更青睐摄影与美学爱好者的原因。从它发布的初始版本开始，丰富且很酷的效果滤镜就成了俘虏摄影美学爱好者的利器。　　随着用户的增加和粉丝社群的出现，开发滤镜变成了一项持续长久的工作—它开始借助 Instagram 社区的设计灵感。保罗·雷恩（Paul Ryan）是一位加利福利亚州小有名气的摄影师，在 Instagram 出现后迅速地成了它的拥趸。“他经常就会突然写邮件给我们跟我们说他希望实现什么样的照片效果，不同的颜色，不同的光，泡沫和薄雾……”Instagram 负责合作伙伴关系的乔什·里德尔（Josh Riedel）对《第一财经周刊》说。在9月发布的 Instagram 2.0 版本中，保罗·雷恩与凯文一起讨论了 Amaro、Rise、Hudson 和 Valencia4 个滤镜的创意。最后，保罗帮助设计了 Amaro，凯文自己设计了其它3个。他们决定接下来设计出更多的滤镜。　　这是一项美学至上的工作。这让 Instagram 的气质迥异于其它很多旧金山和湾区的科技公司。单从这些滤镜的名字中就可以看出来—Amaro、Rise、Valencia、Toaster 和 Sutro……每个词都有各自的韵味，以至于难以精确地翻译成另一种语言。而这些滤镜的名字很大一部分来自凯文的“微醺体验”—他有时会喝醉，这时一系列滤镜的光影效果会浮现在他的眼前，然后一些诗性的词就会随机地蹦到他的大脑里。在他清醒之后，它们就变成了滤镜的名字。当然另一些滤镜命名会出于更“个人化”的原因—比如 Walden，那是他从小长大的地方。　　但技术仍决定最终的体验—Instagram 2.0 版本完全重写了滤镜的代码。这让它的滤镜在设计之外创造了新的体验。它的速度变得尽可能快，之前当你在一张照片上使用滤镜效果时，你必须等待几秒钟—即便 iPhone 4 也不例外。现在 Instagram 2.0 几乎可以在一瞬间内就完成这个步骤，人们就能够实时使用滤镜了。Instagram 宣称它的滤镜比过去快了200倍。　　“我们要把产品做得适合很多人用，过去 Instagram 的困难是产品没法支撑太多用户使用，速度跟不上，现在这一点得到了改进。”凯文说。　　这些都让 Instagram 开始成为一个独立的平台。几个月前，Instagram 开始悄悄添加了更多的社交功能—在最初的产品界面上，用户只需要一个 ID，几乎不能添加更多的个性化信息；但现在 Instagram 完善了用户的个人界面，用户可以在上面添加更多的个人信息，包括性别、年龄、地理位置和兴趣爱好等。　　“Instagram 首先是一个照片拍摄和分享的工具，然后是一个社交网络。”凯文说。他强调 Instagram 的社交属性。而且，正因为它是一个有着 Twitter 属性、把图像当作最重要沟通语言的工具，它似乎拥有一个属于自己的社交图谱。即便有不少人仍然习惯把 Instagram 上的照片分享到 Facebook 和 Twitter 上，但即便你只选择把照片放在 Instagram 上面，你仍然有更多受人关注和追捧的机会。　　“人们把 Instagram 照片分享到 Facebook 和放在 Instagram 上面的目的是不一样的，分享到 Facebook 更多的是在向朋友们分享自己的生活状态，”负责社区关系的 Instagram 员工杰西卡·佐尔曼对《第一财经周刊》说，“但如果选择把 Instagram 本身当作分享平台，你的照片会经常被一些陌生人发现，受到他们的欢迎，在这种情况下，人们更在意的是照片本身的质量和它传递的信息。”　　它证明了 Instagram 作为一款独立社交产品的地位。或者说，它用图像作为语言创造了一个独立的社交图谱（social graph）。“你可以在上面看到很多很多人的照片，这是挺不可思议的。你可以关注一些你从来没见过的人，我觉得用 Instagram 的一个方便之处在于，你会发现有很多很有意思的人也在用它”。　　但 Instagram 仍然在尽量让自己变得不那么复杂。“在看到我们增添了一些社交功能的同时，也应该看到我们同时在删减很多不必要的功能，包括一些旧的并不太受欢迎的滤镜，我们一直在确保它是一款操作起来很简单的产品。”乔什·里德尔说。这也包括 Android 版本的开发—鉴于大多数应用从苹果 iOS 迁移到 Android 平台上都会造成用户体验的灾难，Instagram 的态度一直谨慎。“我们不想导致灾难。”乔什说。　　即便 Instagram 本身极力保持简单的特性，也不用担心它的体验过于单一。很多事已经完全可以交给围绕 Instagram 的第三方开发者来完成。　　今年1月，Instagram 就向第三方开发者开放了应用程序接口（API），允许他们围绕 Instagram 本身开发各种扩展应用：比如 InstaRader 是一款基于地理位置查看 Instagram 照片的工具，可以帮你找到方圆5英里内用 Instagram 分享的照片，并在地图上标记出来；InstARgam 是一款增强现实应用（Augmented Reality），根据用户的地理位置自动从 Instagram 社区搜索出相关照片并推送出来。而 InstaDesk 可以把 Instagram 的体验迁移到 Mac 电脑的桌面上—即便你没有 iPhone 也能获得 Instagram 的体验。　　不同于 Twitter 在向第三方开放问题上的左右摇摆，Instagram 似乎更倾向于 Facebook 的彻底开放路线，这让它在一年间用户从400万涨到1200万的过程中也形成了一个更庞大的开发者生态系统。“我从 Facebook 上学到的是：一个平台可以在保护用户隐私，让用户感觉更安全和舒服的同时实现开放。”凯文说。当然，这些第三方扩展工具也为 Instagram 带来了更多的流量。　　但并非所有的图片分享工具都赞同开放的社交图谱与路线。另一家图片拍摄与分享服务商 Path 坚持“私密分享”的另一种选择。它仅限于在固定的好友图谱中分享自己的照片，且上限定在50人—在 Path 的界面上，你可以按照时间线用图像记录自己的地点与生活细节。目前 Path 的用户已达到100万人。　　“图片分享工具的流行是因为它们奉承着用户自我的虚荣心，而虚荣心来自他们频繁地发布高质量的照片，然后看着它们被更多地曝光和赞美。”位于法国巴黎的图片分享工具创业公司 Picuous 创始人兼 CEO 马丁·潘尼埃（Martin Pannier）对《第一财经周刊》说。“这就是为什么 Instagram 比 Path 流行得多的原因，但这种比较本身就是不公平的。”　　看上去，Instagram 决定像一家真正的社交网站那样去赚钱了。凯文透露，Instagram 可以考虑在一定规模的基础上创建一个新的娱乐平台和网络，吸引人们不断地购买各种应用。而他也对《第一财经周刊》表示，广告仍是一个重要的盈利方式。“一些很知名的品牌愿意在 Instagram 上做广告，我们需要更好的技术去完善这些业务。”而今年1月，他还在考虑是不是把出售滤镜当作赚钱的门道。　　“当然了，人人都想建立百年的公司。我们在最开始的几年要在巨人那里找到一席之地，现在已经找到了一个很好的市场，很好的位置，看看接下来的几年当中怎么样能够使自己变得更加强大。”凯文在接受中国科技博客 Technode 采访时说。　　更重要的是，Instagram 似乎可以告诉更多创业者的是：专注在一个领域，保持轻小的体量去创造优美的体验，可能会发现一个完全不同的世界—哪怕你的同类是 Twitter 和 Facebook。　　This is Instagram　　2010年10月　　登陆 App store，首批用户2.5万名。　　2010年12月　　注册用户超过100万。用户大约每人上传3张图片，已分享数百万张图片；　　与《国家地理》合作；　　科技博客 TechCrunch 评选2010年40个最佳 iPhone 应用，上线不到3个月的 Instagram 居首位；　　增加了推荐用户列表以及7种语言支持，首次增加两款滤镜。定位是“更多地依靠算法，不用让用户做过多选择”。　　2011年1月　　增加标签功能，品牌和公司进入平台，与 Charity: Water、Brisk Iced Tea 以及 NPR 等机构建立合作关系。　　开放实时 API，针对用户照片、标签、位置和地理四个元素。　　2011年2月　　首轮融资700万美元；　　用户量增长至200万，暂时只提供 iOS 版本下载。　　2011年3月　　每周新增13万用户，每周有220万用户上传360万张照片，平均每秒6张。　　2011年4月　　第三方网络客户端出现。提供网格、幻灯片和地图三种热门图片浏览模式。　　2011年5月　　发布新版本，新增个人简介，进一步与社交网络整合；　　用户数量达到425万，平均每秒有10个人上传图片；　　团队依然只有4人。　　2011年6月　　用户数量达到500万，分享照片数量突破1亿，每月新增用户数量达到62.5万。　　2011年7月　　用户数量突破700万，流行歌手 Justin Bieber 注册导致服务器压力陡增，一分钟内 Bieber 获得了50个关注者，234个 Like。但他并不是第一个使用 Instagram 的名人。　　2011年8月　　Instagram 宣布照片达到1.5亿张，日上传量1.3万张，每秒15张。　　2011年9月　　发布2.0版本，推出实时滤镜效果，新增4个滤镜。　　用户数量超过1000万　　2011年11月　　用户数量超过1200万。应用下载量平均每秒一次。　　正在与新浪微博等平台接洽，以更好的针对中国市场优化应用。　　Q: Camera360 to Instagram　　我们曾经报道过 Camera360 这个创业公司，他们依靠众多贴近中国用户的滤镜效果在 App Store 里的排名曾经一度超过 Instagram。通过《第一财经周刊》，Camera360创始人徐灏问了 Kevin Systrom 创业问题，我们可以看看两个同业者之间的对话。　　X: 现在的 Instagram 和最开始有什么不一样？　　S: 其实和过去还蛮像的，只是我们做了很多改进。最新的版本在滤镜上做了很大的改进，我们要把产品做得适合很多很多人用，过去 Instagram 的困难是产品没法支撑太多用户使用，速度跟不上，现在我们在改进。　　X: 创立过程中有什么好玩的事情吗？　　S: 有很多好玩的，比如一开始我们有6个人，我们不在同一个地方，说不同的语言，我们也互相传自己 Instagram 的照片，因为彼此也听不懂对方的语言而且时间也不一样。　　X: 中国有很多模仿 Instagram 的应用，你们怎么看？　　S: 即使在美国也有很多公司模仿 Instagram，我们只是不断的要求自己把产品做到最好，能领先于这些公司。你知道这些事情并不简单，他们都在添加功能，我们也要尽早推出更丰富的功能，一些普通的滤镜是可以模仿的，但是有些比较有难度的并不是那么容易被抄袭。　　Instagram 最独特的地方是网络，你可以在上面看到很多很多人的照片，这是挺不可思议的。你可以关注一些你从来没见过的人，我觉得 Instagram 易用的地方就是有很多很有意思的人也在用。　　X: 但你们合作的平台像 Facebook 和 Twitter 在中国都不能用，和很多中国的社交平台也没有打通。　　S: 是的，对中国我们打算跟新浪微博合作。过去没有做是因为我们不知道有新浪微博这个产品，现在我们希望 Instagram 能在全球范围推广，并且很快你就会打开手机看到 Instagram 和你最喜欢的社交平台合作了。Instagram理念形成的相关背景信息：instagram 的“不联网” Polaroid instagram 是近期窜红的 iPhone App 和图片分享社区。仅一周时间就积累了 10 万注册用户。但 InstaCamera 可不是新玩意，那东西以前叫“拍立得”。谁拿个 Polaroid 在手，立马文艺的牛比闪闪。数码时代， Polaroid 没落了。而近年手机拍照和移动互联网的兴起，又让他重获新生：虽然失去了”照片”这个实物，但是可以即拍即分享的精神没有改变。iPhoneography个人或者团队的能力有多少差距？ 1 倍， 2 倍，甚至 10 倍？而成功的创业公司和失败的创业公司的市值呢？远远超越这个比例。造成这种结果的原因之一是机遇：站上时代的潮头，郭敬明的摸高也超过姚明。iPhoneography 的说法发源于摄影圈。但是随着 iPhone 的普及，他今天更广泛的指大家用 iPhone 拍摄，编辑和上传分享的照片。只有极少数设备能做到即拍，即编辑，即分享。 iPhone 恰恰是其中之一。但是 iPhoneography 是个抽象的概念，小众玩玩还行，让普通人也接受？那就需要把他投射到大家都熟悉的具体形象上了。而 Polaroid 简直是个完美的代表。所以， instagram 的图标就是一款 Polaroid 。instagram　=　“拍立得”的表象　+　 iPhoneography 的潮流。 iPhone 在普通人之间的流行和无线网络接入的降价让 iPhoneography 渐渐脱离小众。拍摄，图片加工和图片管理的 App 不断大卖，早在释放 iPhoneography 概念的价值信号， instagram 的成功却姗姗来迟。 其实，他之前的创业者们也在不断试错（ Camera+ 做的已经很接近了），但是  instagram 自有其独到之处。不联网在  instagram 中上传一个图片，可以推instagram的“短网址”到 Twitter 。你的 Follower 点到 instagram 的网站，会看到一个奇妙图片展示页面。你点拍摄的人，没反应。看不到 BIO 。点照片数字，没反应。看不到其他照片。点 Follower ，没反应。看不到其他人！互联网之所以叫互联网，是因为网页互相连接成网。而  Instagr.am 上，除了最下面一些没人看的 About ，版权等东西，就只有一个 App 的下载链接。instagram 利用网络的方式是颠覆性的。网页仅用于展示图片，别的什么都没做。于是，所有的网页都被分割了。Instagr.am 是个罕见的，如假包换的“不联网”。App 中心这个“不联”是最令我最赞叹的地方。也许 instagram 的网站会慢慢增加功能，但是最初的 Release 已经说明他们的重点在 App 而非别的东西上。用户数量的爆发时间则证明他们选择的正确。仔细考虑 iPhoneography 的特点，他的确更适合以 App 为中心：拍摄需要 App 。 图片编辑浏览器也搞不定。上传也一样。既然这么多功能已经置于 App ，关系和浏览放在其中也很自然。唯有“展示”，“分享”和“传播”是 instagram App 无法独自完成的。所以要有个网页展示图片，有个短地址用于分享，支持 Twitter 和 Facebook 用来传播。其他的？没了。Jobs 曾经说过：创新，就是对一切说不，除了那些真正必要的。在这个一不小心就为了网络而网络的年代， instagram 做为一个网络服务，对“互联”说不，正是这句话的最佳实践。 网络，仅仅是达到目的工具之一。简单的跨平台的确很酷，但并非总是正确答案。（ Gtalk 不提供独立的程序真的明智？）数据，数据！instagram 同样展示了一个创业公司应有的贪婪。不是对金钱（ instagram 是免费的），而是对数据：你不仅只能将图片上传给 Instagr.am ，而且，你要在 instagram 内部重新拓展关系。我在强调过数据的重要性。比起照片，个人注册数据和关系更加宝贵。instagram 之前的 iPhoneography App 缺乏对数据的渴望：太多很多优秀的 App 把照片上传到别人的服务器上去。或者，不够贪婪： Camera+ 收集了照片，却没有有效的收集关系。Flickrinstagram 之前的 App 那么做不是没有道理。 毕竟网络图片社区， Flickr 是不能忽视的存在。但另一方面，成功的大公司似乎真有自己的基因或者宿命。 苹果做不好互联网， Google 做不好社交网络， Twitter 的搜索也烂得令人发指。Flickr 的 iPhone App 在图片表现上美奂美伦，可连分享到 Twitter 都必须要去网站上设置一下才行。上传图片需要漫长的等待（ instagram  在你编辑图片的时候，在背后偷偷上传 ），就更别提图像编辑功能了。比较 Flickr App ， instagram 处在另一个时代：拍摄时提供闪光控制。有图片编辑功能，提供大量的滤镜。体贴的上传。轻松分享到 Twitter 和 Facebook 这些流行的网络社区。Flickr App 仅仅是 PC 时代图片分享社区的手机访问窗口而已。  instagram 则是整合网络，手机硬件和 App 的优点，为移动互联网的新潮流量身定制的完整服务。最后的话instagram 的成功必然招来复制者。我最看好 Camera+ 的回归。那个队伍在网络的理解上也许不及 instagram ，但是在摄影和用户体验上更胜一筹(是优点，也是弱点，他们更倾向于通过 App 卖钱)。 当然 Flickr 的后发制人也不可小视。不过，如果对手们慢一点， instagram 利用手中的数据，可能已经能建立起有效的壁垒了。Flickr 曾让多少创业者望而却步？而 instagram 的崛起告诉我们，互联网犹如股市：没有消逝就不再来机会，有的只是一味向后看的投资者。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-19 22:44:09</pubDate>
</item>
<item>
<title>Adobe将Flash应用框架Flex捐赠给Apache基金会</title>
<link>http://oss.org.cn/html/99/n-62299.html</link>
<text>　　11月17日消息：继宣布取消移动设备的Flash更新后，Adobe再出惊人之举。据报道，Adobe将自家基于Flash的Flex框架代码提交给Apache软件基金会（ASF），作为一个独立的管理项目。　　虽然该公司承诺继续支持其用于Flex，以及连同其底层的Flash技术，但Adobe还建议，在未来的网络应用程序开发人员将使用HTML5，而不是Flash。　　Adobe官方表示：“长期以来，我们都相信，HTML5将为企业应用开发提供最好的技术；我们也知道，目前，Flex的客户端对桌面应用程序配置文件相关的大型项目帮助更大。”　　Flex是Adobe公司推出的一个SDK（软件开发工具包），基于Adobe Flash，其中包括一个编译器和库，可用于构建跨平台的富互联网应用（RIA）。2008年，该公司将Flex开源。　　目前ASF将投票决定是否接收Adobe Flex，因ASF本身尚未决定是否通过Adobe的提案，以管理技术的发展。但从形式来看，Flex成为Apache的一个项目希望很大。2010年，谷歌将Wave作为一个潜在的项目提交给ASF，仅等待了一个月，便被批准成立了新项目。　　本月早些时候，Adobe公司宣布，它将不再开发新的移动版Flash，而注重对HTML5工具的开发。HTML5标准仍在发展，将提供与Flash相同的多媒体功能，并不会要求安装独立插件。 据《观察家报》猜测，Adobe撤掉移动Flash版，是对HTML5支持的第一步。维护跨平台的Flash，成本日益增多是Adobe面临一个艰巨的任务，尤其是更多的非Windows系统设备出现在移动市场。而HTML5可以跨所有支持标准的移动浏览器，对每个底层硬件平台无具体要求，可大大节约维护成本。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 另外，Adobe 官方博客宣布了该公司的战略转型计划，称将转型到云端，到移动触控设备以及社交网络。Adobe 表示，它将重心投入在数字媒体（Digital Media）和数字营销（Digital 
Marketing），前者是关于数字内容创建和服务，后者是关于数字时代如何管理、测量和优化数字体验 。Adobe 承诺会继续开发桌面版 
Flash Player，但不会再开发移动版 Flash，但将仍然向现有的移动版提供安全更新和重要 bug 修正。Adobe Flex 交给 
Apache 软件基金会管理后，它旗下的 Flex SDK 工程师将会向这个新 Apache 项目继续捐赠代码。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-19 21:36:35</pubDate>
</item>
<item>
<title>Kindle Fire最令人失望的地方在哪里</title>
<link>http://oss.org.cn/html/98/n-62298.html</link>
<text>　　要问 KindleFire 什么地方最令人失望，答案莫过于亚马逊的 Silk 浏览器了。　　Jeff Bezos 最初在介绍 Kindle Fire 时，他在介绍 Silk 浏览器上花了很多时间，他也一再保证这款浏览器使用起来是非常流畅、非常快的。然而事实并非如此。用过 Silk 的人应该发现这款浏览器是很慢的，感觉就像是一个蹩脚的 Android 浏览器，而非像 Bezos 之前介绍的那样为 Kindle Fire 专门定制的快速浏览器。　　这对 Kindle Fire 来说是一个非常不好的消息，因为 Fire 的主要功能就是浏览网页。Fire 用于读电子书也可以，但价位只是 Fire 一半的 Kindle 电子书会是更好的选择；Fire 也可以用于看流视频，但仅限于 Wifi，因此一般只有在家里才行，这这种情况下，在电脑或电视上看视频比在 Fire 上看更舒服，因为后者屏幕更大；Fire 上应用很多，但和 iPad 还有不小的差距。因此 Fire 的主要优势功能应该是用于浏览网页。　　不过，这毕竟是 Silk 的第一版，也许以后会慢慢改进的。如果 Silk 浏览器一直这样不给力的话，这无疑会使 Fire 陷入十分尴尬的境地。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-19 21:28:15</pubDate>
</item>
<item>
<title>为CentOS 6安装桌面环境</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62254</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-18 21:44:11</pubDate>
</item>
<item>
<title>centos 6安装vncserver</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62253</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-18 21:50:11</pubDate>
</item>
<item>
<title>CentOS 6 安装配置教程【完整版】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62252</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-18 23:21:11</pubDate>
</item>
<item>
<title>Drupal 7国际化和多语言网站的建立</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62251</link>
<text>在Drupal 7之前的版本中，国际化是通过一系列特定的模块组合来实现的，这些模块被统称为I18N（Internationalization）模块。当前正式发布的Drupal 6系列产品，就需要使用这一模块，其中的翻译和发布功能已经非常完善，无论是网页内容，还是菜单和导航界面，翻译过程中都没有什么问题。有了这些模块，就能建立多双语种，甚至多语种的Web站点。不同语种之间的可以自由切换。无论是内容的发布，还是管理，都非常容易。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-18 21:47:53</pubDate>
</item>
<item>
<title>康盛UCHome的url重写机制分析</title>
<link>http://oss.org.cn/html/50/n-62250.html</link>
<text>由于之前做过UCHome的二次开发项目，所以对这套程序还算比较了解的，今天就专门来说说UCHome的url重写机制。为了叙述方便，网址中的域名部分本文以www.atuxe.com为例。url重写也叫做url伪静态技术，一般都是把一个包含查询参数的url重写为一个看上去像是静态页面的地址，例如：原url:http ://www.atuxe.com/space.php?do=event&amp;amp;amp;id=2345重写后的url可以是如下几种形式 :http://www.atuxe.com/event/2345/
&amp;nbsp;
http://www.atuxe.com/event/2345.html
&amp;nbsp;
http://www.atuxe.com/e/2345/
&amp;nbsp;
……可以看到，重写后的url相对于原url看起来更整洁，这种通过url rewrite技术实现的地址伪静态是相对于页面真静态来说的，真静态是指页面生成了一个真实存在的html页面。例如http://www.example.com/event/2345.html如果是真静态，那么在网站下必有目录event,并且目录event下必存在一个2345.html的静态文件，而通过url rewrite技术实现的伪静态则不存在event目录。本文介绍基于Apache服务器的UCHome伪静态实现机制，详细读完本文，你将会对Apache服务器的url_rewrite机制和UCHome对url重写的处理机制有所了解，看完本文，你将可以把你使用UCHome搭建的网站地址重写成任何你想要的形式。以我看来，UCHome实现的伪静态机制主要可以分为三部分：服务器端的url地址映射规则，Apache下可以启用网站根目录下的.htaccess文件来配置;程序端接收url查询参数的处理规则；利用正则表达式将模板中的动态链接替换为静态链接的处理规则。&amp;nbsp;首先来看一下UCHome官方提供的默认的重写规则。网址根目录下的.htaccess文件：RewriteEngine On
RewriteRule ^/(space|network)\-(.+)\.html$  /$1.php?Rewrite=$2 [L]
RewriteRule ^/(space|network)\.html$ /$1.php [L]
RewriteRule ^/([0-9]+)$ /space.php?uid=$1 [L]RewriteRule关键词定义一条重写规则，RewriteRule的第一个参数为重写后url的形式，可用正则表达式匹配字符，第二个参数为映射到的原url地址形式，用以美元符号$开头的占位符来对应前一个参数中的正则表达式部分，例如：RewriteRule ^/(space|network)\-(.+)\.html$  /$1.php?Rewrite=$2 [L]上面的重写规则表示的url映射关系如下：space-{任意字符}.html -&amp;amp;gt; space.php?Rewrite={任意字符}
network-{任意字符}.html  -&amp;amp;gt; network.php?Rewrite={任意字符}我们知道,space.php是UCHome一个重要的程序入口，很多页面都是通过space.php去访问的，比如一个活动页面的地址可能是space.php?do=event&amp;amp;id=2345, 一个群组页面的地址可能是space.php?do=mtag&amp;amp;tagid=1234, 一篇用户日志的地址可能是space.php?uid=45&amp;amp;do=blog&amp;amp;id=778但是在重写规则中，怎么只有rewrite一个查询参数呢？让我们打开space.php一探究竟。原来在space.php这个入口程序里，有一块代码是专门处理rewrite这个查询参数的//处理rewrite
if($_SCONFIG['allowrewrite'] &amp;amp;amp;&amp;amp;amp; isset($_GET['rewrite'])) {
	$rws = explode('-', $_GET['rewrite']);
	if($rw_uid = intval($rws[0])) {
		$_GET['uid'] = $rw_uid;
	} else {
		$_GET['do'] = $rws[0];
	}
	if(isset($rws[1])) {
		$rw_count = count($rws);
		for ($rw_i=1; $rw_i为了说清楚网址里的rewrite这个查询字段到底包含些什么值，程序又是怎么处理成具体的查询参数的，我们还是先来看一下uchome默认实现的重写转换形式。以一篇用户日志的地址为例，原url和重写后的url如下：原url: http://www.atuxe.com/space.php?uid=45&amp;amp;amp;do=blog&amp;amp;amp;id=778
重写后url: http://www.atuxe.com/space-45-do-blog-id-778.html回到前面.htaccess文件里的重写规则，我们知道，重写地址【space-{任意字符}.html】被映射到了真实地址【space.php?Rewrite={任意字符}】。对应上面日志重写后的url，其映射情况如下,请注意看红色标注部分.重写后url:【http://www.atuxe.com/space-45-do-blog-id-778.html】映射到原url: 【http://www.atuxe.com/space.php?Rewrite=45-do-blog-id-778】也就是说，当用户访问重写后url【http://www.atuxe.com/space-45-do-blog-id-778.html】，实际上被映射到的地址是【http://www.atuxe.com/space.php?Rewrite=45-do-blog-id-778】,也就是Rewrite这个查询参数的值为【45-do-blog-id-778】space.php程序开头的那段处理rewrite的代码正是将rewrite这个查询段的值转换成程序可以直接识别的查询参数，也就是通过程序将只带一个参数的查询字段rewrite=45-do-blog-id-778转换为多个查询字段uid=45&amp;amp;do=blog&amp;amp;id=778. 这样，url【http://www.atuxe.com/space.php?Rewrite=45-do-blog-id-778】实际上被程序转换成了【http://www.atuxe.com/space.php?uid=45&amp;amp;do=blog&amp;amp;id=778】。这就是第二部分的处理，到这里，实际上已经完成了地址重写这一块内容，访问重写后的地址已经可以正确转向相应页面。第三步就是把页面里出现的链接也转换成重写后的链接。因为在UCHome的模板文件【/template/default/】中，链接是直接以动态形式写入的，如果不对模板作处理，那么输出的还是动态链接。UCHome为了方便对输出的页面内容进行控制，是先把页面内容输出到缓冲区，再用函数ob_get_contents()取得缓冲区的内容，然后对取出的内容进行处理再输出到浏览器的方法。这一部分的的处理代码放在公用函数库/source/function_common.php中，打开该文件，查找【function ob_out()】,看懂这个函数，你就明白为什么模板里的动态链接输出到页面时变成了静态链接了。//调整输出
function ob_out() {
	global $_SGLOBAL, $_SCONFIG, $_SC;
&amp;nbsp;
	$content = ob_get_contents();
&amp;nbsp;
	$preg_searchs = $preg_replaces = $str_searchs = $str_replaces = array();
&amp;nbsp;
	if($_SCONFIG['allowrewrite']) {
		$preg_searchs[] = &quot;/\&amp;lt;a&amp;gt;'; $str_replaces[] = ']]&amp;amp;gt;'; } if($preg_searchs) { $content = preg_replace($preg_searchs, $preg_replaces, $content); } if($str_searchs) { $content = trim(str_replace($str_searchs, $str_replaces, </text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-18 15:18:41</pubDate>
</item>
<item>
<title>解决 uchome 链接 /link.php?url= 问题</title>
<link>http://oss.org.cn/html/49/n-62249.html</link>
<text>在uchome中，默认所有的链接一律被转换为：http://www.×.net/link.php?url=http://www.×.com 格式，这样做有它一定的好处，但唯一让我不能理解的就是即便是本站域名链接也会被处理成上述的格式，也就是说我如果将空间左上角整个网站的logo链接直接改为网站域名，但最后出来的链接是上面看到的那种，以下是解决办法：
打开/source/function_common.php找到第1010行如下代码：
function iframe_url($url) {
&amp;nbsp;&amp;nbsp;  $url = rawurlencode($url);
return &quot;&amp;lt;a href=\&quot;link.php?url=http://$url\&quot;&quot;;
}
将其修改为：
function iframe_url($url) {
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  $oldurl = $url;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  $url = rawurlencode($url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  $pos = strpos($url,'mydomain.com'); //替换成你的域名
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  if($pos === false){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  return &quot;&amp;lt;a href=\&quot;link.php?url=http://$url\&quot;&quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  }else{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  return &quot;&amp;lt;a href=\&quot;http://$oldurl\&quot;&quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  }
}
或者改为：
function iframe_url($url) {
$arrurl = explode(&quot;mydomain.com&quot;,$url);//替换成你的域名
if (is_array($arrurl)&amp;amp;&amp;amp;count($arrurl)&amp;gt;0) {
&amp;nbsp;&amp;nbsp;  return &quot;&amp;lt;a href=\&quot;http://$url\&quot;&quot;;
} else {
&amp;nbsp;&amp;nbsp;  $url = rawurlencode($url);
&amp;nbsp;&amp;nbsp;  return &quot;&amp;lt;a href=\&quot;link.php?url=http://$url\&quot;&quot;;
}
}</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-18 14:34:19</pubDate>
</item>
<item>
<title>如何让UCHOME支持域名后加用户名访问个人空间</title>
<link>http://oss.org.cn/html/48/n-62248.html</link>
<text>以下修改针对UCHome V1.5
&amp;nbsp;
1.&amp;nbsp; 在 管理员后台=&amp;gt;站点设置 =&amp;gt; 开启 URL Rewrite2. 在 Apache 中开启 rewrite模块，并加入以下配置, 或者在网站根目录下将以下配置填写.htacess文件：UCHome虚拟主机的配置中增加如下代码
RewriteEngine On RewriteRule ^/(space|network)/-(.+)/.html$ /$1.php?rewrite=$2 [L] RewriteRule ^/(space|network)/.html$ /$1.php [L] RewriteRule ^/([0-9]+)$ /space.php?uid=$1 [L] RewriteRule ^/(/w+)$ /space.php?username=$1 [L] 重启apache3. 修改 source/function_common.php文件的space_domain函数将
&amp;nbsp;&amp;nbsp;if($_SCONFIG['allowrewrite']) {&amp;nbsp;&amp;nbsp;&amp;nbsp;$space['domainurl'] = getsiteurl().$space[uid];&amp;nbsp;&amp;nbsp;} else {&amp;nbsp;&amp;nbsp;&amp;nbsp;$space['domainurl'] = getsiteurl().&quot;?$space[uid]&quot;;&amp;nbsp;&amp;nbsp;}
改为：
&amp;nbsp;&amp;nbsp;if($_SCONFIG['allowrewrite']) {&amp;nbsp;&amp;nbsp;&amp;nbsp;$space['domainurl'] = getsiteurl().$space[username];&amp;nbsp;&amp;nbsp;} else {&amp;nbsp;&amp;nbsp;&amp;nbsp;$space['domainurl'] = getsiteurl().&quot;?$space[uid]&quot;;&amp;nbsp;&amp;nbsp;}</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-18 14:20:18</pubDate>
</item>
<item>
<title>调查报告：美国人为何使用社交媒体？</title>
<link>http://oss.org.cn/html/47/n-62247.html</link>
<text>调查显示，三分之二的成年网络用户使用Facebook, Twitter, MySpace 和LinkedIn等社会媒体平台。这些用户使用这些平台主要是为了能更好地和家人、朋友（新老朋友）联系，而其中近一半是为了和失去联系的老朋友取得联系。14%的用户主要为了和有共同兴趣爱好的人联系，9%的用户认为结交新朋友也同样重要，有5%的用户主要用来阅读公共人物的评论，而有3%的人主要用来找男女朋友。对不同年龄和族群的人们来说，社会媒体最有价值的地方分别是在哪里呢？更详细的内容可下载完整报告： Why_Americans_Use_Social_Media.pdf(765 KB)。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-18 11:10:03</pubDate>
</item>
<item>
<title>15款亚马逊Kindle Fire平板电脑必备应用(图)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62203</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-17 21:18:11</pubDate>
</item>
<item>
<title>亚马逊公布Kindle Fire源码 拆解照曝光</title>
<link>http://oss.org.cn/html/02/n-62202.html</link>
<text>                        北京时间11月15日，亚马逊首款平板电脑Kindle  Fire(推荐应用)在美国上市发售。这款被业界期待为“iPad杀手”的平板电脑售价仅为199美元，远远低于苹果iPad以及常见的Android平板。亚马逊是  美国最大的电子书店运营商，又是实力雄厚的云服务提供商，因此这款打着“云端先驱”的平板从发布之日起就备受关注。为了业界和全球开源社区能够共同参与开发基于Kindle的应用，亚马逊开放了系统的源代码。笔者第一时间在美国硅谷买到真机，  并进行了数小时的详细使用评测。Kindle Fire源代码(下载)11月17日，Amazon公布了Kindle Fire产品的源代码，大家烦恼的一些问题都将得到解决。在美国的用户其实不担心Kindle  fire的封闭性问题，因为在亚马逊商店上的那些资源，对于普通用户来说，已经是取之不尽用之不竭，不想付费的用户，其实也有大量的免费资源可以获取。但是对于非英语类国家而言，如果Kindle Fire的系统是封闭的话，那就要面临比较多的麻烦，尤其是来自语言方面，目前在美国发售的Kindle  Fire仅支持英语，并且不可以设置语言选项。目前Kindle  Fire浏览中文网页是没有问题，但是就无法进行中文输入了，这个应该是困扰中国用户的最大问题。此外，Root权限的获取也是一个比较麻烦的事情，没有Root权限，一些较底层的功能就无法更改，也无法对Kindle Fire的ROM进行定制更新。接下来就看各路高手出招，Kindle  Fire目前如此的热门，应该会有不少优秀的ROM作品出来的，输入法的问题应该也能很快得到解决，大家就一起期待吧。Kindle Fire拆解照Kindle Fire内部构造与其他平板电脑相似，但其使用更为简便的零部件，因此容易维修。Kindle Fire拆解照价值200美元的Kindle Fire主要部件有多功能触摸显示屏、TI OMAP 4双核处理器、8GB内存、定制的Android   2.3操作系统以及4400 mAh容量锂电池。据iFixit介绍，打开Kindle   Fire比任何苹果的机器都容易，其玻璃面板与显示屏未粘在一起，容易拆分，但玻璃面板与正面控制面板粘在一起，弄开比较费劲。                                            </text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-17 21:52:32</pubDate>
</item>
<item>
<title>25 个精彩的 HTML 5 教程</title>
<link>http://oss.org.cn/html/01/n-62201.html</link>
<text>web开发者必须尽快熟悉并使用起HTML5，因为它在web端开发的发展趋势已经明朗，可以用来创建丰富多彩的效果。使用HTML5还是有一些复杂的，所以本文介绍了25个优秀的HTML教程及小手册，欢迎大家使用。Making A Beautiful HTML5 Portfolio使用本教程，你可以学习创建HTML5组合，jQuery和Quicksand插件。它可以用来展示您的最新作品，因为它是可定制的。How To Code A Clean Website Template In HTML5 &amp;amp; CSS3MediaLoot拥有一个干净的网页模板设计（使用Adobe Fireworks）。我们已经证明我们的客开始户使用它创建一个时尚的网页，编码到HTML和CSS。Fullscreen Slideshow With HTML5 Audio And jQuery这教程可以被用于创建一个全屏的照片幻灯片，以显示“纽约”图片系列。您还可以使用HTML5音频元素添加声音给你的生活画廊。Build A Neat HTML5 Powered Contact Form本教程将帮助您学习创造一个优雅的HTML5 AJAX联系人表单。表单将拥有许多最新的HTML5输入元素和属性，将通过浏览器的内置表单验证来验证。Create A Page Flip Effect With HTML5 CanvasHakim El Hattab，Web开发人员和具备创造性的程序员告诉我们如何创建“Flash页面翻转”，用的可是HTML5画布和JavaScript。Learning The Basics Of HTML5 CanvasRob Hawkes告诉您如何利用canvas元素，绘制基本形状和文本，改变颜色，擦除画布，以及使其填充浏览器窗口。HTML5’s Microdata, Search, And The Collaboration Of The Search GiantsHTML5的其中一个很牛的新功能是Microdata（微观数据）。它可以让你更具体的对您的网页内容进行分类和标签。HTML5 &amp;amp; CSS3 – What You Should KnowHTML5，与CSS3的整合，将是如何创建网页的一个巨大的变化，更新及新增的特性，帮助你在这里查找。HTML5 Web ApplicationsDeep Blue Sky创建一个免费的网络应用程序，帮助您找出目前浏览器的HTML5/CSS3支持状态。Structural Tags In HTML5HTML5规范增加了对一些真正有用的tags，这些tags将从我们的代码中替代div。Touch The Future: Create An Elegant Website With HTML 5 And CSS3创造力、创造力，赋予你实施的能力。Simple Website Layout Tutorial Using HTML 5 And CSS 3一个非常简单的网页创建示例，HTML 5和CSS3 为你带来。Build Your First Game With HTML5HTML5正在日益强大，甚至是在游戏世界！本教程将教给你使用Box2D的HTML5canvas来创建您的第一个游戏。Designing Search Boxes With HTML5 And CSS3这是一个非常好的教程，实用的技术-跨浏览器的设计，符合标准的搜索框，HTML5，CSS3和一点点的jQuery。How To Make An HTML5 iPhone App铁杆的Objective C开发人员已经成为iPhone编写应用程序的唯一，但，Objective - C是非常艰难的。看看这个吧，给你惊喜。How To Create Offline HTML5 Web Apps in 5 Easy Steps5步创建html5离线web应用，听起来就很美妙！Link Users To Geolocation Data With HTML5Christopher Schmitt，CSS Cookbook 作者，Environments for Humans 联合创始人，展示如何优化HTML5 GeoLocation 地理位置jQuery插件。Accessibility And HTML5 Block LinksHTML5推出了很多新的元素和功能。Block links（块链接）就是其中之一，它让您包装一个块级元素周围的链接。HTML5 Body Elements #6 Links本教程介绍如何使用HTML5中的锚标记来创建超链接。Create A Basic HTML5 Page With The New Layout Tags本教程将向您展示如何创建一个简单的单页模板，展示了HTML5的新技术。Creating A Minimal Blog Design Using HTML5, CSS3 And jQuery本教程将向您展示设计和编写前端代码的一个完整的步骤，它采用许多新技术，如HTML5，CSS3，@font-face 和jQuery。整个项目可作为一个zip下载。HTML5: Creating A Base Template使用用HTML5创建一个基础模板。50 Performance Tricks To Make Your HTML5 Web Sites FasterInternet Explorer的团队教你一些技巧，让您的网站的速度更快。这些家伙也给你带来了GPU加速图形和编译JavaScript，使用Internet Explorer 9Creating An HTML5 Form Using The New Form TypesHTML5拥有一些新的表单类型，如果浏览器不支持这些新类型，它会简单地恢复到它们支持的类型。因此，本教程将教你什么是新的及什么是支持的。Simple Tool To Create Free HTML5 Slideshows Of Images在快速幻灯片放映中，显示您的照片，因为有些人可能不感兴趣，不看到所有照片。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-17 20:50:40</pubDate>
</item>
<item>
<title>Linux Mint 12 不单单是 ubuntu 的衍生版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62157</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-16 14:29:11</pubDate>
</item>
<item>
<title>60款开源CMS老将与新秀点评</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62156</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-16 15:19:11</pubDate>
</item>
<item>
<title>推荐Linux下7个好用的图片浏览器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62155</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-16 21:19:11</pubDate>
</item>
<item>
<title>袁萌：Ubuntu新桌面Unity遭争议</title>
<link>http://oss.org.cn/html/54/n-62154.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;
近一时期，在国际Linux论坛上，Ubuntu新桌面Unity遭遇严重争议或质疑，让人心中感到有些不安。这场争议是什么原因引发的呢？

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
近日，在世界Linux发行版排行榜上，Linux Mint发行版一举越过Ubuntu，从而占据了第一把“交椅”的位置。据此，有人站出来责怪Ubuntu新桌面Unity，说就是它惹的祸。这种指责并不公平，何故？让我们先来看看Ubuntu新桌面Unity是什么东西，再说。下图是Unity.ubuntu.com的首页：


&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
从此图可见，Unity技术的宗旨就是把简洁性、力量和集成性带给广大用户与应用程序的开发者，另一方面，Unity把桌面设计、集成与自由软件提供强大与具有吸引力的用户体验放在“核心位置”。从Ubuntu
10.10版本开始摸索Unity，经过11.04版本，至今在Ubuntu
11.10版本上Unity桌面总算获得初步的成功。在今年Ubuntu开发者峰会上，Ubuntu奠基人Mark
Shuttleworth表示要在未来两年之内，使得Unity桌面逐步完善，将Unity桌面统一推广到大、中、小电脑的屏幕上。据此，我们应当对Unity桌面的未来抱有十足的信心。说句实在话，Unity桌面创新是一件相当困难与艰巨的风险事业，弄得不好，是要翻船的。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
我们知道，世界Linux发行版排行榜根据每日点击数（即H.P.D，此数每日更新）”前30天取平均值“的计算方法来排名次。十分明显的事实是，新版本发布的数量越多，自然吸引人眼球的机会就会多一些，每日点击数H.P.D的平均数值就会高一些。比如，Linux
Mint今年发布了六个不同的版本如下：
&amp;nbsp; 1、2011-11-12: Development Release: Linux Mint 12
RC
&amp;nbsp; 2、2011-09-16: Distribution
Releases: Linux Mint 201109 &quot;Debian GNOME&quot;, &quot;Debian Xfce&quot;
&amp;nbsp; 3、2011-08-16: Distribution
Release: Linux Mint 11 &quot;LXDE&quot;
&amp;nbsp; 4、2011-05-26: Distribution
Release: Linux Mint 11
&amp;nbsp; 5、2011-05-09: Development
Release: Linux Mint 11 RC
&amp;nbsp; 6、2011-04-06: Distribution
Release: Linux Mint 201104 &quot;Xfce&quot;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
不难看出，在8、9、11三个月份，Linux
Mint都有不同新版本发布，其累计每日点击数却都要算在Linux
Mint一个版本的头上，一时间超越Ubuntu是很自然的现象。若是把Ubuntu大家族（比如：Kubuntu、Lubuntu，等等）的每日点击数都算在Ubuntu一个版本的头上，Ubuntu发行版保险还是“绝对第一”。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 22:31:11</pubDate>
</item>
<item>
<title>“人工智能之父” 约翰•麦卡锡传奇人生完美谢幕</title>
<link>http://oss.org.cn/html/53/n-62153.html</link>
<text>他生于一个共产党家庭，一个关心人类可持续发展的乐观主义者。他，一个攀岩、跳伞和驾驶滑翔机爱好者，征服过不少世界高峰。他，首次提出“人工智能”概念，是一位被称为“人工智能之父”计算机科学家。他，John&amp;nbsp;McCarthy（约翰•麦卡锡），1971年图灵奖获得者。Lisp语言发明者、“人工智能之父”约翰·麦卡锡（John Maccarthy ，1927 .9.4 - 2011.10.24）已于24日与世长辞。以下是关于这位计算机大师的简介：引用：-1927年，生于美国波士顿-1948年，加州理工，数学学士-1951年，普林斯顿大学，数学博士-1956年，Dartmouth会议的发起人（该会议被视为AI作为一门学科诞生的标志）-1955年，在为该会议写的建议书中提出Artificial Intelligence一词，从而被视为“人工智能之父”-1958年，发明Lisp编程语言（该语言至今仍在人工智能领域广泛使用）-1960年左右，提出计算机分时(time-sharing)概念 　　　　-1971年，因对AI的贡献获图灵奖-1985年，获得IJCAI(the International Joint Conference on Artificial Intelligence)颁发的第一届”Research Excellence Award”（可看作是AI的终身成就奖）-1991年，获得“美国国家科学奖”(National Medal of Science Award)从政治青年到学术人生麦卡锡的人生像一副波澜壮阔的画卷，政治和学术是两抹最有特点的亮色。他1927年生于波士顿的一个共产党家庭，父亲做过工会组织者，搞过一些发明，母亲当过记者，热心于女权运动。因为家庭的关系，麦卡锡的童年在不断搬迁中度过，也养成了乐于阅读和思考的好习惯。青少年时的麦卡锡聪慧过人，初中时他根据一份加州理工大学的课程目录自学完大学低年级微积分课程，也因此在1944年上大学时可以免修头两年大学数学。尽管后来二战进行得如火如荼，麦卡锡在军队任职了一段时间，但并没有影响学业，仍于1948年按时毕业，然后去普林斯顿大学研究生院继续深造。冯·诺依曼报告引发的好奇心麦卡锡的学术人生如何步入人工智能领域，还要从1948年9月的一次会议说起。当时普林斯顿大学主办了“行为的大脑机制西克森研讨会”，计算机大师冯·诺依曼在会议上发布了一篇关于自复制自动机的论文。这次报告激发了当时还是普林斯顿数学博士生麦卡锡的研究兴趣，他敏锐地将机器智能与人的智能联系起来，打算从事更深入的研究。第二年，麦卡锡幸运地与冯·诺依曼一起工作，在大师的鼓励和支持下，麦卡锡决定从在机器上模拟人的智能入手，主要研究方向定为计算机下棋。此后，为了减少计算机需要考虑的棋步，麦卡锡发明了著名的α-β搜索法，这一关键问题的解决有效减少了计算量，使其至今仍是解决人工智能问题中一种常用的高效方法。一场会议中诞生的人工智能1952年，麦卡锡认识了贝尔实验室的香农（信息论创始人），在人工智能方面的若干深入探讨之后，他们萌生召开一次研讨会的共识。在洛克菲勒基金会的一笔微薄的赞助下，他们邀请到当时哈佛大学的明斯基和IBM工程师罗彻斯特等几位学者，参加这次具有里程碑达意义的达特茅斯会议。达特茅斯会议历时两个多月，首次提出“人工智能”这一术语，并确立了可行的目标和方法，这使得人工智能成为电脑科学一个独立的重要分支，获得了科学界的承认。Lisp语言和分时概念创始人John McCarthy1958年，麦卡锡组建了世界上第一个人工智能实验室。同年，麦卡锡发明了Lisp语言，这是人工智能界第一个最广泛流行的语言，至今仍有着广泛应用。Lisp语言与后来由1973年实现的逻辑式语言PROLOG并称为人工智能的两大语言。麦卡锡另一个卓越贡献是1960年左右第一次提出将计算机批处理方式改造成分时方式，这使得计算机能同时允许数十甚至上百用户使用，极大地推动接下来的人工智能研究。他的研究成果最终实现了世界上最早的分时系统——基于IBM7094的CTSS和其后的MULTICS。如今，人工智能已经从实验室走进日常生活，成为一门严肃经验科学，引发了计算机使用方式的一场变革，其中McCarthy功不可没，他深刻地改变了人们与电脑和互联网的互动方式。如今这位计算机大师已经离去，我们缅怀他、感谢他！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 22:21:52</pubDate>
</item>
<item>
<title>Linux内核程序代码量呈现快速指数增长</title>
<link>http://oss.org.cn/html/52/n-62152.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;
11月12日，Michael
Larabel发表博文指出一个十分奇异的现象，完全出乎人们的意料，引起业界“严重”关注。这是为什么呢？请见文章“The Increasing Size
Of
The
Linux Kernel“以及以下图标：



&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
以上图标十分清楚地表明：Linux内核程序代码量呈现快速指数增长，其函数图像定性地可用以下二阶微分方程式表示：
&amp;nbsp;&amp;nbsp; y''
= exp(x) (初始条件：当x =
0时，y =
0，y' = 0)，
&amp;nbsp;&amp;nbsp;
其中自变量x代表Linux内核的版本号数目（而不是指版本发布时间），因变量y代表Linux内核的程序代码量（以MB为单位，用压缩文件包表示，即the
.tar.bz2 package）。这一现象是由JérômePinot发现的，他说：&quot;Impressive,it's mostly exponential......“，意思是说，”令人难忘的印象是，它大部分地呈现指数增长，......“。
&amp;nbsp;&amp;nbsp;&amp;nbsp;
我们需要对照五个Linux内核发布“时间点”：
&amp;nbsp;&amp;nbsp; 1、Linux 2.0发布时间：1996年6月9日；
&amp;nbsp;&amp;nbsp; 2、Linux 2.2发布时间：1999年1月25日；
&amp;nbsp;&amp;nbsp; 3、Linux 2.4发布时间：2001年元月4日；
&amp;nbsp;&amp;nbsp; 4、Linux 2.6发布时间：2003年12月17日；
&amp;nbsp;&amp;nbsp; 5、Linux 3.0发布时间：2011年7月21日。

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
由以上图标，我们容易看出，Linux在我国起步时（即Linux 2.0发布），Linux 2.0的代码量还很小，只有5MB左右，在那个时光鼓吹发展我国Linux产业无疑是“冒进”（比如我本人），而在2004年（2.6版本发布），Linux2.4代码量已经有30MB，其硬件驱动程序日渐完善，时间到了今年7月，Linux
3.0发布，Linux内核代码量急剧升至74MB，Linux系统功能更加强大与完善</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-17 09:52:28</pubDate>
</item>
<item>
<title>云桌面：eyeOS发布专业版 提供更好云体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62151</link>
<text>eyeOS是当今全球领先的云桌面,也是整个欧洲最大开源项目之一，目前eyeOS已经获得了超过100万的下载量。 IBM已经选定作为其首选的开源云计算平台。该公司2011年6月完成了首轮融资，并推出它的第一个商业许可，eyeOS专业版。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-16 16:37:10</pubDate>
</item>
<item>
<title>移动应用必定不会长久</title>
<link>http://oss.org.cn/html/50/n-62150.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 英文原文：Mobile apps must die! 　　文 / Scott Jenson　　青蛙设计创意总监 Scott Jenson 认为移动应用虽然暂时繁华，但是“即时”交互的整体概念意味着这种景象并不会长久。　　移动应用的历史是一个漫长而痛苦的过程，一开始是简单复制台式机的做法，然后窘迫地认识到，这种方式不太可行。其实，这是一切事物进步的方式，不仅在技术领域，艺术和音乐也遵循类似的模式，复制、延伸，最后发现一个新的模式。要摆脱旧的范式，需要耗费一段时间。　　移动应用显然是成功的，并且在某些情况下，其盈利非常可观。如果我说它们必然消亡，这听上去明显与大量证据相违背。但所有的事物都会更迭交替，在快节奏的技术领域中尤为明显。　　当一个范式发生转变时，很少是因为人们讨厌旧的模式或认为它没有用，而是因为它无法利用新的机遇。守旧派坚持自己的主张，愤怒地喊道：一切都完美无缺，你是在夸大其辞！　　策划、组织和筛选过程将变得十分复杂　　应用程序（这里指必须下载到手机上的本机应用程序）的问题在于，它们的组织和维护过程非常麻烦。让你要去的每一家商店、拥有的每一件产品和访问的每一个网站都拥有对应的应用，是不现实的。因为这将不断增加新的内容，必须对其加以策划、组织和筛选。　　每个人都会执行一项常见任务，那就是隔几个月删除一次旧的和未使用的应用程序，有效地清除电话中的垃圾。条理性非常强的人会迅速清理这些，以避免手机上的应用程序数量增长过快，但大部分人对此并不在意，因此他们的手机主页将陷入到不断隐没的复杂选项中。　　就其本身而言，这个问题显然不会为应用程序带来致命影响，但它确实显示出一个不断扩大的问题。如果我们想要的应用程序数量是现在的两倍，甚至五十倍，将会怎样？我们还能坚持有效地进行策划、组织和筛选吗？　　这会让人想起早期的 Web，当时 Yahoo!有一个固定的网站层次结构，但随着 Web 的爆炸式发展，该结构变得越来越难以维持。Google 打破了这种既定范式，通过消除所有组织结构，只使用搜索系统，从根本上避免了这个问题，用户因此得以方便快捷地访问数以百万计的页面。　　用户体验的金科玉律：价值大于使用难度　　有一个微妙的力量在起作用。人们在讨论任何产品、技术或想法时，很容易只注重它的价值，即它试图为用户解决什么问题。这是一个良好的开端，并且历来都是人们唯一考虑的因素。然而，近来人们已经开始认识到，产品必须经过精心的设计，使其易于使用。　　任何产品的价值及其用户体验，通常被作为独立变量来对待。你当然希望得到一个高价值的产品，与此同样重要的是其使用的困难程度也必须较低。尽管人们不愿意承认，但这两方面是紧密联系的。最重要的是它们之间的关系：价值必须大于使用难度。　　例如，早期的 SMS 系统极其难用，但其价值（避免了昂贵的按分钟计费）很高，超越了使用难度。当然，SMS 体验的改进大大增加了使用率并吸引了更多用户。仅仅是价值大于使用难度并不意味着大功告成，只说明它质量高，足以向市场推出。　　但这一模式还解释了另一个更重要的因素，即用户行为。随着使用难度下降，人们将更频繁地使用产品来完成价值较低的任务。价值仍然大于使用难度，但现在触发使用所需要的价值比以前低得多。最典型的例子莫过于进行 Google 搜索。Google 曾公开表示，如果把 Google 主页的加载速度减少零点几秒，其使用率就会明显提高。Google 主页没有以任何用户认知的方式进行改变，它只是快了一点点，就会有更多人使用它。这很重要，因为只是降低使用难度，而不以任何方式提高产品的价值，会显著影响使用率。　　因此，回到本机应用程序的使用。如果你要走进一家商店，店员自豪地在门口宣布他们有一个应用程序，你会立即安装它吗？你会在头脑中进行怎样的价值/使用难度计算？如果你是该品牌的粉丝，那么对其价值的认知可能较高，可能愿意忍受繁杂的安装过程，这时价值大于使用难度。不过，如果你从来没有听说过这家商店，你可能不会在意，这时价值小于使用难度，那你就不愿意冒险尝试。　　我想说的是，如果应用程序以某种方式奇迹般地出现在你的手机上，你会更有可能尝试它吗？当然会，因为免去了复杂过程，使用难度为零。你会尝试这个应用程序，因为你不会有任何损失。我们要想出一个办法，消除使用应用程序的难度。　　本机应用程序，使用难度远大于零　　让用户负责应用程序管理，实际上给他们带来了稳步增加的使用难度。这使得应用程序的压力越来越大，它们的使用频率会越来越低。这不是一个绝对的问题，而是 Google 主页使用率的一个反面例子。随着事务的复杂性和烦琐程度缓慢增加，使用率将开始一点点下降，刚开始难以衡量，但随着时间的推移可能会越来越明显。　　如果你还是无动于衷，我仍然可以理解。你可能在想：“说真的，你需要多少应用程序？问题不会变得那么糟糕，对吧？”在技术领域的人必须始终牢记，没有什么是稳定的。今天似乎完全合理的，但在很短时间内就会变成束缚。我敢肯定你们大部分人都记得，原来的 PC DOS 团队预期不可能有人会使用超过640KB 的 RAM。　　它可能会变得更糟糕……　　可能会彻底改变我们目前微小的应用程序世界的是直线下降的计算和连接成本。这将大大增加我们每天接触的设备种类和数量。　　事实上，很可能我们将经历数百甚至数千台设备，每台设备都将能够为我提供某种类型的交互体验。我的博客文章——“僵尸末日”（The Coming Zombie Apocalypse）中有更详细的描述，但智能设备的成本正在下降，在许多情况下，已接近于零。下面是一些例子。　　如带有 RFID 或 NFC 射频标签的电影海报，能让我在手机上获得海报的交互式版本，为我提供更多信息。　　任何消费项目，像番茄酱或奶瓶，也带有射频标签，它们将不仅像海报一样能让我获得关于这些项目的更多信息，而且还能跟踪使用情况，甚至提供替代品的购买。　　我的本地巴士站将被地理定位，所以我目前仅需安装 GPS，就可以获得这个特定的巴士站的信息，知道下一班车将在什么时候到达。虽然使用一些复杂的城市系统在今天可以实现这项功能，但地理定位系统的部署让任何一个城市可以在所有公交线路上更便宜地实现这项功能。　　当我走过任何商店的门口时，都将有一个应用程序可以与我交互。　　无论我何时去逛大型购物商场，它都将提供地图和时间。　　本地食品车的供应商提供的将不仅是它们的菜单，还有它们准备去的下一个目的地以及返回的时间。　　如 Zipcar 等按需租凭的汽车租赁公司，将允许我使用手机上的蓝牙连接来注册并开走它们的一辆车。　　“即时”交互　　所有这些概念只是猜测，但它们代表了一种正朝我们迎面袭来的趋势。这些设备都可能需要某种形式的交互，但只是在我接近它们时才进行交互，这是一种“即时”的交互模式，只在我需要它时，为我提供交互性。　　更重要的是，绝大多数交互将是一次性体验。我将与设备（像海报）进行几秒钟的交互，然后继续做其他事情。这是一种“先使用后失去”的情况。在这种情况下，下载到手机上与该设备进行交互的任何东西在交互完成后都不再需要了。　　这就是为什么这种交互将最有可能以某种 Web 页面形式存在的原因。以不涉及安装的方式把交互体验下载到任何设备上，是一种简单的方法。对于“先使用后失去”方法，Web 是适合的选择。　　事实上，Web 在20多年来一直只提供这种方式。关于那些声称 Web 不能作为本机应用程序的说法，目前事实的确如此。但请记住：首先，标准正在非常迅速地提高；其次，与这些小型廉价设备进行的交互是相当有限的，就像与一个公共汽车站进行交互时并不需要具有运行“魔兽世界”时的强大功能。　　今天，我不能够或设想利用我们当前的应用程序模式来尝试这类的“即时”交互。搜索、下载、使用应用程序，以及最重要的删除一个应用程序，这其中所耗费的精力实在过于巨大。　　移动应用程序必然消亡的原因是，它是一个阻挡我们前进的范式。“即时”交互的整体概念，从结构上来说无法利用安装的应用程序来实现。　　探索服务　　快速打开智能设备并与之交互是不可能的，除非能迅速地找到在你面前的那台设备。为了毫不费力地与一天中将会经手的集群设备进行交互，我将需要一个可以使用手机上蓝牙、NFC、GPS 和 WiFi 不断搜索功能的服务，不仅可以找到附近的设备，还可对其进行排名。这并不是大海捞针，而是在针堆里找针。可能会需要一些云服务器的帮助，因为它们对我的了解更多一点，可以对这些设备进行合理的排序。　　我强烈地感觉到，这类探索服务将在未来几年内成为下一个 Google。这是 Google、苹果和微软都整装待发要立即解决的问题。甚至可以尝试执行一个巧妙的启动，由系统发现在我身边的物理设备并对其进行排名，现在这个做法几乎变成了必不可少的服务。　　在我点击每个附近的设备之后，就会打开在该设备或者更可能是在中央服务器上提供的一个 Web 页面。实际会发生的情况完全取决于那台设备，和我并没有关系。正如现在对本机应用程序的限制非常少，那么对这些智能设备的限制也应该很少。该系统的目的只是识别和提供“即时”的功能。　　展望未来　　本机应用程序是计算机历史侏罗纪时代的遗留物，是阻挡我们发展的局部最大限制。探索服务和“即时”交互的结合，是一种本机应用程序无法提供的功能强大的交互模式。　　今天没有谁可以提出像这样的模式。事实上，实现这种模式很可能会是一个长期缓慢的过程。但如果继续尊崇本机孤岛功能，我们甚至都不知道这是否能实现。在进行构建之前，你必须知道你想要的是什么。　　英文原文：Mobile apps must die!&amp;nbsp;青蛙设计创意总监。20世纪80年代后期是苹果 UI 小组的第一批成员，从事 System 7、Apple Human Interface 指南以及 Newton 方面工作。之后，Scott Jenson 担任了多年的自由设计顾问，然后成为 Symbian 系统的产品设计总监，并最终在 Google 管理移动 UX 组的工作。 来自: http://www.programmer.com.cn/8849</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-16 16:20:40</pubDate>
</item>
<item>
<title>开发社区稳步增长壮大，WP7能否成为移动市场第三雄？</title>
<link>http://oss.org.cn/html/49/n-62149.html</link>
<text>Windows Phone推出已经一年多了，在这段时间里，它有正面评价，也有负面的评价。虽然在Mango升级之前，经历了NoDo这个不尽人意的升级，虽然经历了戴尔Venue Pro的冒险，以及之后的和诺基亚的合作，但是有一点在Windows Phone世界中是一直保持稳定的，那就是不断增长的开发人员的支持。当Windows Phone刚刚推出的时候，大部分人都不看好它，认为它是一个失败者。微软也完全抛弃了它之前的在移动应用程序上的积累，这也激怒了之前很多为微软开发移动程序的开发人员。现在它必须不断的去号召这些开发人员为新的智能手机系统开发应用程序。这个挑战完全不亚于来自竞争对手的挑战。但是值得微软粉丝欣慰的是，Brandon Watson担任了这项工作，并且他完成了这个艰难的工作。现在一年过去了，大约有接近4万个Windows Phone应用程序。这也意味着，大约每天都有110个应用程序上线。并且，据有关数据显示，这种增长势头依然很强劲。为了庆祝Windows Phone所取得的成绩，Watson在它的博客中介绍了他在一年中学到的“教训”。这些经验教训都是很值得分享的。1. 激发开发人员的动力。这个很显而易见，但是非常的关键。如果开发人员看不到这个平台的未来，和其中潜在的财富，他们是不会去投身这个平台的。但是“如果你能够给他们讲个故事，并且能够兑现故事中的所有或大部分的沉诺”，这样开发人员就能看到希望，他们就会环绕在这个平台周围。2. 使开发人员可以赚钱并且能够打造他们在业界的名声。Watson认为，财富和名声是两个完全不同的部分，但是开发人员既注重收入同样也重视名声。同样一些和财务不相关的部分也不能忽视。我们会确保开发者保持较高的薪酬，这样开发人员肯定还能保持高昂的斗志。3. 可以很容易的搜索和发现相关信息。在涉及到向开发人员传递信息的时候，Watson指出，现在的世界是一个公开并链接的世界，不再围绕书本，所以必须能快捷的将信息传达给开发人员，而不要说，“去微软出版社”。最后Watston总结了他认为对于Windows Phone团队未来一年中最重要的一条原则就是“高可用性”。这也是以后微软移动团队的方向，使得WP7开发社区的业务能更好的发展。Windows Phone的发展不是一帆风顺，之前它险些破坏掉现在这种缓慢但是稳定的增长模式，试图去抢占移动市场的第一梯队。为了能占领更大的市场，它需要一个活跃的第三方开发团体。现在看来，微软正在努力的这么去做。现在移动市场上，苹果和Android正占领了大部分的市场，但是，我认为只要现在Windows Phone能够把握住当前的各种机会，不要犯傻，努力保持自己的特点，它还是一个非常强的竞争者，它同样能拥有很多的用户，在移动市场上占有一席之地，并且是一席很重要的“地”。毕竟，微软和诺基亚都是不容小视的。via TNW</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-16 15:55:42</pubDate>
</item>
<item>
<title>仍在炼狱中徘徊：Windows Phone一岁总结</title>
<link>http://oss.org.cn/html/48/n-62148.html</link>
<text>Windows Phone现在半死不活。微软自己也承认这一点。在过去的一个季度中，预计Windows Phone共计售出了140万台（Gartner的数据为170万台）。在销量方面微软的份额创下了新低，为1.3%(Gartner 1.6%) 。智能手机市场份额与此同时，comScore数据显示Windows Phone在美国和欧盟五国的市场份额目前处在稳定状态，约为2.2%。美国和欧盟五国手机使用市场份额在过去的几个月中，微软一直比较低调。微软上个月向厂商发布了7.5版操作系统Mango。最近推出、宣布了一些Windows Phone手机，其中27款为WP7，11款为7.5。微软还成功地把Android厂商告上了法庭，并从三星和HTC那里获得了专利版权费。在相当长的时间内，Android带来的专利收入甚至会超过Windows Phone的许可收入。显然微软有一个计划，但这个计划并不容易被察觉，因为微软瞄准的不是直接消费者，而是合作伙伴，主要为硬件厂商和运营商。为了说服合作伙伴，微软不得不自掏腰包。换言之，微软想要花钱购买市场份额。在具体展开之前，我们需要明白一个在设备销售领域中最重要，但很少被讨论的因素：渠道刺激。一部手机在卖出之前需要克服重重阻碍：它需要吸引运营商或分销商的青睐；需要能够填补制造商和渠道商的产品组合空白；需要在货架上有立足之地；需要获得某些终端用户的认可，并且给零售商提供激励。最后一点非常神秘。尽管不是通用惯例，在很多情况下零售店店员都会从设备厂商那里获得直接或间接佣金。零售商和厂商之间的这种关系并不透明。买家不知道某部手机后面牵扯到什么激励条件。有些售货员会建议顾客买哪部手机，或者不要买哪部手机。此外，微软和诺基亚已经达成协议，微软拿出至少10亿美元用来推广诺基亚Windows Phone手机。在双方达成合作协议之前，微软也明确表示会拿出预算（4亿美元）推广Windows Phone。但后来又取消了这部分预算，因为后来有了诺基亚的合作。微软对自己在Windows Phone上取得的成绩感到骄傲，因为他们在11个月内对操作系统进行了更新，并且仅用两年时间就把Windows Mobile改造成Windows Phone。微软依赖一个非常复杂的价值网络，这意味着他们的产品很难迅速普及到用户手中，即便是有很强大的财务预算，市场信号也很弱。微软的真正问题在于，它既不像Android那样像病毒那样迅速传播，也不像苹果那样专注、灵活。微软未来的道路依然坎坷，但它说20%的市场份额是“保守”估计，这话似乎不靠谱。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-10-15 15:53:24</pubDate>
</item>
<item>
<title>十大互联网无名英雄：笑脸符号发明人入选</title>
<link>http://oss.org.cn/html/47/n-62147.html</link>
<text>导语：瑞典IT服务公司Pingdom周一撰文，对互联网发展历史上的十大著名技术及其发明人进行了介绍，包括GIF、RSS、Ping、@符号和笑脸表情等。但这些人都有一个共同的特点：虽然他们发明的技术广为人知，但他们本人却并不知名。以下为文章全文：由于昨天是瑞典的父亲节，所以我们便想推出一个专题，来介绍一些为互联网做出卓越贡献的人。有一些显而易见的候选人，包括TCP/IP发明人温特·瑟夫(Vint  Cerf)和鲍勃·卡恩(Bob Kahn)、构思出互联网众多概念的范内瓦·布什(Vannevar Bush)、提出超文本理念的泰德·尼尔森(Ted  Nelson)、万维网发明人蒂姆·伯纳斯-李(Tim Berners-Lee)以及Mosaic浏览器的联合发明人马克·安德森(Marc  Andreeseen)。但为什么要介绍这些众所周知的人呢?我们认为，介绍一些互联网发展历史上知名度较低的贡献者会更有意义。这些人所作的贡献同样给我们带来了重要影响，但却没有获得与上述几人相同的荣誉。所以，尽管这并不完全符合父亲节的主题，还是让我们一同来回顾一下吧。1、GIF：史蒂夫·威尔海特(Steve Wilhite)GIF的全称是“图形交换格式”(Graphics Interchange  Format)，长期以来一直是互联网的一种标准图片格式。我们怎能忘记网页上那些活灵活现的动态图片呢?这种图片格式是由威尔海特1987年发明的，他当时供职于Compuserve。尽管GIF已经基本被JPG和PNG代替，但仍有很多人认为，GIF或许还将复活。2、RSS：戴夫·温纳(Dave Winer)这个问题存在一些争议，所以我们斗胆自作主张。RSS也就是“简易信息聚合”(Real Simple  Syndication)的简称，有一些资料显示，该技术源于RDF，而第一版RSS是由网景公司的丹·利比(Dan  Libby)和拉玛那森·古哈(Ramanathan V.  Guha)于1999年发明的。但我们认为，具体到RSS的普及，没有一个人的贡献比温纳更大，所以我们将他选作RSS的发明人。3、Ping：麦克·穆斯(Mike Muuss)Ping是穆斯1983年发明的一个非常简单的工具，仅包含1000行代码。但这个工具如今几乎被所有的操作系统采用，对于全世界所有的网络管理员而言，这都是一款非常有价值的工具。4、IE1.0：托马斯·里尔登(Thomas Reardon)与其他很多微软产品相同，IE的起源同样来自公司外部。IE1.0是对Spyglass  Mosaic的改版，后者是微软1994年从Spyglass处授权而来的一款产品。当时就职于微软的里尔登利用Spyglass的代码开发了IE1.0，并于1995年推出了这款产品。尽管IE最近的市场份额有所下滑，但根据互联网流量监测机构Statcounter的数据，该产品仍然被全球40%以上的电脑使用。5、@符号：雷·汤姆林森(Ray Tomlinson)1971年，汤姆林森需要一个字符来区分电子邮件地址中的主机名和用户名。于是，他看了看键盘，发现了@符号，并将此作为“显而易见的”选择。如今，这个符号已经超出了电子邮件的范畴，而被广泛应用于社交网络和论坛等领域。6、笑脸表情：斯科特·法尔曼(Scott Fahlman)我们或许应当称之为“笑脸表情”，但只需要用“笑脸”两个字就足以表明它在我们文化中的重要地位。法尔曼1982年9月19日在卡内基梅隆大学的留言板上建议，可以用“：-)”代表开玩笑，如果不是开玩笑则使用“：-(”。这一风潮随后一发而不可收拾，如今的多数文本数字交流形式都会用到这些表情。7、智能调制解调器：戴尔·海瑟灵顿(Dale Heatherington)在很长时间内，智能调制解调器都是人们上网的必备设备。即使是在宽带已经普及的今天，仍有很多人需要通过拨号才能上网。第一台智能调制解调器诞生于1981年，处理速度为每秒1比特。他的发明人是当时供职于贺氏电脑制品公司(Hayes  Microcomputer Products)的海瑟灵顿。8、BIND：特里、潘特、里格和周松年BIND全称是“伯克利互联网域名”(Berkeley Internet Name  Domain)，它很可能是你每天都在使用，但却对其一无所知的、最重要的软件之一。这是一款被广泛应用的DNS服务器软件。在互联网性能检测公司The  Measurement Factory  2010年8月的调查中，BIND在将近80万个受访的主机中占据34.2%的份额。加州大学伯克利分校的道格拉斯·特里(Douglas  Terry)、马克·潘特(Mark Painter)、大卫·里格(David Riggle)和周松年(Songnian  Zhou，音译)共同发明了BIND。9、PHP：拉斯姆斯·勒多夫(Rasmus Lerdorf)PHP如今在TIOBE Programming Community  Index编程语言排行榜上位居第五，但无论排名如何，都不可否认这已经成为一种无比热门的脚本语言，被很多网站采用。勒多夫于1995年发明了最初的PHP，后来又编写了第二版。10、英特尔4004：法金、霍夫、马泽尔和Masatoshi Shima英特尔4004与互联网并没有直接关系，但却对网络技术的发展产生了巨大影响。作为全球首个单芯片微处理器，我们如今在PC、智能手机和平板电脑中都可以找到它的直接和间接后裔。这款芯片是由英特尔的费德里克·法金(Federico Fagin)、泰德·霍夫(Ted Hoff)和斯坦利·马泽尔(Stanley  Mazor)以及Busicom的Masatoshi  Shima共同设计的。4004于1971年推出，内置2300个晶体管。相比而言，英特尔将于2012年推出的Ivy  Bridge处理器将内置14亿个晶体管。致敬过去40年来，很多全球最聪明的人一直都在从事炫酷而令人振奋的互联网技术。这些人或许并不像他们的同行一样频频见诸于报端，但我们却希望能够告诉你一些你或许并不知道的事情，让你对每天都在使用的这些技术有更多的了解。(书聿)</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 15:39:53</pubDate>
</item>
<item>
<title>总结web页面中未知高度的图片垂直居中的N种方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62146</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 15:25:33</pubDate>
</item>
<item>
<title>基于浏览器的匿名 P2P 文件分享服务</title>
<link>http://oss.org.cn/html/41/n-62141.html</link>
<text>FileTea 是一个使用 HTML5 技术编写的试验性 P2P 文件分享站点，只需要启动浏览器即可上传和下载文件。转载自 shellex 的部落格

发现一个很好玩的东西，FileTea

看上去就是个普通的Web介面的文件分享服务，其实伊很有意思：


它是做P2P分享的，服务器不存储文件内容。因此除了正在传输的数据，仅仅保持和上传者、下载者的浏览器会话信息。
依赖HTML5的文件API来提供文件上传。也就是说，一旦浏览器关闭，那么该分享就失效。


当然了，这种东西必须是开源的，在debian SID里可以直接 apt-get install filetea安装。

近年来Web碉堡了以后，果然所有能被重写的桌面程序都会被重写一遍。Google搞Chrome真是碉堡了。

Update：作者 Eduardo Lima 是Linux和Javascript达人啊

为方便作者回复请前往原文留言</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 13:08:37</pubDate>
</item>
<item>
<title>让你提升命令行效率的 Bash 快捷键</title>
<link>http://oss.org.cn/html/40/n-62140.html</link>
<text>生活在 Bash shell
中，熟记以下快捷键，将极大的提高你的命令行操作效率。 

编辑命令


Ctrl + a ：移到命令行首
Ctrl + e ：移到命令行尾
Ctrl + f ：按字符前移（右向）
Ctrl + b ：按字符后移（左向）
Alt  + f ：按单词前移（右向）
Alt  + b ：按单词后移（左向）
Ctrl + xx：在命令行首和光标之间移动
Ctrl + u ：从光标处删除至命令行首
Ctrl + k ：从光标处删除至命令行尾
Ctrl + w ：从光标处删除至字首
Alt  + d ：从光标处删除至字尾
Ctrl + d ：删除光标处的字符
Ctrl + h ：删除光标前的字符
Ctrl + y ：粘贴至光标后
Alt  + c ：从光标处更改为首字母大写的单词
Alt  + u ：从光标处更改为全部大写的单词
Alt  + l ：从光标处更改为全部小写的单词
Ctrl + t ：交换光标处和之前的字符
Alt  + t ：交换光标处和之前的单词
Alt  + Backspace：与 Ctrl + w 相同类似，分隔符有些差别 [感谢 rezilla 指正]


重新执行命令


Ctrl + r：逆向搜索命令历史
Ctrl + g：从历史搜索模式退出
Ctrl + p：历史中的上一条命令
Ctrl + n：历史中的下一条命令
Alt  + .：使用上一条命令的最后一个参数


控制命令


Ctrl + l：清屏
Ctrl + o：执行当前命令，并选择上一条命令
Ctrl + s：阻止屏幕输出
Ctrl + q：允许屏幕输出
Ctrl + c：终止命令
Ctrl + z：挂起命令


Bang (!) 命令


!!：执行上一条命令
!blah：执行最近的以 blah 开头的命令，如 !ls
!blah:p：仅打印输出，而不执行
!$：上一条命令的最后一个参数，与 Alt + . 相同
!$:p：打印输出 !$ 的内容
!*：上一条命令的所有参数
!*:p：打印输出 !* 的内容
^blah：删除上一条命令中的 blah
^blah^foo：将上一条命令中的 blah 替换为 foo
^blah^foo^：将上一条命令中所有的 blah 都替换为 foo


友情提示：


以上介绍的大多数 Bash 快捷键仅当在 emacs 编辑模式时有效，若你将 Bash
配置为 vi 编辑模式，那将遵循 vi 的按键绑定。Bash 默认为 emacs
编辑模式。如果你的 Bash 不在 emacs 编辑模式，可通过 set -o emacs 设置。
^S、^Q、^C、^Z 是由终端设备处理的，可用 stty 命令设置。


{ via }</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 13:02:30</pubDate>
</item>
<item>
<title>Pogoplug Cloud 提供你 5GB 的免费云端空间</title>
<link>http://oss.org.cn/html/39/n-62139.html</link>
<text>	类似 Dropbox 的这种自动备份的云端服务，其实应该算是设计给懒得自己慢慢 Copy 备份的人使用的吧？所以想必也有一堆人甚至连找朋友增加自己空间都懒，干脆 2GB 的免费空间直接将就着用。不过别担心！现代网络科技什么都缺就是不缺云端服务（什么都可以云端 XD），这个名为 Pogoplug Cloud 的全新云端服务，同样拥有文件夹分享与同步功能，让你可以轻松上传同步渡假的照片与影片，也不需要任何恼人的手动备份工作，重点是它所提供的免费空间还达到两倍多的 5GB 呢！尽管 Pogoplug 所提供的免费空间也并不算大，但它也同样支持 50GB 以及 100GB 的付费方案（每个月 US$9.95 / US$19.95），让你可以慵懒的掏出信用卡解决一切问题。它具备了相当完整的手机软件支持，并且可以随时将你云端的图片或影片内容，直接分享在 Facebook、Twitter 或 Google+ 上。看来，不论是云端或是实体备份空间，似乎需求永远都没有满足的一天呢，点击引用来源申请快试试这个新的云端服务吧！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 09:57:42</pubDate>
</item>
<item>
<title>Tizen（泰泽） 2011 亚洲峰会在京即将召开</title>
<link>http://oss.org.cn/html/38/n-62138.html</link>
<text>Tizen (泰泽) 2011 亚洲峰会，将于 2011 年 12 月 8 ～ 9 日期间在北京万豪酒店举行，届时将会有来自亚洲和欧洲地区的开源厂商、硬件制造商以及其他 Tizen 项目贡献者和社区成员参加。

目前会议初步安排已经确定，将有包括 Linux 基金会、英特尔、中移动以及诺基亚 QT 等知名业界组织和厂商的参与和赞助。以演讲、会议和讨论的形式讨论 Tizen 平台的理念、开发和推广事宜，并且将有 Tizen 原型的首次亮相！

如果您的公司亦想加入并赞助本次峰会的话，请以英文与 sarianne.niemi AT nomovok.com 取得联系。

如果您是对于嵌入式 Linux、MeeGo/Tizen 感兴趣的爱好者、独立开发者或社区贡献者，同样也欢迎参加。发送英文邮件至 Gerard ( me+tizensummit AT gbraad.nl) 阐述您的参会的目的，就有机会获得价值 100 欧元的个人入场券一张。

Tizen (泰泽) 2011 亚洲峰会主页</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 11:49:54</pubDate>
</item>
<item>
<title>分布式缓存能否作为NoSQL数据库？</title>
<link>http://oss.org.cn/html/37/n-62137.html</link>
<text>对于文档、对象图、键值对这样的非关系型数据类型，NoSQL数据库为它们提供了另一种可选的数据存储方式。分布式缓存能被用作NoSQL数据库吗？Ehcache的Greg Luck撰文描述了分布式缓存与NoSQL数据库的相似性。InfoQ就此采访了他，讨论了该方案的利弊之处。
InfoQ：你能否就分布式缓存解决方案与NoSQL数据库做个对比？
Greg Luck：分布式缓存通常会把数据放在内存里，用于降低延时。NoSQL数据库是没有R的DBMS（即没有关系的数据库管理系统），一般也缺乏对事务和其他高级特性的支持。对于不支持关系的系统，表关系的关联是SQL里最麻烦的部分，这也正是NoSQL这个名字的起源。
其中一种NoSQL数据库是键值存储。典型的例子包括Dynamo、Oracle NoSQL 
Database和Redis。缓存也是键值存储，因此说这两者是相关的。很多缓存实现能被配置为可持久化的，之所以很多时候不那么做，是因为缓存是要提
升性能而不是做持久化。而NoSQL数据库则与此相反，它是用来做持久化的。
持久化缓存也可当作键值NoSQL数据库来使用。NoSQL也提到了Big Data，通常是指比能放进一个单独的RDBMS节点的量要大的数据，一般从几TB到几PB。
分布式缓存通常用于降低事务性数据的延时，这些数据开始时并不大，但慢慢就会往Big 
Data这个方向发展。由于缓存将数据保存在内存里，这提高了存储的成本，而且需要限制数据的大小。如果依赖于堆存储，每个服务器节点可能只有可怜的
2GB。如果依赖于分布式缓存，Ehcache还提供了堆外存储，每台服务器可以存储几百GB数据，可以用作TB级别的缓存。
持久化、分布式的缓存可以适用于一些NoSQL的场景。NoSQL数据库也可以应对一些缓存的场景，只是延时稍高而已。
InfoQ：从架构角度来看，分布式缓存和NoSQL数据库有什么相似之处吗？
Greg：它们都想提供优于RDBMS的TPS和可扩展性。为此，它们都在功能上做了简化，抛开了那些麻烦的问题，比如表关联、存储过程和ACID事务。
虽然Java缓存领域里有JSR 107，它为Spring和Java EE程序员提供了一套标准的缓存API，但是比起标准化接口，它们都更倾向于使用私有接口。
它们都采用对客户端透明的方式对数据进行分区，做向外扩展。非Java产品向上扩展做得也很好。拥有Terracotta BigMemory，我们在Java平台上的向上扩展方面也做得很特别。最后，两者都可以部署在常见的硬件和操作系统上，这让它们都能理想地运行于云端。
InfoQ：架构上这两项技术又有何不同呢？
Greg：NoSQL和RDBMS通常使用的是磁盘。磁盘是机械设备，延时很厉害，因为寻道时间是磁头移动到正确的磁道的时间，读写时间依赖于磁盘的RPM。NoSQL尝试优化磁盘的使用，例如，仅仅在磁头当前位置追加日志，偶尔才刷新到磁盘上。相反，缓存主要都把数据放内存里。
NoSQL和RDBMS的客户端很薄（想想Thrift或JDBC），只是在网络中传输数据，而像Ehcache这样的缓存使用进程内存储和远程存
储，因此常用请求在本地就能被成功处理。在分布式缓存上下文中，每个应用程序服务器的进程内存储中都会缓存热点数据，增加服务器数量并不会增加网络或后端
的负载。
RDBMS专注于成为通用的SOR（System of 
Record）。NoSQ希望成为某类特定数据类型的SOR，比如键值对、文档、稀疏表（宽表）或图。缓存着眼于性能，一般会与RDBMS或NoSQL数
据库结合使用，数据类型就是SOR。往往缓存中会存储Web服务调用的结果，业务对象的计算结果，这个结果可能需要成百SOR调用才能得到。
像Ehcache这样的缓存部分运行在应用程序的操作系统进程里，部分运行在网络那头自己机器的进程里。但也不是全部分布式缓存都这样：memcache就是一个例子，所有的数据都跨网络存储。
InfoQ：哪类应用程序最适合这种方式？
Greg：这还得从先前的问题说起，要将分布式缓存用于你现有的应用程序，通常只需要很小的工作量，而NoSQL则需要做很多事，还有大的架构变更。
因此适用分布式缓存的第一类应用程序是现有系统，特别是有以下需要的：

    由于使用量或负载激增而需要向外扩展
    为达到SLA而需要有更低的延时
    为了将大型机这样的昂贵基础设施的使用减到最低
    减少Web服务调用而带来的费用
    应对极端负载高峰（比如黑色星期五一样的促销）

InfoQ：这种方式有什么局限么？
Greg：缓存，置于内存之中，在大小上有制约，它们的技术局限受限于有多少内存给它们使用（下面还会具体展开说明）。
缓存，就算它提供持久化功能，也未必算的上作为SOR的上选。缓存故意回避了备份到磁盘和从中还原的复杂功能，尽管也有简单的。RDMBS在过去30年里开发了丰富的备份、还原、迁移、报表和ETL特性。而NoSQL则介于两者之间。
缓存提供了改变数据与访问数据的编程API。NoSQL和RDBMS则提供了工具，可以执行脚本化语言（比如SQL、UnSQL和Thrift）。
但关键一点是要记住缓存并不想成为你的SOR。它能轻松地与你的RDBMS和睦相处，为此它并不需要RDBMS所有用的复杂功能。
InfoQ：以后分布式缓存解决方案、NoSQL数据库和传统RDBMS互相协同工作，你有何看法？
Greg：速度大幅快于RDBMS，依赖于部署拓扑的NoSQL，还有数据访问模式，分布式缓存可以位于这三者之间的任意位置。那些需要更低延时的人可以将缓存作为NoSQL的一个补充，就像现在对待RDBMS那样。
稍有不同的是，在你想将RDBMS扩展到多个节点时，经常会难于扩展，或者影响编程契约，或者受制于CAP做出权衡；而使用NoSQL，就算只使用一个节点，你也可以简单地将其视为多节点安装。如果是向上扩展就没有这些问题。在RDBMS中，添加缓存是为了避免向外扩展会遇到的麻烦。通常缓存能解决系统的容量问题，你不用费太多力气。因此当需要向外扩展时，加入缓存吧。
对于NoSQL而言，内建了向外扩展的能力，在需要低延时的时候使用缓存吧。
查看英文原文：Distributed Cache as a NoSQL Data Store?
   	
   	
   		
   				
   				
   					译者
   					
丁雪丰

   				
   				
   				是InfoQ中文站编辑，满江红翻译组核心成员，出版过《Spring攻略》、《JRuby实战》等多部译著。主要关注领域：企业级应用、海量数据计算、动态语言应用等。 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;
   		</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 11:39:45</pubDate>
</item>
<item>
<title>马无夜草不肥：程序员做业余项目的重要性</title>
<link>http://oss.org.cn/html/36/n-62136.html</link>
<text>	
	　　业余项目之所以重要，有以下几个原因。编程是一种创造过程，业余项目允许程序员在没有截止日期或各种限制的条件下，以探索形式编程。
　　探索新技术
　　每天都会不断有新技术出现，而业余项目则是最佳的试验场。作为业余项目，你不必为 bug 或者性能问题担心，即使网站崩溃也没有问题，因为你不靠它来领薪水。
　　从头创造
　　我所从事的大多数都是为现有的产品做一些维护，增加一些新特性，修复 bug，解决性能问题，重构现有代码。虽然我也从头编写过一些软件，但这些基础工作只需要一两个月，接下来我又进入维护模式了。
　　业余项目经常需要从头构建。我喜欢这个步骤，因为我不但复习了已经掌握的所有东西而且把它们应用到创建一个新的（更好的）项目中。
　　易于启动
　　进行业余项目也是一项避免分析瘫痪（analysis paralysis）的练习。如果你从头开始会有各种各样的可能性。避免的方法是给出一个短列表上面列出所有必须具有特性，接下来启动一个 beta 版本实现那些特性，即所谓的最小可行性产品［TODO］。
　　编注1：分析瘫痪：对某个问题由于过度分析或过度思考某种情况，以至于没有作出决定或者采取行动。在不同的领域，分析瘫痪有具体的解释，详见维基百科解释： http://en.wikipedia.org/wiki/Analysis_paralysis
　　避免精疲力尽
　　为你的热情工作，为乐趣而工作。如果你是一个开发人员，但由于不喜欢现在所从事的工作而感到精疲力尽，试着去做一个属于自己的业余项目吧。它会让你回味为什么编程是如此的有趣。
　　保持你的技能不会落伍
　　也许你日常工作使用的是过时的技术。也许你对自己目前掌握的技能感到厌倦，想要去学一些新技术。业余项目是跟踪软件最新潮流的最佳办法。没有尝试过 node.js？太好了，用它去做一个小的项目。突然之间，你会发现你有新学会的技术可以炫耀了。
　　完成你的业余项目
　　对于业余项目，一个问题是它们可能始终没有完成。刚开始的时候你充满热情，但是2个月之后你甚至不记得上一次做项目是什么时候了。尽管如此，还是应当将项目向前推进并完成它。写完这些，我要去完成自己业余项目了。
　　英文原文：Importance of Side Projects
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 来自: blog.jobbole.com</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-16 11:38:38</pubDate>
</item>
<item>
<title>通过 Google Maps 发现新疆大量不明卫星图像</title>
<link>http://oss.org.cn/html/92/n-62092.html</link>
<text>谷歌地图真是强大呀，简直就像探宝一样。最近有闲人发现在景德镇的新疆地区，有很多奇怪的卫星图像，比如上图就是一个很奇怪的正方形，但它是位于山脉里的。阴谋论者认为这是景德镇的一些秘密实验项目，因为这里靠近甘肃的酒泉卫星发射基地，甚至有人拿这一地区跟美国著名的神秘51区相提并论。这个好像是机场，但不知道为什么右侧的机场被涂成了亮蓝色：这个圆环套圆环状的区域也曾经在美国的导弹测试基地被发现过：这个方块套方块区域似乎有一些被导弹摧毁的车辆：Via SAI and GIZMODO</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-15 23:33:17</pubDate>
</item>
<item>
<title>[指南]实战Nginx：取代Apache的高性能Web服务器</title>
<link>http://oss.org.cn/html/91/n-62091.html</link>
<text>Nginx(&quot;engine x&quot;) 是一个高性能的 HTTP Web服务器 和 反向代理服务器，也是一个IMAP/POP3/SMTP 代理服务器。&amp;nbsp;Nginx&amp;nbsp;是由Igor Sysoev为俄罗斯访问量第二的 Rambler.ru 站点开发的，它已经在该站点运行超过两年半了。Igor 将源代码以类BSD许可证的形式发布。Nginx 已经因为它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名了。Best of open source enterprise software（荣获InfoWorld 2009年最佳开源平台和中间件奖）InfoWorld's 2009 Bossie Awards《实战Nginx：取代Apache的高性能Web服务器》讲解实用清晰，是Nginx方面不可多得的一本好书。文件比较大130M，但很清晰。下载地址：http://oss.org.cn/opentech-doc/nginx/nginx_high_performance_web_server.pdf</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-15 12:02:44</pubDate>
</item>
<item>
<title>[视频]HTML5 编制的纪录片One Millionth Tower</title>
<link>http://oss.org.cn/html/90/n-62090.html</link>
<text>HTML5 编制的纪录片One Millionth Tower 重新认识城市及小区发展			随着 Adobe 宣布停止为移动装置开发 Flash Player 并加大对 HTML5 的投资，相信在不久的将来，网络上的 HTML5 网页会比现在更加普及。来自加拿大的 National Film Board 就刚刚发表了一套以 HTML5 和 WebGL 技术制作的「互动纪录片」。纪录片的背景地点为加拿大多伦多市的一个小区，目的是希望通过对市容的「重新幻想」去反省向高发展的都市模式和小区模式。		在纪录片中，大家可以像玩射击游戏一样，用鼠标光标来控制「角色」目光的方向，用四个箭头键来移动。走到图片面前点击则可以看到研究队伍的「幻想」成果；NFB 同时将纪录片的源始码放上他们的网页，满足各位有兴趣深度发掘的朋友。继续阅读里有纪录片的预告片，点击第一个引用来源则可以走进幻想世界。观看该视频：</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-15 11:29:58</pubDate>
</item>
<item>
<title>Intel最新爆料新处理器架构 Haswell首次全方位揭秘</title>
<link>http://oss.org.cn/html/46/n-62046.html</link>
<text>Haswell开始摩拳擦掌&amp;nbsp;&amp;nbsp;&amp;nbsp; 除了近在眼前的Sandy Bridge-E、还得半年的Ivy Bridge，Intel再下一代处理器Haswell也已经开始摩拳擦掌了，本月初各大主板厂商就接到了新平台正式启动的信号。国内论坛网友 bigpao007今天就曝光了一组来自Intel官方的幻灯片，详尽介绍了Haswell平台的整体规划和技术特性。&amp;nbsp;&amp;nbsp;&amp;nbsp; Haswell只是处理器代号，搭配的芯片组是Lynx Point(按惯例将成为8系列)，此外还有新款Wi-Fi无线网卡(WiMAX未提及)、千兆以太网控制器等组件，整个平台则叫做“Shark Bay”，而且这是桌面平台、笔记本平台的通用代号。 新平台新在哪里？综合来说包括以下几个方面：● 响应性改进：下一代Smart Connect智能连接技术、硬件软件优化2秒钟启动、CPU性能改进● 功耗改进：供电优化与SOix、面板自我刷新(笔记本屏幕)、处理器/芯片组/网络热设计功耗降低与待机功耗改进、可配置的TDP(热设计功耗)与LPM(低功耗管理?)● 多媒体改进：图形核心性能增强(GT1/GT2/GT3三个级别)、实时高清视频转码改进、eDP带宽与WiDi无线支持立体3D、HDMI 1.4/DisplayPort 1.2输出标准● 封装改进：处理器与芯片组单芯片封装、芯片组封装更小更薄且被动散热● 计算改进：近场通信(NFC)、处理器与芯片组超频、Thunderbolt、AVX 2.0指令集等等&amp;nbsp;&amp;nbsp;&amp;nbsp; 上边很多技术有的已经进行过展示，有的则没有任何解释，不清楚具体情况，而且有不少都是仅限于笔记本移动平台的，比如NFC就不好说桌面是否也有。 Haswell处理器新架构&amp;nbsp;&amp;nbsp;&amp;nbsp; 三芯片平台简化为双芯片后，Intel将再次尝试单芯片设计，也就是把处理器、芯片组封装到一起，但并不是原生整合，而是多芯片封装(MCP)，而且双芯片设计也会继续存在，并有两套。&amp;nbsp;&amp;nbsp;&amp;nbsp; 单芯片设计专门面向Ultrabook超极本移动平台，BGA封装，尺寸40×24×1.5毫米，最多两个核心，图形核心最高GT3，芯片组是低功耗版的Lynx Point LP，内存支持双通道的低压DDR3L、LP-DDR3，支持连接控制技术SOix。电源管理状态可以达到C10，热设计功耗仅仅15W。&amp;nbsp;&amp;nbsp;&amp;nbsp; 普通移动平台是双芯片设计，处理器BGA封装，尺寸37.5×32毫米，最多四核心，图形核心最高GT3，搭配DDR3L低压双通道内存。电源状态至C7，热设计功耗有37W、47W、57W三种级别——现在最高才不过45W啊。&amp;nbsp;&amp;nbsp;&amp;nbsp; 第二套双芯片设计通用于桌面和移动平台，处理器封装分别为rPGA、LGA，四核心或双核心，图形核心降级为GT2，内存支持双通道DDR3L(移动)、DDR3/L(桌面)。电源状态至C6，热设计功耗级别35W、45W、65W、95W——和现在的Sandy Bridge如出一辙，但是高于顶多77W的Ivy Bridge。 &amp;nbsp;&amp;nbsp;&amp;nbsp; Haswell处理器的架构和Ivy Bridge、Sandy Bridge非常相似，也包括处理器核心、三级缓存(LLC)、图形核心、系统助手、内存控制器(最高频率1600MHz)、PCI-E 3.0控制器、DMI总线控制器、显示端口等等。&amp;nbsp;&amp;nbsp;&amp;nbsp; Haswell继续采用22nm工艺制造，封装接口在桌面上改成1150个触点的Socket H3，又称LGA1150(Sandy/Ivy Bridge都是Socket H2 LGA1155)，笔记本上改成947个针脚的Socket G3(现在是Socket G2)。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-14 16:21:50</pubDate>
</item>
<item>
<title>koji -- 自动开发环境</title>
<link>http://oss.org.cn/?action-viewnews-itemid-62045</link>
<text>&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-14 13:28:06</pubDate>
</item>
<item>
<title>【观点】什么时候学习编程都不晚</title>
<link>http://oss.org.cn/html/01/n-62001.html</link>
<text>导读：作者Jean Hsu现就职于Pulse，是一名Android工程师。她近日写了一篇文章《It’s Not Too Late to&amp;nbsp;Learn How to Code》。文中提到了她自己在学习代码的过程中虽然艰辛但却很有收获。她强调，心动不如行动，要将想法实现化。她还为大家推荐了一个Stanford的学习课程，希望对大家能所帮助。现将文章摘译，以下是内容：
编程就如一种超能力。通过它，你可以创造出成千上万的人们可以看到的东西；你可以改变人们的行为方式、思想方式及与他人交互的方式。这棒极了，但是，我也见过好多人，他们认为这是一种他们力所不能及的能力。我也见过很多非技术出身的人，他们似乎以为这种超能力只会赋予那些足够幸运的人——他们在很小的时候就拥有了这种能力。
在高中，我曾学习了两门计算机技术的课程，所以在大学时我才有充分的信心去面对编程。如果在此之前没学过这些课程，编程可能会成为我大学中的一个噩梦。我最钦佩的就是那些在大学前没有编程经验的同学，他们仍然可以学的很好。
我的大学以外的几个朋友也和我同样感受。他们希望自己早些认识到编程的重要性，现在还能有多少机会可以打开“技术”的大门，并且期待着自己能学会代码。这直接的表达出他们对代码的渴望同时他们也认识到现在为时太晚，他们的年龄在24，25左右。
人们很容易认为这为时已晚，因为看到很多人用了大学四年的时间来学习编程。但这四年里我只学习了计算机科学吗？前两年我一直在寻找主修专业，后两年我陆续学习了八门课程，但其中很多都与以应用程序为中心的编程无直接关联，当时我认为这些课程都大部分人希望选修的。在大学整整四年里，我只学了一门与应用程序开发有关的课程。刚开始，我没有HTML和CSS的实践知识，但是我和其他两位同样没有经验的同学共同努力用MySQL，PHP和HTML/CSS共同开发一个Web应用程序。
人们很容易认为这为时已晚，因为已经有很多技术大牛了。但是，最重要的是要记住每个开始接触编程的人都是一个初学者，如何才能成为技术大牛，就要肯去开始，肯去钻研。
所以如果你内心想“真希望我已学会了编程”，那为什么不开始学着呢？当你开始学时，请牢记下面几个提醒：
1.它很困难。做一件事，起初可能需要花费更多的时间，但以后会越来越容易。当然，有些人更倾向于编程所需要的逻辑思维，但我认为大部分情况下，大家并不认为他们为此做好了准备。当然了，让大家相信编程“很困难”以及普通人一般都“不是绝顶聪明的”，可能会稍稍安慰一下我们的自尊，让我们感到我们是具有高智商精英团队中的一员。
2.在心理上对未来将面临的困难做好准备。我经常会想我是不是受到了什么诅咒，因为我每次尝试新东西（如新的开发环境、工具、库等）时，总会出错。花了好几年时间，我终于意识到针对各种不同操作系统、软件版本等的说明文档不是过时，就是很难理解。
3.你确实很喜欢编码吗？不要想它是否太难。想想你是否对它感兴趣？当你花了好几个小时调试了一个程序，最终它可以按预期地运行时，你会十分兴奋吗？你希望花几个小时去完成一件事吗？这些都是软件吸引我的原因——我从来不担心我是否能把它开发出来。
有很多好的资源可以帮助你学习编程，但我只坚持Stanford的网站上学习相关知识。Stanford可以提供很多免费的在线软件课程。（编译/张祺）
原文链接：It’s Not Too Late to Learn How to Code</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:54:28</pubDate>
</item>
<item>
<title>深入浅出Rhino：Java与JS互操作</title>
<link>http://oss.org.cn/html/00/n-62000.html</link>
<text>2011年10月6日，一年一度的JavaOne大会隆重举行。JavaOne2011大会的主题之一介绍针对不同Java平台的产品路线图，这其中包括移动版(ME，Micro Edition)、标准版(SE，Standard Edition)以及企业版(EE，Enterprise Edition)。
Java SE的亮点之一就是Oracle详细阐述Java SE 8路线图。我们先来看看Java SE 8新增了哪些主要功能：
Java SE 8 新增主要功能
1、为提高开发人员工作效率，更好地利用多核处理器和增强对Java集合APIs的大容量数据处理功能，推出的Lambda表达式(“关闭”)。
2、原始Java模块系统(“项目Jigsaw”)将简化应用程序的构建、包装以及部署，让一个完全模块化的Java平台能在服务器、客户和嵌入式系统上进行定制化部署。
3、在JVM上的JavaScript改进，包括一个为JVM优化的全新JavaScript引擎Nashorn和全面的Java / JavaScript互操作性。
4、具有JavaFX 3.0形式的下一代Java客户端。包括多点触摸功能的现代设备支持。
5、完成的HotSpot / JRockit JVM集聚项目，包括性能增强和第二代的Java Flight Recorder。
其中，笔者最关心的是第三条，即JVM对JavaScript的改进。它的核心组件是JavaScript引擎Nashorn，它实现了Java与JavaScript互操作性。Nashorn一词与Rhino类似，汉语意思均为犀牛。而巧合的是，Rhino就是JavaScript引擎，它的目的就是实现Java与JavaScript的互操作性。那么Rhino究竟是什么呢?为什么说Nashorn是新一代JavaScript引擎?Rhino有什么特性?Rhino与Java及JavaScript有什么关系呢?本文将会为您一一解答。
什么是Rhino?
Rhino 是JavaScript 的一种基于Java的实现，原先由Mozilla开发，现在被集成进入JDK 6.0。下面这两行代码恰好说明了这一点。import&amp;nbsp;sun.org.mozilla.javascript.internal.Context; &amp;nbsp;import&amp;nbsp;sun.org.mozilla.javascript.internal.Scriptable; &amp;nbsp;
Rhino汉语意思为犀牛，它的名字来源于 O'Reilly 关于 JavaScript 的书的封面，如图一所示。
&amp;nbsp;

&amp;nbsp;
图一 “犀牛“的来源
Rhino的特点如下：
JavaScript 1.5的全部特性
◆ 允许使用脚本直接操作Java
◆ 提供JavaScript Shell执行其它JavaScript脚本
◆ 提供JavaScript编译器将JavaScript源程序转换成Java类文件
Rhino相关背景
Rhino的历史可追溯到1997 年。Netscape计划开发Java版的Navigator，即Javagator。它也就是 Rhino 的前身。虽然 Javagator 未能开花结果，但是Rhino，作为Netscape 对 JavaScript 的移植语言，经过时间考验存活了下来。
如今，随着 Rhino 开放源代码，越来越多的开发者参与了 Rhino 的开发。随着Rhino的愈加成熟，越来越多的用户选择使用了Rhino。
Rhino语言特点
Java是一种面对对象的编译型语言。它首先将源代码编译成二进制字节码(bytecode)，然后依赖各种不同平台上的虚拟机来解释执行字节码，从而实现了“一次编译、到处执行”的跨平台特性。
JavaScript是一种动态、弱类型、基于原型的客户端脚本语言。JavaScript 包括一个基于对象的 API，称为文档对象模型(Document Object Model)或 DOM，用以访问和操作 Web 页面的内容，给HTML网页添加动态功能。
Rhino是一个介于Java与JavaScript之间的语言。它的基础是 Java 语言，这使得它简单易学，但相比于JavaScript脚本语言来说，它又太过复杂。不过，Rhino 的主要缺点也正是它的强大之处，Rhino 是一种轻量级的、功能强大的脚本语言。Rhino 使用原型而不是类，这使它比很多脚本语言更适合开发 GUI 应用程序，在考虑性能和风格等因素时更是如此。
Rhino语言特点的优缺点
一方面，作为一种动态类型的、基于原型的脚本语言，Rhino借用了很多JavaScript语法。比如，Rhino不再使用语句结束符( ; )，放宽了变量声明规则，并且极大地简化了修改和检索对象属性的语法。另一方面，作为JavaScript 的Java实现，Rhino语法非常类似于Java编程语言。比如，Rhino采用了与 Java 编程语言相似的循环和条件结构，并且遵循类似的语法模式来表示这些结构。
Rhino 和 Java 语言之间有一些显著的区别。Rhino 是一种基于原型的(prototype-based)语言，而不是一种基于类的(class-based)语言。Rhino中，函数和变量的声明中看不到类型，取而代之的是，使用 function关键字声明函数，使用 var关键字声明局部变量。
Rhino的原始想法是将JavaScript 编译成Java字节码执行，即采用编译执行的方式。由于由于JVM存在垃圾收集、编译和装载过程的开销过大等限制，Rhino采用了解释执行的方式。
如何下载Rhino安装包
用户可以从官网http://www.mozilla.org/rhino/ 下载Rhino，笔者下载的版本为rhino1.7R3.zip。
其中，主要的目录与文件的如下：
Src：Rhino相关Jar包对应的源代码
Javadoc：Rhino相关Jar包对应的Java说明文档
Examples：Rhino相关示例
build.xml：Rhino工程对应的Ant文件
js.jar：Rhino对应的Jar包
Rhino环境配置
在使用之前，我们需要配置环境及运行js脚本。具体如下：
1、 将下载包中的js.jar文件加入系统CLASSPATH中。
2、 运行js解释器java org.mozilla.javascript.tools.shell.Main。进入交互模式：Rhino&amp;nbsp;1.7&amp;nbsp;release&amp;nbsp;3&amp;nbsp;2011&amp;nbsp;05&amp;nbsp;09 &amp;nbsp;　js&amp;gt;&amp;nbsp;
注：第一行为js解释器的版本号，后面跟着提示符 js&amp;gt;
下面我们将利用js shell，使用JavaScript操纵Java对象。
&amp;nbsp;
&amp;nbsp;

&amp;nbsp;
JavaScript操纵Java对象
1. Rhino如何访问Java包与类文件
Java语法规定，任何代码都必须以class文件的形式存在，而每个class文件必须属于一个package，默认为default。而JavaScript并没有类似package的层级结构概念，那么如何使用Rhino访问Java类文件呢?
Rhino定义了一个top-level变量Packages。变量Packages对应的所有属性均对应Java包名。比如，我们需要访问某一个Java的Package com.example.js&amp;gt;&amp;nbsp;Packages.com.example &amp;nbsp;[JavaPackage&amp;nbsp;com.example] &amp;nbsp;
简单起见，我们也可以去掉变量Packages，直接输入Java包名。因此，上述Package com.example等价与com.example，如下：js&amp;gt;&amp;nbsp;com.example &amp;nbsp;　[JavaPackage&amp;nbsp;com.example] &amp;nbsp;
刚才演示了如何通过js shell访问Java包，访问Java类的方式类似。假如我们需要访问标准的Java 文件类java.io.File，如下。　js&amp;gt;&amp;nbsp;java.io.File &amp;nbsp;[JavaClass&amp;nbsp;java.io.File]&amp;nbsp;
或者，为避免输入全名，我们先导入包，然后输入Class类名，如下：js&amp;gt;&amp;nbsp;importPackage(java.io) &amp;nbsp;　js&amp;gt;&amp;nbsp;File &amp;nbsp;　[JavaClass&amp;nbsp;java.io.File]&amp;nbsp;
这里的importPackage(java.io)，在效果上等价于Java声明import java.io.*; 不同的是，Java会隐式import java.lang.*，而Rhino不会。因为Rhino定义的对象Boolean, Math, Number, Object, String等与Java语法完全不同，两者无法等价。
这里需要注意的是，Rhino对该语法的错误处理机制，当被访问的类存在时，Rhino加载该class，而当其不存在时，则把它当成package名称，而并不会报错。例如，当访问一个不存在的类com.example.AAA时，输入如下。js&amp;gt;&amp;nbsp;com.example.AAA &amp;nbsp;[JavaPackage&amp;nbsp;com.example.AAA]&amp;nbsp;
仅当访问类AAA时，Rhino才会报错。
2. Rhino如何与Java对象交互
与Java类似，Rhino使用new操作符创建对象。js&amp;gt;&amp;nbsp;new&amp;nbsp;java.util.Date() &amp;nbsp;　Thu&amp;nbsp;Nov&amp;nbsp;03&amp;nbsp;16:19:04&amp;nbsp;CST&amp;nbsp;2011&amp;nbsp;
可以使用JavaScript变量存储Java对象，并调用其方法，如下：　js&amp;gt;&amp;nbsp;f&amp;nbsp;=&amp;nbsp;new&amp;nbsp;java.io.File(&quot;sample.txt&quot;) &amp;nbsp;　sample.txt &amp;nbsp;　js&amp;gt;&amp;nbsp;f.isDirectory() &amp;nbsp;　false&amp;nbsp;
对于static方法与变量，调用如下：js&amp;gt;&amp;nbsp;java.lang.Math.PI&amp;nbsp;
3.141592653589793js&amp;gt;&amp;nbsp;java.lang.Math.cos(0)&amp;nbsp;
1
在JavaScript中，方法本身就是对象，这一点与Java不同。我们可以通过下列方式查看方法的重载：js&amp;gt;&amp;nbsp;f.listFiles &amp;nbsp;function&amp;nbsp;listFiles()&amp;nbsp;{/* &amp;nbsp;java.io.File[]&amp;nbsp;listFiles() &amp;nbsp;java.io.File[]&amp;nbsp;listFiles(java.io.FilenameFilter) &amp;nbsp;java.io.File[]&amp;nbsp;listFiles(java.io.FileFilter) &amp;nbsp;*/} &amp;nbsp;
输出中列出三个重载方法。第一个为无参函数，第二与第三个对应的参数分别为FilenameFilter与FileFilter。
另一个比较有意思的特点是通过构造for..in，查看对象对应的所有方法与变量。如下：js&amp;gt;&amp;nbsp;for&amp;nbsp;(i&amp;nbsp;in&amp;nbsp;f)&amp;nbsp;{&amp;nbsp;print(i)&amp;nbsp;} &amp;nbsp;exists &amp;nbsp;parentFile &amp;nbsp;mkdir &amp;nbsp;toString &amp;nbsp;wait &amp;nbsp;[44&amp;nbsp;others] &amp;nbsp;
这里列出的方法一部分来自于父类，比如wait来自父类java.lang.Object。
对于JavaBean，Rhino也提供按名字访问的简单方式。比如，通过下面这种方式，我们就可以调用File对象的getName与isDirectory方法：　js&amp;gt;&amp;nbsp;f.name &amp;nbsp;　test.txt &amp;nbsp;js&amp;gt;&amp;nbsp;f.directory &amp;nbsp;　false&amp;nbsp;
&amp;nbsp;
&amp;nbsp;

&amp;nbsp;
3. Rhino如何实现Java接口
JavaScript当中，方法本身就是对象。下面我们通过JavaScript语法{propertyName: value}声明一个JavaScript方法，并调用该方法如下：　js&amp;gt;&amp;nbsp;obj&amp;nbsp;=&amp;nbsp;{&amp;nbsp;run:&amp;nbsp;function&amp;nbsp;()&amp;nbsp;{&amp;nbsp;print(&quot;\nrunning&quot;);&amp;nbsp;}&amp;nbsp;} &amp;nbsp;　[object&amp;nbsp;Object] &amp;nbsp;　js&amp;gt;&amp;nbsp;obj.run() &amp;nbsp;　running&amp;nbsp;
现在我们构造一个JavaScript对象，实现Runnable接口。并将该对象作为参数，构造一个新的线程，并启动该线程。　js&amp;gt;&amp;nbsp;r&amp;nbsp;=&amp;nbsp;new&amp;nbsp;java.lang.Runnable(obj); &amp;nbsp;adapter1@291aff &amp;nbsp;js&amp;gt;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;new&amp;nbsp;java.lang.Thread(r) &amp;nbsp;Thread[Thread-0,5,main] &amp;nbsp;js&amp;gt;&amp;nbsp;t.start() &amp;nbsp;js&amp;gt;&amp;nbsp;running&amp;nbsp;
最后的js&amp;gt;提示符与新线程的打印输出running的先后顺序是随机的，取决于线程的调度策略。
从后端的处理流程来讲，Rhino首先为Runnable接口的实现类生成Java字节码文件。然后调用JavaScript对象定义的Run方法。
4. Rhino如何创建Java 数组
Rhino使用Java的发射机制生成数组。下面是生成2个String对象的代码：　js&amp;gt;&amp;nbsp;array&amp;nbsp;=&amp;nbsp;java.lang.reflect.Array.newInstance(java.lang.String,&amp;nbsp;2); &amp;nbsp;[Ljava.lang.String;@a20892 &amp;nbsp;js&amp;gt;&amp;nbsp;array[0]&amp;nbsp;=&amp;nbsp;&quot;Double&quot; &amp;nbsp;Double &amp;nbsp;js&amp;gt;&amp;nbsp;array[1]&amp;nbsp;=&amp;nbsp;&quot;Life&quot; &amp;nbsp;Life &amp;nbsp;js&amp;gt;&amp;nbsp;array[0]&amp;nbsp;+&amp;nbsp;array[1] &amp;nbsp;DoubleLife &amp;nbsp;　js&amp;gt;&amp;nbsp;
5. Rhino如何捕获与处理异常
与Java类似，Rhino使用try...catch关键字处理异常。　js&amp;gt;&amp;nbsp;function&amp;nbsp;classForName(name)&amp;nbsp;{ &amp;nbsp;try&amp;nbsp;{ &amp;nbsp;return&amp;nbsp;java.lang.Class.forName(name); &amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(e&amp;nbsp;if&amp;nbsp;e.javaException&amp;nbsp;instanceof&amp;nbsp;java.lang.ClassNotFoundException)&amp;nbsp;{ &amp;nbsp;print(&quot;Class&amp;nbsp;&quot;&amp;nbsp;+&amp;nbsp;name&amp;nbsp;+&amp;nbsp;&quot;&amp;nbsp;not&amp;nbsp;found&quot;); &amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(e&amp;nbsp;if&amp;nbsp;e.javaException&amp;nbsp;instanceof&amp;nbsp;java.lang.NullPointerException)&amp;nbsp;{ &amp;nbsp;print(&quot;Class&amp;nbsp;name&amp;nbsp;is&amp;nbsp;null&quot;); &amp;nbsp;} &amp;nbsp;}&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;js&amp;gt;&amp;nbsp;classForName(&quot;NonExistingClass&quot;); &amp;nbsp;Class&amp;nbsp;NonExistingClass&amp;nbsp;not&amp;nbsp;found &amp;nbsp;js&amp;gt;&amp;nbsp;classForName(null); &amp;nbsp;Class&amp;nbsp;name&amp;nbsp;is&amp;nbsp;null&amp;nbsp;
6. Rhino如何调用js文件
当然，除了在命令行的方式，我们还可以使用操纵JavaScript文件。下面是一段JavaScript代码，主要目的是判断该数是否为质数。代码如下：function&amp;nbsp;isPrime&amp;nbsp;(num) &amp;nbsp;{ &amp;nbsp;if&amp;nbsp;(num&amp;nbsp;&amp;lt;=&amp;nbsp;1)&amp;nbsp;{ &amp;nbsp;print(&quot;Enter&amp;nbsp;an&amp;nbsp;integer&amp;nbsp;no&amp;nbsp;less&amp;nbsp;than&amp;nbsp;2.&quot;) &amp;nbsp;return&amp;nbsp;false &amp;nbsp;} &amp;nbsp;var&amp;nbsp;prime&amp;nbsp;=&amp;nbsp;true&amp;nbsp;var&amp;nbsp;sqrRoot&amp;nbsp;=&amp;nbsp;Math.round(Math.sqrt(num)) &amp;nbsp;for&amp;nbsp;(var&amp;nbsp;n&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;prime&amp;nbsp;&amp;amp;&amp;nbsp;n&amp;nbsp;&amp;lt;=&amp;nbsp;sqrRoot;&amp;nbsp;++n)&amp;nbsp;{ &amp;nbsp;prime&amp;nbsp;=&amp;nbsp;(num&amp;nbsp;%&amp;nbsp;n&amp;nbsp;!=&amp;nbsp;0) &amp;nbsp;} &amp;nbsp;return&amp;nbsp;prime &amp;nbsp;} &amp;nbsp;
我们保存文件为C:\isPrime.js。然后我们需要调用load方法加载该脚本。最后，我们可以调用isPrime方法来判断是否为质数。js&amp;gt;&amp;nbsp;load(&quot;C:/isPrime.js&quot;) &amp;nbsp;js&amp;gt;&amp;nbsp;isPrime(33); &amp;nbsp;false &amp;nbsp;js&amp;gt;&amp;nbsp;isPrime(31) &amp;nbsp;true&amp;nbsp;
需要注意的是，注意：文件分隔符需要调整，是“/”而不是“\”。
上述部分示例可以参见Rhino官方网站https://developer.mozilla.org/en/Scripting_Java。另外examples目录下很多例子都值得参考与学习。
刚才使用JavaScript操纵Java对象。接下来我们看看如何使用Java程序访问JavaScript
Java对象操纵JavaScript
下面是一段Java代码，用来运行数学表达式。代码如下：package&amp;nbsp;com.example; &amp;nbsp;import&amp;nbsp;sun.org.mozilla.javascript.internal.Context; &amp;nbsp;import&amp;nbsp;sun.org.mozilla.javascript.internal.Scriptable; &amp;nbsp;publicclass&amp;nbsp;Test&amp;nbsp;{ &amp;nbsp;publicstaticvoid&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{ &amp;nbsp;Context&amp;nbsp;cx&amp;nbsp;=&amp;nbsp;Context.enter(); &amp;nbsp;try&amp;nbsp;{ &amp;nbsp;Scriptable&amp;nbsp;scope&amp;nbsp;=&amp;nbsp;cx.initStandardObjects(); &amp;nbsp;String&amp;nbsp;str&amp;nbsp;=&amp;nbsp;&quot;3/(1+2)&quot;; &amp;nbsp;Object&amp;nbsp;result&amp;nbsp;=&amp;nbsp;cx.evaluateString(scope,&amp;nbsp;str,&amp;nbsp;null,&amp;nbsp;1,&amp;nbsp;null); &amp;nbsp;System.out.println(str&amp;nbsp;+&amp;nbsp;&quot;=&quot;&amp;nbsp;+&amp;nbsp;Context.toNumber(result)); &amp;nbsp;}&amp;nbsp;finally&amp;nbsp;{ &amp;nbsp;Context.exit(); &amp;nbsp;} &amp;nbsp;} &amp;nbsp;} &amp;nbsp;
运行Java com.example.Test，输出结果如下：
3/(1+2)=1.0
之所以是1.0而不是1，是因为Context.toNumber(result)返回的类型为double。另一个值得注意的是，这里import的package属于JDK 6.0。因此，在不需要Rhino提供的js.jar，该程序仍能独立运行。
虽然Rhino作为JavaScript运行时，功能非常强大，但在性能上却无法与其他的JavaScript运行时(比如Google Chrome的V8 JavaScript Engine)相提并论。值得注意的是，JRuby专家Charles Oliver Nutter也开始参与Rhino项目中，以提升Rhino JavaScript运行时的速度，进而实现与V8的竞争。而Oracle在对JVM上的JavaScript改进与优化，我们有理由期待，在未来，新一代JavaScript运行时Nashorn的速度将会得到极大的提升。
参考资料：http://www.mozilla.org/rhino/
原文：http://tech.it168.com/a2011/1110/1271/000001271695_all.shtml</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:52:16</pubDate>
</item>
<item>
<title>小公司如何部署实施Linux集群网站</title>
<link>http://oss.org.cn/html/99/n-61999.html</link>
<text>其实在许多小公司和小企业里，尤其是牵涉到电子商务和电子广告类的网站，他们的网站也要求作负载均衡高可用的Linux集群，但由于成本的制约，老板都会要求系统架构师设计的方案能够用最少的钱实现这个要求，作为系统架构师的我们，应该如何实现这个要求呢？
　　首先是机房的选择，如果公司有自己的机房那是最好不过的了;如果没有自己的机房，我建议大家放在BGP机房内托管，如果有选择的话，最好是选择带有硬件防火墙的机房，这样在安全方面也有保障;另外，我们如何选择服务器呢？在有了负载均衡高可用的集群环境后，我们完全可以自己组装服务器，这样在性价比上也是最高的。像IBM和DELL的品牌服务器，虽然质量有保障，但价格往往是老板不能够接受的。当然了，一切以稳定为前提和原则。
　　首先是负载均衡设备的选择。我们可以有二种选择，一种是通过硬件来进行进行，常见的硬件有比较昂贵的NetScaler、F5、Radware和Array等商用的负载均衡器，它的优点就是有专业的维护团队来对这些服务进行维护、缺点就是花销太大，所以对于规模较小的网络服务来说暂时还没有需要使用;另外一种就是类似于LVS/HAProxy、 Nginx的基于Linux的开源免费的负载均衡软件策略,这些都是通过软件级别来实现，所以费用非常低廉，小公司和小企业由于费用的问题，所以软件级别的负载均衡是第一选择。
　　至于负载均衡高可用架构，我首推是Nginx/HAProxy+Keepalived的架构，这时很多朋友就有疑问，说你为什么不选择基于LVS+Keepalived的集群方案呢？这是因为我们部署的网站一般都会有动静分离、正则分发的需求，如果我们最前面选用LVS+Keepliaved的架构，那么我们至少又要在中间加一层二级负载均衡的机器，这样比较耗机器，无形中也会增加整个网站的成本;另外，很多朋友都比较担心的一个问题，说Nginx/HAProxy+Keepalived的稳定性不如LVS+Keepalived，这个其实是误解;我们通过十几个项目的成功实施，再加上几年的观察期，发现这些软件级别的负载均衡器的稳定性确实很好，在高并发的情况下宕机的可能性微乎其微，而近段时间实施的一个商业网站，用的是HAProxy+Keepalived，在亿/日高并发流量的冲击下，HAProxy稳如磐石。LVS在性能方面是最好的，尤其是后面的节点(如Web或MySQL数据库服务器)超过10台时，它的性能是最优异的。而小公司的并发和流量一般不是特别大，大概一天持续在100万/日之间，所以我这里也向大家推荐Nginx/HAProxy+Keepalived。
　　如果网站是放在IDC机房托管，而机房最前面也没有硬件防火墙防护时，这时候大家尽量做好流量监控的工作，我一般会在主Nginx/HAProxy上安装MRTG+Nload软件来对流量进行监控，Nload可以对流量进行即时监控，它的安装也是很简单的，我们先安装好RPMForege。RPMforge是Centos系统下的软件仓库，拥用4000多种的软件包，被Centos社区认为是最安全也是最稳定的一个软件仓库，地址为http://pkgs.repoforge.org/rmpforge-release。这个安装成功以后，我们可以通过命令yum -y install nload很轻松的安装nload。输入此命令后，nload软件会很直观的显示流量的即时状态，上半部分ncoming是进入网卡的流量，下半部分Outgoing是从这块网卡出去的流量，每部分都有当前流量(Curr)、平均流量(Avg)、最小流量(Min)、最大流量(Max)、总流量(Ttl)。由于此软件比较直观，我用它来取代之前的即时流量监控软件iptraf，Nload的工作界面如下所示：

　　许多对集群感兴趣的朋友经常问我，如果网站要部署负载均衡高可用的Linux集群方案，而公司又想用最节省成本的方式来实施的话，一般需要几台服务器呢？我的回答是四台，即2+2架构，最前面是二台Nginx/HAProxy+Keeplaived机器，后面是二台配置比较好的Web机器，MySQL数据库采用一主一从的方式，分别放在二台Web机器上，监控的Nagios部署在从Nginx/HAProxy机器上，流量监控我一般放主Nginx/HAProxy，软件采用的是MRTG+Nload的方式，服务器之间的数据同步我采用的是rsync+inotify的方法，当然更多时候，我采用的是纯rsync方式，这样是避免网站有大文件发生改动的时候会产生频繁读盘的麻烦;当然了，如果大家的公司对文件服务器有更高要求的时候(比如图片类型的)，我们可以考虑再增加二台服务器，做成DRBD+Heartbeat+NFS的方式;如果有海量文件需要存储的话，我们可以考虑用MFS，当然这样也是比较耗机器的。
　　像类似以上的小公司集群架构里，我们是如何解决session同步的问题呢？我们可以采用Nginx的ip_hash和HAProxy的balance source机制，它们的原理比较类似，都会让某一客户机在相当长的一段时间内只访问固定的后端的某台真实的Web服务器，这样会话就会得以保持，我们在网站页面进行login的时候，就不会在二台Web服务器之间跳来跳去了，自然也不会出现登陆一次后网站又提醒你没有登陆，需要重新登陆的情况。
　　另外，小公司的Web服务器我们至少有二种选择：一种是Apache，另一种是Nginx，在流量和并发不大的环境下，我们完全可以选择Apache作为我们的Web服务器，虽然它的抗并发能力不高，但它的稳定性是最好的，我的许多电子商务网站都是基于Apache;而大流量大并发的环境，我比较倾向于Nginx。
　　MySQL在这里我用的就是一主一从的设计，虽然很多朋友觉得这种设计比较简单，但事实证明，它也最稳定的。我的电子商务网站也是采用这种架构,几年下来，从没有因为数据库的故障发生过丢单现象，网站上线的前期阶段，我们可以通过PHP程序，把后台的查询功能的入口选择Slave机器，这样可以大大减少主数据库的压力;另外，从MySQL机器并非仅仅只起一个备份和备机的作用，我们完全通过PHP程序将后台的复杂查询转到从MySQL机器上。当然了，MySQL的主从复制状态监控也是非常重要的，我一般是通过Nagios和SHELL脚本双监控的方式。
　　如何能帮企业节约和省钱，这其实也是系统管理员/架构师的一项工作职责，希望大家在工作中能领悟到这点。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:51:47</pubDate>
</item>
<item>
<title>给程序员介绍一些C++开源库</title>
<link>http://oss.org.cn/html/98/n-61998.html</link>
<text>C++开源库，欢迎补充。
C++在“商业应用”方面，曾经是天下第一的开发语言，但这一桂冠已经被java抢走多年。因为当今商业应用程序类型，已经从桌面应用迅速转移成Web应 用。当Java横行天下之后，MS又突然发力，搞出C#语言，有大片的曾经的C++程序员，以为C++要就此沉沦，未料，这三年来，C++的生命力突然被 严重地增强了。主力原因就是开源的软件、基础软件（比如并发原生支持，比如Android必定要推出原生的SDK）、各种跨平台应用的出现。
开源C++库必须具有以下特点：必须是成熟的产品、跨平台的产品、相对通用的库。
一、通用标准类
STL：C++标准模板库，呵呵，它也是开源的嘛。
boost：C++准标准库，它是强大地，江湖称之“千锤百炼”。
-------若掌握，必横行世界。
deelx （轻量级的正则表达式解析类库，国产），boost里有强大的正则表达式解析库，但如果你只想要一个表达式解析，不想要拖上庞大的boost库时……支持一下国货。
iconv /iconvpp ： (C形式的编码转换函数库，
二、XML解析库
C++的XML相关库不少，但是大部分其实都是C库，使用起来自然不那么轻便。其中基于DOM的有TinyXml，基于SAX的当然是Xerces。前者小巧快捷，便于使用，适合做数据交换。后者则是全功能的XML解析器。
哥更倾向于TingyXml.小巧啊！
xerces-c ：最强大的XML解析库了，不是仅仅在开源库里，你尽管把商业的算在内。当然，它的变体，被IBM拿去卖钱的那个版本，多了数百兆的东东来支持各国编码转换，是更强大，但我觉得有小小的，开源的iconv在前不就够了？
根据博友的一篇博文http://www.cnblogs.com/wuqi924/archive/2010/11/18/1880950.html
对三个轻型xml解析开源库：SlimXml、TinyXml、RapidXml，对比如下：
解析这个3.3万行，1.5M大小的xml，三个库分别花了
SlimXml: 22ms
TinyXml: 54ms
RapidXml: 4ms!
结论是，RapidXml果然很强悍，居然比SlimXml快5倍多。
比较欣慰的是，在没有很关注效率的情况下，SlimXml仍然比TinyXml快2.5倍。SlimXml走的是简单小巧路线，源代码只有 32k，而TinyXml和RapidXml的源码分别是147k和141k，有这样的效率可以满意了。因为这个库主要还是针对几十上百行的小文件，解析特别大的xml不在我考虑的范围之内。
还有irrlicht（鬼火引擎）的irrXMl解析器。
xsd (XML 与 C++数据结构的绑定工具)。（商业使用要钱）
三、数据库
我比较喜欢OTL（用于连接数据库）。其他的没用过
四、多媒体类
---摘录别处，自己，没用过
SDL (Simple DirectMedia Layer/多媒体直接访问层，用于游戏编程)。
相应的c开源库有ffmpeg、mpeg4、aac、avc、libmad、mpeg1、flac、ac3、ac3、matroska著名的多媒体播放器 TCPMP 天下闻名的跨平台、嵌入式手持设备视频播放器，
五、网络开发类
1、gSOAP SOAP协议的C++支持库及代码生成工具。
2、ACE 网络编程研究首选。
ACE适合于研究，大型网络编程上效率不足，大型网游里面几乎没有用到ACE的，很多用了ACE的项目也被证明了效率不高。
除了ACE之外，还有很多系统和网络编程方面的程序库。比如在线程库方面，还有ZThread、boost::thread，如果放大到C/C++领域， 还有APR，还有CII。在文件和目录操作方面，boost也有相应的组件，而在网络编程方面有socket++，还有boost::asio，未来的 C++0X中几乎肯定有一个网络编程和一个线程库。然而目前看来，ACE仍然是进行系统和高性能网络编程的首选，其地位在一段时间内不会被撼动。它不但是 一个实用的程序库、框架集，还是一个典范的设计模式应用范例，非常值得学习。
3、有博友回复到POCO。我整理如下：
开源C++库，称为POCO（POrtable COmponents – 可移植元件），非常方便好用。
特性：
* 线程，程序同步及多线程编程高级抽象
* 流及文件系统访问
* 共享库将类加载
* 功能强大的日志和错误报告
* 安全及加密
* 网络编程 (TCP/IP 套接字, HTTP客户端和HTTP服务器, FTP, SMTP, POP3, 等)
* XML解析 (SAX2 和 DOM) 及生成
* 配置文件及选项处理
* SQL数据库访问(ODBC, MySQL, SQLite)
可以运行的平台包括：
* Windows
* Mac OS X
* iPhone OS
* (embedded) Linux
* HP-UX
* Tru64
* Solaris
* QNX
六、GUI库
BCG Windows平台下界面设计的第三方库，可以让你的界面更美好，更具时 代感。
wxWidgets ：使用wxWidgets ，开发者可以基于同一套代码，为Win32, Mac OS X, GTK+, X11, Motif, WinCE等平台开发应用程序。wxWidgets库可以被C++, Python, Perl, and C#/.NET等开发语言使用。跟其它有些同样支持跨平台GUI开发工具不同，基于wxWidgets的应用，拥有真实本地化的视觉及使用效果——因 为，wxWidgets使用（各）平台原生的控件，而不是简单通过贴图去模拟。wxWidgets是使用广泛的，自由的，开源的，成熟的。
QT-------------界面（GUI）开发，支持C++/Java/Python/...多种语言。跨平台。最主要的好处是，API非常优 美！Qt本身也不仅仅只是做GUI编程，实际它基本上可以做OS-API可以做的任何事情。象网络/数据库/OpenGL/...都提供完美的支持。
传统上Qt被认为是可移植的GUI库，但实际上Qt现在已经是一个比较完整的可移植应用程序框架了，其中包含了大量的工具，比如正则表达式、Web和 Socket类、2D和3D图形、XML解析、SQL类等，甚至还包括了一个完整的容器类库，不过其王牌还是GUI。在目前的跨平台GUI框架中，Qt成熟度最高，已经被一些大公司应用在关键产品中。由于Trolltech对Qt采用的dual license模式，该产品既可以从开源社区获得支持，又能够赚取足够的商业利润，因此其前景也令人比较有信心。
Qt的主要技术特色是其元对象模型。Qt实际上使用的并不是标准的C++，而是标准C++的一个扩展。它通过元对象模型扩展，实现了著名的signal/slot机制，而这一机制也成为Qt的最大特色和优势。
与Qt类似的可移植GUI框架还有wxWidget、FOX等
六. 计算机视觉
OpenCV，因特尔自主的开源库。支持C/C++/Python接口。这个感兴趣的朋友可以玩一下。如果结合OpenCV，你可以做一些外行人觉得很酷的程序。比如说用它的人脸识别函数，来对你的摄像头进行处理，判断人的动作等
七. 图形图像处理
GDAL，处理大图像。　要是GIS专业的人肯定会语言到非常大的tif影像，动则几个GB的航空影像。GDAL对大图像的读写支持是非常棒的（像多波段的图像都可以搞定）。支持C++/Java/Python...
国外开源的GIS软件QGIS就是用了gdal
c的图形图像库较多，libjpeg、libpng、zlib、tiff、JBIG、最著名的开源形图像处理软件Cximage
八、内存管理：boost::smart_ptr，Hans-Boehm GC
C/C++的内存管理是一个永恒的话题。一般来说，C++的开发者倾向于自己管理内存。然而，出乎很多C++开发者意料的是，近期C++的一些领袖人物已经公开宣称，如果不配备自动内存管理机制，用C++编写安全可靠的大型程序是非常困难的。而Bjarne Stroustrup也曾对中国开发者建议，如果没有特别的理由，应该在大型项目中使用自动内存管理工具。因此，今天的C++开发者应当积极地学习和应用自动内存管理设施。
说到自动内存管理，比较轻量级的做法是boost::smart_ptr，而激进的做法是引入完整的GC机制。目前开源而又比较可靠的GC中，Hans- Boehm GC无疑是最受信赖的。作为一个保守的GC，Hans-Boehm GC在性能和功能方面都算是卓越。特别是，使用这个GC，你仍然可以delete、free来自己管理内存，对于我们编程习惯的冲击比较小。
九、密码及安全：OpenSSL
安全是今天进行C/C++编程无法回避和必须重视的问题。然而编写安全的应用程序，特别是跟网络相关的C/C++应用程序，是一件十分困难的事情。可以 说，整个业界目前在这个进程上仍然处于“初级阶段”。特别是涉及到大量的安全、密码学相关的算法、规范，如果让开发者自己摸索，其工作量和难度达到了不现 实的程度。因此必须借助可靠的相关程序库才有可能提高程序的安全性。在这方面，OpenSSL是目前最好的选择，其内容之全面可靠，已经成为业界标杆。然 而，由于安全编程固有的复杂性，即使使用penSSL，开发工作仍然是非常繁琐的。因此我们也希望能够尽快看到更简单、更易用的C/C++安全程序库。
十、矩阵计算：MTL
自1995年以来，C++在科学计算领域当中取得了巨大的突破。这主要归功于template技术的高级应用，使得C++在科学计算的性能方面取得了巨大 的进步，一大批优秀的C++科学计算库涌现出来。比如Blitz++、POOMA、MTL、Boost::uBLAS。而这其中，MTL就功能丰富程度、 性能、开发支持和成熟程度来讲，是比较突出的一个，因此可以优先考虑。值得一提的是，2002年，MTL与后来被Intel收购的KAI C++配合，曾经在性能评测中击败了FORTRAN。
十一、中间件
1、分布式对象中间件：ICE
ICE是分布式对象中间件领域里的后起之秀，可以大致地将其视为“改进版”的CORBA。目前应用在一些大型项目当中，其中包括波音公司主持的下一代陆军作战系统。
ICE的一个特别价值是其代码的范例意义。由于ICE的出现较晚，开发者比较系统地应用了新的C++编程风格，所以成为了研读C++代码的良好目标。
2、消息中间件：ZeroMQ，总结的几种特性如下：
1） 消息系统中，它差不多是最简洁的，只是个简洁的API，有n多种语言的绑定，没有专门的服务器；
2） 性能非常优越，远远高于RabbitMQ、ActiveMQ、MSMQ等；
3） 适合做分布式和并发应用。
十二、正则表达式：boost::regex
正则表达式是编程工作中最强有力的工具之一。C++的正则表达式支持一直以来是一个软肋。大约在2001年左右，boost中出现了regex库，初步解 决了这个问题。但是最初的regex无论在效率上还是可靠性方面都有一些问题，后来经过一次大规模的翻修之后，达到了比较完善的程度。
其他可以选择的替代品还有C语言的pcre库，Qt中的QRegExp类等。
十三、配置管理：Lua
随着软件系统越来越复杂，对软件的可配置型提出了越来越高的要求。传统上只要通过命令行参数来配置的系统，现在可能需要越来越多的方式和机制。目前越来越 受欢迎、并且得到越来越多证实的做法，是将Lua嵌入到C/C++程序中，而用Lua程序作为配置脚本。这种做法的优势是，Lua语言强大灵活，可以适应 复杂的配置要求。同时，Lua便于嵌入C/C++程序，而且编译执行速度非常快，可以说是目前解决C/C++程序配置管理问题的一个出色方案。
十四、3D游戏引擎：
1. Irrlicht http://irrlicht.sourceforge.net/
始于２００３，次年即被评为最佳开源游戏引擎。官方支持C++和.Net，拓展语言绑定包含java,perl,ruby,python.跨平台支持，使用D3D,OpenGL以及自带API.
优点：容易上手；跨平台；自带XML解析器；大的社区；
缺点：最近开发慢下来了
2. Panda3D http://www.panda3d.org/
由迪斯尼开发，卡耐基－梅隆娱娱乐科技中心支持。Python是官方推荐语言。也支持C++。
优点：有用的社区；大量功能；定期开发；
缺点：缺乏工具支持；极差的文档；
3. OGRE http://www.ogre3d.org/
图像引擎中最好的一个。２０００年立的项。推荐使用C++语言。需要非常熟悉编程才行。初学者不宜。
优点：大量功能；优异的文档；大规模的社区；活跃的开发
缺点：不适合初哥；只有图像引擎
4. Crystal Space http://www.crystalspace3d.org/main/Main_Page
１９９７年发行，用C++编写的开源游戏引擎。推荐使用C++
优点：不错的社区支持；大量功能；
缺点：难学；
5、Delta3d http://www.delta3d.org/index.php
Delta3D是一款由美国海军研究学院(Naval Postgraduate School)开发的全功能游戏与仿真引擎，得到美国军方巨大的支持与丰厚的投资。该引擎应用领域极为广泛，如开发在培训、教育、娱乐行业和科学计算可视化领域等方面建模与仿真的软件。
它的标准化设计把一些知名开源软件和引擎如 Open Scene Graph(OSG), OpenDynamicsEngine (ODE), Character Animation Library (CAL3D), 还有 OpenAL融为一体。Delta3D通过对这些底层模块进行隐藏封装，整合在一起从而形成了一个使用更加方便的高级API 函数库，使得开发者在必要的时候能够使用底层函数进行二次开发。Delta3D在软件系列中，处于中间层(Middle layer)的位置上。
优点：适合各种3D游戏，仿真，很全面。一直在做更新。
缺点：参考资料比较少。中文文档也比较少。官方参考资料比较少。但是读源代码可以加快理解，应用。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:50:39</pubDate>
</item>
<item>
<title>Oracle发布Solaris 11 for Sparc/x86</title>
<link>http://oss.org.cn/html/97/n-61997.html</link>
<text>Oracle&amp;nbsp;Solaris&amp;nbsp;11今天正式发布，兼容的平台包括Sparc与x86。在10月初举行的Oracle&amp;nbsp;OpenWorld大会上，甲骨文已经对该新版操作系统进行了预展。按照甲骨文公布的Solaris研发路线图，从2012年到2015年，Oracle&amp;nbsp;Solaris&amp;nbsp;11将在高可用 性、内存扩展性、虚拟化、系统管理、I/O扩展性和内核扩展性方面进行针对性的性能升级。
Oracle&amp;nbsp;Solaris&amp;nbsp;11是甲骨文&amp;nbsp;SPARC&amp;nbsp;SuperCluster&amp;nbsp;T4-4集成系统和Oracle&amp;nbsp;SPARC&amp;nbsp;T4服务器产品线的操作系统，同时也支持Oracle&amp;nbsp;Exadata数据库云服务器X2-2和X2-8系统，以及Oracle&amp;nbsp;Exalogic中间件云服务器。Oracle&amp;nbsp;Solaris&amp;nbsp;11集成了许多新的功能，包含了2700多个项目和400多项创新成果。与此同时，它还是一款为云计算而开发的企业级操作系统，能够在大规模云环境中，实现安全和快速的服务部署。另外，该版本操作系统为Oracle及第三方应用进行了优化。据悉，目前全球已有超过600个来自金融服务、通信、公用事业等行业的客户已经在生产环境中采用了Oracle&amp;nbsp;Solaris&amp;nbsp;11的早期版本。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:47:04</pubDate>
</item>
<item>
<title>史蒂夫·乔布斯传（4）</title>
<link>http://oss.org.cn/html/96/n-61996.html</link>
<text>劳伦更坚韧，就像是披了铠甲。这就是为什么他们的婚姻是成功的
　　“他能跟劳伦安顿下来，真是太幸运了。她聪明，可以用智慧吸引他，可以包容他起伏多变的性格。”乔安娜·霍夫曼说，“因为她不多愁善感，史蒂夫可能会觉得她没有蒂娜神秘或怎样。但那很愚蠢。”安迪·赫茨菲尔德也有同感，“劳伦看起来跟蒂娜有很多相似之处，其实完全不同，因为她更坚韧，就像是披了铠甲。这就是为什么他们的婚姻是成功的。”
　　乔布斯对此也了然于心。虽然他的情感容易波动，但他们的婚姻长久而忠诚、彼此信任，克服了婚姻中必须经受的所有起起伏伏和情感纠葛。
　　阿维·泰瓦尼安说乔布斯需要一个单身派对。这可没有听上去那么简单。乔布斯不喜欢派对，也没有一群铁哥们儿。他甚至连个伴郎都挑不出来。结果，这个派对最后变成了只有泰瓦尼安和理查德·克兰德尔（RichardCrandal）陪同。
　　克兰德尔是里德学院的一个计算机科学教授，他向学校请了假，在NeXT工作。泰瓦尼安租了一辆豪华轿车，他们到乔布斯家时，鲍威尔出来开门，穿着西装还贴了假胡子，说她也想装成男人去参加。她只是开玩笑。很快，三个都不会喝酒的单身汉驶向旧金山，看看能不能凑合搞出一个单身派对。
　　泰瓦尼安之前没在乔布斯喜欢的福德梅森的格林斯素食餐厅订到位子，因此订了一家酒店里的时髦餐厅。面包刚一上桌，乔布斯就宣布：“我不想在这儿吃饭。”他逼着他们站起来走出去，泰瓦尼安觉得太恐怖了，他当时还不适应乔布斯在餐厅的举止。他带着他们去北海滩的杰奎琳咖啡厅，就是他喜欢的那家有舒芙蕾的地方，那确实是个更好的选择。饭后，他们坐着豪车穿过金门大桥去索萨利托（Sausalito）一家酒吧，在那三个人都点了龙舌兰酒，但都浅尝辄止。“作为单身派对那并不成功，但是对于像史蒂夫这样的人来说，那是我们能做的最好的安排了，而且也没有其他人自告奋勇来做。”泰瓦尼安回忆说。乔布斯对此很感激。他想让泰瓦尼安跟他妹妹莫娜·辛普森结婚。虽然最后没有结果，但是由此可见乔布斯确实很喜欢他。
　　鲍威尔对于即将面临怎样的局面应该早有准备。她在策划婚礼时，做请柬设计的人来他们家展示几个备选方案。屋子里没地方坐，她就坐在地上把样品展示出来。乔布斯看了一会儿，起身离开了房间。她们等着，他没回来。过了一会儿，鲍威尔去他的房间找到他。“把她打发走，”他说，“我没法儿看她的东西。狗屎。”
　　1991年3月18日，36岁的史蒂夫·保罗·乔布斯和27岁的劳伦·鲍威尔在优山美地国家公园的阿瓦尼酒店举行了婚礼。阿瓦尼是由石头、水泥和木头堆砌的建筑，设计风格混合了装饰艺术、工艺美术运动的影响以及公园管理方对巨大的石头壁炉的热爱。它最大的特点就是风景优美。透过直通天花板的巨大落地窗，可以看到半月石山和优山美地瀑布。
　　大约50人参加了婚礼，包括史蒂夫的父亲保罗·史蒂夫和妹妹莫娜·辛普森。莫娜带来了未婚夫理查德·阿佩尔。乔布斯坚持他们都乘统一的包车前来。他想控制这场活动的每个方面。
　　婚礼在阳光厅进行，外面大雪纷飞，冰川观景点在远处隐约可见。仪式由乔布斯禅宗师父乙川弘文主持。乙川挥杖敲锣，燃香诵经，大多数客人都难以理解。“我以为他喝醉了。”泰瓦尼安说。其实他没有。婚礼蛋糕是优山美地山谷尽头那半月石山的形状，但由于它是按严格素食标准制作的没有蛋、奶或任何精炼的食品，很多客人都觉得难以下咽。之后，他们一起去散步，鲍威尔的三个高大威猛的兄弟开始打雪仗，场面激烈喧闹。“你看，莫娜，”乔布斯跟他妹妹说，“劳伦是乔·纳马斯的后人，而我们是约翰·缪尔的后人。”（乔·纳马斯，美国著名橄榄球四分卫。约翰·缪尔，被誉为“美国国家公园之父”，著作影响力深远。此句意为劳伦家善武而乔布斯兄妹这边善文。）</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:41:30</pubDate>
</item>
<item>
<title>史蒂夫·乔布斯传（3）</title>
<link>http://oss.org.cn/html/95/n-61995.html</link>
<text>乔布斯会走两个极端，有时高度专注，好像劳伦·鲍威尔是宇宙的中心，而有时又表现出冷漠的距离感，专注工作上
　　乔布斯有个特点，他会在一段时间对某件事特别专注，然后突然之间，又去关注其他事情。在工作上，他会在想做的时候专注于想做的事情，对其他事他就没反应了，全然不管其他人多么努力地想让他参与进来。在他的个人生活中，也是如此。有时他和劳伦·鲍威尔会在公开场合尽情表现他们之间的感情，让在场的每个人都觉得尴尬，甚至包括凯特·史密斯和鲍威尔的妈妈。在伍德赛德那幢几乎没有任何家具的大宅里，清晨，他会放年轻善良的食人族乐队（FineYoungCannibals）的《她让我疯狂》（SheDrivesMeCrazy）的音乐把鲍威尔叫醒。而其他时候，他又会对她视而不见。“史蒂夫会走两个极端，有时高度专注，好像劳伦·鲍威尔是宇宙的中心，而有时又表现出冷漠的距离感，专注工作上。”
　　劳伦·鲍威尔的朋友凯特·史密斯说，“他有能力像激光那么专注，当他的光芒照耀在你身上，你会沐浴着他的关爱。而当他的光芒转移到其他关注点时，你就会感觉非常非常的黑暗。这让劳伦感到非常困惑。”
　　1990年的第一天，劳伦·鲍威尔接受了乔布斯的求婚，之后他有几个月都没再提这件事。最后，凯特·史密斯向他发难了。他们坐在帕洛奥图的一处沙箱边上。这到底是怎么回事？乔布斯回答说，他需要确切地感觉到劳伦可以受得了他过的这种生活以及他这种人。
　　9月份，她等够了，搬走了。
　　10月，他送给她一枚钻石订婚戒指，她又搬了回来。
　　12月，乔布斯带鲍威尔去他最喜欢的度假地，夏威夷的康娜度假村（KonaVilage）。他第一次去那里还是9年前，当时他在苹果疲惫不堪，就让助理给他找一个能让他解脱的地方。第一眼看去，他并不喜欢那个地方夏威夷大岛的海滩上散落着几栋茅草屋顶的小房子。那是个家庭式度假村，所有人集体进餐。
　　但是没过几个小时，他就开始把那儿看成了天堂。那种简单和空灵的美打动了他，以后他总是尽可能地回来。他尤其享受12月跟鲍威尔一起在那儿度过的时光。他们的爱情终于瓜熟蒂落。圣诞节前夜，他再一次、更正式地宣布，他想跟她结婚。很快，另一个因素促成了这个决定。在夏威夷时，鲍威尔怀孕了。“我们确切地知道那是在哪里怀上的。”乔布斯后来大笑着说。
　　但鲍威尔的怀孕并没有彻底解决这件事。乔布斯又开始为结婚这个念头犹豫不决，虽然他在1990年的年初和年终都那么戏剧性地求婚。鲍威尔愤怒地从他家搬回了自己的公寓。有一段时间，他也感到郁闷，或者干脆置之不理。然后，他又想，也许他还在爱着蒂娜·莱德斯；他给她送玫瑰花，试图说服她回到他身边，也许甚至结婚。他不肯定他想要什么，他让一大群朋友甚至相交不深的人感到惊讶他问他们，他应该怎么做。他会问，谁更漂亮，蒂娜还是劳伦？他们更喜欢谁？他应该跟谁结婚？在莫娜·辛普森的小说《凡人》里有一章就描写了这一段，书中的乔布斯“问了一百多个人，他们觉得谁更美”。但那是小说；事实上，可能不到一百个。
　　最终，他作了正确的选择。如莱德斯跟朋友们所说，如果她回到乔布斯身边，她肯定撑不下来，他们的婚姻也一样。虽然他会为他与莱德斯之间的灵魂相通而感到难舍难分，但是他跟鲍威尔的关系更稳固。他喜欢她，爱她，尊重她，而且跟她在一起觉得很舒服。他可能不会觉得她神秘，但她对他的生活来说是最合适的后盾。他曾交往过的很多女人，从克里斯安·布伦南开始，都有情感脆弱不稳定的特点，而鲍威尔没有。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:40:57</pubDate>
</item>
<item>
<title>史蒂夫·乔布斯传（2）</title>
<link>http://oss.org.cn/html/94/n-61994.html</link>
<text>劳伦·鲍威尔人很好，但是她可能会算计，一开始就锁定了乔布斯
　　安迪·赫茨菲尔德等人后来推测，劳伦·鲍威尔是有意安排了自己跟乔布斯的相遇。“劳伦人很好，但是她可能会算计，我想她一开始就锁定了他。”赫茨菲尔德说，“她的大学室友告诉我，劳伦收集有史蒂夫的杂志封面，发誓说她一定会遇到他。如果史蒂夫真的被算计了，可真够讽刺的。”但是劳伦后来坚持说不是那么回事。她去参加那个讲座只是因为她的朋友想去，而且她都有点儿搞不清要见的人长什么样。“我知道演讲人是史蒂夫·乔布斯，但我脑子里想的是比尔·盖茨，”她回忆说，“我把他们搞混了。那是1989年。他在NeXT工作，对我来说他还没什么大不了的。我热情不高，但是我的朋友想去，于是我们就去了。”“我一生中真正爱过的只有两个女人，蒂娜和劳伦。”乔布斯后来说，“我原来以为我爱琼·贝兹，但我其实只是很喜欢她。我爱的，只有蒂娜和劳伦。”
　　劳伦·鲍威尔1963年出生在新泽西，很小就学会了自立。她父亲是海军陆战队的飞行员，是在圣安娜一次坠机事件中牺牲的英雄；他当时在引领一架受损的飞机着陆，两机相撞后，他坚持飞行避开居民区，而没有及时跳伞逃生。她母亲再次结婚，结果那个男人是个酒鬼和虐待狂。但她母亲觉得自己不能放弃这段婚姻，因为她没有经济来源养活一大家子人。有10年的时间，劳伦和她的3个兄弟只好忍受着家里的紧张气氛，循规蹈矩，自己解决问题。“我学会了一个很明确的道理：永远要自立。”她说，“我为此而骄傲。我跟金钱的关系是，它是实现自立的一种工具，但是它不是我这个人的一部分。”
　　从宾夕法尼亚大学毕业后，劳伦在高盛做固定收益交易策略师，接触数目巨大的资金，为公司做自营交易。她的老板乔恩·科尔津（JonCorzine）想说服她留在高盛，可她最终觉得这份工作没有启发性。“你可以变得真正成功，”她说，“但你只是在为资本的积聚作贡献。”因此3年后，她辞职去了意大利佛罗伦萨，
　　在那里住了8个月，然后来到了斯坦福商学院。她和乔布斯在周四共进晚餐之后，她邀请他周六到她在帕洛奥图的公寓来。凯特·史密斯开车从伯克利赶来，装作是她的室友，这样就也能见到他了。她回忆说，他们的关系充满激情。“他们又是接吻又是亲热，”史密斯说，“他为她着迷。他会打电话问我，&quot;你看怎么样，她喜欢我吗？&quot;我处在多么奇特的位置啊，这个偶像级人物居然会这样给我打电话。”
　　1989年的新年前夜，他们3个人一起去伯克利，到名厨爱丽丝·沃特斯（AliceWaters）开设的餐厅潘尼斯之家就餐。同行的还有乔布斯的女儿丽萨，当时她11岁了。晚餐上发生的某件事引起了乔布斯和劳伦·鲍威尔的争吵。他们各自离去。
　　劳伦·鲍威尔留在凯特·史密斯的公寓过夜。第二天早上9点钟，有人敲门，史密斯打开门，乔布斯站在那儿，手中拿着他采的一束野花。“我能进来见见劳伦吗？”他说。她还在睡觉，他走进卧室。几个小时过去了，凯特·史密斯等在客厅里，没法儿进去拿衣服。最后，她只好在睡衣外面披了件外套，去毕兹咖啡店（PeetsCoffee）买了些吃的。乔布斯直到午后才从卧室出来。“凯特，你能来一下吗？”他问。他们都聚到卧室里。“你知道，劳伦的爸爸已经去世了，劳伦的妈妈也不在这儿，既然你是她最好的朋友，我就来问你吧。”他说，“我想娶劳伦。你会祝福我们吗？”
　　凯特·史密斯趴到床上认真地想了想。“你愿意吗？”她问劳伦·鲍威尔。她点头同意了。史密斯宣布，“好吧，你得到答案了。”
　　然而，这并不是一个肯定的回答。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:40:09</pubDate>
</item>
<item>
<title>史蒂夫·乔布斯传（1）</title>
<link>http://oss.org.cn/html/93/n-61993.html</link>
<text>　乔布斯曾说，活着的时候不该出版自传，现在还不到回忆的时候。两年前，乔布斯的妻子劳伦·鲍威尔打电话给《时代》杂志的前总编艾萨克森，说“如果你要写他（乔布斯）的传记，那最好现在就要开始了。”艾萨克森曾为爱因斯坦、富兰克林等名人著传，但2005年乔布斯找到他时，他拒绝了乔布斯的请求，他那时认为乔布斯仅是一个企业家而已。
　　在乔布斯最后的两年多时间，艾萨克森与乔布斯有40多次的面对面倾谈。尽管乔布斯给予本书的采访和创作全面的配合，但他对内容从不干涉，也不要求出版前阅读全文的权利。对于任何资源和关联的人，他都不设限，甚至鼓励他所熟知的人袒露出自己的心声。“我已经做了很多并不值得自豪的事情，比如23岁时就让我的女友怀了孕，以及我对这件事的处理方式”，他说，“对我而言，没有什么不可以对外袒露的。”
　　谈及和他共过事的人以及竞争对手，他直言不讳，甚至尖酸刻薄。他的激情、精力、欲望、完美主义、艺术修养、残暴还有对掌控权的迷恋塑造出的商业哲学一览无余。
　　邂逅劳伦·鲍威尔
　　根据乔布斯的恋爱史，做红娘的应该可以大概勾勒出适合乔布斯的女人了。
　　聪明，而不自负。足够刚强能承受跟他在一起的压力，又足够超脱能免于争端。受过良好教育，独立，又愿意为他和家庭而作出改变。能适应现实，却又带着点儿超凡脱俗。足够世故知道怎么管理他，又有足够的安全感不用总是管着他。当然最好还是个漂亮苗条的金发美女，平易近人，有幽默感，喜欢有机素食。
　　1989年10月，乔布斯跟蒂娜·莱德斯分手后，刚好有这样一个女人走进了他的生活。
　　更准确地说，是刚好有这样一个女人走进了他的课堂。乔布斯同意在斯坦福商学院的“高屋建瓴”系列讲座中讲一场。那是个周四的晚上。劳伦·鲍威尔是商学院的新研究生，她班里的一个同学拉她去听这个讲座。他们到晚了，所有的位置都满了，所以他们坐在过道上。后来有人过来说他们不能坐在那儿，鲍威尔就带着她的朋友径直走到第一排，坐在了两个预留座位上。乔布斯到场后，被引导到她旁边的座位。“我向右侧一看，一个美女坐在那儿，在我等着被介绍时我们就聊了起来。”乔布斯回忆道。他们调侃了几句，劳伦开玩笑说她坐在那儿是因为她中了彩票，奖品是他带她去吃晚饭。“他太可爱了。”她后来说。
　　演讲结束后，乔布斯在讲台边跟学生们聊天。他看到鲍威尔离开，然后又回来了，站在人群外围，后来又走了。他冲出去追她，商学院院长都没能抓住他说几句话。他在停车场追上她说，“不好意思，不是说你赢了彩票，我应该请你吃饭吗？”她大笑。“周六怎么样？”他问。她同意了，给他留了她的联系方式。
　　乔布斯要开车去伍德赛德那边圣克鲁兹山的托马斯·福格蒂酒庄，出席NeXT教育销售团队的晚宴。走到一半，他突然转身回来了。“我想，哇，跟教育团队相比，我更愿意跟她一起吃饭，所以我跑回到她的车旁，问她今晚就一起吃饭怎么样。”她说好。那是一个美丽的秋夜，他们走到帕洛奥图的一家时髦的素食餐厅圣迈克尔巷（St.MichaelsAley），结果在那待了4个小时。“从那儿以后我们就一直在一起了。”他说。
　　午夜之后，劳伦·鲍威尔一到家，就给她最好的朋友、当时在伯克利读书的凯瑟琳（凯特）·史密斯[Kathryn（Kat）Smith]打电话，在她的答录机上留言说：“你不会相信我刚才碰上了什么事！你不会相信我遇到谁了！”史密斯第二天早上回电话，了解了事情的经过。“我们之前就知道史蒂夫，他是我们感兴趣的人，因为我们是商科学生。”她回忆说。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-13 17:39:37</pubDate>
</item>
<item>
<title>谷歌发布中国城市智能手机报告：7成用户每周手机社交</title>
<link>http://oss.org.cn/html/49/n-61949.html</link>
<text>为了更好地了解全球各地的人们如何使用智能手机，今年早些时候，Google与IPSOS Research（益普索）展开合作进行了相关调研。2011年11月7日，谷歌亚太地区移动产品营销经理Ryan Hayward在谷歌中国北京总部对外公布了报告中有关中国城市地区智能手机使用情况的调查内容。		 　　报告摘要：　　·中国城市的智能手机普及率（35%）位居亚洲区第三，仅次于新加坡（62%）和澳大利亚（37%），与香港（35%）并列。53%中国城市智能手机用户计划花更多时间使用移动互联网方面，该比例为全球第三高。　　·中国城市智能手机用户随时随地都在使用智能手机，其中家里（66%），旅途中(59%)，乘坐交通工具中（52%），餐厅（38%）及商场（30%）是使用智能手机最频繁的地方。　　·中国城市智能手机用户使用智能手机十大用途：浏览网页（50%），听音乐（43%），收发电子邮件（41%），使用搜索引擎查询信息（37%），拍照或录像（37%），通过报纸或杂志的网页版浏览新闻（35%），登录社交平台（35%），浏览微博或其他信息平台（34%），玩游戏（33%），及查询路线或使用地图（28%）。【编者注：Ryan Hayward表示将QQ使用并入了收发电子邮件中。】　　·中国城市智能手机用户在手机里安装的应用程序平均数量为15个，付费的应用程序平均数量为6个。每三人中有两人计划使用更多的应用程序，该比例（66%）为全球第二高。　　·64%的中国城市智能手机用户会每周用智能手机进行搜索，主要搜索目的是：进行购买（59%），在地图上寻找商户（如商店、餐厅）或服务，或指引路线（55%），拜访商户（51%），阅读或发表对商户或服务的评论（44%），登录商户或服务的网站（35%）。　　·75%中国城市智能手机用户每周会用智能手机进行社交，正接近用传统网络进行社交的比例（84%）。　　·超过一半的中国城市智能手机用户曾经使用智能手机进行购买，并愿意进行更多的尝试。主要购买项目包括：票务、娱乐产品、出差、旅行、服饰、百货与食品、家居、美容与化妆品、电子产品，等等。　　·一半的中国城市智能手机用户会经常注意到移动广告，主要广告位置为：搜索引擎（54%），视频广告（46%），视频网站（45%），应用程序（34%）和零售网站（25%）。（何峰整理）　　报告全文：　　为了更好地了解全球各地的人们如何使用智能手机，今年早些时候，Google与IPSOS Research（益普索）展开合作进行了相关调研。这是有史以来首次关于人们如何使用手机的大规模调查，调研对象覆盖了尽可能多的国家和人群，来自30个国家的30000名受访者回答了完全相同的问题，这使得我们对于全球各地的人们如何看待自己的智能手机有了一个详实的了解。这也是首次我们可以比较中国人与亚太及世界其他国家的人们使用智能手机的区别。　　最近，我们推出了一个名为“Our Mobile Planet”的网站（http://www.ourmobileplanet.com），将提供对智能手机使用情况和移动态度的深入见解。这样，所有人—包括媒体、市场营销人员、应用程序开发商、学者等均能访问该研究的信息。人们可以使用该网站来创建自定义的图表，从而加深其对移动用户的理解，并找到可靠数据来支持其移动战略的决策。　　以下是有关中国城市智能手机用户使用情况，及与其他地区用户使用情况的比较：　　I. 中国城市智能手机用户使用情况　　1、调查研究显示，智能手机近年来在中国城市普及迅速。　　·中国城市是全球五大智能手机普及率（35%）最高的地区之一。　　·中国的受访者中，每三个人中就有一个人拥有两部或两部以上的手机，这个比例（30%）在亚太地区是最高的。　　·中国城市地区拥有智能手机超过一年以上的人数比例（64%）在亚太地区是最高的，超过韩国、日本和澳大利亚。　　2、调查研究显示，智能手机正在快速改变我们的生活方式。　　·97%的中国城市居民已拥有手机，其中35%已拥有智能手机。　　·中国城市智能手机用户随时随地都在使用智能手机，其中家里（66%），旅途中(59%)，乘坐交通工具中（52%），餐厅（38%）及商场（30%）是使用智能手机最频繁的地方。　　·中国城市智能手机用户在使用智能手机的同时，还会：听音乐（54%），看电视（34%），读书（32%），看电影（28%），等等。　　·在电视与智能手机两者之间，50%的受访者表示宁愿放弃电视而非智能手机。　　·中国城市智能手机用户使用智能手机十大用途：浏览网页（50%），听音乐（43%），收发电子邮件（41%），使用搜索引擎查询信息（37%），拍照或录像（37%），通过报纸或杂志的网页版浏览新闻（35%），登录社交平台（35%），浏览微博或其他信息平台（34%），玩游戏（33%），及查询路线或使用地图（28%）。　　·中国城市智能手机用户在手机里安装的应用程序平均数量为15个，付费的应用程序平均数量为6个。每三人中有两人计划使用更多的应用程序，该比例（66%）为全球第二高。　　·64%的中国城市智能手机用户会每周用智能手机进行搜索，主要搜索目的是：进行购买（59%），在地图上寻找商户（如商店、餐厅）或服务，或指引路线（55%），拜访商户（51%），阅读或发表对商户或服务的评论（44%），登录商户或服务的网站（35%）。75%中国城市智能手机用户每周会用智能手机进行社交，正接近用传统网络进行社交的比例（84%）。　　II．智能手机使用情况比较　　中国城市 vs. 亚太　　·中国城市的智能手机普及率（35%）位居亚洲区第三，仅次于新加坡（62%）和澳大利亚（37%），与香港（35%）并列。　　·一半的中国城市智能手机用户经常或总是注意到移动广告，为亚太地区第三高。　　·中国城市地区有最多用户（54%）曾使用智能手机进行购买。　　·中国城市地区拥有智能手机超过一年以上的人数比例（64%）是亚太地区最高的。　　·中国的受访者中，每三个人中就有一个人拥有两部或两部以上的手机，这个比例（30%）在亚太地区是最高的。　　中国城市 vs. 全球　　·第三多用户（53%）计划花更多时间使用智能手机上网（多于美国）　　·最多用户（32%）在使用智能手机时阅读　　·第二多用户（66%）计划使用更多应用程序（多于美国）　　·第二多用户（32%）因移动广告触发商店购买行为　　·第二多用户（54%）在使用智能手机时听音乐（多于美国）　　亚太 vs. 全球　　·在智能手机普及率和手机总体普及率方面，亚太地区国家整体上领先于全球最发达经济体。在所调研的11个亚太国家和地区中，有4个国家及地区的智能手机普及率高于美国（31%）：新加坡（62%），澳大利亚（37%），中国城市（35%）和香港（35%）。　　·在使用智能手机时，最发达的亚太经济体中的消费者对手机的使用强度在多个方面都高于全球其他地方。　　·与美国相比，未来整个亚太地区的消费者对智能手机的使用强度有望达到更高的水平。　　·东南亚消费者购买智能手机的意愿与美国用户相近甚至更高。　　·亚太地区发展中国家消费者在未来使用更多应用程序方面的意愿明显高于全球发达国家。　　·除澳大利亚和马来西亚以外，其它亚太地区国家的消费者比美国消费者更倾向于认为他们的智能手机比电视更有趣。　　III. 关于移动广告　　调查研究表明，中国移动广告商机巨大。　　·53%中国城市智能手机用户计划花更多时间使用移动互联网方面，该比例为全球第三高。　　·一半的中国城市智能手机用户会经常注意到移动广告，主要广告位置为：搜索引擎（54%），视频广告（46%），视频网站（45%），应用程序（34%）和零售网站（25%）。　　·在注意到移动广告后，中国城市智能手机用户会：在电脑或其他互联网设备上查询更多相关信息（39%），点击广告（34%），通过智能手机查找更多信息（32%），进行购买（32%），登录广告主或零售商网站（32%），等等。　　·超过一半的中国城市智能手机用户曾经使用智能手机进行购买，并愿意进行更多的尝试。主要购买项目包括：票务、娱乐产品、出差、旅行、服饰、百货与食品、家居、美容与化妆品、电子产品，等等。　　Google移动广告三大原则　　Google正努力为中国大大小小的经营者开发新产品，帮助他们在建立并发展移动业务。我们在移动广告上所做的努力都由三大基本原则指引：　　·首先，移动应该是无缝连接的。广告主不应将手机与电脑上的业务分开考虑。所以我们让广告主在一个Google的界面上同时管理电脑和手机的业务，其操作就像在AdWords中做勾选一样简单。同时，我们提供工具，使发布商能够通过不同的设备管理展示广告空间，其中包括电脑和移动终端。　　·其次, 移动广告形式应该是具兼容性的， 因为消费者使用的手机不止一种，使用方法也各有不同，因此我们也要提供不止一种的广告形式。 使用Google，广告主能够触及使用各种高低端手机的用户，从较高端的iPhone、Android、BlackBerry和Palm Pre，到稍低端的WAP手机以及其他功能型手机。可供广告主选择的移动广告形式也是多种多样的，包括文字广告，以及视频、移动横幅和手机应用广告等展示 广告。与此同时，AdMob可使发布商的应用程序在各种移动平台上盈利。　　·最后，我们提供的广告形式是专为移动定制的。移动设备的许多特点为营销者提供了得天独厚的机会：皮肤，耳朵，眼睛，以及地理位置。例如，本地化广告能在广告中显示与用户最近的广告主的生意地点。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-12 23:08:37</pubDate>
</item>
<item>
<title>Firefox 9 Beta 1 的新特性抢先看</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61905</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-11 13:23:11</pubDate>
</item>
<item>
<title>Ruby之父松本行弘的编程人生</title>
<link>http://oss.org.cn/html/04/n-61904.html</link>
<text>生平：松本行弘(Yukihiro Matsumoto)，1965年4月14日出生于日本鸟取县。1984年，就读于筑波大学第三学科信息学系。2年后休学，成为末日圣徒耶稣基督教会的宣讲师。大学复学后，加入中田育男教授的研究室。1990年大学毕业。后在岛根大学攻读博士课程，修满学分后退学，未获学位。现任株式会社Network应用通信研究所研究员、乐天株式会社乐天技术研究所研究员、Ruby association 理事长、Heroku首席构架师。推荐阅读： 《松本行弘的程序世界》经历篇：高中时代：用自己设计的语言编程第一次接触电脑，是小学6年级。父亲给我买了一个口袋型电脑L-Kit16，当时真是激动坏了。到了初中3年级，父亲又给我买了Sharp PC-1210，这个时候我第一次知道“编程”这个概念。只要发出指令，计算机就能按照你的指令进行操作，真是有意思极了!我的父亲，是建筑公司的一个普通的上班族。他之所以买电脑，是用来计算建筑数据的。没想到这两台电脑成了我的玩具(笑)。回忆起小时候，感觉一天到晚都在看书。我家前面有一个书店，我天天都泡在那里。有时候朋友来玩，我让他到家里来，他却指着书店说：“那不是你家吗?”那时候什么都看，科幻小说呀，漫画呀。百科全书全都记在脑子里。总之就是特别喜欢文字。实在没东西看，就看药品的说明书(笑)。上了高中之后，就迷上计算机了。成天看计算机杂志。能让计算机按照自己的指示来运行，这比什么都有意思。特别是对编程语言非常感兴趣。当时对汇编语言、Basic都不喜欢，不想用它们来编程(笑)。于是我就开始自己发明语言，然后用这种语言来编程，写在笔记本上。不过这本笔记已经不知道去哪儿了，真遗憾。当时连语言的名字都想好了。当然了，不是Ruby啦。不好意思说，哈哈。大学时代：不是去图书馆就是去研究室大学我考上了信息科学学院。在那里我接触了许多在书中看到但从未使用过的软件和语言。大学里的老师都是我高中读过的书的作者，简直太不可思议了。不过，研究室里我是最不听话的，老是猫在那里设计自己的语言(笑)。当时是日本泡沫经济崩溃的年代，但是我一点儿都没有闲着。整天泡在图书馆里，看了许许多多书。休息的时候就去电影院或者是书店(笑)。我不擅长运动，也不关心身边的人都在干什么。我从小就喜欢读书，虽然最近拜网络所赐，读得少了(笑)。阅读各领域的书籍，对我的成长影响很大。 另外，我还常常关在研究室了。比如通宵在研究室里弄电脑，到了早上回家洗一下澡，然后再到研究室去(笑)。当时是80年代后期，研究室里已经连上网络了，我常常看BBS、新闻什么的。能接触到很多聪明的人物，觉得非常有意思。当时是计算机的黎明期。我父亲是反对我考信息科学学院的。“什么计算机，什么编程，当个兴趣就得了。”不过我真是太喜欢计算机了。未来的出路我从未考虑过。可谓是义无反顾了。经济不景气，开始开发Ruby1990年毕业之后，我进了一家软件公司。我找工作有一个原则：坚决不在东京工作。我从小在农村长大，不喜欢人多的地方。花1、2个小时去上班，那简直不可想象。我其实更适合在小地方工作，不过那样的话可以选择的公司就比较少。后来遇到滨松一家软件公司招聘，我就去了那里。我的主要工作是公司内部OA软件的开发。当时的电子邮件只能发送文字，我就弄一个可以粘贴附件的软件。有意思。公司一般会给我一个大致的范围，然后让我自由地去发挥。因为喜欢这个工作，所以常常加班到很晚才回家。当时的梦想就是一辈子做一个程序员。即使将来当爷爷了，也要继续工作。过了几年，泡沫经济崩溃的后续影响开始显现出来。公司的业务一下子少了许多。时间非常充裕，于是我就想自己干一点事情，开始开发Ruby。这些我都是在公司弄的，也和同事交流过，同事亦给我许多帮助。1年之后，我去了另一家公司，叫做名古屋CAD vendor。因为原来那家公司的经营状况已经非常不好了。虽然我对工作很满意，环境呀、人际关系呀都很好，不过当时我结婚有了家庭，考虑的东西就会多一些。万一公司倒闭了，那就比较惨了。而且我也想趁自己比较有优势的时候把自己推销出去。当时能做面向对象的脚本语言的人还是比较少的。1995年，松本行弘将Ruby公开于众。反响极其热烈。理念篇：还是当怪才比较好很多人都比较奇怪，我的数学怎么会那么差。高中时我甚至考过全班最低分。“擅长计算机的人数学就一定好”，这只是人们的臆想而已。在日本的教育体制下，学生都被培养成面面俱到可又面面平庸的“综合型”人才。不过，我遇到的成功人士，大多都是一些在某些方面特别强，但在某些方面特别差的人。我的数学从来就是1(满分为10分)，一旦到了程序语言的考试，我则有取得1000分的自信(虽然满分为100分)(笑)。 每个人的能力都有上限，综合型人才往往是全面发展，而那些怪才往往专注于磨练他的专长。这样的人走上社会之后，更容易成功。我开发计算机语言的初衷所谓软件，其目的就是让计算机为人类工作。正因为人类的大脑有一定的能力限度，所以需要让计算机承担大部分的工作，让人脑空出来去解决更难的问题。因此我开发了ruby这样面向对象的脚本语言。我为什么不自己创业我是一个数学很差的人(笑)。让我算钱，就更差了。很多人都会问我为什么不自己做公司，这是因为我实在不擅长。我现在的工作，能让我自由、专注地开发程序。这样就足够了。编程人员不需要擅长数学编程人员要做的其实就是倾听客户需求，写下来，然后借助计算机语言让计算机去执行相应的任务。这哪里需要数学嘛?大家不要被表象所迷惑。算术反正有计算器，不用愁。而在计算机的世界里，比数学更重要的，是作为人本身所需要的一些技能。比如倾听能力、理解力等。其中最重要的是沟通能力。编程是一种体育运动很多人年轻时都热衷于体育运动，有些人上了年纪依然热衷。很不巧，我从小就不擅长体育，不过我能理解那些体育爱好者的感受。体育能够使人生变得丰富多彩。而编程其实与体育有着许多共同之处。 可能很多人觉得编程和体育根本不沾边。不过，请你试着想一想，棋类常常被归类为体育运动之一，这是为什么呢?因为它其实是一种脑力运动。说到编程和体育的共通点第一，二者都需要通过反复练习才能获得技术上的提升。要想成为一名优秀的程序员，知识和经验都很重要。编程人员常常需要以苦为乐。第二，编程对美和速度的追求，与体育相似。优秀的程序言对自己“作品”中蕴含的程序之美，非常执着。另外，程序员在进行性能调优时的测定行为，以及对自我瓶颈的突破，和游泳以及田径选手有类似之处。编程是一种兴趣在日本，棒球爱好者可谓多如牛毛，可是真正成为专业棒球手的却是屈指可数。大多数人都是因为兴趣才接触棒球的。同样，有许多人爱好编程，于是世界上诞生了许多开源软件。同时，解决程序bug的过程，和解谜的过程一样，都是充满惊喜的。不过和专业的体育选手不同的是，很多专业程序员并不是因为喜爱编程才干上这一行的。这一点，着实是比较悲哀的事。编程是一种交流在大家的印象里，编程其实就是坐在计算机前敲打键盘。不过这个工作其实非常人性化。至今依然没有出现能够自我编程的计算机，这也说明了编程是一种人类活动，甚至可以说，只有“人”才能编程。 此外，程序编写出来是供给人类使用的。理解人的追求、人的感受，对于编程人员来说是非常重要的。另外，当一个团队联合进行编程工作时，团队成员之间的沟通能力也是不可或缺的。编程是一种创造多年来，我对编程的热爱从未有丝毫减少。其中最重要的原因是：编程是一种创造性的工作。 只要有一台计算机，就能从无到有，构建出一个新的世界。编程的世界中，没有重力、因果等等现实世界中的制约因素。如此自由的创造性活动，除编程外，别无他选。我能通过编程，创造出一个我想象中的世界。这是编程最大的魅力。编程是一生的事业和许多活动相比，编程不需要体力。如果你不去那些彻夜加班的公司，那基本上年龄和体力都不是问题。 编程更需要的是知识、经验、判断力等等，这些都不会因为年龄的增长而退化。换句话说，编程是可以干一辈子的。这一点，和那些专业体育选手略有不同。日本有一个说法：“35岁是程序员的退休年龄”。我的身边的确有许多30岁左右就渐渐远离编程的朋友。与其说是因为他们能力低下，不如说是社会因素使然。在日本的IT界，优秀程序员的价值没有得到充分的认可，再加上论资排辈的传统以及职业价值的不平衡，35岁成为一个分水岭。实际上，国外许多著名的编程人员即使到了暮年也依然活跃在第一线。我的大学导师，退休之后依然高产，因为退休使他没有杂事的干扰，能够专心致志地干他想干的工作。干一辈子编程，也是我的梦想。 编程本来就是一件有趣的事。因为觉得有趣，所以进步很快，能编出优秀的语言来。如果你觉得编程只是一种谋生手段的话，那还是趁早辞职吧。快乐编程能使你的人生硕果累累，我相信。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-11 14:54:23</pubDate>
</item>
<item>
<title>Riceball LEE(李雪愚)：谈谈Teamhost的梦想</title>
<link>http://oss.org.cn/html/03/n-61903.html</link>
<text>
		一、Teamhost 是什么
Teamhost.org&amp;nbsp;是为那些致力于开源项目的开发者服务的，提供类似于 “Google Code” 和&amp;nbsp;Github&amp;nbsp;的
开源项目托管服务。首先提供开源项目托管，这是Teamhost第一阶段要做的事情，这一阶段除了几个功能点还在开发外，大致上已经完成，已经在内测中。
而下一阶段是建立社会化(SNS)的开源敏捷开发平台。这里首先向 Github 表示致敬，以及所有支持开源项目的人们致敬。
二、为啥 Teamhost
我有一个很远的梦想，希望人们能再也不用劳碌奔波赶上班，在家办公，做自己最感兴趣的事情。这似乎说远了。但是这的确是我想搞Teamhost的初
衷。没有完善的基础平台，一切都是空谈，而Teamhost正式这一系列基础平台之一。那么Teamhost不仅仅是要实现项目托管的平台，而未来更想要
实现的是基于SNS的荣誉勋章体系，以及基于集体智慧的悬赏Solution平台，希望能给大家提供一个更加公平，更加能展示、发挥自己才能的平台，也许
未来能把Freelancer也集成在一起。
说实话，单纯搞技术的，除了少部分人外，大多数在中国混的都不怎么样，为什么？我接触到的许多闷头搞技术大都不善言辞的，当然其中也包括我自己。所
学越多，越感到自己的浅薄，也就越加感到自己要学和实践的东西总是太多太多，于是因自己的浅薄而慎言，二则觉得动口是在浪费时间和生命，有这闲工夫还不如
去看几页书或者写几行代码，纳于言而敏于行。这些本来是好事，但是在中国就悲剧了，中国的教育体制，从来只有政治没有道德，许多人已经不知道什么是底线，
口若悬河，把别人的说成自己的比比皆是，3分技术，7分口才就能混得很开了。闷着，闷着，没人知道。在开放的互联网时代还这样的悲剧是不对。如今开源已经
成为一个在互联网时代中非常重要的舞台，所以，为啥不在开源项目上展现自己才能呢？
通过代码提交，展示Coding能力，通过提交功能建议展示创新能力，通过提交错误展示捉虫能力，通过建立版本规划（路线图）展示自己的排程规划能力，通过编写WIKI来展示自己的描述能力。通过开源互助一起打造发展开源项目
通过Teamhost把自己的各种能力量化，让夸夸其谈者无处藏身。时候到了，纳于言而敏于行的同仁们，行动起来，让我们用好并一起开发 Teamhost 平台来证明自己的能力。
我也有一个很近的梦想，国外的服务不稳定，为啥不在国内弄一个，让自己的开源项目能随处访问，多个备份，岂不更好，而且最好能自动同步，这样我只要
上传一份，就自动帮我分散到其它的开源项目托管平台上。这里要非常感谢盛大，感谢盛大创新院，能支持我们做这个现阶段毫无盈利价值的公益项目。感谢盛大能
推动开源事业的发展。
国外Github已经做得相当不错了，为啥要弄Teamhost?
Github作为使用Git的源代码版本托管服务是非常方便，在这主线上做的很完美。优点就不用说了，我们会一一吸收的。于此同时我们也将尽量实现对主流的代码托管平台的双向同步支持。Github的遗憾在于其它方面，比如过于简陋的Issue管理等等。
3、未来
首先要继续做好项目管理（托管）服务，并以此为基础，我们将会在未来加大倾注对Web Application开发的支持，比如对WebApp持续集成的支持，自动部署到各个AppStore的支持。下面罗列的是我目前的一些想法，当然未来尚未确定。
项目管理（托管）服务源代码版本管理系统Sync Github(Git) and Google Code(svn)Online Code reviewOnline Edit and Commit FilesStore on S3WikiStore to SCMNews as special WikiIssueFeature to Specifiction automaticallyTestCaseSmart Multi-languagesRoadmapIssueWikiOpen APIOnline Web Application Development &amp;amp; DeploymentCI(Continuous Integration)Deployment to App Store automaticallySNSFollow People, Project and IssueVote(Rank) People, Project and IssueCredit SystemBadge/Skill SystemWork/Freelancer wantedMicroblogEmailIMP2PDecentralization&amp;nbsp;Teamhost
大家一起来 Teamhost
Teamhost依然有许多的功能有待实现，而哪些是必须做，哪些可以不做，哪些要先做，我们将时刻聆听大家的意见，无论是您愿意提供您的意见或者愿意参与我们的项目，我们都将非常欢迎您的参与。
Riceball LEE: &amp;nbsp;李雪愚 &amp;nbsp;teamhost.org技术构架师 盛大创新院高级研究员 &amp;nbsp;对Ruby、C等诸多技术领域有着很深的造诣。
			</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 14:37:51</pubDate>
</item>
<item>
<title>项目经理是软件开发失败的根源？</title>
<link>http://oss.org.cn/html/02/n-61902.html</link>
<text>软件开发项目失败的元凶是人员问题，而不是技术。这是Computerworld上的一篇文章提出的观点。尤为值得关注的是，文中特别指出项目经理是多数问题的罪魁祸首。来自Change Strategists Inc的Billie Blair认为，很多公司提拔某个重要的技术人员，让他来担任项目经理这一关键角色，然而直到最后，公司才发现这个人根本不具备做好这项工作所需的技能。他们完全没有准备就绪。Blair说道，

在公司里，任何过失总能追溯到某个经理身上。

技术人员能成功转型为管理人员吗？许多公司意识到这两类角色所需要的技能有点南辕北辙的感觉，于是他们就制定了一些双重职业发展(dual career track)模型。技术职业发展路线通常专注于鼓励技术知识、能力和技巧方面的提升，结合一些必要的人员管理知识。相反地，管理职业发展路线则强调候选人朝着增进人员管理职责、财务监管和战略眼光方向发展。
关于往哪个职业方向发展这一问题，估计对于每一个人来说都是一个很纠结的决定。Pawel Brodzinski曾经撰写了一篇博文，描述了一个人在面对这样的选择题的时候，是如何“左右摇摆而又非此即彼的”。他提到：

从另一个角度来说，如果你要成为一个很棒的工程师，那么通常同时你也会是一个很差劲的经理。

那么是不是有例子可以证明，一个人是可以同时担当技术和管理的双重角色呢？这样的讨论在网上比比皆是。以下是其中的一些节选：

ChrisF说：“这取决于你必须要完成的编程工作的工作量和方式，以及你担任的管理职责的工作量和方式。”
Martin Wickman则提到：“在我曾经工作的一个团队里面，就有一个程序员同时担任了我们的经理。这种模式使得生产率以及所有类似指标都惨不忍睹。简单地说，所有的决策都是那个人做的+他就是个彻头彻尾的管家婆，大事小事都要管。”
“我认为，在多数情况下，这可能不是个好安排。但还是有很多文章讲述了开发能人是如何被提拔，并成长为团队管理者的，即使这并不是他们擅长的技能方
向，甚至不是他们渴望的工作。他们很纠结于纯粹的‘管理’工作，因为他们认为他们的‘工作’就是完成编码，而不是写报告和开会。”David in 
Dakota说道。

敏捷方法论中的角色定义正改变着这场讨论的走向。由于敏捷理论改变并弱化了传统项目经理的角色，同时又重新让开发人员来承担项目成败的责任，于是有些人就在质疑，这种变化是否会降低一旦失败了就归咎于团队某个单一角色的可能性呢？
关于项目经理这一角色，CA Atreya还引出了另外一个话题。引用2005年ESI调研报告，关于项目失败原因的数据则显示，劣质的需求定义才是唯一的罪魁祸首。
查看英文原文：Are Project Managers the Problem?</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 14:25:57</pubDate>
</item>
<item>
<title>Firefox 8发布 微软IE团队不再赠送蛋糕(图）</title>
<link>http://oss.org.cn/html/01/n-61901.html</link>
<text>		每次发产品都有蛋糕吃的好日子一去不复返了~　　 北京时间11月11日早间消息，火狐8浏览器已经正式发布，但微软此次打破惯例，并未向 Mozilla 赠送蛋糕表示祝贺。　　按照微软的惯例，每次 Mozilla 发布新版本 Firefox 浏览器后，微软就会赠送一个纸托蛋糕。但是在火狐8发布后，微软并没有再赠送蛋糕。　　微软发言人称：“自从我们认为 Mozilla 的浏览器版本更新开始过于频繁后，就不再赠送蛋糕。每6周一次更新，那得多少蛋糕啊。”　　微软在今年3月份火狐4发布时向 Mozilla 赠送了一个大蛋糕表示祝贺，但是随着火狐版本更新速度的加快，微软赠送的蛋糕也越来越小，直到火狐8不再赠送。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 14:21:52</pubDate>
</item>
<item>
<title>盛大开源项目管理平台TeamHost.org开始内测</title>
<link>http://oss.org.cn/html/00/n-61900.html</link>
<text>最近盛大创新院出品的Teamhost.org开始内测，作为一款支持开源软件的项目管理平台，Teamhost赢得了国内社区和开发者们的关注。为此，我们采访了Teamhost的联系人、著名程序员庄表伟。

1. 盛大研究院推出Teamhost的初衷是什么呢？ 
推
出Teamhost，最根本的原因，是想为中国的开源社区、为中国的开源开发者，做出一些贡献。国内有第一流的开发者，有非常热情的开源爱好者与奉献者，
 
但是他们中的绝大多数人，在参与国外的开源项目，即使是国内的开源项目，也往往将代码hosting在国外的服务上。他们从SourceForge迁移到
 Google Code，再从Google 
Code迁移到Github。而与此同时，国内竟然没有一个基本可用的开源项目托管服务，曾经有过的一些开源网站，现在要么销声匿迹，要么长期无人维护，
 这样实在不能说是一个正常的现象。
&amp;nbsp;
我们的目标，首先就是想提供一个免费的，面向开源项目的，足够好用的项目托管服务。
&amp;nbsp;
国
内的开源项目存在着的另外一个问题是，参与者非常少，知道的人非常少，使用者也非常少。做开源的人，都是很寂寞的，而国内的开源开发者，就更加寂寞。在这
 
样一种状态下，有些人孤独前行，有些人只能黯然放弃。Teamhost有没有可能帮助他们，让他们能够获得资源，能够赢得关注，能够吸引同好，能够结交朋
 友？如果能够做到这些，我们就能够真正的为中国的开源事业，做出一些贡献了。
&amp;nbsp;
盛
大最初是一家游戏公司，多年的网络游戏运营经验，使我们意识到，网络游戏，对于参与者的激励是非常惊人的。因此，盛大尝试将游戏机制引入到日常的管理之 
中，成为了一家游戏式管理的公司，并且获得了非凡的成功！而开源项目的运作，有没有可能，也以游戏式管理的方式来进行？也有打怪，也有升级，也有勋章、荣
 誉，也有虚拟世界里的经济体系。如果，Teamhost能够在这些方面做出一些有趣的尝试，相信会非常有意思，也会收到非常好的效果。
&amp;nbsp;
因此，我们的初衷归结为三个要点：免费服务、社会化网络、游戏式管理。
2、能介绍下Teamhost的主要特性吗？我登陆进去在新建了一个project之后，看到可以开通很多服务，内容很丰富。
Teamhost.org 是为那些致力于开源项目的开发者服务的，提供类似于 &quot;Google Code&quot; 和 Github
 的开源项目托管服务。首先提供开源项目托管，这是Teamhost第一阶段要做的事情，这一阶段除了几个功能点还在开发外，大致上已经完成，已经在内测
 中。而下一阶段是建立社会化(SNS)的开源敏捷开发平台。这里首先向 Github 表示致敬，以及所有支持开源项目的人们致敬。
&amp;nbsp;
Teamhost 是
 
基于redmine进行二次开发，提供即建即用无需审核的版本控制系统(Git/SVN)，支持直接阅读readme文件等新特性。事实上它能够帮助开发
 
者更好的管理一个项目的方方面面，其中包括：开发者交流、发布管理、Bug管理、版本管理等内容。与其他的项目管理平台不同的是，Teamhost的易用
 
性很强。对重要的功能提供了在线的指导和提示，并拥有完善的用户文档。主要的功能都可以在用户指导模块一步一步的指引下顺利完成操作。在每一个重要的功能
 
页面，当用户初次使用时都会出现一份详细的该功能的用户指南，即使是初次使用也可以很快上手。在代码和站点安全上，Teamhost提供全程的HTTPS
 
SSL安全通道支持，无论是web站点访问还是代码提交都以2048位RSA建立安全通道，保证你使用的安全。在项目的版本控制系统上，Teamhost
 
目前支持Git和SVN的即时创建和使用。而您提交的readme文件可以直接在项目首页上显示，另外，代码仓库中任一目录下的readme文件会直接显
 示在Web 源代码页面中，便于您的组员更容易的理解目录的内容。Teamhost上的Wiki支持多种格式 
(markdown,textile,mediawiki,rdoc)，开发者可以选择您自己熟悉的Wiki格式来书写项目wiki。
3、相比较国外的GitHub、Bitbucket，Teamhost有什么不同之处呢？
目前看来，我们还非常的初级，也不能说有什么不同。只能说，我们的目标与他们可能不太相同，我们的运营手法也会和他们不太相同，渐渐区别就会体现出来，特征也会更加鲜明起来。现在还不好说。
4、Teamhost现在似乎只有英文界面，对于国内的开发者来说也许中文界面更具友好性，有计划在什么时间能实现吗？
Teamhost是原生支持多国语言的，在注册登录之前，网站界面的语言，由使用者浏览器的语言决定。在登录之后，用户可以设置自己语言。
5、介绍一下Teamhost的roadmap？它会是永久免费的吗？可以提供私有的项目管理吗？
从大的RoadMap来说，可以分为几个阶段：封闭内测（现在正在进行）--&amp;gt;公测（提供项目fork、各种积分与统计系统、网站新首页）--&amp;gt;正式开放（项目同步、分布式、敏捷项目支持、技能与经验值体系、社会化特性）--&amp;gt;未来还有更多的设想。
&amp;nbsp;
Teamhost从一开始就注册为.org的后缀，完全没有收费的打算，因此，也没有支持私有项目的打算。更多的内容，可以参考我们Teamhost的架构师李雪愚写的一篇《谈谈Teamhost的梦想》 http://blog.Teamhost.org/?p=20
</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 14:19:46</pubDate>
</item>
<item>
<title>Cloud Expo 云计算大会亮点一览</title>
<link>http://oss.org.cn/html/99/n-61899.html</link>
<text>11月11日消息，本周在美国硅谷&quot;心脏&quot;圣克拉拉举办的Cloud Expo 会议刚刚结束，Cloud Expo聚焦于云计算，近年来在多地举办过，如纽约、东京、香港、加州等，在本周的会议上，大会设置了多个会议主题，其中包括开源云的话题。
下面是大会的几个重要的亮点，简单总结如下：
1、面向私有云
Rackspace 宣布了Rackspace Cloud 私有云版本，该解决方案目标是帮助企业部署和管理私有云应用，将与Eucalyptus 系统平台直接竞争。
2、数据中心
&amp;nbsp;Abiquo，一企业云软件公司，宣布了
它的生态系统合作伙伴关系，称将使企业数据中心更高效和节约。个别厂商在拓展Abiquo现在的软件工具来进行云/云应用的自动部署，包括 
Opascode。Abiquo还宣布将支持更多的虚拟机管理程序提供虚拟化选项，包括VMware vSphere 5和Citrix 
XenServer 6.0。
3、云安全
&amp;nbsp;McAfee 利用Cloud Expo的展示机会，来展示其新的McAfee 云安全平台。安全一直在被云部署的IT部门所日益关注。McAfee 云安全平台包括新的身份管理、数据丢失预防、email和web网关等特性。
4、测试
在Cloud Expo上，Interxion宣布了它的 Cloud Testlabs的最新更新，包括Microsoft's Dynamic
 Datacenter Toolkit (DCC)，以及在英国率先推出的 Cloud Testlab，基于Flexiant 
Extility。Cloud Testlab可以使云托管提供商来开发云服务和部署前的虚拟化环境。
5、演讲
本次大会有很多重量级嘉宾到场，自然演进亮点颇多。比如Rackspace的CTO Engates就表示其非常重视云部署和升级，称“稍等那么一点，因为云还没完全准备好”。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-11 14:16:29</pubDate>
</item>
<item>
<title>Facebook宣布成立开源计算项目基金会 红帽正式加入</title>
<link>http://oss.org.cn/html/98/n-61898.html</link>
<text>导读：10月27日第二届Open Compute Project峰会在纽约举行。在本次峰会上Facebook宣布成立新的非盈利性质的基金会用来促进Open Compute Project的发展。Red Hat在本次峰会上也正式宣布加入Open Compute Project。同时百度也与Facebook的在Open Compute Project上达成了合作。

10月27日第二届Open Compute Project峰会在纽约举行。本次峰会的主要目的就是改进技术并创新方案以实现高效的数据中心。
Open Compute Project是Facebook在今年4月发布的项目，此项目将其底层服务器和数据中心技术开源。Facebook此举堪与2004年Google陆续发表MapReduce等论文相提并论。Google当年的开放措施实际上直接启动了如今如火如荼的云计算运动。而Facebook今天将云计算之火烧到了硬件和数据中心领域。
Open Compute Project就是为了打破数据中心世界固有的“行业标准”，对数据中心的重新设计可帮助人们改善之前被视为理所当然事情的看法。Open Compute Project利用开源社区的理念改善服务器硬件以及机架的设计。Open Compute Project对数据中心设计的影响就像Linux社区对开发者的影响一样。
尽管开放计算项目是由Facebook发起的，但其他合作伙伴也在积极地参与进来。在这次峰会中Red Hat就正式宣布加入Open Compute Project，这对于Open Compute Project是非常利好的消息。Red Hat本身就是建立在开放、合作和技术贡献的原则基础之上的。这些原则与Open Compute Project的宗旨如出一辙。

Red Hat公司工程部副总裁、公司首席技术官Brian Stevens就表示Facebook正在使用开源模型的力量重新定义数据中心的设计和建立方式。Red Hat本身始终关注创新和终端用户的价值，这样看来，加入Open Compute Project是顺理成章的事情。Red Hat的加入不仅将Red Hat本身的产品优势延伸到系统中，并且扩大了整个开源技术的应用范围。
Red Hat加入Open Compute Project的第一个举措就是将其企业版Linux系统运行在2个基于项目配置的服务器上进行了认证。Red Hat还期望进一步在Open Compute Project的服务器上测试Red Hat企业虚拟化平台和存储技术。目前DELL、INTEL、ASUS、AMD已经贡献专有技术到该项目。
在此次Open Compute Project峰会上另一亮点是Facebook的技术运营主管以及开放计算项目的发起者之一Frank Frankosky宣布成立新的非盈利性质的基金会用来促进Open Compute Project的发展。该基金会包括英特尔、高盛集团、以及Rackspace Hosting公司等。Frank Frankosky表示基金会就像一个社区，大家可用来分享自己的创意和最佳的操作实践。他还表示目前基金会的资金充裕。
本月百度和Facebook的在Open Compute Project也达成了合作。合作内容包括：服务器(Server)以及数据中心(Data Centers)。服务器部分包括机箱、AMD主板、Intel主板、电力供应这4个部分；而数据中心则包括整体电力供应、整体温度控制、备用电池、以及三联机柜。

与此同时，Open Compute Project的各种技术专家们也是雄心勃勃。他们的目标是能够构建存储时间标准达100年的设备，并构建开放式机架（包括机架设计与模块化配电等），并根据不同的地域因地制宜的建设不同的数据中心。Intel数据中心集团总经Jason Waxman就表示开放计算项目将使更多公司能使用数据中心这一现代化的平台。保障企业可以获取满足自身需求的高效平台。
Frank Frankosky还宣布了Facebook公司将在瑞典律勒欧靠近北极圈的附近建造Facebook在美国本土之外的第一个数据中心。Facebook通过此举可对计算机工作量、能耗、及冷却管理进行有效改善，同时数据中心对环境的负面影响将得以减轻，从而进一步降低企业的成本。
Facebook Open Compute Project的目的就是希望通过开源建立一个大的生态系统，借助Intel、Rackspace等合作伙伴的力量缩小其与Google在数据中心技术方面的差距。而Google则一直保密他们自己的云平台设计。SugarCRM公司的CEO拉里就表示希望以后不再有保密的数据中心技术，因为保密对企业来说是一种干扰。今天许多互联网公司认为他们之所以与众不同是因为他们的数据中心设计，其实并不是这样。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-11 12:21:00</pubDate>
</item>
<item>
<title>SEO新手常会遇到的一些共性问题汇总</title>
<link>http://oss.org.cn/html/54/n-61854.html</link>
<text>SEO新手常会遇到的一些共性问题汇总：
　　1. 百度网站首页无快照?
　　首页无快照是首页被k了，解决办法是找出被k原因并且修改。然后每天更新原创文章，外链去高质量的论坛，分类信息里面去发，锚文本要多样性。剩下的就只能等待百度重新收录网站收录了。
　　2. 网站快照不跟新?
　　网站快照不更新的解决办法是写高质量的文章更新，数量加大，每天最好是按时更新。
　　3. 很多关键词需要排名，怎么做好?
　　网站有很多关键词要排名，最好的办法是先要提高网站的权重，只有权重上来了关键词才能提升上来。
　　4. 怎么样提升网站权重，内页权重?
　　提升玩站权重，一，发高质量的文章，二，发外链(方式：权重高的论坛，分类信息，百度知道，soso问答，博客等)，一篇文章发几次就可以了，写文章的时候标题要新颖，包含长尾关键词。
　　5. 百度指数上千，收录百万，这样的词多长时间可以排上来?
　　这个问题就是一个网站权重的问题，权重高的话一个月就可以排上来。
　　6. 百度每天收录情况怎么才算是正常的?
　　从站长工具里面查询，会看到每天的收录情况，编辑每天会发很多文章，比如某些公司要求编辑每天发40篇，可是百度收录只有几篇，这个除了文章本身的质量外，还有网站外链的问题，外链的发放建议带上前天文章的链接发，这样可以提高收录。
　　7. 友情链接一个星期换30-50个，换这么多，百度会有什么反应，好不好呢?
　　友情链接一个星期换30个也是正常的，但是不可能每个星期都换那么多的，毕竟一个网站的友情链接的数量在30到50个之间相对适合一些。伴随着你不断进行的友情链接交换，有一些网站会暗中撤掉友情链接，还有就是你的网站权重提高后，也会不断清理一些链接，在补充新的友情链接进来。
　　8. 外链的增长方式?有规律还是无规律?
　　外链的增长是有规律的，至少要保持在一个水平线上面，网站里面的链接以定向锚文本为主，网站外部的链接以锚文本多样性为主，装成网站的用户给网站做的链接，自然会比较符合搜索引擎对外链的要求。
　　9. DIV+CSS，JS代码对网站优化的影响
　　DIV+CSS可以提升网站页面代码精简度，蜘蛛抓取的更加容易。然后可以让网站速度变快，网站流量大的时候，这样可以减低服务器压力。JS代码对优化没什么影响，js中的链接蜘蛛无法很好的爬行而已，所以如果网站内部链接都是js中的链接，就会影响网站收录，影响蜘蛛爬行了。
　　10. 雅虎外链数越多越好，还是百度反链越多越好?
　　在站长工具里面查雅虎外链，只能查到带有锚文本的外链，在百度反链里面查到的外链包括锚文本和直链。
　　11. 友情链接买卖方案?
　　方法很多，而且没有标准答案，选择适合自己的方式，比如提供一种方案。找门户类新闻类的网站来买，每周网站加4个友情链接。一共加四周。链接买一个季度，导出链接数小于30.PR值大于本身网站2个以上。
　　12. 为什么我的网站一直都可以突然不行了
　　这个是一个网站健康度的问题，百度喜欢收录和反链都保持增长的态势，每天都有新内容被百度收录等(比如每天百度收录和反链都是2万，百度当日收录应该在几百这样)。
　　13. 硬词怎么做?
　　硬词是指除了核心关键词以外的词，很短，(比如：武汉XX医院)，那么在外推的时候我们在标题上可以加词，做成长尾词，在做这个词之前，搜下武汉XX医院这个词出现在首页的是网站还是文章页，如果该词全部都是要是首页的话，想用分类信息，论坛帖子什么的很难做上去，比较论坛帖和分类信息是很难和一些权重不错的网站首页竞争的。在不就是用网站来做，这个又提到提高网站权重的一个问题了。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 23:44:57</pubDate>
</item>
<item>
<title>四万快递员备战光棍节网购 促销大战一触即发</title>
<link>http://oss.org.cn/html/53/n-61853.html</link>
<text>去年多家公司出现快件爆仓积压 沪浙粤预计将成今年收发最繁忙区域节假日网购成交量陡增，快递公司往往会爆仓，快件积压严重。IC 资料　　申通、圆通、中通、汇通、韵达、CCES、邮政EMS、海航天天、顺丰等9家快递企业总共调集约40000名快递员，超过700辆快递车专门负责“光棍节”的货物运输。同时，在货物分拣中心设立超过300条绿色通道，组建超过2000人的客服团队解决消费者货单服务问题。　　一个远离传统意义的所谓节日，却引发了网络销售平台的极大兴趣。2011年11月11日，被网友戏称为“超级光棍节”。在这一天，诸多电子商务平台都将展开花样繁多的促销活动，作为电子商务重要一环的物流业也摩拳擦掌。为防止以往节日“爆仓”情况再次出现，各快递公司紧急调派人手，储备了超过4万名快递员的力量，从11日开始全负荷工作。　　促销大战一触即发　　统计数据显示，去年11月11日，淘宝商城单日销售额达到9.36亿元人民币，甚至超过香港的日零售总额。正因如此，各电子商务平台跃跃欲试地加入了今年“光棍节”的大战。　　数百万件商品包括当季新品在内全场5折、24台汽车半价销售……在某著名网络商城铺天盖地的光棍节广告中提及，此次促销涉及家纺、服饰、鞋包、化妆品、食品、母婴用品等多个类目，所有参加的商品将会打上双“11”标志。促销当日，这些商品大多以半价销售。眼下，部分商家已经将促销商品囤积起来，并建议消费者收藏到购物车，直到11日再买。　　另外一家直邮服饰网站则宣布，从11月4日零点到11日24点，全场商品免运费。数码产品网络商城的促销方式更令人眼花缭乱：从即日起，每逢11点便有不同种类的低价商品限时抢购。此外，还有低至1折的商品不定时更新上架。　　去年众多快递现“爆仓”　　近似疯狂的网络促销蓄势待发，也将检验众多商家的商品质量、价格，还有发货速度和快递效率。实际上，去年淘宝商城的促销带来了很多后遗症。由于大量货品在短时间内交易，快递公司一时间无法消化存货而纷纷宣告“爆仓”。曾有网友抱怨称，自己参与了 “光棍节”网络促销，最终竟然在一个月后才收到货。　　“其他节日都有一个相对较长的促销期，但是光棍节的交易都在11日当天完成。去年‘光棍节’网点里的货物堆得像山一样高，看起来就感觉绝望。”在闵行一家网点工作的圆通快递员崔高峰坦言，11月11日就是一场大考，“在11日之后的一周内，人像蜜蜂一样忙碌，网点昼夜灯火通明。”即便如此，快递公司也无法保持平时的送货效率。结果投诉纷至沓来，自己的收入也因此而受到影响。　　据了解， “光棍节”在快递业被视为与“中秋”、“圣诞”、“春节”齐名的“四大战役”，也是每年网购“春运”的揭幕战。为防止今年快递企业再次“爆仓”，淘宝商城已在今年8月和众多快递接洽，确保快递链条顺畅。“我们要求所有参加‘光棍节’促销的商家，都必须在7天内将货物发出。快递企业将会对‘双11’的包裹特别贴上标签优先处理。”　　据淘宝工作人员介绍，今年“光棍节”，上海、浙江、广东预计将成为收发快递最繁忙的3个区域，其中上海是买家卖家最集中的区域，快递物流企业面临的压力最大。　　今年提前增人手加车辆　　“因为有了‘光棍节’促销，快递业务的高峰期提前了一个月。”昨日，圆通快递公关部负责人介绍，预计该公司“光棍节”前后的业务量将增加30%。为此，该公司在两个月前，便筹划招聘新人及从其他地区调配人手，“保持24小时运转，力争按时交货。”　　中通快递临时分配1000名快递员增援到各地分拨中心，还在主要干线上新购100多辆网络班车，开通广东到杭州、广东到上海的直达往返班车，并在苏浙沪之间增开线路班次。　　申通快递告知，全国所有网店在本周六、周日将全部增加投递，所有二线人员必须到一线参与递送，如果各网点预期运送车辆不足，则需提前进行租赁。韵达快递表示，将在江浙沪地区实施中转频次翻倍的策略提高快件递送能力。　　记者获悉，申通、圆通、中通、汇通、韵达、CCES、邮政EMS、海航天天、顺丰等9家快递企业总共调集约4万名快递员，超过700辆快递车专门负责“光棍节”的货物运输。同时，在货物分拣中心设立超过300条运送绿色通道，组建超过2000人的客服团队解决消费者货单服务问题。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 16:18:01</pubDate>
</item>
<item>
<title>“Linux 桌面时代”一定要到来</title>
<link>http://oss.org.cn/html/52/n-61852.html</link>
<text>Linux 诞生已是20年，一直听说“Year of the Linux desktop”即将到来。实际上，“Linux 桌面时代”尚未到来。从全球市场份额来看，Linux 桌面约占1%左右。
但并不是没有希望。且看下面数据图表：A：NetmarketShare data, Nov 2009 – Oct 2011:

B:StatCounter data, Nov 2009 – Oct 2011:


从NetmarketShare 与 StatCounter 统计数据可以看出Linux 桌面用户份额—1%。
但GNU Linux 桌面操作系统还是有希望的！
GNU Linux 操作系统具有的众多特性，如免费、社区支持、创新精神、合作等在云计算时代慢慢地会得到大家的肯定。云计算时代，大家最常用的就是一个浏览器，相比之下，会有很多人选择Linux 作为桌面系统尝试。
Linux 在服务器和嵌入式方面应用广泛。比如车内GPS定位、智能手机和平板电脑等等，虽然大家不知道用的Linux，但他们一直在用。
显然，在桌面领域唯有Windows 一尊独大，市场份额远胜其他操作系统。Mac 这几年增长也很快。与Mac 转到Intel CPU有关。但是，Linux 与其相差只有几个百分点相差。微软认为目前的威胁是苹果，而非Linux。
虽然只有1%的份额，但我们总不能放弃。目前，较优秀的操作系统Ubuntu也逐渐得到大家的肯定，它在桌面领域的贡献很大。目前也预装在DELL PC中，DELL 在咱们中国的零售店也开始销售预装Ubuntu PC。Ubuntu扬言未来4年内发展2亿用户。这一切都是可能的，并非痴人说梦。
C：StatCounter data, Nov 2009 – Oct 2011:

Android 基于Linux 内核，现在市场份额快速增长。虽然很多朋友不知道，但一直在用。
“Linux 桌面时代”一定要到来！
但这需要一段长路要走，但愿待到Linux 而立之年、不惑之年，能够交出满意的答卷。
除去上面所述之外，笨兔兔认为，Linux 的后时代增长点最大的市场在中国，为啥？“国情”，呵呵，这点国情确实起了作用，人口多。谁越早占领中国市场，谁就是未来的赢家！这也是国内Linux 发行版本发展的重要机遇期，一定要抓住，搞好市场推广、宣传，搞活社区。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:41:25</pubDate>
</item>
<item>
<title>HTML 5新特性Canvas入门秘籍</title>
<link>http://oss.org.cn/html/51/n-61851.html</link>
<text>随着IE 10的即将发布正式版，标志者HTML5的时代已经越来离我们越来越近了，尽管HTML 5的最终标准草案还没最终敲定，但象Chrome,Firefox等浏览器对HTML5的标准已经支持的十分完善了，IE 10的预览版本也声称支持更多的HTML 5特性。在此情况下，无论作为CTO还是一般的前端页面开发者还是网站编程的开发人员，都应该开始给予HTML5相当的重视。而在HTML5中，其中最令开发者和用户值得留意的新特性，莫过于Canvas的功能了，它能在目前的IE 9，IE 10以及Chrome,FireFox等多种浏览器中使用，是目前HTML5中富客户端动画效果的实现方式，有了它，HTML5就有了跟Adobe Flash对抗的资本，用户以后只要使用支持HTML5的浏览器，就可以不用安装Flash插件了。那么，究竟什么是HTML 5中的Canvas功能呢?本文将带领初学者学习Canvas的入门知识。
走近Canvas 元素标签
官方对Canvas元素标签的定义为：Canvas(画布)可以用来进行绘制图形，绘制游戏的图案或者其他图形图案，允许使用脚本动态渲染点阵图像。简单来说，Canvas就是允许你在HTML5中，使用Javascript去绘制你喜欢的任何图形了，包括文字，图片、线、点、各种形状等。Canvas使用的是Canvas 2D API去绘制图形的，这个API功能十分强大，而且大部分的浏览器都支持 2D canvas ——包括 Opera, Firefox, Konqueror 和 Safari。而且某些版本的 Opera 还支持 3D canvas ，firefox 也可以通过插件形式支持 3D canvas 。下面马上来看Canvas的例子。&amp;lt;canvas id=”myCanvas” style=”width:300px; height:300px”&amp;gt;&amp;lt;/canvas&amp;gt; 
这个代码就会在浏览器中先绘画一张画布，宽度和高度都是300px，但这个时候页面上并不能显示什么效果，只是一个空的区域。
在一个页面中，可以有不同的canvas，不同的canvas都必须有自己的id属性以示区分。为了在canvas上绘制图形，必须引用canvas的上下文context变量。Context上下文能让你访问2D API中的属性和方法，这样就可以在画布元素中操作和绘画图形了，这个我们稍后再详细讲解。
先来看下每一canvas元素标签中都有X和Y坐标，X坐标代表水平，Y坐标代表垂直，下图是其坐标系的图：



Canvas和SVG的关系
开发者必须清楚SVG技术和canvas是不同的。SVG是基于XML的图形矢量显示技术，可以将其与CSS混搭使用，也可以使用SVG DOM动态向其添加行为。而canvas则允许使用Javascript去绘制各种图象和图形，下面是一些canvas胜过svg的优点：
1) canvas在绘制复杂图象时，绘画速度比SVG快不少。
2) 可以保存canvas绘制的图象，但SVG不能直接使用浏览器的保存功能保存。
3) 在canvas中所有东西都以象素形式存在。
4) svg需要在浏览器中使用插件显示。
但要同时注意到，svg也有自身的优势，比如：
1) svg的图形解析分辨率能适应不同大小尺寸。
2) svg由于使用XML，因此能定义很多不同的目标元素。
3) svg能绘制很复杂的动画效果。
那如何选择呢?建议如果你的网站的图象对分辨率要求高(矢量图要求)，那么选择SVG，如果你的应用是网页游戏等对速度要求响应高的，也不想过多跟XML打交道的话，则选用canvas。更多关于如何选择SVG和Canvas,可以参考这篇文章的论述：http://blogs.msdn.com/b/ie/archive/2011/04/22/thoughts-on-when-to-use-canvas-and-svg.aspx
Canvas和硬件加速
在学习canvas时，建议读者阅读这篇文章《硬件加速下的图形显示对比》，这篇文章中对比了HTML5下canvas在各浏览器下的渲染表现。在早期的浏览器中，所有对图形的显示运算都是有CPU去实现的，而随着互联网的快速发展，对图形处理的要求越来越高，于是很多的图形渲染工作都由图形处理单元(GPU)去处理了，比如使用Direct2D或者DirectWrite。当图形处理工作大部分交由GPU去处理时，大大减轻了CPU的工作负担，可以腾出来做其他更复杂的工作。
Javascript一直被指责在处理图形方面逊色，但随着FireFox，Chrome等浏览器的大行其道，还有IE 9的新的Javascript引擎Chara，它采用在后台与IE并行并且独立的CPU内核中编译 JavaScript 脚本，采用单独的后台线程进行编译。采用这种方法，可以充分利用现在的多核处理器功能。开发人员可以不用更改任何现有的代码即可利用现有计算机硬件的带来的性能提升。
因此，有了浏览器在GPU方面的加速功能，就能为HTML5的canvas的使用提供很好的环境。
当向canvas发出绘画命令时，浏览器直接将指令发到图形加速器而不需要开发者更多的干预，硬件图形加速器则以难以置信的运算速度实时绘画和渲染图形。可以通过阅读下文来了解更多的在不同浏览器之间的硬件加速测试的具体情况(地址：http://ie.microsoft.com/testdrive/Performance/Paintball/Default.html)
Canvas 2D API
canvas 2D API对象允许开发者绘制各种图片和图形。调用时，需要通过getContext方法获得其上下文，这个方法中有一个参数，目前是2d，调用的代码如下：var myCanvas = document.getElementById(“myCanvas”);  var context = myCanvas.getContext(“2d”); 
由于每一个canvas元素都有自己的上下文context，因此如果一个页面中有多个canvas的话，必须对每一个canvas都按上面的方法获得其context。除此之外，canvas api有如下的若干重要方法：
形状变换类的方法
◆ scale –允许对当前canvas对象进行形状大小变换
◆ rotate –允许对当前的canvas对象绕 x轴和y轴旋转。
状态变换类方法
◆ save – 保存当前canvas的状态
◆ restore –恢复上一个已保存的canvas的状态
文字类方法
◆ font –设置或获得当前canvas的字体
◆ fillText –向当前canvas填充文字
◆ measureText –获得指定文字的宽度
更多的关于canvas 2D API的用法，可以参考这个页面http://msdn.microsoft.com/en-us/library/ff975057.aspx)。下面，我们开始学习如何使用这些API去绘制图形。
</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:33:31</pubDate>
</item>
<item>
<title>如何做到API兼容</title>
<link>http://oss.org.cn/html/50/n-61850.html</link>
<text>Whats API?
API的全称是application programming interface。
而很多时候，程序开发者仅仅把函数、类的接口做为API的一部分，而忽略了其他重要的编程接口。
事实上，在前端Javscript编程中常见的API包括：
◆ 函数、类接口，包括参数，返回值，函数对外部对象(常常是DOM)的具体操作等
◆ 网络接口协议，如和后端交互的JSON、XML数据格式，或者script回调中的函数名
◆ 样式以及HTML接口
◆ 外部依赖(对浏览器具体特性的依赖)
◆ 一些无意泄露的内部实现
越往后的API，越隐晦，越不容易受到重视，但是一旦这些API发生变化，可能会导致调用方出现不符合预期甚至程序直接报错的情况。
Why API cannot be changed?
API是程序协同开发的重要保证，API的用户希望API的提供方提供的是一段功能明确、接口明了的程序。更重要的是，用户更期望在程序升级以后，他们能够不经思考地升级这些第三方代码。
一旦上述提到的5个API中的任何一个发生变化，可能会给他们带来巨大的代价，用户需要排查所有调用的代码，需要更改一些协议，需要调整所有与之相关的部分，这些工作对他们来说都是额外的，在预期之外的。如果辛辛苦苦完成这些以后，还在测试过程中发现了相关的bug，那对用户的打击就更大了。
如果API经常发生变化，用户就会失去对这段程序的信任，他们会更倾向自己获得源代码以后，按照自己的需求进行修改，自行维护一个内部的API比调用一个不断发生变化的外部API要容易接受的多，虽然这样做和我们协同开发、模块化开发的初衷是完全相悖的。
最后，我们为什么要修改API呢?为了API看起来更加漂亮?为了提供更多有趣的功能?还是仅仅我们觉得到了改变了时候了?对于用户来说，他们更愿意使用一个稳定但是看起来不那么时髦的API，而不是使用一个很时髦，但是会经常变动的API。在这个问题上，项目开发者是实用派。但这并不意味着我们不再改进API了，在后面，我会具体介绍如何能让API保持稳定的同时，让API持续改进。
Quality of API
在正式说兼容性之前，首先要明确一下，什么是好的API，因为导致API的不兼容的根源总是来自一个想法：期望通过这次改变把API变得更好。
容易理解
如果一个API不能让大多数使用者快速学会，这一定不是一个好的API。 比如iOS的滑动解锁，老人和小孩都能都能一次解锁，而Nokia的经典两键解锁，你懂的。
一致性
一致性能大大降低用户的学习和使用成本，用户过去的努力学习，能持续的收效。
容易查找和学习
API必须要有文档，并且介绍清晰，提供尽可能多的示例和可copy-paste的代码，降低用户的使用门槛。
提供简单的方案
API要能解决复杂的问题，提供很多可配置项，但是对于那些最常见的case，如果有一个简单的方案供给用户使用，这样能大大提高API的可用性
保护用户在API上的已有工作
用户过去在调用API、基于API开发所做的工作，这样才能给用户带来价值的同时，不破坏他们过去的劳动成果。
如何保证API的兼容
采用良好的设计思路
在设计过程中，如果能按照下面的方式来进行设计，会让这个API生命更长久
◆ 面向用例的设计，收集用户建议，把自己模拟成用户，保证API设计的易用和合理
◆ 保证后续的需求可以通过扩展的形式完成
◆ 第一版做尽量少的内容，由于新需求可以通过扩展的形式完成，因此尽量少做事情是抑制API设计错误的一个有效方案
◆ 对外提供清晰的API和文档规范，避免用户错误的使用API，尤其是避免API(见第一节)靠后级别的API被用户知晓与误用
除此之外，下面还列出了一些具体的设计方法：
◆ 方法优于属性
◆ 工厂方法优于构造函数
◆ 避免过多继承
◆ 避免由于优化或者复用代码影响API
◆ 面向接口编程
◆ 扩展参数应当是便利的
◆ 对组件进行合理定位，确定暴露多少接口
◆ 提供扩展点
有效的API评审
API设计完成以后，需要经过周密的设计评审，评审的重点如下：
◆ 用例驱动，评审前必须提供完善的使用用例，确保用例的合理性和完备性。
◆ 一致性，是否与系统中其他模块的接口风格一致，是否与对称接口的设计一致。
◆ 简单明了，API应该简单好理解，容易学习和使用的API才不容易被误用，给我们带来更多的麻烦。
◆ API尽可能少，如果一个API可以暴露也可以不暴露，那么就不要暴露他，等到用户真正有需求的时候再将它成为一个公开接口也不迟。
◆ 支持持续改进，API是否能够方便地通过扩展的方式增加功能和优化。
把握API的生命周期
每一个API都是有生命周期的，我们需要让API的生命周期更长，并且在API的生命周期结束时能让其平滑的消亡。
◆ 告诉用户我们是如何设计的，避免误用，提供指导，错误的使用往往是缩短API寿命的一大杀手
◆ 提供试用期，API不可能一开始就是稳定，经过试用的API才能有更强的生命力
◆ 为API分级：内部使用;二次开发使用;开发或试用中;稳定;弃用API。避免API被滥用的同时，我们可以通过调整API的级别，来扩大其影响力，也能更优雅的结束一个API的生命周期。
保持API的逐步改善
过去我们总希望能将现有的不合理的设计完全推翻，然后按照现在美好的思路，重新设计这个API，但是在一段时间以后，又会碰到一样的状况，需要再推翻一次。 如果我们没有有效的逐步改善的办法，依靠推翻现有设计，重新设计API只能让我们回到起点，然后重现之前的过程。 要有一套行之有效的持续改善的办法来在API兼容的同时，改善API使之更好。
提高API的可测试性
API需要是可测试的，测试不应依赖实现，测试充分的API，尤其是经过了严格的兼容性整合测试的API，更能保证在升级的过程中不出现兼容性问题。
兼容性整合测试，是指一组测试用例集合，这组测试用例会站在使用者的立场上使用API。在API升级以后，再检测这组测试用例是否能完全符合预期的通过测试，尽可能的发现兼容性问题。
避免极端的意见
在设计API的时候，一定要避免任何极端的意见，尤其是以下几点：
◆ 必须漂亮
◆ API必须被正确地使用(用户很难理解如何正确的使用API，API的设计者要充分考虑API被误用的情况：如果一个API可能会被误用，那么它一定会被误用)
◆ 必须简单(我们总会面临复杂的需求，能两者兼顾的API是更好的API)
◆ 必须高性能(性能可以通过其他手段优化，不应该影响API的设计)
◆ 必须绝对兼容(尽管本文一直提到如何保证兼容，但是我们仍然要意识到，一些极少情况下会遇到的不兼容是可以容忍的)
一些具体的实施方案
在一个API不可避免要消亡或者改变的时候，我们应该接受并且面对这个事实，下面列举了几种保证兼容性的前提下，对API进行调整的办法：
◆ 将API标记为弃用，重新建立一个新的API。如果一个API不可避免要被消亡，这是唯一的办法。
◆ 为其添加额外的参数或者参数选项来实现功能添加
◆ 将现有API拆成两部分，提供一个精简的核心API，过去的API通过封装核心API上实现。这通常用于解决用户需要一个代码精简的版本时。
◆ 在现有的API基础上进行封装，提供一个功能更丰富的包或者类
小结
设计一个保持兼容的API是很困难的。在这之前，作者需要理解什么是API，以及如何评估API的质量以后，通过良好的设计思路以及改进方法，来保证API的向后兼容。
其他
事实上，Tangram base库自从1.3.4版本以后，就已经做到了API的向后兼容，如果对Tangram感兴趣，可以前往Tangram网站查阅。
如果你对Javascript 的API兼容有什么自己的见解，欢迎留言讨论。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:31:02</pubDate>
</item>
<item>
<title>Fedora 16发布:Verne带你深海探险</title>
<link>http://oss.org.cn/html/49/n-61849.html</link>
<text>Fedora大约每六个月发布新版本，目前Fedora最新的版本是Fedora 16，在本周正是到来了。继10月13日 Ubuntu 11.10发布，Fedora 16的到来给了广大用户带来了新的不同的Linux体验。Fedora 16 的代号是“Verne”，这个代号来自“儒勒•凡尔纳（英文）”。儒勒·凡尔纳是19世纪法国著名的科幻小说和冒险小说作家，被誉为“现代科学幻想小说之父”, 曾写过《海底两万里》、《地心游记》等著名科幻小说。
　　对于Fedora 16很多人之前就保持相当的期待，如，Linux 3.0 Kernel、Gnome 3.2；KDE Plasma Workspaces 4.7：KDE将会增加新的应用启动器和plasma，基于workspace 4.7；GRUB 2 ：fedora 16将会切换到GRUB 2，在文件配置和启动目录上做些改动；Blender 2.5：Fedora 16 也会官方搭载最新的3D 和非线性编辑软件blender 2.5；BTRFS成默认文件系统：BTRFS 将在Fedora 16 中成为默认文件系统，Eclipse也会迁移到新的版本……等等。　　那么正是登场的Fedora 16又给我们带来了哪些重要的改变和更新呢？这次正式版的主要特性有：包​括​Aeolus Conductor、Condor Cloud、HekaFS、OpenStack以​及pacemaker-cloud在内的增强云支持；KDE Plasma工作空间4.7；GNOME 3.2；包括 GRUB 2和移除HAL在内的大量核心级系统改进；针对Xen的更新有：libvirtd、guest inspection、virtual lock manager以及基于pvops的内核，这些更新均提升了虚拟化支持​。​Fedora 16除了桌面版，还提供了KDE定制版、LXDE定制版、Xfce定制版。
　　不过，在今年的6月8日举行的Fedora工程指导委员会会议上，委员会决定Fedora 16将以Btrfs作为默认文件系统。但是，后来Fedora撤回了决定，Btrfs不再作为Fedora 16默认文件系统，原因是时间不充足，无法达到改变默认文件系统所要满足的基本要求。Btrfs将有望在Fedora 17上登场。　　介绍了那么多新特性，大家是否对体验Fedora 16也有些跃跃欲试了呢？如果你还不心动，就一起来看看下面尝试Fedora 16的六个理由吧!　　1，桌面选择！　　Fedora 16 默认桌面环境为GNOME 3.2，KDE版本使用KDE Plasma Workspace 4.7。GNOME 3.2 有很多改进，可参考GNOME 3.2 发行注记。　　2，更快、更健壮　　自F15 引进Systemd 服务管理程序后，F16 在此方面应用功能提升，也就是说桌面启动速度更快，系统管理能力增强。　　3，安全性加强　　F16 版本中的SELinux 改进，性能得到提升。　　4，云计算能力提升　　F16 增加了很多新的功能来支持云计算，包括HekaFS……当然理由远远不止这些，大家可以在本次专辑中进行详细的了解。
　　如果你已经心动了，那就赶紧行动起来吧！为了帮助大家更快上手，玩转Fedora 16，我们将整理一些尝鲜的经验之谈供大家参考。　　从 Fedora 16 开始，将在全新的硬盘上默认使用 GPT (GUID Partition Table) 分区表。简单的来说，GPT 是取代只允许四个主分区（或三个主分区一个扩展分区）的 MBR(Master Boot Record) 分区表的新分区表格式，最早有 Intel 提出作为 EFI （BIOS 替代品，常见于各类 Intel Mac）的一部分，并且成为现在 UEFI 的一部分。　　同时 Fedora 16 LiveCD 的 Anaconda 只具备将文件系统复制到目标主机的能力，于是很自然的意味着通过 LiveCD 的安装要求目标磁盘使用 GPT 分区表，使用 DVD （亦可用 Fedora LiveUSB Creator )则无这些限制。　　用 LiveCD 在使用 BIOS 的机器上安装时由于 GPT 的要求将需要创建一个大小为 1M 的 BIOS 分区，自动分区模式默认创建，手动分区模式若不创建的话无法继续。　　目前 M$ 的 XP(64bit)/Vista/2008/7 在 BIOS 上仅有使用 GPT 分布表的硬盘做为数据盘的能力，没有引导 GPT 分区表硬盘的作为系统盘的能力。　　目前 GRUB2 在 EFI（常见于 Intel Mac，注意和 UEFI 区分）上有 Bug，所以 Fedora 16 在 EFI 的设备上依然使用来自 Intel 的 GRUB-EFI 。
　　GRUB2 与 GRUB 单点配置文件的方式不同，它通过读取类似 udev/systmed 风格的一系列预制配置文件模板外加 /etc/default/grub 自定义变量文件，然后用 grub2 工具生成最后的配置文件 /boot/grub2/grub.cfg（强烈建议不要手动编辑该文件）……这些是安装前的一些注意事项，大家可以参考下。而对于系统体验方面本次专辑也有相关攻略奉送，详细的大家就关注下本次专辑吧！　　如果你Fedora 16正式版带来的新功能还不能让大家即时享受的话，那么之前的测试版体验或许可以一解大家的好奇心。获得Fedora 16 Beta版安装文件Fedora-16-Beta-i686-Live-Desktop.iso之后，编者发现其大小581MB，相对于Fedora-15-i686-Live-Desktop.iso的565MB略有增肥。通过虚拟机的简单配置之后，编者马上体验了这款最新版Fedora。
　　初步的感觉，Fedora 16确实更“胖”了，安装系统的开始阶段，系统提示需要至少768MB内存。编者为系统安装分配了512MB内存，结果系统弹出提示显示，至少768MB内存，汗。整个Fedora 16测试版的安装过程相对于上一个版本没有明显的延长。通过在系统安装过程设置的根用户的密码，登录系统。接着，系统会提示用户进行一些相关的设置，约为五步。至于新的体验还要有待各位Fedora爱好者继续探索啊！　　在回顾了Fedora 16给我们带来的不少惊喜后，我们一起来关注下Fedora社区近几年的发展。Fedora与Ubuntu一样，是针对个人桌面用户的Linux发行版，由红帽公司赞助。Fedora的目标是创建一套新颖、多功能并且自由(开放源代码)的操作系统。而不同于Ubuntu致力于尽可能做到用户友好，Fedora以比大多数Linux发行更具实验性著称。　　作为Red Hat的社区版，Fedora是它商业大哥的测试床。诸如新文件系统、新虚拟化技术以及其它许多的技术都在被完善与并入Red Hat之前在Fedora上测试过。但是Fedora不仅仅只是Red Hat的一个实验床而已。它也是本身一个独立的操作系统，而且是一个高品质的操作系统。
　　Fedora社区有数千名用户、投稿者和支持者，他们通过各种在线论坛、电子邮件列表和 Wiki 互动，相互支持。 Fedora 通过快速开发和发布周期提供当前硬件平台上的最新技术。开发人员和 Linux爱好者可以从Fedora社区了解最新功能，同时也有机会直接参与红帽工程部的合作。也许正是有着这么活跃的社区用户，和这么充满活力和创造力的社区，才能让Fedora这样不断成长吧！　　上周Mark Shuttleworth 宣布了ubuntu 12.04 LTS 的代号为：Precise Pangolin（译名：精确穿山甲），最近Fedora项目也发布了Fedora 17 的代号：Beefy Miracle（译名：结实的奇迹），希望这个版本也会给我们带来新的惊喜!

官方下载页面：http://fedoraproject.org/zh_CN/get-fedora-options
Fedora 16桌面版：
32位ISO：http://download.fedoraproject.org/pub/fedora/linux/releases/16/Live/i686/Fedora-16-i686-Live-Desktop.iso
64位ISO：http://download.fedoraproject.org/pub/fedora/linux/releases/16/Live/x86_64/Fedora-16-x86_64-Live-Desktop.iso
</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:29:17</pubDate>
</item>
<item>
<title>移动Web应用程序框架介绍：香浓的Cappuccino</title>
<link>http://oss.org.cn/html/48/n-61848.html</link>
<text>简介：多年来，Web应用程序已经取代了桌面应用程序的地位，尽管它们的质量通常比桌面应用程序低。这种差别的部分原因是，在浏览器中运行时，桌面应用程序的功能相对而言比web应用程序更强大。但是，随着近来现代浏览器及其HTML5规范实现的发展，二者之间的特性和性能差异迅速缩小了。另一个主要原因是，与桌面开发人员相比，Web开发人员必须处理级别低得多的API。Cappuccino将Cocoa框架引入Web开发，完全改变了这种局面，这使得它成为对移动Web开发人员极具吸引力的选择。请您自己确定Cappuccino能否很好地适应您的下一个卓越的移动Web应用程序。
关于本系列
移动应用程序的开发发展迅速，许多开发人员选择走移动Web路线，不再为每个不同的移动平台重复编写相同的应用程序。然而，由于您“追求Web”，您需要放弃本地移动应用程序开发人员曾经和容易构建的应用程序框架。结果是出现了几个Web应用程序框架。在本系列的4篇文章中，我们将看到其中4个框架：SproutCore、Cappuccino、jQTouch和SenchaTouch。我们将对它们进行比较，评估使用它们构建一个移动Web应用程序的优势和劣势。
先决条件
在本文中，我们将探索Cappuccino框架，以及使用它创建的一个典型应用程序。Cappuccino引入了自己的编程语言Objective-J，它非常类似与Objective-C。因此，预先了解Objective-C（或者它起源的语言C和Smalltalk）将有助于简化Objective-J学习过程。由于是纯客户端框架，Cappuccino不需要服务器端组件。您的Cappuccino应用程序只需要一个基本Web服务器。参见参考资料中这些工具的链接。
Cappuccino概览：你好，Objective-J
如果您阅读了本系列第1部分，那么您可能会熟悉本节的部分信息。在前一篇文章中，我们谈到SproutCore框架如何“引入一个由Cocoa激发的编程模型”。这个声明并不适用Cappuccino，因为Cappuccino不是由Cocoa激发的框架，而是web上的Cocoa。无论您是否熟悉Cocoa，这都似乎有点荒谬。Cocoa都是完全用Objective-C编写的一个桌面应用程序框架。另一方面，Cappuccino是一个纯客户端web应用程序框架，Objective-C不能在浏览器中使用。这就是Objective-J发挥作用的地方。
Objective-J是由Objective-C激发的一种新编程语言。如果您熟悉Objective-C，那么您将想起它实际上是一个C超集（superset）。类似地，Objective-J是一个 JavaScript超集。它将Objective-C在C上添加的大部分语法添加到JavaScript。Objective-C程序员有时不得不使用C，但通常只是为了执行低级任务或使用一个C库。这种情况对Objective-J程序员同样适用。通过将Objective-C语法带到JavaScript，从而带到浏览器，Cappuccino使得将大部分Cocoa框架移植到web成为可能。为了更好地感受Cappuccino及其提供的好处，我们来看一个Cappuccino应用程序。
Cappuccino应用程序
要进行一个“苹果-苹果比较（apples-to-apples comparison）”，我们将使用本系列第1部分中开发的应用程序并使用Cappuccino重写它。尽管我们不会试图使其看起来像原来的版本，但我们将会尝试复制该应用程序的所有功能。回想一下，该应用程序是一个公司的内部员工目录及其联系信息。对于我们的SproutCore实现，我们首先创建了一个数据模型，因为这是SproutCore—和Cocoa这样的MVC框架的关键部分。因此，我们的Cappuccino实现也将首先创建一个类似的数据模型。清单 1展示了用Objective-J编写的员工数据模型。
清单 1. Objective-J 员工数据模型@implementation Employee: CPObject {     CPString firstName @accessors;     CPString lastName @accessors;     CPString phone @accessors;     CPString email @accessors; }  - (CPString)fullName {     return [[CPString alloc] initWithFormat:@&quot;%@ %@&quot;, firstName, lastName]; }  @end 
您可能会注意到的第一件事是：清单 1中的代码以@implementation关键字开始。在Objective-C中，每个类都有两个文件。第一个是头文件（.h），用于声明类接口；第二个是实现文件（.m），接口的所有方法都在其中实现。@implementation用于声明正在实现的是哪个类。幸运的是，Objective-J不使用头文件，只有一个实现文件。在@implementation关键字后面，我们看到了类名（Employee）及其超类。在Objective-C中，基对象是NSObject；在Cappuccino，基对象是CPObject。换言之，每个类都是CPObject。注意，Cappuccino中的大部分核心类都以CP（代表Cappuccino）开头，并遵循Cocoa传统。
注意，在Cocoa中，核心类通常以NS前缀开头，NS代表NextStep，这是最初引入Objective-C的操作系统。
接下来，清单 1中出现类的字段/属性。注意，每个变量的类型都首先声明。在这里，每个类型都是CPString。然后是变量。最后是@accessors注释，这是一个宏，用于为它前面的字段创建getter/setter方法。清单 2展示了为firstName字段生成的访问器代码。
清单 2. 访问器代码- (CPString)firstName {     return firstName; }  - (void)setFirstName:(CPString)aFirstName {     firstName = aFirstName; } 
可以看到，一个@accessors注释代替了8行代码。但是，请记住，清单 2中的代码是将为带有@accessors注释的每个字段生成的确切代码。因此，要获取firstName的值，调用清单 2中显示的第一个方法（firstName）。类似地，要设置值，调用第二个方法（setFirstName:）。与Objective-C的合成属性，也许还有一些JavaScript属性不同的是，这并不提供“点访问”方式（例如，employee.firstName或employee.firstName=someOtherName）。
回到清单 1。字段及其访问器声明之后，下面出现的是Employee类的方法。在这里，我们只有一个方法：fullName。这个方法只返回firstName和lastName字段，中间使用一个空格连接。这个实现展示了Objective-J的几个关键部分。要创建一个新对象（这里是将返回的字符串），首先分配对象，然后初始化对象。alloc方法是从CPObject继承的，但initWithFormat:是CPString独有的。通常，不同的类拥有各种方法来初始化新实例。要调用这些方法，使用[object method]语法。方法调用可以视为传递到对象的消息—即，您指示它alloc，并将结果告知initWithFormat:。这是直接从Objective-C借用的。
关于清单1中的fullName方法，需要注意的最后一点是：它的前面有一个负号（-）。这表明这个方法是一个实例方法。正号（+）表明一个类或静态方法。它们不像实例方法那样常见，但您将会经常看到一些类方法，它们作为创建新的类实例的工厂方法；这免得您必须进行分配和初始化。通过检查我们的应用程序的数据模型来熟悉Cappuccino后，我们现在检查视图和事件管理代码。
创建视图并使用代理
需要开发一个交互式富用户界面时，Cocoa总是技高一筹，部分原因是它提供的灵活的代理模型。Cocoa成功胜出的另一个有利因素是它提供的工具集。多年来，Mac和iOS开发人员一直受益于Interface Builder—Cocoa的一个视觉设计器。这个程序不仅支持用户界面的拖放创建功能，还允许开发人员以图形的方式将UI控件“连接”到底层应用程序控制器上的方法。其结果是序列化的（“冻干的”）UI对象，可以直接用于应用程序中。这些文件被序列化为一些.xib文件，这是一种XML文档类型。Interface Builder和.xib文件是一个强大的组合。Cappuccino使用一个类似的特性（称为.cib文件）来存储UI对象。一个名为Atlas的工具的使用方式与用于Cocoa应用程序的Interface Builder非常相似。
同时，您也可以从您的Cappuccino应用程序内部、以编程方式创建用户界面。对于简单应用程序，这通常是最简单的方法，因为您的所有代码都在一个位置。这有一点儿违背MVC范式，因为您通常是从您的控制器内部创建您的视图，但这在许多情况下都是一种合理简化。清单 3展示了您的应用程序的控制器。
清单 3.声明应用程序控制器@import &amp;lt;Foundation/CPObject.j&amp;gt; @import &amp;lt;Foundation/CPDictionary.j&amp;gt; @import &amp;lt;Foundation/CPValue.j&amp;gt; @import &amp;lt;Foundation/CPURLConnection.j&amp;gt; @import &amp;lt;Foundation/CPURLRequest.j&amp;gt; @import &amp;lt;AppKit/CPTableView.j&amp;gt; @import &amp;lt;AppKit/CPScrollView.j&amp;gt; @import &amp;lt;AppKit/CPTableColumn.j&amp;gt; @import &quot;Employee.j&quot;  @implementation AppController : CPObject {     CPTableView tableView;     CPDictionary data; } 
清单 3中的代码是您的控制器的基本声明。需要注意的第一点是使用了@import指令。与Objective-C一样，要在Objective-J中工作，必须声明您的应用程序的依赖项。实际上，这些依赖项是Cappuccino运行时将异步加载的所有独立文件。这不仅有助于管理代码依赖项，还减少了Cappuccino的初始JavaScript下载，使您的应用程序速度更快。注意清单3中您的控制器的实例变量（或ivar—Cocoa和Cappuccino通常这样称呼它们）。在这里，一个CPTableView显示了CPDictionary中的数据，后者包含从服务器加载的所有数据。当应用程序准备好开始执行时，清单 4中的方法将被调用。
清单 4.应用程序初始化代码- (void)applicationDidFinishLaunching:(CPNotification)aNotification {     // initialize data     data = [CPDictionary dictionary];          // create the frame     var theWindow = [[CPWindow alloc] initWithContentRect:CGRectMakeZero()          styleMask:CPBorderlessBridgeWindowMask];     var contentView = [theWindow contentView];     [theWindow setTitle:@&quot;Employee Directory&quot;];     [theWindow orderFront:self];      // create the table     tableView = [[CPTableView alloc] initWithFrame:[contentView bounds]];     [tableView setAutoresizingMask:CPViewWidthSizable];          // create the columns     var nameColumn = [[CPTableColumn alloc] initWithIdentifier:@&quot;name&quot;];     [[nameColumn headerView] setStringValue:@&quot;Name&quot;];     [[nameColumn headerView] sizeToFit];     [tableView addTableColumn:nameColumn];     var phoneColumn = [[CPTableColumn alloc] initWithIdentifier:@&quot;phone&quot;];     [[phoneColumn headerView] setStringValue:@&quot;Phone&quot;];     [[phoneColumn headerView] sizeToFit];     [tableView addTableColumn:phoneColumn];     var emailColumn = [[CPTableColumn alloc] initWithIdentifier:@&quot;email&quot;];     [[emailColumn headerView] setStringValue:@&quot;Email&quot;];     [[emailColumn headerView] sizeToFit];     [tableView addTableColumn:emailColumn];      // create scrollable container for table     var scrollView = [[CPScrollView alloc] initWithFrame:[contentView bounds]];     [scrollView setAutoresizingMask:CPViewWidthSizable | CPViewHeightSizable];     [scrollView setDocumentView:tableView];     [scrollView setAutohideScrollers:YES];          [contentView addSubView:scrollView];          [tableView setDelegate:self];     [tableView setDataSource:self];          // load data from server     var connection = [CPURLConnection connectionWithRequest:         [CPURLRequest requestWithURL:&quot;/app/employees.json&quot;]          delegate:self];  } 
清单 4拥有大量代码，但它实际上非常简单。清单 4首先关注UI代码。首先创建应用程序的主窗口/框架；然后使用CPTableView类创建一个数据表，数据表的列，然后是数据表的每一列。最后，创建一个用于放置数据表的CPScrollView。如果行太多，一屏显示不完，这将使表能够滚动。
清单 4展示了使用Cappuccino创建UI对象是多么简单！注意，我们还将表的代理和数据源设置为self，这意味着控制器将实现代理和数据源方法。
首先，检查最后一行，该行从服务器加载数据。我们使用CPURLConnection和CPURLRequest来请求这个数据。这个操作使用一个经典Ajax样式XMLHttpRequest在后台进行。但是，一旦您将代理设置为self，就应该为连接指定一个代理，而不是一个回调方法。这样，当服务器响应来自应用程序的请求时，控制器上的一个方法将被调用。CPURLConnection的代理类定义将被调用的方法的名的类。在这里，代理有4个方法：connection:didFailWithError:、connection:didReceiveResponse:、connection:didReceiveData:和connectionDidFinishLoading:。由于代理是控制器类，因此您可以实现那4个方法中的任何一个—它们都是可选的。在这里，忽略错误事例，且只实现connection:didReceiveData:方法，如清单 5所示。
清单 5.连接代理方法// connection handler - (void)connection:(CPURLConnection) connection didReceiveData:(CPString)sData {     var result = CPJSObjectCreateWithJSON(sData);     data = [CPDictionary dictionaryWithJSObject:result];     connection = nil;     [tableView reloadData]; } 
清单 5中的方法将在服务器返回一个成功响应时被调用。服务器的响应将是传递到该方法的sData字符串。使用另一个Cappuccino函数CPJSObjectCreateWithJSON将数据解析为一个JavaScript对象。然后使用那个JavaScript对象创建一个CPDictionary。最后，重新加载数据表，显示来自服务器的新数据。这个示例极好地展示了Cappuccino不只是Cocoa的一个端口，而是用于Web的Cocoa，添加了很多简化Web开发的特性。简要回顾一下清单 4，您在那里将数据表的数据源定义为控制器，那意味着控制器有一些数据源方法需要实现，如清单 6所示。
清单 6.数据表源方法// data source methods - (int)numberOfRowsInTableView:(CPTableView)tView {     return [data count]; }  - (id)tableView:(CPTableView)tView objectValueForTableColumn: (CPTableColumn)tableColumn row:(int)row {     return [data[row] objectForKey:[tableColumn identifier]]; } 
在清单 6中可以看到，实现数据源合同需要两个方法。第一个是numberOfRowsInTableView:，行数只是CPDictionary的大小。更有趣的方法是 tableView:objectValueForTableColumn:row:方法，对数据表中的每个单元都需要调用该方法。只需将这个方法从来自服务器的响应创建的CPDictionary中提取出来。这个示例很好地展示了可以使您的Objective-J代码非常紧凑的嵌套式方法调用。查看控制器实现的数据源方法之后，我们来看看控制器实现的代理方法，如清单 7所示。
清单 7. 表代理方法// event handlers - (void)tableView:(CPTableView)tView sortDescriptorsDidChange:(CPArray)oldDescriptors {     [data sortUsingDescriptors:[tView sortDescriptors]];     [tView reloadData]; } 
CPTableView的代理上定义了几个方法，每个方法都对应一个数据表可以发起的事件。在这里，我们只对一个事件感兴趣—某人单击表头对数据表重新排序 —因此您只需实现对应的方法：tableView:sortDescriptorsDidChange:。您可以在这里看到Cocoa的便捷性：您只需从数据表获取它的新排序描述符，使用它们来对CPDictionary重新排序，然后重新加载数据表。这将导致清单6中的tableView:objectValueForTableColumn:row:方法针对数据表中的每个单元再次调用，从而显示经过重新排序的数据。浏览了Cappuccino的几个强大特性后，我们来考虑如何将其用于移动Web应用程序。
Cappuccino和移动web
尽管我们开发的简单应用程序展示了Cappuccino的许多核心功能，但它无法展示Cappuccino和移动web之间的关系。为了更好地理解Cappuccino有多么适合移动Web应用程序，我们看看Cappuccino激发的框架—Cocoa。如果您返回清单3并查看它的导入语句，您将注意到每个UI元素（CPTableView、CPScrollView和CPTableColumn）都来自AppKit模块。在Cocoa开发世界中，AppKit是桌面应用程序的UI模块。但是，如果您以前只从事iOS开发，那么您可能对AppKit不熟悉，因为它不是iOS SDK的一部分。相反，取而代之的是UIKit。这些UI元素专门针对iPhone设计，而不是针对桌面应用程序设计的。Cappuccino包含了许多来自AppKit的类，但没有一个类来自UIKit。换句话说，它只包含针对桌面应用程序设计的UI元素，没有包含任何专门针对移动设备设计的UI元素.因此，在将Cappuccino的任何AppKit类用于移动web应用程序之前，您最好三思而行。但是，您仍然可以使用低级API或Cappuccino的CoreGraphics库来创建您自己的自定义UI元素。
结束语
本文探索了Cappuccino框架的许多特性。该框架采用了一种编程方法来在客户机上创建您的所有UI，且只从服务器获取数据。这种架构对于移动Web应用程序而言是最优的。它还向您提供了一个优雅的应用程序模型，利用代理模式来从您的应用程序消除大量重复代码（boilerplate code）。另一方面，为更好地利用Cappuccino，您需要学习Objective-J语言，这对于web开发人员来说也许不是小菜一碟。更重要的是，它的UI元素不是针对移动用途而设计的。但那并不一定意味着它们不会有效，但的确意味着它们可能不会利用触摸事件这样的事情。这个框架提供的开发简便性—特别是与它的Atlas工具相结合时—仍旧可能是一个不错的平衡，这要取决于您的应用程序的复杂程度。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:25:46</pubDate>
</item>
<item>
<title>微软不推双核手机：价格低廉 延长电池续航</title>
<link>http://oss.org.cn/html/47/n-61847.html</link>
<text>现在智能手机搭载双核处理器已经不是什么新鲜事了，但微软Windows Phone平台的终端却还没有享受到这个待遇。对于这样的情况，近日微软WP总裁安迪·里斯给出了解释。

安迪·里斯给出解释称，Windows Phone平台至今还没有任何一款双核手机，其主要原因是考虑到电池续航和售价的因素，同时他还强调，虽然是单核，但实上手机里面已经拥有了第二个处理器，即图形处理器，而从它们实际运行速度来看，都非常流畅这就足够了。
此外，微软WP总裁还表示，双核只是吸引消费者中一个因素，目前WP平台的手机，在电池续航、售价以及其他方面的体验都很出色，当然他们并不抵制双核。
之前国外有媒体曾报道称，搭载WP平台下一版本Apollo即阿波罗系统的手机，屏幕分辨率将会提升至720p，处理器也将会采用双核，并支持LTE 4G网络。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:25:23</pubDate>
</item>
<item>
<title>街旁O2O探索：LBS+NFC打造新型会员卡</title>
<link>http://oss.org.cn/html/46/n-61846.html</link>
<text>街旁网11月8日对外公开了他们的最新动作，将和诺基亚深度合作，在诺基亚最新推出的三款Symbian Belle手机中，内置街旁客户端，而用户可以通过NFC技术签到。这意味着，用户使用街旁进行签到将不再需要打开、定位、签到三个步骤，而是直接将手机轻触店铺的NFC贴纸即可。不仅对用户更加快捷，而且也解决了传统LBS的真实签到问题。

不仅如此，街旁网创始人杨大卫还展示了街旁新的发展方向，即通过结合LBS和NFC技术，打造新一代更具社交元素、信息化的会员卡平台。
国内服务行业厂商半数以上有发行会员卡，用户手持数卡的现象极为普遍，但会员卡的活跃度非常低，有数据统计，只有4.7%的用户经常使用会员卡购物。3W咖啡馆联合创始人认为，线下的会员体系一直无法实现真正的会员价值，那么就预示线上的平台级别的会员系统可能有发展空间。现在看来，街旁网已经率先抓住了这个商机。
NFC英文全称Near Field Communication，近距离无线通信。是由飞利浦公司发起，由诺基亚、索尼等著名厂商联合主推的一项无线技术。与RFID不同的是，NFC具有双向连接和识别的特点。近年来已成为最受关注的移动互联网技术之一。
在欧美和日本市场，NFC主要用作支付领域，是未来电子钱包的主要实现技术。但无线支付并不是随便一家创业者就可以轻易进入的领域，在国内，中国银联已与157家银行签署业务协议，并在支付终端方面，与HTC、TCL和大唐宣布合作。与此同时，目前全国已有约40万台POS机完成了NFC标准改造，支持移动支付。预计到今年底，这一规模将达到60万~70万台，具备适合小额快速支付的环境。
街旁网应该是国内最早将NFC和LBS结合，用于O2O方向的移动应用。创始人杨大卫认为，一项新技术的采用主要取决于这项技术是否已经成熟到足够简单方便，目前决定NFC技术发展的制约条件还在于内嵌NFC芯片的智能手机发货量。目前只有诺基亚宣布，未来发布的新款智能手机都将内嵌NFC芯片。此前，街旁网将采用免费提供NFC贴纸的形式方便用户使用。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:24:48</pubDate>
</item>
<item>
<title>传甲骨文要收购webOS</title>
<link>http://oss.org.cn/html/45/n-61845.html</link>
<text>现在谁有兴趣收购惠普的WebOS移动系统？有一个你可能做梦也想不到：甲骨文。

据国外媒体路透社报道，惠普将要出售其移动操作系统WebOS，交易额大概在几亿美金，相比2010年惠普从Palm中收购时少了很多。而这距离惠普执行副总裁托德·布拉德利辟谣惠普出售WebOS仅仅一周的时间。
报道没有指出其他细节，但是提到很有趣的一点，就是：甲骨文成为一个新的潜在买家。并说，甲骨文主要感兴趣的是WebOS相关的专利。

乍一看，让人感觉很不可思议。我们都知道甲骨文的主要业务是企业级的数据库，它从未涉足过移动业务。并且甲骨文和惠普之间还有恩怨，惠普前任CEO马克·赫德（Mark Hurd）在被惠普罢免后去了甲骨文，为这事两家公司还闹上法庭。

不过，我们注意到一点，甲骨文感兴趣的是专利。之前，甲骨文公司曾经起诉Google的Android侵权，想趁机从Google那儿捞一把，但是案件的审讯却推迟到了2012年。同时，Palm有大量宝贵的移动专利，购买WebOS可以让甲骨文在以后的诉讼中占据有利的地位。
关于惠普出售WebOS的报道已经很多次：在惠普公司宣布不再生成搭载WebOS的移动设备的时候，这个移动操作平台已经接近死亡了。但惠普接着指出公司不会放弃这个系统，至少会评估下一步怎样去发展这个操作系统最好。
在今天的惠普，什么事情都有可能发生：10月份，在新CEO梅格·惠特曼上任后，宣布惠普将会保住PC部门，而这个决定是前CEO李艾科在离任前做出的；在宣布低价出售TouchPad之后，惠普又暂时性的恢复了TouchPad的生产。今天的惠普给人的感觉是在激烈的竞争，迷失了前行之路：既想和Google、苹果等去竞争移动市场，又想保住PC业务，不失老本行。
到现在为止，购买WebOS的潜在卖家已经有很多，包括移动公司HTC和三星，也有亚马逊和Facebook。现在加上甲骨文，估计WebOS以后的故事会更加精彩。
</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:24:18</pubDate>
</item>
<item>
<title>Adobe与苹果之争落败：停止开发移动版Flash</title>
<link>http://oss.org.cn/html/44/n-61844.html</link>
<text>北京时间11月10日凌晨消息，Adobe周三宣布，该公司将停止为移动浏览器开发Flash Player，这表明该公司基本上承认在与其竞争对手苹果长期以来的网络标准“战争”中落败。
业界人士指出，Adobe停止开发移动版Flash Player的决定意味着，网络开发者很可能将停止使用其Flash工具来制作用于移动浏览器的视频、网站和应用，这对iPhone和iPad用户来说是种安慰，原因是这些用户无法观看使用Flash工具制作的内容。但对于Adobe来说，这将损害其网站开发工具的销售表现。
Adobe今天表示，在停止开发移动版Flash Player以后，该公司将把业务重心转为向使用HTML5工具进行开发的网站开发者出售这种工具。
Abobe在周二晚间宣布，该公司计划裁减约7%员工，并向投资者发出警告称，该公司未来几年中的营收增长速度将有所放缓，原因是其将转向新的销售模式。
分析师指出，对于普通人来说，Flash和HTML5的区别可能只是技术上的不同，但对最近身故的苹果联合创始人史蒂夫·乔布斯（Steve Jobs）而言，他对两者的区别极感兴趣。乔布斯在世时拒绝在苹果移动浏览器中使用Flash技术，坚持声称这种技术给用户带来的浏览体验是次等的。Abobe则对这种说法作出反驳，并寻求向苹果施压，迫使其将Flash技术用于iPhone和iPad。
自苹果拒绝采用Flash技术以来，HTML5技术开始冒头，原因是开发者不希望iPhone和iPad用户无法浏览他们制作的内容。HTML5技术使用开放标准，这意味着象Adobe这样的某一家公司都无法对其拥有控制权。投资机构BGC Partners分析师科林·吉利斯（Colin Gillis）称：“乔布斯推动整个行业朝着HTML5的方向迈出了一步。开源技术经常都会取得胜利，即使这不意味着创新者能以此获利。”
Adobe在周三发布的博客文章中承认，HTML5已经成为制作移动浏览器内容的开发者更加偏爱的互联网标准。Adobe副总裁兼交互开发业务总经理丹尼·维诺科（Danny Winokur）在文中表示：“除了个别特例以外，HTML5现已受到主要移动设备的广泛支持，这令HTML5成为在所有移动平台上制作和部署浏览器内容的最佳解决方案。”他还表示，Adobe将继续对用于移动应用的Flash技术进行投资，这些应用将通过其Abobe AIR平台在移动设备上运行，但用户必须首先安装AIR软件。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-10 09:23:48</pubDate>
</item>
<item>
<title>Linux Mint 12 将使用GNOME 3桌面环境</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61798</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-09 12:28:11</pubDate>
</item>
<item>
<title>Firefox 8带来不少新功能 并禁止第三方扩展自行安装</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61797</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-09 21:19:11</pubDate>
</item>
<item>
<title>windows之tracert与linux之traceroute用法详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61796</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-09 14:18:11</pubDate>
</item>
<item>
<title>五种方法查看Ubuntu/Redhat等Linux系统版本号等系统信息</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61795</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-09 15:34:11</pubDate>
</item>
<item>
<title>UQ大战烽烟四起：传马化腾曾想收购UC但遭拒绝</title>
<link>http://oss.org.cn/html/94/n-61794.html</link>
<text>UQ大战前夜，互联网大佬们或许彻夜未眠，其态度也变得耐人寻味。
11月3日，腾讯董事会主席马化腾、优视科技首席执行官俞永福在国家互联网信息办公室主办的互联网站和互联网企业负责人研讨班上“狭路相逢”，却未对双方公司涉及到的这场“战争”的任何细节有过交流。
3日晚间，沉默已久的马化腾终于在UC发布会的前一天晚上打破了沉默。知情人士透露，马化腾和雷军私下有一个沟通，希望雷军基于双方合作关系的考虑，对俞永福的行为做“适当约束”。在沟通无果的情况下，马化腾还是给俞永福发了一条短信，希望UC可以取消第二天“声讨”腾讯的发布会，但是遭到了俞永福的拒绝。
4日，UC宣布，将以不正当竞争为由起诉腾讯。双方在手机浏览器的战争正式摆上了台面。而这场战争比之去年的3Q大战虽然激烈程度略逊，两者却有着某种一致的逻辑：当腾讯以后起者身份进入某一领域时，必然引起原先领头羊的强烈反弹。就连撕破脸之前大佬们以短信方式“和谈”，UQ大战也与3Q大战有几分相似。
UQ口水战频发
“我相信有些事情是有底线的。”俞永福团队在发布会现场声讨腾讯。而这也并不是俞永福第一次公开指责腾讯。
10月24日，UC优视发表《致广大合作伙伴及UC浏览器用户书》，指责腾讯曾给合作伙伴发送一封名为“浏览器市场最新的数据报告——QQ浏览器全面稳居第一”的邮件。该邮件与UC方面在手机浏览器市场份额方面的报告有较大出入。俞永福称，UC的报告以CNNIC、工业和信息化部的统计数据为标准。
针对以上分歧，腾讯方面则表示，“腾讯官方从未对外发布过QQ浏览器的市场份额数据，事实上我们也并未过分关心过自己的份额，我们更多专注在产品本身。所有关于份额的数据都是第三方独立调研的结果，我们无权过问。”
事实上，俞永福对腾讯的不满隐忍多时。真正压倒他而最终决定跳出来公开指责的“最后一根稻草”，是所谓腾讯与手机厂商的“排他性协议”。
在俞永福看来，这份《腾讯手机QQ浏览器、QQ安全助手、腾讯微博等产品推广合作协议》是证明其利用垄断地位不正当竞争的“铁证”。《每日经济新闻》记者从协议的内容中看到如下一段：“乙方需声明在推广腾讯产品时不推广其竞争对手产品，对应关系如下：QQ浏览器——UC浏览器，QQ安全助手——360安全助手，腾讯微博——新浪微博。”并表示：“如乙方能出具排他协议，双方则另行再签订补充协议。”
根据UC提供的数据显示，目前，UC浏览器有30%来自手机预装，有70%来自用户的自主安装。这也意味着，如果这份“二选一”的排他协议属实，将对UC的市场开拓极为不利。
但腾讯方面却予以否认。腾讯表示：“手机厂商是产业链最接近用户的环节。为了让自己的设备有更多的特色和细分市场针对性，都会自主决定合作关系。很多厂家都是国际知名品牌，对市场有深刻理解。”
雷军走平衡木
据俞永福透露，UC曾接到用户投诉反映，如果用户在使用UC浏览器的情况下登陆QQ农场，则被提示为“你正在使用非法程序”。
不过，这个问题很快得到了解决，双方分别出面了一个副总裁级别的人物进行了一个程序上的沟通，声称未来将建立正常的管道的沟通机制。
但接下来腾讯在手机浏览器市场持续猛攻，与IM打包、加入各种腾讯增值服务，这也让此前曾遥遥领先的UC有了危机感。
俞永福称，在2011年6月2日，他向马化腾发出了第一条短信。“有市场就有竞争，UC还是一个年轻的创业企业，我们希望UC成为受人尊敬且有所成就的人，希望就一些事情跟马总沟通。”
6月7日，马化腾也“礼貌”性地回复了俞永福：“永福，虽然我们有多款竞争，但是我们也相信大家都有底线，是良性竞争。”
其间，俞永福还向马化腾反映了腾讯QQ浏览器在包括苹果AppStore和安卓上刷排名等行为，马化腾也表示，会针对此事进行调查。
据接近俞永福的内部人士对《每日经济新闻》透露，在俞永福与马化腾沟通的几个月中，其中马化腾曾想以一定的价格收购UC，但遭到了俞永福的拒绝。“并不是价格的问题，UC是俞永福创业的公司，不可能这样就卖了。”上述知情人士对此表示。
情况出现了转机。腾讯的“死对头”360似乎看到了腾讯与UC在这场博弈中的较量，UC在一定的程度上对腾讯拥有牵制的作用。
据知情人士透露，周鸿祎曾对俞永福提出希望可以战略投资UC，但是遭到了俞永福的拒绝。
UC内部人士表示，对于360，UC的态度非常明确，会采取相当谨慎的态度。针对上述事实，360方面则表示，拒绝发表评论。
投资未成，周鸿祎也正式加入了这场战争，在今年9月份推出手机浏览器Beta版，正式进军手机浏览器市场。
360、腾讯、UC的这场暧昧较量，不得不提到一个人，那就是雷军。一位不愿意透露姓名的核心人士对《每日经济新闻》表示，虽然一些业内人士并不看好浏览器的入口功能，但UC对雷军的投资格局来说是仍是一个重要的存在。
上述人士指出，雷军系的米聊、UC和腾讯存在竞争关系，这在腾讯入主金山之前都已经是明摆的事实。之所以能顺利完成投资，是因为双方有共同的主要矛盾——360。
然而俞永福似乎在打破这种“默契”。“雷军是UC的股东和超级天使，他表示支持UC为争取阳光竞争所做的努力。”俞永福表示。
此次UQ大战，雷军的态度一直很不明朗，外界普遍猜测，面对一个合作盟友与旗下的投资公司的矛盾，雷军在其中扮演了何种角色？
智能手机的无线战争
业内人士认为，手机浏览器具有左右流量的能力，同时也有可能成为内容和应用服务平台，UC与QQ大战的实质是为了争夺手机浏览器这个移动互联网入口。
然而，这种以手机浏览器为核心的移动互联网入口是否可以成为未来的主流却依然不明，搜狗CEO王小川就表示不看好。他认为手机浏览器随着UC、腾讯、360的布局，市场竞争已经日渐白热化，手机浏览器不会有太大的发展空间。
王小川的观点得到了互联网IT评论员洪波的认可。洪波认为，目前主流手机操作系统中Safari、Chrome通过内置已经拥有了绝大多数的市场份额，因此，像QQ、UC、360这样的独立第三方浏览器并没有太明显的优势，而且发展空间也不大。
但持不同意见的易观国际分析师闫小佳却认为，智能手机海量应用的普及，基于浏览器应用的需求还是很大的，尤其是基于安卓平台的应用。
“浏览器、AppStore应用商店是未来大佬们的必争之地。”闫小佳表示。
俞永福认为，UC拥有很大的流量，属于外流型平台，这种巨大的流量也使UC成为内容的平台，帮助用户达到最后的一站，“UC本身不涉及内容，这也就与腾讯走了完全不一样的路。”
事实上，腾讯的意图也很明显，希望将用户牢牢地“圈”在其帝国里。正是这种战略思路，导致不论是腾讯自身的包括腾讯浏览器、微博、游戏等内容建设还是其开放平台，均是为了丰富其帝国的内容来留住用户。
值得一提的是，就在今年4月份，另一家巨头百度也悄然布局浏览器，谈及未来的竞争，闫小佳认为，与百度、360、腾讯相比，UC的优势会弱一些，而至于未来谁将胜出，还难以判断。
事实上，百度从推出浏览器之后就一直没有动静，而360作为国内较大的桌面安全客户端厂商，希望基于360手机卫士的用户量，一方面布局浏览器平台型产品；另一方面基于手机本地管理推出360手机宝盒的应用商店，但是效果还未知。
洪波认为，另一方面，手机浏览器也面临着是否将被一个个应用软件或者应用软件商店(如苹果软件商店)所取代，未来的流量之争必然体现在应用上。
腾讯显然意识到了这一点，看处于跑马圈地阶段的移动互联网上，腾讯涉足的产品也越来越多，大到微博、搜索、浏览器、游戏，小到LBS应用等各种小应用。种种迹象表明，腾讯正将其PC端的优势迁移到手机终端，通过各种布局为其在移动互联网终端谋求更多的话语权。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-09 17:41:11</pubDate>
</item>
<item>
<title>基于jQuery的表单验证插件formValidator</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61750</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-08 16:09:11</pubDate>
</item>
<item>
<title>linux下打造中文man帮助</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61749</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-08 08:19:11</pubDate>
</item>
<item>
<title>战争结束：微软为Samba开源项目贡献代码</title>
<link>http://oss.org.cn/html/48/n-61748.html</link>
<text>微软为Samba开源项目贡献代码了！？如果你了解Samba和微软Windows系统的关系，看到这个标题，也许你会有点感到吃惊。听起来好像很不可能，但是这一切都是真的，微软在GPLv3协议许可下给曾经的敌人，开源项目Samba贡献代码。当然这也许不会让你感到太吃惊。毕竟微软之前已经支持了CodePlex上面的很多项目，而且他们将加入Python、PHP语言和Drupal（Drupal CMS）项目的开发。但是我要强调的是，微软为Samba贡献代码是意义完全不同的事情，因为Samba是微软的老敌人。首先让我们来了解一下Samba。Samba是Unix/Linux系统下的，和Windows实现互通功能的标准软件套件，遵循GPLv3 (GNU GENERAL PUBLIC LICENSE Version 3)协议，同时Samba项目是自由软件管理局(Software Freedom Conservancy)的一员。Samba通过使用winbinds守护程序将Linux/Unix桌面和服务器系统无缝集成到Windows活动目录(Active Directory)环境。(Winbind是Samba套件的功能之一。它允许Unix系统利用Windows NT的用户帐号信息。winbind验证器是Samba winbindd服务进程的客户端。在使用该验证器之前，必须安装Samba和运行winbindd服务。)Samba使得任何基于SMB/CIFS的客户端提供安全可靠且快速的文件和打印服务变得可能，它适用于包括DOS、Windows、OS/2、Linux等操作系统。Samba也可用于网络附属存储（NAS：Network Attached Storage）。Linux可以提供Web和Email等边缘化的服务，但不可忽略的是，Samba&amp;nbsp;使得Linux可以为数以百万计的企业提供文件和打印服务。简单的说，Samba使得Linux(微软的竞争对手)可以融入Windows的工作组，并分走Windows的奶油和蛋糕。自从1992年Samba项目启动，微软对它就一直感到不爽。直到2007年，微软在欧盟的反垄断案中败诉，然后被强制要求向Samba公开他们的网络控制协议，这件事情之后，微软才开始慢慢学习和Samba接触。但一切在2011年10月10日这一切发生了改变，这一天微软开源技术中心的Stephen Zarkos为Firefox和Samba的NT局域网管理器认证的扩展保护提交了一些概念证明代码。虽然这仅仅是计算机软件开源事业的一小步，但它是实现Samba/Windows互操作性的一大步。Samba团队的Chris Hertel在文章中写道：“在过去的年月里，收到来自微软的补丁代码是一件无法想象的事情，但是时代已经变了，战争也该结束。对于软件专利我仍然持否定态度，因为它阻止了软件的创新。但是现在，主为建立一个更强大的社区和提高SMB的互操作性的战斗前线上，微软和我们并肩作战。“</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-08 16:47:55</pubDate>
</item>
<item>
<title>Siri运作原理：本地识别语音 云服务分析内容</title>
<link>http://oss.org.cn/html/47/n-61747.html</link>
<text>据ZDNet报道，“语音识别”是iPhone 4S 中语音助理服务Siri的核心，但这并未解释Siri理解用户所说内容的详细过程。Siri的工作原理是什么？本周有业内人士撰文，解释了Siri的工作步骤。
当用户对iPhone 4S说话后，语音被立即转换成编码，变成一个压缩的数字文件，文件中包含着所有有用的信息。这些信息将通过互联网服务提供商(ISP)的网络传送至云计算服务器，而服务器中的模块将识别用户所说的内容。
与此同时，用户的语音将在手机端被识别。安装在手机中的语音识别器将与云计算服务器通信，了解指令是否适合在本地被处理。用户的指令可能要求手机播
放一首歌曲，而另一些指令则有可能需要手机连接至网络，寻求进一步的帮助。如果语音识别器认为，手机内部模块足以处理用户的指令，那么将会告知云计算服务
器，不再需要服务器的支持。
根据用户的声调和语序，服务器将对语音进行静态对比，了解语音中包含哪些字母。与此同时，本地的语音识别器也将对用户语音进行静态对比。在服务器端和手机端，可能性最高的识别内容将优先获得处理。
此时，识别出的内容已经包含一系列的元音和辅音字母。随后这些内容将被发送至一个语言模块，以评估用户的语音中包含哪些单词。根据不同的可信度，计算机将创建一个用户所说内容的列表。
如果判断结果具有足够的可信度，那么计算机将能理解用户所说的内容，例如发送短信或查找联系人列表中的联系人。随后用户将会看到手机屏幕上出现所需
的内容，而不必手动操作。在这一过程中，如果用户的语音含义过于模糊，那么计算机将会询问用户，例如用户希望查找的联系人是埃里克·奥尔森(Erica 
Olssen)还是埃里克·施密特(Erica Schmidt)。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-08 09:53:37</pubDate>
</item>
<item>
<title>深入理解C语言</title>
<link>http://oss.org.cn/html/46/n-61746.html</link>
<text>导读：Dennis 
Ritchie过世了，他发明了C语言，一个影响深远并彻底改变世界的计算机语言。一门经历40多年的到今天还长盛不训的语言，今天很多语言都受到C的影
响，C++，Java，C#，Perl，PHP，Javascript等等。但是，你对C了解吗？相信你看过本站的《C语言的谜题》还有《谁说C语言很简
单？》。这里，我再写一篇关于深入理解C语言的文章，一方面是缅怀Dennis，另一方面是告诉大家应该如何学好一门语言。（顺便注明一下，下面的一些例
子来源于这个slides）。
文章内容如下：
首先，我们先来看下面这个经典的代码：
int&amp;nbsp;main() &amp;nbsp;{ &amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;42; &amp;nbsp;printf(“%d\n”,&amp;nbsp;a); &amp;nbsp;} &amp;nbsp;
从这段代码里你看到了什么问题？我们都知道，这段程序里少了一个#include &amp;lt;stdio.h&amp;gt; 还少了一个return 0;的返回语句。
不过，让我们来深入的学习一下，
这段代码在C++下无法编译，因为C++需要明确声明函数
这段代码在C的编译器下会编译通过，因为在编译期，编译器会生成一个printf的函数定义，并生成.o文件，链接时，会找到标准的链接库，所以能编译通过。
但是，你知道这段程序的退出码吗？在ANSI-C下，退出码是一些未定义的垃圾数。但在C89下，退出码是3，因为其取了printf的返回值。为
什么printf函数返回3呢？因为其输出了’4′, ’2′,’\n’ 
三个字符。而在C99下，其会返回0，也就是成功地运行了这段程序。你可以使用gcc的 -std=c89或是-std=c99来编译上面的程序看结果。
另外，我们还要注意main()，在C标准下，如果一个函数不要参数，应该声明成main(void)，而main()其实相当于main(…)，也就是说其可以有任意多的参数。
我们再来看一段代码：
#include&amp;nbsp;&amp;lt;stdio.h&amp;gt;&amp;nbsp;void&amp;nbsp;f(void) &amp;nbsp;{ &amp;nbsp;static&amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;3; &amp;nbsp;static&amp;nbsp;int&amp;nbsp;b; &amp;nbsp;int&amp;nbsp;c; &amp;nbsp;++a;&amp;nbsp;++b;&amp;nbsp;++c; &amp;nbsp;printf(&quot;a=%d\n&quot;,&amp;nbsp;a); &amp;nbsp;printf(&quot;b=%d\n&quot;,&amp;nbsp;b); &amp;nbsp;printf(&quot;c=%d\n&quot;,&amp;nbsp;c); &amp;nbsp;} &amp;nbsp;int&amp;nbsp;main(void) &amp;nbsp;{ &amp;nbsp;f(); &amp;nbsp;f(); &amp;nbsp;f(); &amp;nbsp;} &amp;nbsp;&amp;nbsp;
这个程序会输出什么？
我相信你对a的输出相当有把握，就分别是4，5，6，因为那个静态变量。
对于c呢，你应该也比较肯定，那是一堆乱数。
但是你可能不知道b的输出会是什么？答案是1，2，3。为什么和c不一样呢？因为，如果要初始化，每次调用函数里，编译器都要初始化函数栈空间，这太费性能了。但是c的编译器会初始化静态变量为0，因为这只是在启动程序时的动作。
全局变量同样会被初始化。
说到全局变量，你知道 静态全局变量和一般全局变量的差别吗？是的，对于static 的全局变量，其对链接器不可以见，也就是说，这个变量只能在当前文件中使用。
我们再来看一个例子：
#include&amp;nbsp;&amp;lt;stdio.h&amp;gt;&amp;nbsp;void&amp;nbsp;foo(void) &amp;nbsp;{ &amp;nbsp;int&amp;nbsp;a; &amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;} &amp;nbsp;void&amp;nbsp;bar(void) &amp;nbsp;{ &amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;42; &amp;nbsp;} &amp;nbsp;int&amp;nbsp;main(void) &amp;nbsp;{ &amp;nbsp;bar(); &amp;nbsp;foo(); &amp;nbsp;} &amp;nbsp;
你知道这段代码会输出什么吗？A) 一个随机值，B) 42。A 和 B都对（在“在函数外存取局部变量的一个比喻”文中的最后给过这个例子），不过，你知道为什么吗？
如果你使用一般的编译，会输出42，因为我们的编译器优化了函数的调用栈（重用了之前的栈），为的是更快，这没有什么副作用。反正你不初始化，他就是随机值，既然是随机值，什么都无所谓。
但是，如果你的编译打开了代码优化的开关，-O，这意味着，foo()函数的代码会被优化成main()里的一个inline函数，也就是说没有函数调用，就像宏定义一样。于是你会看到一个随机的垃圾数。
下面，我们再来看一个示例：
#include&amp;nbsp;&amp;lt;stdio.h&amp;gt;&amp;nbsp;int&amp;nbsp;b(void)&amp;nbsp;{&amp;nbsp;printf(“3”);&amp;nbsp;return&amp;nbsp;3;&amp;nbsp;} &amp;nbsp;int&amp;nbsp;c(void)&amp;nbsp;{&amp;nbsp;printf(“4”);&amp;nbsp;return&amp;nbsp;4;&amp;nbsp;} &amp;nbsp;int&amp;nbsp;main(void) &amp;nbsp;{ &amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;b()&amp;nbsp;+&amp;nbsp;c(); &amp;nbsp;printf(“%d\n”,&amp;nbsp;a); &amp;nbsp;} &amp;nbsp;
这段程序会输出什么？，你会说是，3，4，7。但是我想告诉你，这也有可能输出，4，3，7。为什么呢？ 
这是因为，在C/C++中，表达的评估次序是没有标准定义的。编译器可以正着来，也可以反着来，所以，不同的编译器会有不同的输出。你知道这个特性以后，
你就知道这样的程序是没有可移植性的。
我们再来看看下面的这堆代码，他们分别输出什么呢？
示例一
int&amp;nbsp;a=41;&amp;nbsp;a++;&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;
示例二
int&amp;nbsp;a=41;&amp;nbsp;a++&amp;nbsp;&amp;amp;&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;
示例三
&amp;nbsp;int&amp;nbsp;a=41;&amp;nbsp;a++&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;
示例四
int&amp;nbsp;a=41;&amp;nbsp;if&amp;nbsp;(a++&amp;nbsp;&amp;lt;&amp;nbsp;42)&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;
示例五
int&amp;nbsp;a=41;&amp;nbsp;aa&amp;nbsp;=&amp;nbsp;a++;&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;
只有示例一，示例三，示例四输出42，而示例二和五的行为则是未定义的。关于这种未定义的东西又叫Sequence Points，因为这会让编译器不知道在一个表达式顺列上如何存取变量的值。比如a = a++，a + a++，不过，在C中，这样的情况很少。
下面，再看一段代码：（假设int为4字节，char为1字节）
struct&amp;nbsp;X&amp;nbsp;{&amp;nbsp;int&amp;nbsp;a;&amp;nbsp;char&amp;nbsp;b;&amp;nbsp;int&amp;nbsp;c;&amp;nbsp;}; &amp;nbsp;printf(&quot;%d,&quot;,&amp;nbsp;sizeof(struct&amp;nbsp;X)); &amp;nbsp;struct&amp;nbsp;Y&amp;nbsp;{&amp;nbsp;int&amp;nbsp;a;&amp;nbsp;char&amp;nbsp;b;&amp;nbsp;int&amp;nbsp;c;&amp;nbsp;char&amp;nbsp;d}; &amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;sizeof(struct&amp;nbsp;Y)); &amp;nbsp;
这个代码会输出什么?
a) 9，10
b)12, 12
c)12, 16
答案是C，我想，你一定知道字节对齐，是向4的倍数对齐。
但是，你知道为什么要字节对齐吗？还是因为性能。因为这些东西都在内存里，如果不对齐的话，我们的编译器就要向内存一个字节一个字节的取，这样一来，struct X，就需要取9次，太浪费性能了，而如果我一次取4个字节，那么我三次就搞定了。所以，这是为了性能的原因。
但是，为什么struct Y不向12 对齐，却要向16对齐，因为char d; 
被加在了最后，当编译器计算一个结构体的尺寸时，是边计算，边对齐的。也就是说，编译器先看到了int，很好，4字节，然后是 
char，一个字节，而后面的int又不能填上还剩的3个字节，不爽，把char b对齐成4，于是计算到d时，就是13 
个字节，于是就是16啦。但是如果换一下d和c的声明位置，就是12了。
另外，再提一下，上述程序的printf中的%d并不好，因为，在64位下，sizeof的size_t是unsigned 
long，而32位下是 unsigned int，所以，C99引入了一个专门给size_t用的%zu。这点需要注意。在64位平台下，C/C++ 
的编译需要注意很多事。你可以参看《64位平台C/C++开发注意事项》。
下面，我们再说说编译器的Warning，请看代码：
#include&amp;nbsp;&amp;lt;stdio.h&amp;gt;&amp;nbsp;&amp;nbsp;int&amp;nbsp;main(void) &amp;nbsp;&amp;nbsp;{ &amp;nbsp;&amp;nbsp;int&amp;nbsp;a; &amp;nbsp;&amp;nbsp;printf(&quot;%d\n&quot;,&amp;nbsp;a); &amp;nbsp;&amp;nbsp;} &amp;nbsp;&amp;nbsp;
考虑下面两种编译代码的方式 ：
cc -Wall a.c
cc -Wall -O a.c
前一种是不会编译出a未初化的警告信息的，而只有在-O的情况下，再会有未初始化的警告信息。这点就是为什么我们在makefile里的CFLAGS上总是需要-Wall和 -O。
最后，我们再来看一个指针问题，你看下面的代码：
#include&amp;nbsp;&amp;lt;stdio.h&amp;gt;&amp;nbsp;int&amp;nbsp;main(void) &amp;nbsp;{ &amp;nbsp;int&amp;nbsp;a[5]; &amp;nbsp;printf(&quot;%x\n&quot;,&amp;nbsp;a); &amp;nbsp;printf(&quot;%x\n&quot;,&amp;nbsp;a+1); &amp;nbsp;printf(&quot;%x\n&quot;,&amp;nbsp;&amp;amp;a); &amp;nbsp;printf(&quot;%x\n&quot;,&amp;nbsp;&amp;amp;a+1); &amp;nbsp;} &amp;nbsp;
假如我们的a的地址是：0Xbfe2e100, 而且是32位机，那么这个程序会输出什么？
第一条printf语句应该没有问题，就是 bfe2e100
第二条printf语句你可能会以为是bfe2e101。那就错了，a+1，编译器会编译成 a+ 1*sizeof(int)，int在32位下是4字节，所以是加4，也就是bfe2e104
第三条printf语句可能是你最头疼的，我们怎么知道a的地址？我不知道吗？可不就是bfe2e100。那岂不成了a==&amp;amp;a啦？这怎么
可能？自己存自己的？也许很多人会觉得指针和数组是一回事，那么你就错了。如果是 int *a，那么没有问题，a == 
&amp;amp;a。但是这是数组啊a[]，所以&amp;amp;a其实是被编译成了 &amp;amp;a[0]。
第四条printf语句就很自然了，就是bfe2e114。
看过这么多，你可能会觉得C语言设计得真拉淡啊。不过我要告诉下面几点Dennis当初设计C语言的初衷：
1）相信程序员，不阻止程序员做他们想做的事。
2）保持语言的简洁，以及概念上的简单。
3）保证性能，就算牺牲移植性。
今天很多语言进化得很高级了，语法也越来越复杂和强大，但是C语言依然光芒四射，Dennis离世了，但是C语言的这些设计思路将永远不朽。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-08 09:46:34</pubDate>
</item>
<item>
<title>Android应用开发平台Rexsee宣布开源</title>
<link>http://oss.org.cn/html/45/n-61745.html</link>
<text>　　由创新工场与CSDN共同举办的第二届移动开发者大会在北京国家会议中心正式召开，Android应用开发平台Rexsee（www.rexsee.com）在此之际正式宣布开源，并获得了广大移动开发者的普遍认同。
　　伴随着HTML5的发展以及Web App的广受认可，基于Web的移动应用开发已经受到了技术厂商与开发者的普遍关注。大量的Web框架纷纷转投移动应用领域。
　　基于移动Web开发的技术理念，国内的Rexsee团队已提供了整体的移动应用“开发平台”，并于上周正式推出其开发者社区。访问社区可以查看详细开发手册、API说明与示例以及全部源码，并可在线编译免费生成移动应用客户端。
　　Rexsee产品以Webkit为内核，全面支持HTML5。通过扩展超过1500个API，以Javascript实现对移动终端的功能调
用，强化HTML5在浏览器之外的移动终端功能实现。开发者可以使用HTML、CSS和Javascript快速实现移动应用，并通过原生化应用转换功
能，直接生成应用程序。
　　Rexsee的开源策略旨在让更多的开发者可以迅速的进入到移动互联网领域，基于标准化的Web开发方式快速实现移动应用。结合之前所积累的大量应用，Rexsee社区在上线第二周，就已有超过1200个应用得以审核推出，并且还在持续增加。
　　作为国内唯一开源的Android应用开发平台，Rexsee定位于服务移动应用开发者的技术平台提供方，力图为移动应用创新发展打造更加广泛坚实的开发者基础。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-07 09:10:42</pubDate>
</item>
<item>
<title>Jquery Validform：一行代码搞定整站的表单验证</title>
<link>http://oss.org.cn/html/01/n-61701.html</link>
<text>你没看错，就一行代码搞定整站的表单验证！1$(&quot;.demoform&quot;).Validform();为什么能如此方便？插件的核心思想就是把所有的验证条件及验证提示信息绑定到每个表单元素，让验证代码在执行时只是核对表单下各元素的值是否跟绑定的验证条件相符，这样你可以随便添加或者去掉任一表单元素而不必修改验证代码，从而使仅用一行代码去搞定整站的表单验证的梦想成为现实！在线Demo&amp;nbsp;|&amp;nbsp;马上下载体验效果图：功能介绍：1、支持一个页面多表单的检测。例如你给页面上的各form绑定同样的class名称“demoform”，只需在页面上写上一句 $(“.demoform”).Validform()，各表单便会独立检测；2、两种信息提示效果，一个是元素右侧出现提示信息，一个是弹出信息框。另外还附加了$.Showmsg()、$.Hidemsg()全局弹出/关闭信息框方法以便整站有一个统一的信息提示效果；3、指定表单下任一元素在单击时触发表单提交事件；4、支持ajax提交表单数据，也支持ajax实时反馈验证结果（如常见的用户注册表单下的用户名检测）；5、支持开启网速慢时的二次提交防御（有时连续的点击提交表单按钮会产生多次的表单提交结果）；6、可检测多个文本框内容是否一致（例如常见的两次密码输入确认）；7、囊括11种常见的格式验证形式。使用方法：123456789$(&quot;.demoform&quot;).Validform({//指定具体参数，实现更多功能;	      btnSubmit:&quot;.btn_sub&quot;,	      tiptype:2,	      postonce:true,	      ajaxurl:&quot;ajax_post.php&quot;,              callback:function(data){                                    //这里执行回调操作;              }});参数说明：&amp;nbsp;【所有参数均为可选项】○ 必须是表单对象执行Validform方法，示例中“.demoform”就是绑定在form元素上的class名称；○ btnSubmit：指定表单下的哪一个按钮触发表单提交事件，如果表单下有submit按钮可以省略。示例中“.btn_sub”是该表单下要绑定点击提交表单事件的按钮，程序会在btnSubmit所在表单下查找该对象;○ tiptype：指定提示效果，可选值 1 | 2, 默认为1。 1=&amp;gt;弹出提示框,2=&amp;gt;表单元素右侧提示；○ postonce：指定是否开启网速慢时的二次提交防御，true开启，不指定则默认关闭；○ ajaxurl：指定处理ajax表单数据的后台文件，注意处理完数据输出相应反馈信息，这个页面输出的内容就是表单提交后前台页面所看到的反馈信息。○ callback：在使用ajax提交表单数据时，数据提交后的回调函数。返回数据data是json格式，{“info”:”demo info”,”status”:”y”}，info: 输出提示信息，status: 返回提交数据的状态,是否提交成功，如可以用”y”表示提交成功，”n”表示提交失败，在ajax_post.php文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作。你也可以在ajax_post.php文件返回更多信息在这里获取，进行相应操作；怎样给表单元素绑定验证类型？示例代码：123456789101112131415161718192021&amp;lt;!--ajax实时验证用户名--&amp;gt;&amp;lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;name&quot; datatype=&quot;s5-16&quot; ajaxurl=&quot;valid.php&quot; nullmsg=&quot;请输入用户名！&quot; errormsg=&quot;昵称至少5个字符,最多16个字符！&quot; /&amp;gt; &amp;lt;!--密码--&amp;gt;&amp;lt;input type=&quot;password&quot; value=&quot;&quot; name=&quot;userpassword&quot; datatype=&quot;*6-15&quot; errormsg=&quot;密码范围在6~15位之间,不能使用空格！&quot; /&amp;gt;&amp;lt;!--确认密码--&amp;gt;&amp;lt;input type=&quot;password&quot; value=&quot;&quot; name=&quot;userpassword2&quot; datatype=&quot;*&quot; recheck=&quot;userpassword&quot; errormsg=&quot;您两次输入的账号密码不一致！&quot; /&amp;gt; &amp;lt;!--默认提示文字--&amp;gt;&amp;lt;textarea tip=&quot;请在这里输入您的意见。&quot; errormsg=&quot;很感谢您花费宝贵时间给我们提供反馈，请填写有效内容！&quot;  datatype=&quot;s&quot; altercss=&quot;gray&quot; class=&quot;gray&quot; name=&quot;msg&quot; value=&quot;&quot;&amp;gt;请在这里输入您的意见。&amp;lt;/textarea&amp;gt;&amp;nbsp;&amp;lt;!--单选按钮--&amp;gt;&amp;lt;input type=&quot;radio&quot; value=&quot;1&quot; name=&quot;gender&quot; id=&quot;male&quot; datatype=&quot;radio&quot; errormsg=&quot;请选择性别！&quot; /&amp;gt;&amp;lt;label for=&quot;male&quot;&amp;gt;男&amp;lt;/label&amp;gt;&amp;lt;input type=&quot;radio&quot; value=&quot;2&quot; name=&quot;gender&quot; id=&quot;female&quot; /&amp;gt;&amp;lt;label for=&quot;female&quot;&amp;gt;女&amp;lt;/label&amp;gt; &amp;lt;!--复选框--&amp;gt;&amp;lt;input name=&quot;shoppingsite2&quot; id=&quot;shoppingsite21&quot; type=&quot;checkbox&quot;  value=&quot;1&quot; datatype=&quot;checkbox&quot; errormsg=&quot;请选择您常去的购物网站！&quot; /&amp;gt;&amp;lt;label for=&quot;shoppingsite21&quot;&amp;gt;淘宝网&amp;lt;/label&amp;gt;&amp;lt;input name=&quot;shoppingsite2&quot; id=&quot;shoppingsite22&quot; type=&quot;checkbox&quot;  value=&quot;2&quot; /&amp;gt;&amp;lt;label for=&quot;shoppingsite22&quot;&amp;gt;当当网&amp;lt;/label&amp;gt; &amp;lt;!--下拉框--&amp;gt;&amp;lt;select name=&quot;province&quot; id=&quot;province&quot; datatype=&quot;select&quot; errormsg=&quot;请选择省份！&quot; &amp;gt;&amp;lt;option value=&quot;&quot;&amp;gt;--请选择省份--&amp;lt;/option&amp;gt;&amp;lt;option value=&quot;1&quot;&amp;gt;江西省&amp;lt;/option&amp;gt;&amp;lt;/select&amp;gt;说明：凡要验证格式的元素均需添加datatype属性，datatype可选值目前有11类，用来指定不同的验证格式【如果还不能满足您的验证需求，可以自行在regcheck方法中添加】。datatype：* | *6-16 | n | s | s6-18 | p | m | e | radio | checkbox | select*：检测是否有输入，可以输入任何字符，不留空即可通过验证；*6-16：检测是否为6到16位任意字符；n：数字类型；s：字符串类型；s6-18：6到18位字符串；p：验证是否为邮政编码；m：手机号码格式；e：email格式；radio：如果要验证的元素为单选框，datatype设置为radio；checkbox：如果要验证的元素为复选框，datatype设置为checkbox；select：如果要验证的元素为下拉框，datatype设置为select。注意radio，checkbox，select的value值为空时不能通过检测，要非空值才能通过。radio和checkbox元素只需给该组的第一个元素绑定datatype属性即可，请参看上面的示例代码。其他的附加属性：nullmsg：是指定没有填入内容时出现的提示信息，不指定默认是“请填入信息！”，另外当datatype为radio、checkbox或select时，因为这三种类型只要为空值就表示出错，提示errormsg所指定信息，所以这三类不需要绑定该属性；errormsg：是指定验证格式不符时出现的提示信息，不指定默认是“请输入正确信息！”；recheck：是用来指定两个表单元素值一致性检测的另外一个对象，赋给它另外一个对象的name属性值即可；tip：是指定表单元素的提示信息;指定后该元素会有focus时提示信息消去，没有输入内容blur时出现提示信息的效果，请参看demo页的“备注”效果；altercss：是指定有tip属性的元素默认提示文字显示时的样式，当该元素focus时程序会把这个样式去掉，blur时如果值为空或者跟提示文字一样则再加上该样式；ajaxurl：指定ajax实时验证的后台文件路径，给需要后台数据库验证信息的对象绑定该属性。注意该文件输出的内容就是前台显示的验证出错的反馈信息，如果验证通过请输出小写字母”y”。介绍完了，欢迎下载使用，反馈您的意见或建议。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-07 12:30:38</pubDate>
</item>
<item>
<title>火狐8本周二正式发布 新增Twitter搜索等功能</title>
<link>http://oss.org.cn/html/00/n-61700.html</link>
<text>火狐8将于11月8日正式发布

北京时间11月7日消息，据国外媒体报道，按照原定计划，火狐(Firefox)浏览器开发商Mozilla将于本周二(11月8日)正式发布火狐8.0版。与现有版本相比，火狐8.0版将增加多项新功能。
Mozilla此前称，将加快火狐的更新步伐，即大约每六周发布一个性能稳定的升级版。火狐7.0版的发布时间为今年9月底。一些火狐“粉丝”曾表示，火狐采用新的发布方式后，其版本号更新过快而显得“没有任何实际意义”。
虽然火狐8的正式发布时间为本周二，但按照以往惯例，Mozilla在发布正式版本数天前，将把基本上不会再做大幅改动的最终版本上传到该公司FTP服务器当中，以供火狐老用户提前下载安装使用。
据悉，火狐8新增的功能包括：在搜索栏当中整合了Twitter搜索功能(注：默认为谷歌搜索，点击搜索栏当中的下拉菜单，就能看到雅虎、维基百科(Wikipedia)、必应(Bing)及Twitter等搜索服务)、改进后的标签管理功能以及加强对HTML 5技术标准的支持等等。
但火狐8最为明显的改进，是加强了对安装第三方附加组件(add-on)的安全管理。在火狐8之前的所有版本中，用户在安装第三方附加组件时，火狐并不对其安全性进行检查。而火狐8则加强了这方面的安全管理。用户首次启动火狐8时，可以屏蔽或激活单独的附加组件。
此外，火狐8用户可选择浏览器启动时，仅载入自己选定的标签，从而能够加快浏览器的启动速度。这项功能需要用户自行设置。
下载地址：ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/8.0/</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-07 15:59:19</pubDate>
</item>
<item>
<title>iOS 5中safari带来的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61570</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-04 09:22:11</pubDate>
</item>
<item>
<title>一些上流的CSS3图片样式</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61569</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-04 10:05:11</pubDate>
</item>
<item>
<title>Ubuntu 11.10 安装Gnome 3.2竟如此简单</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61568</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-04 12:08:11</pubDate>
</item>
<item>
<title>惠普与 Calxda 联合发布 ARM 架构服务器</title>
<link>http://oss.org.cn/html/67/n-61567.html</link>
<text>
								根据彭博社周三发布的报告，Calxda与惠普公司联合开发完成了一款基于ARM处理器的服务器。 
Calxeda是一家坐落在德克萨斯州奥斯丁市的一家专门设计ARM架构服务器的厂商。  
Calxeda之前以Smooth-Stone而闻名，他在2010年8月提出由包括ARM财团在内的投资者投资3000万英镑来建立ARM的服务器。根
 据Forrester公司的分析师Richard  
Fichera的报告，这个服务器规划开发低功率的ARM服务器，每个服务器节点消耗将少于5w，并使用四核的Cortex -  
A9处理器，DRAM和一个光纤互连。
每节点5W的功耗比目前英特尔的芯片要小很多：后者的至强E7系列每个独立芯片的功耗都在95w-130w，而在至强E3低功率范围下功耗下降到20w，但是平均功耗还是在80w左右。
华尔街日报周三报道，“Calxeda与其他主要服务器制造商进行谈判，他们可能会在未来几个月内宣布他们的合作关系”，这个消息由一个熟悉内情的人爆出。他还表示Calxeda还计划与存储供应商及其他公司商谈使用他的芯片。
戴尔是惠普主服务器的竞争对手，他在2010年5月宣布计划卡发基于ARM的服务器，将使用Marvell调整的处理器，其后就没有下文了。
Marvell公司在2010年11月展示了其四核ARM服务器芯片，命名为Armada 
XP。惠普长期以来在他的服务器产品线中都是用英特尔和AMD芯片，但是对企业级服务器来讲，ARM的到来已经对英特尔构成了公认的潜在威胁。				
                			</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2010-11-25 11:36:49</pubDate>
</item>
<item>
<title>惠普联合Calxda发布基于Ubuntu系统的ARM架构服务器</title>
<link>http://oss.org.cn/html/66/n-61566.html</link>
<text>11月2日，惠普与Canonical先后宣布推出世界首款基于Ubuntu 11.10操作系统（ARM处理器版本）的ARM服务器，如下图所示：  从上图所示，由许多ARM处理器（SoC，即“片上系统”）所组成的“盔甲”（只是形似而已）覆盖在服务器机架之上，构成了低功耗适于互联网数据中心使用的企业级服务器，至此，ARM服务器不在是梦想。 Canonical在这份官方声明中宣布：&quot;The good news is that Canonical has been working with ARM and Calexda for several years now and we released the first version of Ubuntu Server ported for ARM Cortex A9 class processors last month&quot;，由此可见，实际上，ARM服务器的故事已经有几个年头了。 Canonical在声明中表示：“this is beginning of a journey to re-inventing a power efficient and less complex data center. We look forward to working with HP and Calxeda on that journey&quot;，意思是说，惠普ARM服务器的发布标志着重新发明有节电效率而且架构简单数据中心征途的开始。 这又是一则从UDS大会上传来的好消息。这款ARM服务器的系统性能将在未来6个月内进行进一步优化提升。Canonical认为：“Ubuntu is the perfect choice for big data, web and cloud infrastructure workloads”，意思是说，Ubuntu是处理大数据负载的云中心（架构）的最佳选择（注：不包括TCP Offload Engine，所谓“TCP卸载引擎”）。 说明：请见“Ubuntu and HP Will Power ARM Data Centers”一文，由此可见：“ARM数据中心”已经不再是梦想。我们可以想象：“ARM云中心”与基于Unity界面的移动“云终端”就是Ubuntu未来的故事。相关信息：			&amp;nbsp;&amp;nbsp;&amp;nbsp;11月2日，DanielCooper发表文章，题为“HPand Calxeda's Moonshot（”月弹“） ARMservers will bring all the boys to theyard“，披露ARM服务器的基本性能，以下是其图片：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;惠普与Calxeda合作伙伴推出的“月弹”服务器是一款新型的基于ARM的所谓“EnergyCore”片上系统架构，如上图所示。这些新单元（SoC）具有4核，4GBDRAM内存，耗电仅有5瓦（全负载，即Fullpelt），实际上，比一个平板电脑还要省电（平均）。最神奇的地方是：“allthe server nodes now share a single power, cooling, management andstorage system rather than carrying itthemselves”，也就是说，所有这些服务器”结点“都享用同一个供电电源，制冷系统，管理以及存储系统，而且ARM服务器所占用的空间很小。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;11月1日，惠普ARM服务器一经公布，便引来了无数好奇者的眼球，尤其是让互联网IDC老板“心动”。这就是Ubuntu背后的人们所心想的美好时刻。对此，有人说ARM服务器并不新鲜，没啥意思。但是惠普不是一个“小作坊”，它有33万员工在日夜操劳，惠普ARM服务器一旦“出品”，就不是一个小数字。......我们真的要为小小的Ubuntu高兴，它有了一个新家。																					</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-03 11:28:53</pubDate>
</item>
<item>
<title>推荐几种高级的CSS3图片样式用法</title>
<link>http://oss.org.cn/html/65/n-61565.html</link>
<text>&amp;nbsp;
译自：CSS3 Image Styles
中文：CSS3图片样式
请尊重版权，转载请注明来源，多谢～～ 

直接在图片元素上直接应用CSS3 inset box-shadow 或 border-radius时，浏览器并不能完美的渲染它们。不过，如果把这个图片用作背景图，你就可以可以给它添加任何样式了，浏览器也会很好地渲染。Darcy Clarke和我做了一个简单的教程，讲解如何使用jQuery来动态地制作完美的圆角图片。今天我将重温这个主题然后向你展示使用background-image的方法可以实现多少效果。我将向你展示如何使用box-shadow、border-radius 和 transition 来创作不同的图片风格。
&amp;nbsp;
先看下demo
问题 (见 demo)
看一下demo，请注意在第一行的图片中使用了border-radius和inset box-shadow。Firefox会直接在图片元素上渲染border-radius，但不会渲染inset box-shadow。chrome/safari则两者都不渲染。

解决方案
要让 border-radius 和 inset box-shadow 正常工作，解决方案就是将实际图片变作background-image.

动态方法
要想动态实现，可以简单的使用jQuery为每个图片元素外面包一个背景图片。下面的jQuery代码会将所有图片外面包一个span标签然后将图片用作其背景图片(jQuery代码由Darcy Clarke编写)。


    
        
            
            1
2
3
4
5
6
7
8
9
10
11
12
13

            
            
            &amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
$(document).ready(function(){
&amp;nbsp;
	$(&quot;img&quot;).load(function() {
		$(this).wrap(function(){
			return '&amp;lt;span class=&quot;image-wrap ' + $(this).attr('class') + '&quot; 
				style=&quot;position:relative; display:inline-block; background:url(' + $(this).attr('src') + ') no-repeat center center; width: ' + $(this).width() + 'px; height: ' + $(this).height() + 'px;&quot; /&amp;gt;';
		});
		$(this).css(&quot;opacity&quot;,&quot;0&quot;);
	});
});
&amp;lt;/script&amp;gt;
            
        
    


输出
上面的脚本将会输出下面的HTML代码：


    
        
            
            1
2
3

            
            
            &amp;lt;span class=&quot;image-wrap &quot; style=&quot;position:relative; display:inline-block; background:url(image.jpg) no-repeat center center; width: 150px; height: 150px;&quot;&amp;gt;
	&amp;lt;img src=&quot;image.jpg&quot; style=&quot;opacity: 0;&quot;&amp;gt;
&amp;lt;/span&amp;gt;
            
        
    


圆形图片(见 demo)
现在，图片被用作背景图了，你可以给它添加任意你想要的样式上去。下面是一个简单的使用border-radius实现的圆形图片。如果你对CSS3不太了解，可以阅读下Basics of CSS3。

CSS


    
        
            
            1
2
3
4
5

            
            
            .circle .image-wrap {
	-webkit-border-radius: 50em;
	-moz-border-radius: 50em;
	border-radius: 50em;
}
            
        
    


卡片风格(见 demo)
下面是一个像卡片的图片风格，用了多个inset box-shadow。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9

            
            
            .card .image-wrap {
	-webkit-box-shadow: inset 0 0 1px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -1px 0 rgba(0,0,0,.4);
	-moz-box-shadow: inset 0 0 1px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -1px 0 rgba(0,0,0,.4);
	box-shadow: inset 0 0 1px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -1px 0 rgba(0,0,0,.4);
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
            
        
    


浮雕风格 (见 demo)
通过一点儿改变，我可以将卡片风格转换为浮雕。。。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9

            
            
            .embossed .image-wrap {
	-webkit-box-shadow: inset 0 0 2px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -7px 0 rgba(0,0,0,.6), inset 0 -9px 0 rgba(255,255,255,.3);
	-moz-box-shadow: inset 0 0 2px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -7px 0 rgba(0,0,0,.6), inset 0 -9px 0 rgba(255,255,255,.3);
	box-shadow: inset 0 0 2px rgba(0,0,0,.8), inset 0 2px 0 rgba(255,255,255,.5), inset 0 -7px 0 rgba(0,0,0,.6), inset 0 -9px 0 rgba(255,255,255,.3);
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
            
        
    


软浮雕风格 (见 demo)
和浮雕风格真的很像，我只是加了1px的虚化～～

CSS


    
        
            
            1
2
3
4
5
6
7
8
9

            
            
            .soft-embossed .image-wrap {
	-webkit-box-shadow: inset 0 0 4px rgba(0,0,0,1), inset 0 2px 1px rgba(255,255,255,.5), inset 0 -9px 2px rgba(0,0,0,.6), inset 0 -12px 2px rgba(255,255,255,.3);
	-moz-box-shadow: inset 0 0 4px rgba(0,0,0,1), inset 0 2px 1px rgba(255,255,255,.5), inset 0 -9px 2px rgba(0,0,0,.6), inset 0 -12px 2px rgba(255,255,255,.3);
	box-shadow: inset 0 0 4px rgba(0,0,0,1), inset 0 2px 1px rgba(255,255,255,.5), inset 0 -9px 2px rgba(0,0,0,.6), inset 0 -12px 2px rgba(255,255,255,.3);
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
            
        
    


剪贴画风格(见 demo)
同样只是inset box-shadow，我可以让它看起来像剪贴画。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9

            
            
            .cut-out .image-wrap {
	-webkit-box-shadow: 0 1px 0 rgba(255,255,255,.2), inset 0 4px 5px rgba(0,0,0,.6), inset 0 1px 0 rgba(0,0,0,.6);
	-moz-box-shadow: 0 1px 0 rgba(255,255,255,.2), inset 0 4px 5px rgba(0,0,0,.6), inset 0 1px 0 rgba(0,0,0,.6);
	box-shadow: 0 1px 0 rgba(255,255,255,.2), inset 0 4px 5px rgba(0,0,0,.6), inset 0 1px 0 rgba(0,0,0,.6);
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
            
        
    


变形和发光 (见 demo)
这个例子中，我为图片外容器增加了变形。mouseover的时候，它将从圆角形状变为圆形，然后增加了发光效果。发光效果通过多重box-shadow实现。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

            
            
            .morphing-glowing .image-wrap {
	-webkit-transition: 1s;
	-moz-transition: 1s;
	transition: 1s;
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
&amp;nbsp;
.morphing-glowing .image-wrap:hover {
	-webkit-box-shadow: 0 0 20px rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);
	-moz-box-shadow: 0 0 20px rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);
	box-shadow: 0 0 20px rgba(255,255,255,.6), inset 0 0 20px rgba(255,255,255,1);
&amp;nbsp;
	-webkit-border-radius: 60em;
	-moz-border-radius: 60em;
	border-radius: 60em;
}
            
        
    


发光遮罩 (见 demo)
发光渐变遮罩是通过:after伪元素实现的。。。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

            
            
            .glossy .image-wrap {
	-webkit-box-shadow: inset 0 -1px 0 rgba(0,0,0,.5);
	-moz-box-shadow: inset 0 -1px 0 rgba(0,0,0,.5);
	box-shadow: inset 0 -1px 0 rgba(0,0,0,.5);
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
&amp;nbsp;
.glossy .image-wrap:after {
	position: absolute;
	content: ' ';
	width: 100%;
	height: 50%;
	top: 0;
	left: 0;
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
&amp;nbsp;
	background: -moz-linear-gradient(top, rgba(255,255,255,0.7) 0%, rgba(255,255,255,.1) 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(255,255,255,0.7)), color-stop(100%,rgba(255,255,255,.1)));
	background: linear-gradient(top, rgba(255,255,255,0.7) 0%,rgba(255,255,255,.1) 100%);
}
            
        
    


倒影 (见 demo)
这个例子中，我将遮罩渐变移动到底部，于是它就成了倒影。。。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

            
            
            .reflection .image-wrap:after {
	position: absolute;
	content: ' ';
	width: 100%;
	height: 30px;
	bottom: -31px;
	left: 0;
&amp;nbsp;
	-webkit-border-top-left-radius: 20px;
	-webkit-border-top-right-radius: 20px;
	-moz-border-radius-topleft: 20px;
	-moz-border-radius-topright: 20px;
	border-top-left-radius: 20px;
	border-top-right-radius: 20px;
&amp;nbsp;
	background: -moz-linear-gradient(top, rgba(0,0,0,.3) 0%, rgba(255,255,255,0) 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(0,0,0,.3)), color-stop(100%,rgba(255,255,255,0)));
	background: linear-gradient(top, rgba(0,0,0,.3) 0%,rgba(255,255,255,0) 100%);
}
&amp;nbsp;
.reflection .image-wrap:hover {
	position: relative;
	top: -8px;
}
            
        
    


光泽和倒影(见 demo)
这个例子中，我同时使用了:before和:after伪元素来实现带倒影的光泽效果。

CSS


    
        
            
            1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&amp;nbsp;
            
            
            .glossy-reflection .image-wrap {
	-webkit-box-shadow: inset 0 -1px 0 rgba(0,0,0,.5), inset 0 1px 0 rgba(255,255,255,.6);
	-moz-box-shadow: inset 0 -1px 0 rgba(0,0,0,.5), inset 0 1px 0 rgba(255,255,255,.6);
	box-shadow: inset 0 -1px 0 rgba(0,0,0,.5), inset 0 1px 0 rgba(255,255,255,.6);
&amp;nbsp;
	-webkit-transition: 1s;
	-moz-transition: 1s;
	transition: 1s;
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
}
&amp;nbsp;
.glossy-reflection .image-wrap:before {
	position: absolute;
	content: ' ';
	width: 100%;
	height: 50%;
	top: 0;
	left: 0;
&amp;nbsp;
	-webkit-border-radius: 20px;
	-moz-border-radius: 20px;
	border-radius: 20px;
&amp;nbsp;
	background: -moz-linear-gradient(top, rgba(255,255,255,0.7) 0%, rgba(255,255,255,.1) 100%);
	background: -webkit-gradient(line
			
			
			</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-04 10:27:04</pubDate>
</item>
<item>
<title>LESS介绍及其与Sass的差异</title>
<link>http://oss.org.cn/html/64/n-61564.html</link>
<text>&amp;nbsp;原文：LESS介绍及其与Sass的差异译自：An Introduction To LESS, And Comparison To Sass原作者：Jeremy Hixon请尊重版权，转载请注明来源，多谢！自从一个月前我偶然发现LESS之后我就开始坚定的使用它了。CSS本身对我来说从来不是问题，但是我很好奇使用变量来沿着一个调色盘为我的网站或模板创建一些东西的想法。拥有一个提供固定数量选项可选的色盘可以让我避免颜色太跳跃以至于从一个已定的风格中脱离。事实证明，LESS——以及Sass——功能比这个要多太多。LESS和Sass在语法上有些共性，比如下面这些：混入(Mixins)——class中的class；参数混入——可以传递参数的class，就像函数一样；嵌套规则——Class中嵌套class，从而减少重复的代码；运算——CSS中用上数学；颜色功能——可以编辑颜色；名字空间(namespace)——分组样式，从而可以被调用；作用域——局部修改样式；JavaScript 赋值——在CSS中使用JavaScript表达式赋值。LESS和Sass的主要不同就是他们的实现方式，LESSS是基于JavaScript，所以，是在客户端处理的。另一方面，Sass是基于Ruby的，然后是在服务器端处理的。很多开发者不会选择LESS因为JavaScript引擎需要额外的时间来处理代码然后输出修改过的CSS到浏览器。关于这个有很多种方式，我选择的是只在开发环节使用LESS。一旦我完成了开发，我就复制然后粘贴LESS输出的到一个压缩器，然后到一个单独的CSS文件来替代LESS文件。另一个选择是使用LESS.app来编译和压缩你的LESS文件。两个选择都将最小化你的样式输出，从而避免由于用户的浏览器不支持JavaScript而可能引起的任何问题。尽管这不大可能，但终归是有可能的。LESS Is More介绍在你的项目中引入LESS很简单：下载less.js;创建一个文件来放你的样式，比如style.less;添加以下代码到你的HTML的&amp;lt;head&amp;gt;中:&amp;lt;link rel=&quot;stylesheet/less&quot; type=&quot;text/css&quot; href=&quot;styles.less&quot;&amp;gt;&amp;lt;script src=&quot;less.js&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;请注意link的rel属性。你需要在属性值的最后面使用/less以使LESS起作用。然后在link后面引入scirpt也是必须的。如果你在用HTML5语法——为什么不用呢？——你可以省去type=”text/css”和type=”text/javascript”。其实也有一个服务器端的LESS版本。在服务器上安装LESS的最简单的办法就是使用Node Package Manager (NPM，一看就知道是基于Node.js的)。变量如果你是个开发者，变量应该是你最好的朋友。如果你要重复的使用一个信息(本例中就是color)，将它设置为一个变量就可以。这样，你就可以保证自己的一致性并可能减少滚动代码来查找颜色值、复制、粘贴等繁琐的工作了。你甚至可以加或者减一些你需要渲染的HEX值到这些颜色上面。看下例子：123@blue: #00c;	@light_blue: @blue + #333;@dark_blue: @blue - #333;如果我们将这些样式应用到3个div上面，我们就可以看到由加上和减掉的HEX值形成的渐变的效果：从@light_blue到@blue到@dark_blue的渐变效果关于变量在LESS和Sass中的唯一区别就是，LESS用@，Sass用$。同时还有一些作用域上的差别，我后面会提到。混入(mixin)偶尔，我们会创建一些会在样式表中重复使用的样式规则。没有人会阻止你在一个HTML的元素中使用多个class，但是你可以用LESS，在样式表中完成。为了描述这一点，我写了一点儿例子：1234567891011.border {	border-top: 1px dotted #333;}article.post {	background: #eee;	.border;}ul.menu {	background: #ccc;	.border;}这可以给到你与你在两个元素中分别添加.bordered class同样的效果——而且仅仅在样式表中就完成了。而且它工作的很好：文字和无序列表都被用上了边框样式在Sass中，你要在样式规则前面添加@mixin声明，规定它是个嵌套。然后，通过@include来调用它：1234567891011@mixin border {	border-top: 1px dotted #333;}article.post {	background: #eee;	@include border;}ul.menu {	background: #ccc;	@include border;}参数混入就像在CSS中有函数功能一样，这些对于那些在现在的CSS工作中多余的工作非常有用。最好和最有用的例子就是我们正在经历的从CSS2到CSS3过渡过程中的很多浏览器私有前缀。Nettuts+有一篇Jeffrey Way写的很赞的视频和文章，内容是包含着由有用的参数组成的文件，他们涵盖了大部分使用各个浏览器私有前缀的CSS3属性。例如，在他们的格式中，一个简单的处理圆角的mixin是这样的：12345.border-radius( @radius: 3px ) {-webkit-border-radius: @radius;-moz-border-radius: @radius;border-radius: @radius;}在这个例子中，.border-radius有个默认的3px的圆角，但是你可以使用你需要的任何值。.border-radius(10px)将会生成半径为10px的圆角。Sass中的语法很像LESS，只是使用$声明变量，然后使用前面提到的@mixin和@include来调用。选择器继承这个东西LESS并没有提供。通过这个功能，你可以将一个选择器附加到已经预先定义的选择器上，而无需再使用逗号将两者分开的写法了：1234567891011.menu {	border: 1px solid #ddd;}.footer {	@extend .menu;}&amp;nbsp;/* 上面的写法规则和下面的效果是一样的： */.menu, .footer {	border: 1px solid #ddd;}嵌套规则在css中嵌套class和ID是避免你的样式干扰或者被别的样式干扰的唯一方法了。但是这可能会很凌乱。使用一个类似于#site-body .post .post-header h2 的选择器毫无吸引力而且会占用大量不必要的空格。使用LESS，你可以嵌套id、class以及标签。对于前面提到的例子，你可以这样写：1234567891011#site-body { …	.post { …		.post-header { …			h2 { … }			a { …				&amp;amp;amp;:visited { … }				&amp;amp;amp;:hover { … }			}		}	}}上面的代码最终和上面的例子（那一长串的选择器）的效果一样，但是要更容易阅读和理解的多，而且它占用很少的空间。你也可以通过&amp;amp;来引用元素样式到他们的伪元素上，该功能类似于JavaScript中的this。运算这可能是你所期望的：使用数字或者变量在你的样式表中实现数学运算！12345@base_margin: 10px;@double_margin: @base_margin * 2;@full_page: 960px;@half_page: @full_page / 2;@quarter_page: (@full_page / 2) / 2;声明下，我也意识到我可以除以4来获得@quarter_page变量，但是这里我只是想要演示下圆括号组成“运算顺序”在这里也是可以用的。在使用简写的规则中，小括号也是必须的，比如 border: (@width / 2) solid #000。Sass在数字上比LESS更专业。它已经可以换算单位了。Sass可以处理无法识别的度量单位并将其输出。这个特性很明显是一个对未来的尝试——证明W3C作出的一些改变。12345/* Sass */2in + 3cm + 2pc = 3.514in&amp;nbsp;/* LESS */2in + 3cm + 2pc = ErrorColor函数在文章开头，我提到了LESS如何帮我在编码过程中处理围绕着一个调色板。对此贡献最大的一部分就是颜色函数。加入你用一个标准的蓝色贯穿到你的样式中，然后你想要在表单中用这个蓝色来做一个渐变的按钮。你可以打开Photoshop或者其它的编辑器来获取一个比蓝色较浅的或者较暗的HEX色值来作为渐变色。或者，你可以只是使用LESS中的颜色函数。123456789101112@blue: #369;.submit {	padding: 5px 10px;	border: 1px solid @blue;	background: -moz-linear-gradient(top, lighten(@blue, 10%), @blue 100%); /*Moz*/	background: -webkit-gradient(linear, center top, center bottom, from(lighten(@blue, 10%)), color-stop(100%, @blue)); /*Webkit*/	background: -o-linear-gradient(top, lighten(@blue, 10%) 0%, @blue 100%); /*Opera*/	background: -ms-linear-gradient(top, lighten(@blue, 10%) 0%, @blue 100%); /*IE 10+*/	background: linear-gradient(top, lighten(@blue, 10%) 0%, @blue 100%); /*W3C*/	color: #fff;	text-shadow: 0 -1px 1px rgba(0,0,0,0.4);}lighten函数很明显就是用百分比值来减轻颜色，在这个例子中，它将减轻这个基础的蓝色的10%。这种方法可以让我们变化的元素或者其它任何元素的颜色值——只是简单的改变基础颜色而已。这对于主题(模板)来说非常有用。而且，如果你使用参数功能，像上面提到的，你还可以更简单的应用到一些浏览器私有前缀的声明中，比如：.linear-gradient(lighten(@blue), @blue, 100%);。嗯，最终的效果的确很赞：很赞的渐变的、基于变量的”Submit”按钮还有很多其它的色彩函数，比如变暗或者调整颜色的饱和度，甚至你可以旋转色盘来使用其它颜色。我建议亲自尝试下你能想出的（用法）。Sass貌似有更多的选项——但我并不需要这么多。我个人最常用的还是lighten和darken。如果你想了解更多，可以看一下这篇很详细的介绍。条件语句与控制这是一个的确很赞的东东，也是另一个LESS不支持的功能。使用 Sass，你可以使用if { } else { } 条件语句，以及for { }循环。它甚至支持 and、 or和 not，以及 &amp;lt;、 &amp;gt;、 &amp;lt;=、 &amp;gt;= 和 == 等操作符。12345678910111213/* Sample Sass &quot;if&quot; statement */@if lightness($color) &amp;amp;gt; 30% {	background-color: #000;} @else {	background-color: #fff;}&amp;nbsp;/* Sample Sass &quot;for&quot; loop */@for $i from 1px to 10px {	.border-#{i} {	border: $i solid blue;	}}名字空间(Namespaces)名字空间可以用于组织我们的CSS到另一个档次，我们可以将一些公用的样式分组，然后在用的时候直接使用。例如，如果我们创建了一个名为default的样式分组，我们就可以在用到的时候直接从该组中调用。12345678#defaults {	.nav_list () {		list-style: none;		margin: 0; padding: 0;	}	.button () { … }	.quote () { … }}然后，在我们的代码中，如果我们正好在一个nav元素中使用了ul元素，我们就会想到我们需要default样式。那么我们就可以简单的调用它，它也会被直接应用。123nav ul {	#defaults &amp;amp;gt; .nav_list;}作用域作用域是编程中的标配，LESS中也是。如果你在你样式表的root级声明一个变量，它在整个文档中都是可以用的。然而，如果你在一个选择器，比如id或者class中，重新定义了这个变量，那么，它就只能在这个选择器中可用了——当然是重新定义后的新值。12345678@color: #00c; /* 蓝色 */#header {	@color: #c00; /* red */	border: 1px solid @color; /* 红色边框 */}#footer {	border: 1px solid @color; /* 蓝色边框 */}因为我们在#header中重新定义了color变量，变量的值将会是不同的而且只会在该选择器中有效。它之前或者之后的所有地方，如果没有被重新定义，都会保持那个原始的值。作用域在Sass中稍有不同。在上面的代码中，当@color变量变为红色后，代码中，此处之后的该变量的值，将会被重写（成为红色）。注释这一部分比较基础。LESS中允许两种注释写法。标准的CSS注释，/* comment */，是有效的，而且能够通过处理并正确输出。当行注释，// comment，同样可以用但是不能够通过处理也不能被输出，然后，结果是，“无声的”。导入导入也相当符合标准。标准的 @import: ‘classes.less’; 处理的很好。然而，如果你想要导入其它的LESS文件，那么文件的扩展名是可选的，所以 @import ‘classes’; 也是可行的。如果你想要导入一些无需LESS处理的内容，你可以使用 .css 扩展 (比如， @import: ‘reset.css’;)。字符串插入字符串也是可以用于变量中的，然后通过@{name}来调用。12@base_url : 'http://www.qianduan.net';background-image: url(&quot;@{base_url}/images/background.png&quot;);转义(Escaping)可能偶尔会需要引入一个CSS中非法或者LESS无法识别的值。通常是一些IE的hack。要避免抛出异常并破坏LESS，你将需要避开它们。12345678.class {	filter: ~&quot;progid:DXImageTransform.Microsoft.Alpha(opacity=20)&quot;;}&amp;nbsp;/*实际上将会输出下面的代码: */.class {	filter: progid:DXImageTransform.Microsoft.Alpha(opacity=20);}JavaScript 赋值这是LESS中我最中意的部分：在样式表中使用Javascript——相当精彩。你可以使用表达式，也可以参考环境方向来使用反单引号。12345678@string: `'howdy'.toUpperCase()`; /* @string 变成 'HOWDY' */&amp;nbsp;/* 你也可以使用前面提到的插值： */@string: 'howdy';@var: ~`'@{string}'.topUpperCase()`; /* 变为 'HOWDY' */&amp;nbsp;/* 获取文档的信息 */@height = `document.body.clientHeight`;输出格式然而LESS并没有输出设置，而Sass提供4中输出选项：nested, compact, compressed 和 expanded。结语这两个方法有很多共同点。对写代码的设计师来说它们都是很玄的工具，它们也可以帮助开发者更有效和快速的工作。如果你是Ruby或HAML的粉丝，那么Sass会是你的好助手。对我来说，一个PHP和JavaScript极客，我倾向于LESS，因为它便于引入和能够使用JavaScript的表达式以及文档属性。我怀疑我甚至接近真正理解在样式表中编程的可能行了，但是我仍坚持尝试。如果你在工作中有用到它们中的一个，或者两个都用，我很乐意听到关于它的更多内容，并看到你的成果。当然，技巧、诀窍、更正一直是很欢迎的。。译注：翻译的有些仓促，如果有错误或者不妥的地方，欢迎指出。mixin这个单词，这里直译为“混入”了，不过感觉也不太合适，查了好久也没有见到非常合适的翻译，这里求达人指点。另外，不知道什么原因，lesscss.org貌似在贵国无法访问，大家可以直接访问LESS在git上的仓库，http://github.com/cloudhead/less.js，该项目的wiki也有和官方网站一样的文档，需要的话可以详细阅读下。——神飞作者: 	神飞		爱好前端设计与开发，崇尚一目了然的设计。现居深圳。Follow me on twitter @qianduan。&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-04 10:11:30</pubDate>
</item>
<item>
<title>IE10将增强对HTML5和CSS3的支持</title>
<link>http://oss.org.cn/html/63/n-61563.html</link>
<text>Windows 8 终于发布了，虽然现在可用的只是开发者预览版，好消息是，IE 10 也随着发了，虽然现在还只有Windows 8可用。我们来看下IE10都有哪些新特性吧。
IE开发者中心给到了一份详细的针对前端开发者的文档，列出了IE10支持的HTML5和CSS3新特性。嗯，它终于跟上了：
CSS3

css region
css3多列
Flexbox
grid
定位浮动(positioned float)
3D变换(3D transfrom)
动画(animation)
渐变(gradient)
text-shadow
去掉样式表限制——在IE9之前的版本中，每个页面最多只能加载31个样式表文件，@import也只能最多嵌套4层，IE10中去掉了这些限制。

HTML5


脚本同步——script标签的async属性，用来定义脚本是否异步执行
File API
History
Parsing
表单验证(form validation)
progress和range控制——其实也可以看作HTML5表单中的功能
web workers
web sockets
拖拽(drag and drop)
应用缓存——application cache，也就是离线存储，不过需要注意的是W3C更新了离线存储配置文件的扩展名，之前是ooxx.manifest，以后要用appcache扩展。
spellcheck
频道通信(channel messaging)


其它


Indexed Database
Web performance API
SVG 滤镜效果


嗯，新东西很多，看起来还是很给力的。
需要注意的是，IE10对CSS3新特性的支持，大部分还是需要-ms-前缀的。</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-04 10:02:34</pubDate>
</item>
<item>
<title>开源阵营要求Win8硬件保留Linux使用权</title>
<link>http://oss.org.cn/html/19/n-61519.html</link>
<text>开源Linux厂商Redhat及Canonical发表联合声明，要求微软Windows 8系统认证硬件保留使用Linux操作系统的权利。Linux基金会也发表一份白皮书，希望让Linux操作系统等开源代码平台可以搭配UEFI的“安全开机”（Secure Boot）功能运作。
微软规定取得Windows 8认证（Designed for Windows 8标签）的电脑必须使用UEFI介面取代BIOS，而且必需使用其Secure Boot功能。该功能可以在电脑开机时，为避免Rootkit等恶意软件控制电脑，只使用认证过的软件开机。
事实上Linux阵营也都认同微软以UEFI取代BIOS，因为这样可以让操作系统与硬件更好的兼容，在硬盘、内存、电源管理等方面都可以有更好的表现，而且Secure Boot的确可以避免使用者的设备遭恶意软件绑架。但是Linux阵营担心的是，一般使用者可能在微软限制下而无法安装Windows之外的操作系统。
Linux基金会建议硬件厂商开放Secure Boot的设定，以方便各Linux系统可以在Secure Boot机制下启动，并使用其安全机制，支援多重操作系统开机。该基金会将建立一个独立的证书颁发机构，让多个操作系统可以取得Secure Boot所需的凭证。
不过该系统是否能运作的关键在于硬件厂商是否支援。电脑硬件必须能够容许使用者重新设定其Secure Boot功能的相关凭证，否则开启Secure Boot功能时，该硬件仍仅能使用预设的微软操作系统。
微软原先设定仅有硬件生产厂商可以设定Secure Boot的操作系统凭证，Linux团体建议硬件设备厂商应该提供适当的机制，让使用者拥有更大的控制权可以改变相关设定。
微软九月在Build 2011展示Windows 8系统，并通过由三星生产的平板电脑发送给开发人员，该电脑就可以将Secure Boot功能关闭。微软当时也在博客中表示，使用者可以控制自己的电脑设备是否开启Secure Boot功能，尤其是想执行先前版本操作系统的用户，但认为关闭Secure Boot功能很容易遭受攻击。
Linux团体希望所有的Windows 8系统至少要保留用户开关Secure Boot功能的选项，以方便使用者安装Windows 8以外的操作系统。Windows 8预计将于明年下半年上市，支持x86/x64及ARM处理器，目前微软已经释出开发人员预览版本。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-03 10:50:03</pubDate>
</item>
<item>
<title>Hadoop快速成长 引领开源云计算发展</title>
<link>http://oss.org.cn/html/75/n-61475.html</link>
<text>　　最近各大巨头在云计算方面的投资都非常活跃，从云平台的管理、海量数据分析，到各种新兴的面向消费者的云平台和云服务，各个领域都呈现遍地开花的形式。而以Hadoop为代表的大规模数据处理（BigData Processing）技术的日趋成熟使得“业务为王”向“数据为王”转变。Hadoop社区的繁荣有目共睹。越来越多的国内外公司参与到Hadoop社区开发，或者直接将线上使用的软件开源。　　当年与Google还是处在强烈竞争关系的Yahoo!于是招了Doug(Hadoop创始人)进来，把Google老大赖以生存的DFS与Map-Reduce开源了，开始了Hadoop的童年时期。差不多在2008年的时候，Hadoop才算逐渐成熟。从初创到现在，Hadoop经过了至少7年的积累，现在的Hadoop不仅是当年的老二Yahoo的专用产品了，从Hadoop长的用户名单中，可以看到Facebook、Linkedin、Amazon，可以看到EMC、eBay、Twitter、IBM、Microsoft,、Apple、HP...国内的公司有淘宝、百度等等。　　不仅如此，最新消息显示连微软这个软件巨头也在近日向Hadoop敞开了怀抱。在10月12日的西雅图举行的SQL PASS 2011峰会上，微软宣布将于从雅虎分拆出来的Hortonworks合作开发，在Apache Hadoop上实现搭建Windows Server以及Windows Azure平台。Hortonworks作为微软的战略合作伙伴将会借助自己在此领域的专长帮助最大化将Hadoop集成到微软的产品之中。　　微软表示预计在今年年底可推出基于Hadoop的Windows Azure预览版，而基于Hadoop的Windows Server将在在2012年推出。基于Hadoop的Windows Server还会与微软现有的BI工具联合处理任务。同时微软官方还证实了SQL Server “Denali”将被正式命名为SQL Server 2012。同时微软还将加大对JavaScript语言的投入，微软将使用JavaScript实现高性能的Map/Reduce。微软承诺将紧密与Hadoop社区合作并积极为Apache软件基金会的项目作出自身的贡献。　　微软商业平台事业部高级副总裁Ted Kummert在一份声明中表示此举将帮助微软的客户更好的管理自己的大数据。越来越多的公司正在寻找收集和分析非结构化数据以帮助自身洞察业务的方法。但迄今为止，由于传统关系数据库主要是为处理结构化数据而设计的，其自身固有的特性导致可扩展性不佳。而Hadoop作为一个开源框架对大数据的支持正日益吸引IT主管的目光，Hadoop非常适合处理非结构化数据，如电子邮件内的内容、博客、点击带来的流数据、音频及视频等数据。　　当然其他巨头也不甘落后，纷纷有所行动。甲骨文也在最近推出了基于Hadoop的大数据设备以及甲骨文自己的NoSQL数据库和基于开源语言R的分布式数据统计分析系统。就在几天前IBM宣布将收购私营的系统软件公司Platform Computing。此举可帮助IBM将更好地为客户提供服务，帮助它们以更适当的方式管理并分析大规模数据，降低成本和系统复杂度。　　提到甲骨文在Hadoop上的最新动向，就不能不说到R语言。R语言作为开源的数据统计分析语言正潜移默化的在企业中扩大自己的影响力。特有的扩展插件可提供免费扩展，并且允许R语言引擎运行在Hadoop集群之上。　　R语言是主要用于统计分析、绘图的语言和操作环境。R本来是由来自新西兰奥克兰大学的Ross Ihaka和Robert Gentleman开发。(也因此称为R)现在由“R开发核心团队”负责开发。R是基于S语言的一个GNU项目，所以也可以当作S语言的一种实现，通常用 S语言编写的代码都可以不作修改的在R环境下运行。R的语法是来自Scheme。　　现在，统计工作者可利用R语言，R语言擅长在Hadoop分布式文件系统中存储的非结构化数据的分析。R现在还可以运行在HBase这种非关系型的数据库以及面向列的分布式数据存储之上。其主要模仿了Google的BigTable。这基本上等同于使用Hadoop来持有结构化数据的数据库。就像 Apache软件基金会Hadoop项目的子项目HBase一样。　　Revolution Analytics公司提供对开源R语言的商用软件扩充以及支援，这使得让统计分析师及科学家能够在短暂的时间内从大量的重要资料中发现有意义的资讯。 Revolution Analytics公司首席技术官David Champagne表示R引擎可部署在Hadoop集群中的每个节点上面。你可以在部署了R的工作组中设置R算法，而不是在Java编程中减少算法。它可解析Hadoop映射函数的节点，同时可并行的统计分析存储在HDFS的数据。　　另外，开源的操作系统Ubuntu 11.10服务器版本开始支持Juju（先前代号为Ensemble）预案，该预案提供30多种云端应用程序的自动部署功能，支持MySQL、Tomcat 6与Hadoop等，协助企业加快大规模部署云端应用的程序。　　以Hadoop部署为例，IT人员先前必须安装Java程序，透过Java程序安装Hadoop程序，接着设定服务器之间的集群关系。现在IT人员可在11.10版安装Juju程序，只要在命令列输入几项指令就能自动安装Java与Hadoop程序，并建立Hadoop运算集群，让企业能快速建设Hadoop应用。未来IT人员若要扩充集群，只要透过Juju输入指令，就能将新的服务器纳入Hadoop系统。　　Twitter也在近期推出了开源实时Hadoop计算系统。这是一个分布式的、容错的实时计算系统，它被托管在GitHub上，遵循 Eclipse Public License 1.0。Storm是由BackType开发的实时处理系统，BackType现在已在Twitter麾下。GitHub上的最新版本是Storm 0.5.2，基本是用Clojure写的。　　Storm为分布式实时计算提供了一组通用原语，可被用于“流处理”之中，实时处理消息并更新数据库。这是管理队列及工作者集群的另一种方式。Storm也可被用于“连续计算”（continuous computation），对数据流做连续查询，在计算时就将结果以流的形式输出给用户。它还可被用于“分布式RPC”，以并行的方式运行昂贵的运算。Storm的主工程师Nathan Marz表示：Storm可以方便地在一个计算机集群中编写与扩展复杂的实时计算，Storm之于实时处理，就好比Hadoop之于批处理。Storm保证每个消息都会得到处理，而且它很快——在一个小集群中，每秒可以处理数以百万计的消息。更棒的是你可以使用任意编程语言来做开发。　　本次专辑我们就将对Hadoop七年（2004-2011）的发展历程进行梳理。在对Hadoop的发展进行了详细了解后，读者们将不难看出，Hadoop的发展基本上经历了这样一个过程：从一个开源的Apache基金会项目，随着越来越多的用户的加入，不断地使用、贡献和完善，形成一个强大的生态系统，从2009年开始，随着云计算和大数据的发展，Hadoop作为海量数据分析的最佳解决方案，开始受到许多IT厂商的关注，从而出现了许多Hadoop的商业版以及支持Hadoop的产品，包括软件和硬件。　　那么Hadoop在海量数据处理方面究竟有什么杀手锏能让众多巨头如此追捧呢？事实上，Hadoop在可伸缩性、健壮性、计算性能和成本上具有无可替代的优势，事实上已成为当前互联网企业主流的大数据分析平台。　　海量级别指的是对于数据库和BI产品已经完全失效或者成本过高的数据量。海量数据级别的优秀企业级产品也有很多，但基于软硬件的成本原因，目前大多数互联网企业采用Hadoop的HDFS分布式文件系统来存储数据，并使用MapReduce进行分析。本次专辑将主要介绍Hadoop上基于MapReduce的一个多维数据分析平台。　　使用Hadoop进行多维分析，首先能解决上述维度难以改变的问题，利用Hadoop中数据非结构化的特征，采集来的数据本身就是包含大量冗余信息的。同时也可以将大量冗余的维度信息整合到事实表中，这样可以在冗余维度下灵活地改变问题分析的角度。其次利用Hadoop MapReduce强大的并行化处理能力，无论OLAP分析中的维度增加多少，开销并不显著增长。换言之，Hadoop可以支持一个巨大无比的Cube，包含了无数你想到或者想不到的维度，而且每次多维分析，都可以支持成千上百个维度，并不会显著影响分析的性能。更多详细内容我们将在本次专辑中为大家带来……　　Hadoop称得起开源创新领域的杰出典范。事实上，正如思科公司的James Urquhart所推断：“Hadoop可以说是不涉及任何现有专利的开源项目在企业软件方面所取得的首个里程碑式成功。”尽管里程碑不只这么一个，但能够以这样的规模将成功果实迅速扩展的例子还真不多见。　　正是因为这样，我们欣喜地看到，学界对Hadoop的研究热情不减，今年的VLDB上就出现了数篇与MapReduce/Hadoop相关的论文。这说明Hadoop还有很多可完善可改进的地方。另一方面，一些商业软件也在向Hadoop技术靠拢，兼容Hadoop软件栈。同时，国内外出现了一批以提供Hadoop技术咨询和服务的公司，Hadoop大规模数据处理技术的商业价值逐渐得到业界的重视。　　而我们国内对Hadoop的开发、研究和探索也显示出极大的热情。由中国科学院计算技术研究所主办的 Hadoop中国2011云计算大会（Hadoop in China 2011，HiC2011）将于12月2日至3日在北京会议中心召开，这将是Hadoop in China社区的一次年度技术盛会！ 大会将联合国际和国内Hadoop及云计算技术应用的成功企业，并引入国际研究界对于云计算及DISC（Data Intensive Super Computing）研究方向的学术观点。通过技术应用和科学研究双重视角审视云计算技术及Hadoop开源生态系统的现状和发展趋势。 　　经过3年的培育，以Hadoop中国大会为窗口的中国Hadoop开源志愿者社区业已形成。Hadoop中国大会起源于2008年在中科院计算所举办的Hadoop开发者技术沙龙，其主旨在于推广Hadoop技术及其应用，理解互联网应用对云计算技术的实际需求，发扬开源精神，搭建Hadoop技术爱好者之间的交流平台。　　本次大会内容丰富，亮点颇多。大会特别邀请了Lucene、Nutch、Hadoop等开源软件创始人、Apache软件基金会主席兼Apache Hadoop项目负责人Doug Cutting先生，Condor创始人University of Wisconsin–Madison的Miron Livny教授，以及来自Google、Facebook等国内外著名互联网公司和IT企业的学者和资深开发人员到场演讲并进行技术交流，部分专家是首次来中国访问。　　大约五、六年以前Apache Hadoop只是一个包含20个节点的原型系统。从那时起雅虎开始致力于Apache Hadoop项目，组建了团队并在过去的时间里一直专注于Apache Hadoop项目的推动工作。经过几年的努力，目前的形势一片大好，新闻媒体对Hadoop很感兴趣，数以千计的公司或部门已经广泛采用了Hadoop。而当雅虎建立Hortonworks公司，开始单独推广Hadoop后，推动Hadoop技术继续前进并围绕Hadoop实现新特性、新技术角色的时机了也到来了。那么迎接Hadoop的将是什么样的未来呢？还是让我们一起拭目以待吧！</text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-02 22:46:42</pubDate>
</item>
<item>
<title>浅析网络传播环境下开源软件与知识产权</title>
<link>http://oss.org.cn/html/74/n-61474.html</link>
<text>开源软件作为一股不可逆转的历史洪流为中国软件的发展提供了难得的机遇;同时,与开源软件相关的知识产权问题已经被提卜重要的议程。开源运动的支持者大多认为”法律,而非技术问题是开放源代码运动现在面临的最大挑战”,”非技术性问题,比如软件专利等知识产权纠纷是困扰开放Linux的最大障碍”,”Linux软件本身是相当先进的,但技术之外的一些东西却可能阻碍它的发展。”那么在中国,开源软件与知识产权相关的问题都包含哪些?这些问题之间的关系怎样、是否可解?如何处理这些问题以帮助中国软件抓住开源软件潮流带来的机会呢?　　一、软件与开源知识产权　　开源软件又名 “Free Software(自由软件)”。当人们凭借对自南软件运动的一知半解演绎”Free Software'’时,尤其是”Free'’与”Commerecial(商业)”对应时,很容易将其直观地理解为免费。的确,”FreeSoftware'’是可以免费获得授权使用,但是更重要的是:所有的免费都必须符合一定的条件限制,即符合相应Licenses的要求 Lieenses也是以知识产权为内容的授权,这一点和商业软件许可一样。因此,不能得出商业软件有知识产权而开源软件没有知识产权的结论。　　开源软件本身固有的一些法律问题给应用软件的使用造成了一定的风险,如何通过知识产权的研究将开源软件的风险降低到最小,从而更好地利用开源软件是我们当前临的重大课题,尤其是在网络传播环境下。　　二、网络传播环境下开源软件与知识产权的冲突　　我国的著作权制度遵循伯尔尼条约的规定,软件作品一旦形成即刻受到法律保护,但是为了更加有利于著作权保护的实施,特别采取了自愿注册的原则。一言以蔽之,开源软件受著作权法的保护,而且在世界知识产权组织成员国之间,作品的保护享受国民待遇,因此我国的著作权法律适用于开源软件。　　然而,传统的知识产权制度在网络环境和知识经济的时代之下多少遇到了些尴尬,特别是互联网和万维网的出现对知识产权提出了很多新的挑战,比如在开源软件的许可之下,软件的任意拷贝就不能视为被商业软件公司恨之入骨的”盗版”。特别是Copyleft概念的提出,令人耳目一新,它巧妙地利用版权制度,以子之矛攻子之盾,大大地出了它的洋相。但现实证明,开源软件难以游离于知识产权法律制度之外,无论是GPL协议,还是BSD协议,所有开源软件许可证都是以版权法作为其法律基础。这就决定了开源软件仍然应遵循版权法等产权法律的基本规则。　　三、网络传播环境下开源知识产权解决之道:“开放下”的规则　　目前,开源软件在中国的发展还处于比较低初级的水平,当我们实力并不很强大的时候,模仿与借鉴都是有必要的,所谓”师夷长技以制夷”就是这个道理,不过,学也要学得高明,当心画虎不成反类犬。在知识产权陷阱遍布的高技术领域,培养自己的高素质人才、切实提高自身创新能力,才是关键中的关键。有鉴于此, 笔者提出如下几条建议:　　第一,了解和学习开源文化,充分尊重别人的劳动。举个例子来说,有些人在一个基于BsD许可的开源软件上开发了衍生产品,非但没有公开源代码,而且连应用的原文件都改得面目全非,还删掉了头文件的声明。这种行为就属于严重的侵权,连作品的署名权都给剥夺了,这是对人权的践踏和侮辱。这行为一旦被公开,将给开发企业带来极大的负而影响,经营将难以为继。　　第二,学习开源软件的使用授权协议,掌握要点,弄清哪些可为哪些不叮为,严格遵循授权协议的要求,不做授权协议禁止的事情。还是以刚才举的BsD例子来看,比起GPI_来,BsD要宽松地多,它甚至允许衍生产晶以闭源的形式发布,这样就会给企业更多的选择。南于GPL的”传染性”,自南软件的衍生产品必须以同样的授权发布,否则就违背了协议。隐瞒事实、寻找借口都是极不明智的短视行为,必将受到开源社区甚至全社会的唾弃,严重的还要承担法律责任。　　第三、发扬开源精神,人人为我、我为人人。开源软件作为一种新的软件生产方式有重大的进步意义,在开源精神之下,辅之以有效的管理手段,会有很多优秀的产品不断涌现。特别是当在自由软件的基础上为客户做定制开发时,一定要向客户解释清楚,说明源代码开放的意义,务必得到客户的谅解和同意,否则不是自己触犯法就是把定时炸弹埋到了客户身边。由于自己软件的精神和GNU的巨大影响,以GPL发布的开源软件还是多数,因此足以引起重视。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-11-02 17:47:59</pubDate>
</item>
<item>
<title>倪光南：嚼不烂的专利问题</title>
<link>http://oss.org.cn/html/73/n-61473.html</link>
<text>天使与魔鬼总是相伴而至，这话用在2011年关注度最高的苹果公司身上是再合适不过了。无论是外观还是性能，苹果公司带给用户的都是巨大的享受。但对于智能手机其他企业来说，苹果可并非天使。有些事实是残酷的，比如，2011年苹果对三星提起诉讼，造成三星Galaxy Tab 10.1 被禁止在德国上市销售。其他智能手机公司的专利战争也进行得如火如荼，HTC起诉苹果的三项有关Wi-Fi技术和产品特色问题；甲骨文向谷歌提起 Android系统的相关诉讼；微软向摩托罗拉起诉。如今，专利战成为欧美发达国家频繁使用的一种商业行为。 　　在软件相关的知识产权保护方面，我们要特别重视软件专利问题，因为软件专利完全有可能导致垄断，而这种垄断将扼杀中国正在兴起的软件产业。 　　某些国家对软件专利十分追捧，有识之士多有抨击。有人认为，专利将危害小软件公司，事实上，一个小软件产品就可能涉及许多专利；软件专利的20年保护无助于软件创新。有人认为，如果与药物专利相比（通常一个药物专利往往需要花费若干亿美元并等待10年才能获得），软件专利太容易获得了；现在的软件专利其实只有很少一部分够格。　　软件专利究竟对谁有利可以从微软对软件专利的态度变化中得到启示。过去，微软对于专利不感兴趣，那时它还在发展阶段，不希望有软件专利的束缚。例如，早在20世纪70年代，市场上就有其他公司的文字处理软件（WordStar）、电子表软件（VisiCalc），如果这些公司的文字处理软件和电子表软件都获得了专利的话，那么在此后的20年里，微软都不能做。果真如此，也就没有今天的微软了。但后来当微软在许多软件领域取得垄断地位后，它改变了立场。微软按照其每年投入的研发经费，参照一般专利申请数目和研发经费的比例关系，订出了每年申请的专利目标为3000个。这样，微软就很快拥有了一大批软件专利。从微软的这种态度变化可以清楚地看出，软件专利对占据垄断地位的软件巨头有利，而不利于中小软件企业，不利于软件业的创新。　　当然，微软态度的这种变化还有一个原因是企图用专利扼杀它的对手——以Linux为代表的开源软件。例如微软曾威胁说，Linux侵犯了微软的235项专利，企图以此扼杀Linux或使用户不敢使用Linux。由于软件专利显然不利于开源软件的生存和发展，所以世界上开源软件的支持者基本上都不主张实行软件专利保护。　　互联网的发展对传统的软件知识产权保护制度提出了挑战。目前，互联网的标准都是开放的，互联网标准基本上不存在专利收费问题；互联网的支撑软件大多是开源软件，而且有越来越多的趋势；互联网的发展有使软件服务化（SaaS）成为软件业主要商业模式的趋势。最近云计算迅猛发展，大多数云计算服务提供商都是基于开源软件平台，一个重要原因是依托开源软件，可以及时响应市场的快速变化，不致受到其他软件提供商的制约，并便于加强信息安全和降低成本。在开源软件中，除了采用AGPL许可证的以外，采用其他许可证的如用于Web服务都不需要开放源代码，这使服务提供商很愿意使用开源软件，因此云计算的兴起也促进了开源软件的发展。上述这些情况，都对软件传统知识产权保护制度，包括软件专利保护产生很大的冲击。　　在国际范围内，欧盟作为软件垄断的受害者，也不愿全盘接受美国的软件专利制度。围绕着软件专利，支持和反对的两方面一直在进行激烈的斗争，这种情况对于中国抵制软件专利保护是有利的。　　中国现行专利法不受理纯软件专利，即智力活动的规则和方法不可申请专利。中国作为一个发展中国家，为了有利于摆脱垄断的制约，有利于软件业的自主创新，显然不能照搬美国的软件专利制度，而应当实行符合中国国情的软件知识产权制度。因此现阶段，中国与世界上大多数国家一样，主要是实行软件的版权保护。 （来源：中国经济和信息化 作者：中科院院士 倪光南）</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-11-02 16:03:19</pubDate>
</item>
<item>
<title>LPI和普尔文考试机构联合推出 Linux认证优惠活动</title>
<link>http://oss.org.cn/html/71/n-61471.html</link>
<text>    为满足全世界自由及开放源代码软件爱好者的需求，促进中国开源软件的发展，素有Linux黄金认证的Linux Professional Institute和Prometric（普尔文）考试机构联合推出LPIC考试费用八折优惠活动。优惠活动至2011年底。机会难得，欢迎踊跃报考！只需要同级别考过两门，仅仅花费248美元就可以获得由总部设在加拿大的Linux Professional Institute颁发的国际级Linux认证！值得拥有！绝对超值！
考试优惠代码：SFDC2011。具体详情请参见www.lpi-china.org.cn 或 www.prometric.com/LPI。
Linux Professional Institute 是一家总部在加拿大的非营利性Linux考试机构。www.lpi.org&amp;lt;http://www.lpi.org&amp;gt;
目前，他们与Prometric联手推出针对中国Linux爱好者的考试8折优惠活动。

LPI中文网址： www.lpi-china.org.cn&amp;lt;http://www.lpi-china.org.cn&amp;gt; </text>
<image />
<source>http://oss.org.cn</source>
<author>cheny</author>
<pubDate>2011-11-02 15:32:03</pubDate>
</item>
<item>
<title>[连载]3D游戏教父约翰·卡马克(4) -- 天才的人生态度与理想</title>
<link>http://oss.org.cn/html/70/n-61470.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在中国，师傅教徒弟的时候，都会留一手，这也算传统“美德”吧。不过John 
Carmack显然有不同的见解，他认为，将自己所知的教给渴求知识的人，他们并不会夺走你的所知，而且能够将自己知道的东西与人分享，应该乐在其中，因
为你找到了知音。从Wolfenstein3D(德军总部3D)开始，Carmack就一直适时地将自己的游戏源代码公开，让全世界的程序员分享他的技术
结晶。而令人敬佩的是，即使这样做也没有使他的技术和开发出来的游戏逊色于任何来自各方的行业竞争对手——他的技术、他的游戏仍然是世界最顶尖的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; John 
Carmack不断地被人称呼为天才，其实他并非生来就是天才的，而是他在执著追求、不断挑战自我极限中成长，最终，那些原来认为不可能的事情变成了可
能。John 
Carmack的老师，非常著名的图形编程大师，在他的经典著作中写到，“不要害怕尝试不可能的事情，只要领会何谓不可能，就相信你能获得一些意料之外的
成功，自然而然地发现--在你所认为不可能的那些事情当中，至少有一半其实都是可能的”。Carmack对法拉利跑车的偏爱是人尽皆知的，他的故事，始终
贯穿着法拉利跑车，而他对法拉利跑车和火箭的爱好，正是反映了他对速度无止境的追求。他一次又一次对图形革新技术的追求，引导他不断前进，如痴如醉地投入
到自己的激情中，从不回头。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
国内3D图像领域最顶尖的微软研究院院长沈向洋说到，“Carmack在未来3D交互历史上绝对会占据整整一页”，实际上Carmack独自开发的图形引
擎已经是id 
software的一项标志，从《德军总部3D》到《DOOM》和《Quake》系列，始终是在追求速度与技术进步中跌跌撞撞的冲锋，所以卡马克在
2001年突然停止手头工作，动手开发载人火箭以参加民间的外太空飞行大奖，也就并不令人惊奇了。而《DOOM》中加入的死亡竞赛对战模式，更被视为当下
最热门的电子游戏竞技运动鼻祖。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 国外的某个专业游戏媒体在采访John 
Carmack的时候问到他为什么会走上编程和游戏的道路。Carmack的回答绝对会让现在的这些天之骄子感到吃惊，他说到，“我在12岁的时候就对编
程怀有强烈的爱好，并清楚自己将来要实现的目标，不过我的父母那时候都没能了解我，也没有买给我需要的计算机，为此我还责怪了父母将近十年的时间，不过现
在我们都已经淡忘这件事情了”。“当时我感到非常沮丧，因为自己清楚知道要做什么，却无法实现。那时候人们习惯地认为，如果你要从事计算机工作，那么就进
入MIT，再到一家公司工作，成为一名工程师，但是我从大学辍学了，随后创建了自己的公司。我弟弟则选择了我父母所希望的道路，获得了学位，成为股票经纪
人，他干得不错，但并不能像我这样拥有很多辆法拉利跑车来让父母感到自豪”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
“钱不是万能，但没有钱却万万不能”，这是中国人对待钱的态度。但笔者认为John Carmack和Bill 
gates对待金钱的态度就最值得我们中国那些富翁学习，先说说Gates吧，人家是世界首富，没错，但同时也是世界最大的慈善家，Gates夫妇现在已
经捐献了300亿美元，占他们所有财富的70%，让我们再看看丁磊、陈天桥这些中国顶级富翁，实在是让人觉得汗颜呀。John 
Carmack则认为，现在他已经拥有了足够的财富，足以维持自己的生活，不必听命于任何人，也不需要想法赚更多的钱，因此没有任何人、任何公司对他产生
严重的影响。想想中国的很多人，本来已经非常富有，但他们仍然屈从于拥有更多财物的诱惑，甚至用不正当的手段，最终锒铛入狱。高下立判。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 现在介绍一下John Carmack对于念大学的态度，大家一直都很想知道的，不是吗？John 
Carmack认为，如果你是为了正确的理由上学，那么学校将是一个很好的学习知识的场所，大学可以提供极为丰富的信息。“我现在回想起自己的大学生活，
觉得浪费了很多宝贵的时光，我当时应该使用他们的图形工作站和其它设备学习知识”。如果你只是为了获得一个学位，以便找到一份满意的工作，那么我并不支
持；但是如果是为了结识聪明人、拓展知识面和学习新知识，那么我完全支持。我并不认为大学是不好的地方，但我并不支持这样的观点--“你必须上大学，这是
唯一的成功之路”。原因很简单，它并不是唯一的成功之路。我认为，对于一些年轻、迅速发展的行业，例如互连网和游戏设计而言，才能和工作经验比学位更加重
要，我在招聘的时候从不问别人“你是否有学位？”我更关心的是“你做过什么? 能做什么？”。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 对于想从事游戏行业的人，John Carmack认为，目前已经有大学开设了游戏开发课程，而游戏开发的一些通用知识的确是可以通过课程传授，但这是一个在飞速发展的产业，其中各个领域在不断的进行细化，所以现在取得的游戏开发学位在几年后就没有价值了。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 
顺便提一下目前传得风风火火的微软“XNA”计划，还有Sony的PS3架构问题，Carmack对于若干家公司即将采用多处理器感到惊讶。他认为如果只
有一块高速处理器和一块显示卡，所有人都知道如何去学习编程，但如果采用多处理器来提高性能，它不但不会被很好利用，还会降低游戏的开发效率。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 
2004年4月20日，这一天是希特勒的111周年生日，同时也是美国科罗拉多校园枪击案的一周年祭日。失去理性的公众在抢夺收视率的谈话节目怂恿下，将
开发动作射击游戏的id推进了舆论的漩涡。这与1962年保守的英国主流音乐界对披头士的态度出人意料的相似。倒霉的id成为了公众对电视以及电影暴力内
容问题的发泄出口，三名受害者的父母将众多的传媒娱乐企业送上了法庭，当时的控方律师杰克·汤普森甚至信誓旦旦地说道：“我们要让好莱坞、让电子游戏业、
让互联网上的那些色情网站伤筋动骨。”Infogrames公司总裁布鲁诺·伯奈尔在谈到游戏暴力的问题时曾明确表示了自己的立场，他说：“我们希望为玩
家创造美梦而不是噩梦。我们应该帮助人们自由飞翔，而不是把人性黑暗的一面作为题材，再贩卖给人类。”此后西蒙·威森塔尔研究中心、退役陆军突击队员和一
贯偏袒家长选民的克林顿都对id冷嘲热讽道，“DOOM，利特尔顿城那两个孩子为之痴迷的游戏，使我们的下一代越来越主动地参与到虚拟暴力中。”&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
 
当国内的专家和家长们，像以色列人发现死海沉书那样惊喜，似乎终于找到了国外视游戏如洪水猛兽的例证，但是仅仅3年之后，面对网络游戏年营业额数十亿元的
市场，连国家863计划都将网络游戏列入其中。不同版本的年度经济人物也并没有因为陈天桥在经营砍砍杀杀的网络游戏，而冷落了这位新数字英雄。主流与公众
舆论中曾经的问题青年，20年后都成为了商业社会力捧的明星，这也许就是我们这个时代的商业内涵。这一切不在于别的，而在于你能知道你的方向并不断的追
求。时间会证明一切。　

&amp;lt;终章&amp;gt;
			
			
			
			</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 15:22:27</pubDate>
</item>
<item>
<title>[连载]3D游戏教父约翰·卡马克(3) -- John Carmak 与游戏技术</title>
<link>http://oss.org.cn/html/69/n-61469.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 一款游戏能够获得成功，创意和情节固然重要，但是没有一款跑得快，且性能优越的引擎，是绝对没有可能的,这和飞机、汽车、火车等的原理都相同嘛。John Carmack 之所以会成为id software公司的灵魂与支柱，只因为他是优秀的程序员，能够设计出革命性的游戏引擎。John Romero在离开id前曾经说过，不想id 仅是个技术性的公司，我要自己创立属于纯粹艺术性的游戏公司，这是因为他是关卡设计师而决定的。不过id 也正是因为有John Carmack设计的优秀引擎，才能够获得成功，要知道，每次他们都是等Carmack写出更加优秀和快速的引擎，然后关卡设计师再制作关卡，赋予内容、情节，配上音乐，基本上一款游戏就是这样子了。 明确点讲，引擎是骨头，支持着整个游戏，而其它的则是血肉，使得游戏更丰满和好玩。和现实一般无二的Doom3游戏画面&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 那么，什么是游戏引擎呢？它可以做怎么样的工作？相信John Carmack 在某一天的工作记录，就是最好的诠释，大家不要辩驳，因为这是3D 游戏之父的定义，你也不要再问我引擎是怎么会事，如果真的不懂，那么你就不要做游戏了。当然，玩游戏是不需要知道这许多东西的。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这是我的日常工作……&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 当我完成一件事情的时候，我就给它标上星号；当我发现一个错误或是某个尚未实现的功能时，我也会把它记在这里，一些问题在被解决之前可能会被多次提到。我会不时地整理这个列表，并在我已经修正好的问题前标上个加号。——约翰·卡马克二月十八日：*调页错误*拉伸控制台*加快水中移动速度*杀伤力的方向性*盔甲颜色闪烁*杀伤力足够大时的碎尸效果*调整榴弹*加亮玩家昵称*钉枪造成的延迟*一场游戏结束时服务器端异常终止+记分牌+可选的全尺寸+平视键+视频模式15时的异常+状态栏上的弹药图标+程序出错时允许“重启”+重生时的血迹残影？+火箭弹数量有时会出现负值+玩家携带宝物时的发光效果技术人员在介绍游戏的开发&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 大家是否霎时觉得自己进入了游戏技术的最底层？不是笔者骄傲，如果你想从事游戏设计师，或者游戏程序员的话，这篇文章就首先给你上了一课。555~~~，现在是8000月薪都无法请到优秀的游戏程序员和美工，如果你有幸进入该行业，别忘了有我的一份功劳，分点工资给我:)，笔者现在穷得要命:(。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; OK，游戏引擎做的就是上面的工作，而对引擎的改进，无疑能发挥出游戏的最大性能、功能，更具 可玩性。Carmack 有个业余的爱好，就是法拉利汽车和火箭，世界上如果有人觉得法拉利不够好，那他肯定疯了，但Carmack 正是此类人，他买了数部法拉利，但都进行了改造，增加涡轮推进器，使得性能大幅度飙升，当然从事更换发动机工作的并非他本人。一年一度的Quakecon 大会，纯粹介绍游戏开发技术&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在前面的文章中，我曾经讲到，即使Doom3的游戏引擎，目前也仅能做到箱子碰撞等比较简单的应用而已，但在未来将会出现可以模拟天气、模拟尘埃、模拟液体流动等更先进、智能的引擎。不过最让笔者感兴趣的却是让玩家可以Diy的引擎，比如制作自己的关卡、制作怪物、房间的布局，还有NPC的生命值，也许这样，玩家就可以自己设计游戏了。嗯，其实在商业的应用中，也是在有不少游戏使用了 别人公司开发的游戏引擎，比如Quake的引擎，例如CS使用了half-life的引擎。中国的游戏产业就是苦于没有自己的游戏引擎，才没有能力开发先进的游戏，现在甚至国家的863计划都立了项目来开发游戏引擎，但笔者认为，这些东西还是让商业公司去做会比较好 ，因为863计划没有实际操作方面的条件，开发出来也浪费国家财物。Sony 的最新PSX游戏主机&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 以往的游戏引擎或者说游戏本身制作得都比较混乱，当游戏本身变大的时候，再进行改进或者增加新的元素，都变得非常艰难。“以往的关卡几个小时就可以做好，而现在甚至打通一睹墙都要花费几天的时间”。当然这除了游戏本身变得比较复杂外，也体现出了游戏设计混乱的一面，如果能够把游戏引擎与音乐、关卡等等所有元素分 离，进行构件的设计，也许使用相同游戏引擎开发游戏的进度就会大大加快。过去/现在的主流编程方式是面向对象编程，但我这几天拜读了某位博士的论文，得知构件编程在未来将会 占重要的地位。也就是说像堆积木那样，把一个个元素装起来，就变成了游戏。更明确点说，游戏引擎就是货柜车的车头，而其它元素就是车的货柜。（这段完全是笔者思想)Phantom游戏机&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Carmack的工作仍然是调整游戏引擎，而其它人则负责把已经做好的游戏物品进行重新打磨。钉在尖桩上抽搐的僵尸，被链子捆在墙上血污四溅得尸体，怪物的死亡过程也被精心制作，比如先踉跄几下，然后头盖骨从中间裂开，有的则是向前卧倒的同时把肠子弄的一地都是。 Carmack在设计引擎的时候，很多灵感都是出于意外收获，比如在把Wolfenstein移植到任天堂机器的过程中，他读到了一篇讲述二叉空间分割(BSP)算法的文章，这是贝尔实验室的程序员用来提高在屏幕绘制三维模型效率的算法。用术语来说，这个算法就是把一个模型分割成大量的片断，而每个片断的数据则作为整个树状结构中的一个叶结点，然后就可以有选择地绘制需要的多边形，从而提高效率。Carmack从该算法，就想到了用它来绘制虚拟的世界，比如把在Doom里的一个房间分割成巨大的BSP树，这样玩家就不必每次改变视觉或位置的时候，都重新绘制这棵树的所有点，而只需要绘制玩家对 着的那些叶结点，因此游戏的速度得以大大提升。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 15:17:37</pubDate>
</item>
<item>
<title>[连载]3D游戏教父约翰·卡马克(2) -- 个性公司 or 娱乐帝国</title>
<link>http://oss.org.cn/html/68/n-61468.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在很多人的眼中，他们会觉得，既然id software 是如此声名显赫的公司，能够开发出如此脍炙人口的游戏，公司的规模一定非常可观，没有数百人，少说也要有几十人吧，现在开发游戏的工作量可没有我们想象的简单。如果大家这样认为的话，就错了，因为id software即使历时十多年，但就规模而言，也仅是个小公司而与，工作人员只有十多个，不过在里面工作的人收入可不菲，个个都是腰缠万贯的百万富翁，笔者流口水了~~。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;Id software 公司员工之少和收入之比例，绝对让任何人都汗颜，我们甚至连现任员工和离任员工都可以全部数出来。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 其实id software 成立了十多年的时间，都没有成为如暴雪一样的大公司，很大方面是因为John Carmack 的个人魅力而决定的。要知道，Carmack 最喜欢的是工作，忘我地工作，并不断挑战自己的智力。财富和名望他觉得足够使用就可以了，当然这些也并非全无影响，比如改善了他和双亲的关系。前面我曾经提到，他的双亲因为Carmack 的辍学而表示不满，而现在他的名气要比作为堪萨斯城著名新闻主编的父亲要更大，挣的钱要更多。现在双亲 都开始尊重并支持Carmack 的事业，而他目前在闲暇的时候还会玩玩Carmack 开发的游戏。但无论生活发生怎样的转变，Carmack 的绝大部分时间都是呆在id，潜心研究编程技术，而这，都是为创作下一个引擎作知识积累。John Romero&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; id software 创始人之一的John Romero 在幻想着他的娱乐帝国，“我们用这些技术多做几个游戏吧，那样可以赚到更多的钱，把引擎授权给Raven，他们很棒，他们肯定可以制作出精彩的游戏，然后我们来发行。”Carmack 虽然暂时同意了Romero 的想法，但是心里却是在想，究竟要把公司做到多大才算满足?其实Romero 要想的不仅是把公司做大，因为他还有其它动机，他热爱游戏，活着就是为了玩游戏，而现在找不到比Doom更好玩的游戏了，和Raven的合作可以给他带来新的游戏。他向Carmack 描述着id 的新生活，该是享受成功时候了，不会有压榨，不会有加班和熬夜，不会有该死的进度。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Carmack 和Romero 之间的分歧越来越大，对于制作什么游戏，还有如何制作，他们都有各自的观点。Carmack 认为Romero 已不再是程序员，而Romero 认为Carmack 已经不再是玩家；Carmack 只想要一间小公司，而Romero 想做大，这些截然相反的观点在过去可以说是阴阳互补，铸就了成功，但今天也使得他们无可挽回地决裂。公司的其它员工又何尝不想把公司做大，成为游戏帝国，但是在两个John 之间，他们只能选择一个。如果Romero 不走，那么Carmack 就要走，然后id software 将不复存在，但是让一个人离开从来就不是容易的事情，尤其这个人还是公司的创办者，为公司的成长付出过那么多的汗水，但是他们都没有选择，Romero只能走。id software现在就像一架飞机，而飞机师就是John Carmack ，他掌握着id 的发展方向，而根据他的理念，id 目前仍然只是个非常富有的小公司。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 嗯，有人曾经问到Carmack如何看待游戏、艺术和娱乐的观点。Carmack认为应当将游戏视为娱乐，并表示为玩家提供价值是他的主要目标，玩家付钱的目的是玩游戏，而不是观赏游戏，他相信这正是行业的目标。尽自己最大的力量为玩家贡献可玩的游戏，这就是Carmack的人生态度和目标，而太过商业化，会迷失自己，可能这样，id software在未来也仅能是一间名气大得吓人的小公司。不过虽然是小公司，却是连nVIDIA都要巴结它，微软都要尊敬它的小公司。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 15:04:35</pubDate>
</item>
<item>
<title>[连载]3D游戏教父约翰·卡马克(1) -- Doom的台前幕后</title>
<link>http://oss.org.cn/html/67/n-61467.html</link>
<text>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 提到Doom3（毁灭战士3)，大家的眼里肯定都会闪着异样的眼神，毕竟这个id Sofeware历时四年的大作是我们期待已久的。曾经有个媒体的朋友跟我说，现在的东西只要跟Doom3 沾上光，就肯定会有不错的表现，他还举例子说，曾经刊登了一篇关于Doom3游戏平台显示卡的横向评测，访问量立即飙升，感觉有些恐怖。其实，这不正表明了id Sofeware和Doom3 的魅力所在吗？VAIO和Apple、IBM等笔记本电脑都有专门的社区，而且这些社区都是爱好者们自己自行组织搭建的，而游戏界能够有自己社区，并汇聚众多顶尖高手的就莫过于id sofeware 的Q2acn了。最让人觉得吃惊的是，现在玩id sofeware公司游戏和期待Doom3 的爱好者，并非都是年轻的学生族群而已，他们都是有一定购买能力的Fans，要知道Doom3虽然还没出台，但对硬件平台的苛刻也是人尽皆知的，他们几乎每天都在讨论，“在Doom3正式发布的时候，就升级自己的机器，有什么好推荐吗？”。图1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在1993年12月的第一个礼拜，Doom已经忙着收尾，id 已经没有人再往家里跑，他们睡在公司，睡在躺椅上，忙什么呢？玩Doom ，其实像Doom 这些3D游戏，如果不习惯的话，玩起来会觉得有些难受，甚至眩晕。当时id 里面正是有这样一个程序员，Dave Taylor 是以经常晕倒在地上而出名的，他打游戏的时间越长，在迷宫里面转得越快，就越容易感到眩晕，他经常躺在地上回神，甚至有时候就睡着了。其他就看着他这样四仰八叉地躺在地上，终于有天晚上，他们找来了一卷胶带，沿着Dave 的身体在地上贴出了一个轮廓，就像坠楼后警察洒了些白粉在地上。:)图2图3图4 Doom1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在Doom就快要完成的时候，id 的压力丝毫没有减轻，因为很多玩家开始催促他们，甚至打电话，更多的是开始表示不满。因为id 曾说过他们可以在第三季度发布doom，某些玩家说道“你们几个月前就开始大吹大擂，让我们相信DOOM将会是一个多么了不起的游戏，你们还和很多人说今年秋天就可以完成，而现在，所有那些期望都将变成针对你们的怒火和咆哮!”。现在是Doom3 即将发布的前夕，但更多玩家表示的是期待，准备升级机器，准备血腥屠杀？&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Doom3 在网络上有两个泄漏版，相信很多玩家都已经玩过吧，而在接下来的几天了，正式版本却可以出现在我们的面前，到底是否如我们所愿，还是失望而归呢？相信这个疑问很快就可见分晓，但之前，让我们看看开发Doom3的种种有趣经历吧。图5 Doom3 精致的材质和画面&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; John Carmack 在GDC谈到，现在游戏开发已经变成了一件非常耗费人力、物力的过程。当然现在的游戏效果比起若干年前已经有了质的飞跃，不过这些变化是有代价的，需要开发人员倾注更多的心血。比如id 在完成Doom3 之后，如果利用现有的技术制作一款新游戏，那么都至少需要两到三年的时间，但是玩家要想玩到下一代引擎的话，可能还需要再等五、六年。John Carmack 用重新制作Quake2 打比方，“制作游戏的内容也将是一项浩大的工程，以前德军总部的关卡只是一些方块，你在一个小时之内就可以轻松做出一幅完整的地图，而现在要好几个人，用上一个月，一幅地图才能进入测试阶段”。游戏游戏开发周期变得越来越长，也使得开发游戏的乐趣变少了。Carmack 说到id 希望能重新用Doom3 的资源来开发下一款游戏，这样能够让游戏开发速度大大提高，不过这局限了他们下一游戏的设计方向。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Carmack 也回想道，由于Doom3开发历时了四年时间，所有很多代码都已经不适应新技术的需要（包括显示卡、操作系统、API等)，他很希望自己能够重新优化代码，把每件事情都做到尽可能地完美 ，但实际操作起来非常的艰难。而且做这些事情并没有给他带来预期的满足感，他说到，“通过提高程序质量，你可以获得艺术家本有的满足感，但那并非自己的根本动机，我最希望的是，自己的工作在最终产品中起到最重要的作用”。图6图7 Doom3与Doom1的转变，大家用眼睛说话吧&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 大家对比一下Doom3较之Doom的惊人转变，相信我不用解释，大家都完全领略得到其中的差距。Doom3 作为死亡模式的游戏，而且是万众期待的力作，当然会带给我们很多前所未有的体验。比如ID 提到了，Doom3 在多人游戏模式的时候，采用了“Per-pixel accuracy”的新技术，以前的游戏都是把玩家的模型置于一个无形的盒子中，你只需要打中紧挨着身体的部分就相当于击中了。在Doom3 则情况大有所改观，你可能会看到子弹从一个玩家的胳膊下面穿过，因此这就需要你提高各项武器的精确瞄准，并且根据需要轮换使用。&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Doom3 的物理引擎也能够展现更多的特效，其中最引人注目的就是ragdoll碎片效果，当玩家击中目标的时候，碎片就会产生。游戏中还有很多箱子和桶，而且都是交互的，玩家可以射击和推动它们，甚至还可以拿来布置陷阱，因此你看见前方有箱子的时候最好放慢脚步。在玩游戏的过程中，你可能会发觉一件很有意思的事情，当玩家被枪击中的时候，屏幕会产生剧烈的震动， 而且还需要一会的时间来恢复准星。&amp;nbsp;</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 14:55:37</pubDate>
</item>
<item>
<title>3D游戏之父 电玩游戏奇才约翰·卡马克</title>
<link>http://oss.org.cn/html/66/n-61466.html</link>
<text>约翰·D·卡马克二世（John D. Carmack II，1970年8月20日－），是美国著名的电玩游戏设计开发者、著名的游戏设计公司id Software的创始人之一，id是一家专门开发电子游戏、电视游戏的公司，成立于1991年。卡马克同时还是一位开源软件运动的积极倡导者。如果你问比尔.盖茨，“你最欣赏的程序员有哪些？”，在他的回答中，肯定会出现John Carmack(卡马克)的名字。没错，John Carmack   在程序员中的崇拜程度，甚至到了无以为加的地步，   他设计出了游戏史上最强大的3D引擎，30岁时就步入了美国互动艺术设计名人堂。微软在很多问题都非常尊重他的意见，甚至展示Windows 95   多媒体应用的3D演示程序就是使用他设计的引擎。另外他还是个超级游戏设计师和王牌玩家，冲动而富有激情和感染力  ，正是因为对游戏的热爱，他才始终保持自己游戏开发者的本质，并不断改进自己所从事的产业。作为年轻一代，John Carmack是典型的美国梦样版，他用自己的热情点燃了一种新的艺术形式、一种文化现象，并在商业上获得巨大成功。他的经历使自己成为叛逆的偶像，他既是计算机黑客，同时也名列《财富》杂志（Fortune）评选的500佳企业管理者；他被誉为游戏界的列侬（Lennon）  ，其实他自己更乐于被看作金属乐队（Metallica）的成员。中国人都挺欣赏做好事不留名的雷锋作风，也许对于我们很多读者来说，都玩过John Carmack 设计的游戏，却并不知道这款游戏就是他所设计的。如果我提起id Software 公司，提起它所开发的游戏：Commander Keen 1-6，Hovertank，Catacomb Abyss 3D，Wolfenstein 3D&amp;amp;Spear Of Destiny，Doom毁灭战士，Doom2，Heretic异教徒,Hexen巫术 ，Quake雷神之锤,Hexen 2，Quake 2，Quake 3 Arena雷神竞技场，Return To Castle Wolfenstein重返德军总部，未来还有Doom3和Quake 4&amp;amp;Speculation 。其中Doom2 ，Quake 3 Arena，Return To Castle Wolfenstein &amp;nbsp;是多么清晰而又亲切的名字呀，后两者更是现在媒体硬件评测室评测主板、显示卡、处理器等的标准配置，可见此公司在游戏界和IT业界中的地位。卡马克成长于美国堪萨斯城中心区的一个家庭，早年就对电脑产生了浓厚的兴趣。他后来从肖尼东高中毕业，随后考入了堪萨斯城的密苏里州州立大学。但是在两个学期之后，他从学校退学了，成为了一名自由程序员。位于路易斯安那州什里夫波特的磁片公司（Softdisk）不久后聘请了卡马克，和他一起工作的还有未来一同创立id Software的约翰·罗梅洛（John Romero）和阿德里安·卡马克（Adrian Carmack）（他和约翰卡马克没有亲戚关系）。在软盘公司的日子里面，他们一同开发了第一个游戏《指挥官基恩》（Commander Keen），并且由Apogee Software在1991年发行了作为共享软件销售的后续版本。之后不久，卡马克离开了该公司，创立了id Software。卡马克最让人咋舌的冒险就是涉足了第一人称射击游戏领域。他的编程能力毫无保留的体现了出来，随后的《德军总部3D》（Wolfenstein 3D）、《毁灭战士》（Doom）和《雷神之锤》（Quake）就是最好的佐证。这些游戏和它们的后续版本都取得了巨大的成功。最让人震撼的是，如此权威和有能耐的id Software 公司，却仅有十几号人，但就是十几个人，却单枪皮马开辟了自己的辉煌，创造了Doom、Quake 这些不可一世的名字，让整个世界都为之动容。他们用自己的暴力美学颠覆了整个游戏界，前所未有的3D环境，纯粹的血腥感和压迫感夹杂着嬉皮式的黑色幽默，强烈华丽的画面给玩家兴奋 得难以形容的体验，是以往游戏中从未有过的。卡马克喜欢在电脑图像领域尝试新的技术，比如他在Doom上第一次使用了二叉树分区技术，表面缓存技术则在Quake中第一次出现。还有就是后来在Doom3里面使用的“卡马克反转”（即shadow volume的z-fail方法。事实上并不是卡马克首先创新了这个技术，他在后来独立研究出来。）。卡马克创造的游戏引擎被用来制作其他的第一人称射击游戏，比如《半条命》（Half-life）和《荣誉勋章》（Medal of Honor）。在2007年苹果全球开发者会议（WWDC, Apple Worldwide Developers Conference）上，Carmack宣布了id Tech 5，它实际上消除了过去对美工和设计人员的纹理内存限制，允许在像素级别上对整个游戏世界实现独特的定制设计，并提供了几乎无限的视觉真实性。&quot;该技术可以允许&quot;广袤的户外场景，而室内场景则具有前所未见的艺术细节。曾经听到一个游戏玩家说，“John Carmack，我爱死他了”，这句话出自一个男人之  口，未免让我感到非常吃惊，但是如果你亲自了解John   Carmack   的成长道路和经历，火热的激情和无私的奉献，铸就游戏帝国，颠覆主流文化的故事后，就会因玩家说出这样的话感到理所当然了。在接下来几天的文章里，我会依次跟大家分享John   Carmack学生时代的经历，对商业和游戏的看法，游戏技术，当然还有大家都热切关注的Doom3和他的人生态度与理想等等丰富、精彩、绝伦的内容。Id Software 和John Carmack   几乎是如彗星般崛起的传奇故事，他在创造历史，几乎以一己之力，推动整个游戏产业，甚至计算机图形硬件产业的发展。我们都知道，Doom，Quake   这些名字，在21世纪90年代究竟意味着什么?在Doom 发布的时候，John Carmack 曾经说过，我要降低整个美国的国民生产效率，事实的确也是这样。记得Doom   发布的日子是在圣诞节前夜，父母在为孩子准备礼物的时候，其实孩子们已经得到了他们最想要的东西--一份Doom 的拷贝。&amp;nbsp;图 Doom3 在E3展会游戏程序设计师追求的是运算速度与丰富的功能，更精美的画面和更好的游戏体验。高水平的程序设计技巧使得图形运算速度足够快，可以表现出复杂、华丽的图形效果。根据John Carmack自己的看法，他是个因为游戏娱乐而开发游戏的程序员，对技术和电子游戏怀有无尽的激情与热爱。由于对技术的不断追求创新，而成了程序设计水平不断跃升的催化剂；对电子游戏的热爱则成了优秀游戏设计的灵感之源。毫无疑问，John Carmack 因为对于游戏娱乐的狂热，而不断地对技术进行改进，游戏引擎的设计水平不断提升，造就了令人惊异的华丽图形效果和令人如痴如醉的玩耍乐趣，领引了一场3D游戏的革命。图 恐怖、血腥的游戏体验 作为创造了3D游戏鼻祖的John Carmack   ，也许他的工作和生活是最不为人所知的，桀骜不训、长发披肩、年轻、独立，永远的T-Shirt和膝盖上烂了个洞的牛仔裤，并且喜欢摇滚乐。作为天才的程序员，John   Carmack和比尔盖茨有着惊人的相似之处，在大学没有读完就辍学了，但原因并非因为想创业，而是不满意大学里面的教授。他曾经说过，最讨厌大学里面填鸭子式的教学，“那些教授为什么不给些项目我们做呢？他给我们一个项目，想做成怎么样，我们就一定做到”。终于最后他忍无可忍，在两个学期后就退学了，为此，他的父母也和他产生了隔阂。卡马克是一个众人皆知的开源软件的倡导者，他也再三强调反对“软件专利”，但是他一直处于势单力孤的状态。卡马克在1995年放出了德军总部3D的源代码，之后的1997年又放出了毁灭战士的代码。1996年时候，他放出了雷神之锤的源代码，Quake社区中的一名不太出名的程序员将其改写成了Linux版本，并且将修改后的游戏发给了卡马克。卡马克没有认为这是侵权行为然后付诸法律，而是要求id Software的员工们用这个补丁作为雷神之锤linux版本的基础。id Software在后来的日子里也同样公布了雷神之锤II的代码，雷神之锤III的代码也于2005年8月19日公布，这些代码的公布全遵循了GPL准则。毁灭战士的代码也使用GPL准则在1999年重新公布。卡马克在慈善事业方面的贡献以及对游戏社区的关心也同样出名。一个以卡马克名字命名的基金用来资助他的母校（高中）、开源软件的倡导者、游戏专利的反对者和热心的玩家。1997年，他把他的一辆法拉利跑车作为奖品，送给了一次雷神之锤比赛“赤色全歼(Red Annihilation)”的胜利者——丹尼斯·方(Dennis Fong)。卡马克不仅仅是一个3D图像领域的程序员，他还爱好火箭发射器，并成立了名为犰狳宇航（Armadillo Aerospace）的私人研发团队。1996年QuakeCon举办的时候，卡马克在他的办公室遇见了凯瑟琳·安娜·康（Katherine Anna Kang）。他们在2000年1月结婚，他们的儿子克里斯托弗·赖安（Christopher Ryan）于2004年8月13日诞生。卡马克自己有一个博客（以前叫.plan），他会时不时的在上面留言。1999年，卡马克登上了美国时代杂志评选出来的科技领域50大影响力人物榜单，并且名列第10位。2001年4月22日，卡马克成为第四位进入互动艺术和科学学院名人堂的人物，以表彰他在电子游戏和电视游戏领域所作出的杰出贡献。第一个拥有这个荣誉的人是任天堂公司的日本人宫本茂（Shigeru Miyamoto）。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 14:26:28</pubDate>
</item>
<item>
<title>经典游戏Doom3诞生的台前幕后</title>
<link>http://oss.org.cn/html/65/n-61465.html</link>
<text>　　整整四年过去了，但毕竟Doom系列电脑游戏的创造者们终于还是完成了这次更高层次的挑战。　　Doom 3（毁灭战士3）是自称3D动作游戏发明者的Id Software公司的一个续作，将于本周内摆上北美的货架，并且将很快送抵世界其余各地。　　Id公司的首席执行官Todd Hollenshead和首席设计师Tim Willits都在出访欧洲和亚洲，参加各种会议并推销这款游戏，但Id公司创办人之一，高深莫测的约翰－卡马克(John Carmack)决定留在德州Mesquite的总部，躲在幕后。这样的宣传之旅并不适合他。　　“某些程序员面对传媒时可以应付自如”，本月年将34岁的卡马克在接受电话访问时说，“我只喜欢坐在这，编编程序”。　　　　　　　　　　　　　　　　　卡马克和Doom 3中的一个角色模型　　在过去十多年中，正是卡马克的编程技术在引领电脑绘制逼真的环境及人物时取得了一连串的突破，让那些电脑角色在三维空间内移动以及相互交流时显得是如此的逼真。许多人都说，如果没有他的创新，很难想像那些在1991年春推出的先驱性第一人称射击游戏（First Person Shooter；FPS），例如Id公司的德军总部3D等会是个什么模样。他的其他为人称许的功绩还有为多角色游戏的发展铺平道路以及将自己的源程序向玩家公开，让他们可以对游戏进行修改。　　“他是一个天才，一个很少见的人”，Nvidia公司的营销执行副总裁Dan Vivoli这样评价卡马克，“我们开发硬件以支持他希望在游戏中包含的特性，他会将游戏的视觉效果引领到一个新的层次”。　　例如，Nvidia公司目前推出的第六代系列PC图形卡就有专为“卡马克想要的东西”而设计的功能，也就是说，这些功能让个人电脑用户能从将来其游戏引擎也可能授权给其他游戏开发商的Doom 3及其续集产品中获得最大的乐趣。游戏引擎，亦即定义游戏如何进行的核心程序代码同时也大体上定义了一个游戏。已经大大改善的游戏引擎让视频游戏从街机游戏厅进入了千家万户。　　卡马克将自己的时间一部分放在Id，另一部分用于设计和建造火箭，用于参加一个私人赞助的载人火箭升空比赛。　　创造性是他最受开发者，游戏玩家及业界人士所称赞的东西，但这个大学辍学生说话经常象在参加高等物理学位答辩一样，经常都不愿谈论自己的成就。“我并没有想太多这些”，他说。“我们用3D技术表现动作，我们大约领先业界一到三年，但其他人最终也会达到同样的境界”。　　　　Id公司共推出了三种获利丰厚，并且影响深远的专利游戏：1992年的德军总部3D，1993年的Doom和1994年的Doom II，以及1996年的Quake（雷神之锤）系列。　　市场研究企业GartnerG2的副总裁Van Baker表示，在卡马克带领下的Id公司的成功历史给了这家公司目前在业界越来越罕见的自由度，不至于因为一次的失败就让企业倒闭。　　Id的游戏一直都是市场成功者，这也让人们对它的每一个续集都抱有很大的期望。“我认为Id推出每一个游戏都是大事件”，GameSpy.com的高级游戏编辑Sal Accardo说，“他们的游戏总是包含一些让玩家可以干些很酷的事的新技术和功能”。　　但是大部分的游戏开发者就没有卡马克那么幸运了，“随着游戏开发成本的不断上升，对创新性的限制越来越多，因为出版商不愿意为一些全新的项目冒险投资，风险太高了”，Van Baker说。　　电影工作室可以将票房收入不佳的电影通过DVD的销售和出租来补充影片拍摄的成本，但是一个不成功的游戏除了折价抛售外没别的出路，出版商只能自行吞下可能高达几百万美元的开发费用。　　卡马克表示最初的Doom游戏只花了五六个人不到一年的时间开发，成本不足100万美元，对比之下，Doom 3共花了25个人四年时间以及高达1400万美元的开发成本。　　在这样一个风险如此高的行业环境内，一个很公开的问题是未来还会不会有将卡马克这样的人物出现。　　　Hollenshead透露，为了完成这项计划，Doom 3的开发团队今年从一月到六月中，每周工作80个小时，只有星期天能休息。Id Software的风格是从不说明准确推出日期，一路对热心的游戏玩家及媒体都是一句话“在该完成的时候就会完成”，直到上个月为止。　　　卡马克承认已将游戏的部分编程工作交给公司内的其他工程师，“我已经不像以前那样做太多的工作了”，他说，“从前，我要保证游戏的稳定运行，当时的开发流程和现在很不同。”　　和从前一样，这个游戏把玩家放在一个幽深的火星研究基地，玩家必须在仿佛来自地狱的由于失败的科学实验制造出来的怪物堆中杀出一条血路。卡马克表示，这次的游戏节奏有意放得很慢，这样玩家可以更好的欣赏Doom 3的故事情节和丰富的视觉效果。　　“这次在你身边的怪物比从前更多”，他在谈论这个游戏时说，“不断地有情节发生，可不要只顾着逃跑”。</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-08-05 14:02:29</pubDate>
</item>
<item>
<title>非线性视频编辑器PITIVI发布0.15版 安装使用方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61464</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-02 10:42:11</pubDate>
</item>
<item>
<title>经典游戏”毁灭战士“ - Doom 3 源代码即将开放</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61463</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-02 11:44:11</pubDate>
</item>
<item>
<title>Linux基金会发起OpenMAMA项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61462</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-02 12:19:11</pubDate>
</item>
<item>
<title>Ubuntu 12.04将使用全新的可更换主题的登录界面</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61461</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-02 12:31:11</pubDate>
</item>
<item>
<title>代码索引阅读工具LXR服务设置指南</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61460</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-02 09:52:11</pubDate>
</item>
<item>
<title>如何使LXR索引的代码在线阅读时语法高亮显示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61459</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-01 07:55:11</pubDate>
</item>
<item>
<title>Linux基金会宣布LTSI消费电子产品长期稳定内核项目</title>
<link>http://oss.org.cn/html/58/n-61458.html</link>
<text>来自LF官网，Linux 基金会宣布为加速 Linux 的发展，将管理一个消费电子工作组（CE workgroup）发起的新项目。
该项目，即 LTSI（ Long Term Support Initiative ），提供合适的 Linux 内核，对于消费电子产品的生命周期提供支持，以及2年内版本的常规更新。新的内核树将致力于解决消费电子制造商对于内核常规更新和长期支持的需求。
LTSI 是个跨行业项目，支持者包括日立， LG Electronics, NEC, 松下， Qualcomm Atheros, 
Renesas Electronics Corporation,三星电子， 索尼和 Toshiba ，托管于 Linux 基金会，来维护通用的 
Linux 
内核，服务于各类消费电子产品。该项目创建并维护一个长期新的内核树，被期望于高质量、长期稳定，并配合消费电子的生命周期，一般为2-3年。</text>
<image />
<source>http://oss.org.cn</source>
<author>ungo</author>
<pubDate>2011-11-02 10:20:56</pubDate>
</item>
<item>
<title>美专家惊叹“中国芯”超级计算机</title>
<link>http://oss.org.cn/html/57/n-61457.html</link>
<text>美专家惊叹“中国芯”超级计算机

来源：新浪科技&amp;nbsp; &amp;nbsp;作者：萧然 




神威蓝光超级计算机系统

国内第一款自主研制的64位通用16核处理器申威1600 (SW1600)
10月31日上午消息，2011年中国高性能计算机TOP100排行榜日前发布，排名第二的神威蓝光(Sunway BlueLight MPP)因为全部采用国产CPU (SW1600)受到外界关注。
据悉，神威蓝光获得科技部863计划支持，由国家并行计算机工程技术研究中心制造，是国内首台全部采用国产CPU (SW1600)的千万亿次计算机系统。
神威蓝光全系统共8704个CPU，峰值1.07016PFlops，持续性能795.9TFlops， Linpack效率74.37%，总功耗1074KW。神威蓝光的诞生标志着我国成为继美国、日本之后第三个能够采用自主CPU构建千万亿次计算机的国家。
同时，以国产CPU为基础制造出本国第一台超级计算机神威蓝光也引起美国高性能计算专家的关注。世界超级计算机TOP 500项目领导者、美国田纳西大学计算机科学家杰克·唐戛拉对中国专家能用自主设计的CPU搭建千万亿次超级计算机感到吃惊，并对比了中国的天河用的是美国企业制造的CPU芯片和自己的网络，日本的K系统的CPU芯片是基于美国的SUN sparc，他同时对神威蓝光的低功耗很感兴趣。
关于神威蓝光超级计算机采用的液冷系统，总部设在得克萨斯州理查森的Convey超级计算机公司首席科学家史蒂文·沃勒克说：“用好这种冷却技术非常、非常困难。因此我认为，这是一项严谨的设计。这项冷却技术有可能扩展至百万万亿级的超级计算机。”</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-02 09:16:07</pubDate>
</item>
<item>
<title>MySQL分支版本 MySQL/Galera 集群系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61413</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2011-11-01 16:31:11</pubDate>
</item>
<item>
<title>【论坛主题演讲系列】关于对RepOSS的介绍</title>
<link>http://oss.org.cn/html/12/n-61412.html</link>
<text>关于对RepOSS（开源软件成熟度评估分析管理库）的介绍
演讲人：伊达政広（日本）
伊达政広：大家好，我是富士通在WG3工作组的伊达政広，今天我想向大家介绍我们第三工作组组当中的Reposs，我想给大家介绍一下我们这个软件仓库。首先是背景，大家知道我们OSS是世界的信息设备当中已经非常普遍的装载了OSS，作为我们整个的OSS开发最具有代表的一共有26万多个项目，我们差不多有270万的程序员每天在进行这方面的开发工作，在这当中大家知道首先我们会使用巨大的OSS资源，所以现在已经成为我们世界的一个潮流。比如说我们讲到OSS，我们对一个社区提供整个信息的话，可能总是收集不上来，或者是我们需要对一些具体的软件应用进行评估，所以对于这样的需求，我们现在在全世界范围内广泛的进行各种各样的OSS方面的调查研究，但是大家知道OSS以前的专家来讲，他们产品开发的品质或者稳定性、可靠性，或者包括我们的一些限制，这些东西我们受到了各种各样因素的制约，所以在这当中，我们对于这些问题就想进行评估，来推动我们在OSS方面的使用和普及。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 所以我们对于这些需求，特别是以欧美为中心大家提供了各种各样的解决方法，比如说具有代表性的一共有这五个，我们有一个评估方法，所以我们对OSS进行评估，通过不一样的评估方式，我们会发现有不一样的结果，特别是我们找到比较有代表性的就是这三个，分别是OpenBRR、QSOS、OMM，主要是这三方面，我们发现有很多论文和研究，翻译来讲每个情况他们都在某一方面受到了好评，所以我们看到所有的评估模式几乎都是使用这样一种方式，这个稍微有一点难。
&amp;nbsp;

&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; OSS的整个信息会有一个修正比例，包括下载的数量、次数，各种各样的设置，我们可以通过这些属性的配制来进行分析，哪一个是比较重要的，我们给它进行整个的主观的权重的分配，最后再从它的成熟度进行分析，我们要从什么样的角度，怎么样对它进行客观有效的评估呢？我们一直在讨论，没有得到很好的方法，我们会发现由于模式的不同，我们得到的结果也不一样，比如说我们讲属性当中的下载次数，由于跟临界有关系或者游览器的方式不一样，包括CRI等等各种各样的下载的方式都不一样，比如说一个月下载20万次，或者是通过这些东西来下载有更多次数，所以我们不能够囊括所有领域中的下载次数，所以我们发现这个是做不到的。
&amp;nbsp;

&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们从Property当中讲，我们想进行一个主观评价的话，，由于我们整个的评价方式不一样，它整个就也不稳定，会发现出现不同，我们必须要进行各方面的合作，通过这样和社区进行交流，比如说社区它的评价和第三方的评价也会不同，所以这是我们面临的课题。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们总结一下，比如我们用同样一个方程式去进行评估，我们几乎用同样的属性去做，但由于每一个权重都不一样，还有评估员主观得出来的看法，所以我们的结果是不一样，即使我们使用同一种模式去评估，我们是不是做的很好统一、正确，是不是有主观性的干扰，这些我们得到的结论都会不同，所以简单来说结果就是我们现在在世界上还没有存在统一的标准。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 在这样一个背景下，我们做了什么样的尝试，那就是Reposs，我想下面向大家进行一个简要的介绍。首先由于没有标准的环境当中，我们要开发一个相对来讲比较灵活的评估，我们要进行定量、有效的分析，不需要主观性的干扰或者工作上的误差，除此之外由于我们现在的速度发展比较快，变化比较迅速，所以我们应该是用OpenBRR来进行，从我们的属性上来讲，首先第一个我们要用比较客观的信息，这是比较灵活的，可能不太好理解，首先我们从Reposs收集客观的信息，然后评估圆对它进行评估，每一个人做自己的分析，同时我们也可以用我们的分析软件进行分析，就得到这种OSS的所谓评估，我们在巨量大的OSS方式下，怎么样先给它进行归类再进行选择，我们在所有的OSS上面，我们收集最后再进行评估。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 我们在所有的归类工作当中，韩国政府TRM分了五大类，十八个小类，基本上有105个详细的分类，所以我们给它进行了这样的归类。我们所有的属性大家知道，就是刚才我向大家介绍的观点，一定是个比较官方的或者比较公共的网站上获取的资料，所以必须看到我们获取的信息是从什么样的地方获取，是不是比较公开的、公共的资源，另外是不是可以定量进行分析，所以这里面非常重要的就是谁来收集的信息，这个是非常重要的。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 在评价上面我们来看我们所收集的信息当中，首先我们可以简单的进行链接，然后发布给大家看，除此之外我们也可以让各种各样不同的方式来进行评价，比如说我们可以使用其它的一些评估模式把它放在一起进行评估，这就是我们数据库所累计的各种各样的信息，然后进行分析的，所以我们所有的都采用的OSS系统。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个我重申一次，我们整个的重点就是可以简单的使用，第一要简单，第二我们可以用几个简单分析的工具来进行客观有效的，对于商业比较有效的分析，我们之前有很多分析的样例，或者之前我们对数据有这么多的例子，我们就可以把制作这个数据的收集手册，然后再把它公开来，这样我们就可以向大家提供一个相对比较开源的资源。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 这是比较详细的东西，OpenBRR所谓的OpenBRR它是要进行自己属性的定义，我们对它所有的定义，在我们OpenBRR当中比较重要的属性在哪里，这是我们告诉大家怎么样使用的指引手册，只要使用这个指引手册你就可以通过OpenBRR进行评估。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 下面是我们进一步分析的数据，比如说我们有很多OSS软件，我们就把它分成OSSA和OSSB，我想看到底它是属于A还是属于B的，从修正率上分的话，可能A错误的修正率会比较高，但是我们看它的错误数为五万左右，我们来看B，可能这个修正率比较低，然后它的错误数是800，再下面一个我们看OSS它已经出了10年了，所以它每个月平均是300，B平均是21，所以我们在整个开发规模上讲，OSSA它从5兆级去进行，但是OSSB是50万级，所以这样的话，我们就发现OSS A差不多是每一个月是0.072，OSSB每个月是0.079，这样的话，多少我们有些人说我特别喜欢错误，可能大家会选择B。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 在我们整个的Reposs当中还有关于Licenses研究，这当中有所记载的OSS Licenses，我们要看OSS Licenses有没有符合标准，从刚才我们的路线图上讲，我给大家讲了我们要先进行定义，然后持续的进行，现在已经做到了200多个，然后我们现在接着做Licenses这些东西，我们希望在明年可以对外公开。我再向大家介绍一下，这是我们WG3的主要成员，我们Reposs的主要负责人，我想请他下面给我们进行一下演示。
我是Hiramatsu
&amp;nbsp;&amp;nbsp;&amp;nbsp; 大家好，我是WG3的工作人员，我们在上午的讲话当中，包括伊达政広先生的讲话当中，都有涉及我们整个Reposs系统，我想用实际的画面向大家介绍一下我们整个系统的情况，首先在系统当中我们有个OSS一览画面，我们可以在每个OSS种类下面将所有正在收集当中的属性信息进行OSS分类，在这里可以指定某一个具体的数据的名称放进去，就可以进行检索了，我们整个的画面就可以从品质等等各方面我们都有每一个不同的种类，通过我们所要进行评估的最主要的目标，我们就可以按照我们的目标去进行一一的分析，进行客观的评估，比如说我们对于下载的数量，或者是的数量，是不是已经获取了Licenses，我们都可以按照这样的方式去检索，然后得到相关的数据。
&amp;nbsp;

&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里面包括它的编程语言，或者通过Licenses的名称或者分类我们就可以进行各种检索，最后我们还可以知道每一项的统计数据，现在我们一共有11种统计数据的图表，这个刚才在伊达政広先生讲话当中也有这个图表，这个是关于Licenses方面的图表，比如某一个OSS，它主要遵循Licenses，现在在这个数据当中Licenses占到半数以上。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个数据是我们在网上网站数量的一个图表，比如说下载数量或者是网站数量，这些方面都是在OSS某一个领域当中，它所发挥的特长，我们都可以通过不同的领域进行搜索和分析，然后我们可以得到这样一个图象。
&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个是错误数和原代码数，这是它们之间相互关系的图表，我们也可以通过这个图表了解错误数和原代码之间相关的数据，这样的图表一共有11种，我们可以通过这种方式向大家提供整体角度来分析方法，这样更加有利于我们进行客观的评估，以上就是我们整个系统的介绍，谢谢大家！
&amp;nbsp;
			
			
			</text>
<image />
<source>http://oss.org.cn</source>
<author>admin</author>
<pubDate>2011-11-01 15:21:29</pubDate>
</item>
<item>
<title>开源黄页 Symphony-2.0.7前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61367</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ACollab-1.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61366</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 more.groupware-0.7.4前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61365</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 WordPress-3.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61364</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ECMS帝国CMS-6.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61363</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Tellmatic-1.0.8.7前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61362</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 MiaCMS-4.9.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61361</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHPCMS-4前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61360</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHP Fusion-7.01前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61359</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 xoops-2.4.4前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61358</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 dedecms-55前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61357</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 deepthroat-4.01前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61356</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Zikula-1.2.3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61355</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ImpressCMS-1.2.1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61354</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 SilverStripe-2.4.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61353</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PrestaShop-1.2.5前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61352</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 MvMmall-5.5.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61351</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ECMall-2.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61350</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PmWiki-2.2.6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61349</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 MyBB-1.4.11前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61348</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 MyBB-1.4.11前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61347</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Dokeos-1.8.6.1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61346</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Zikula-1.2.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61345</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Claroline-1.9.3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61344</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Drupal-6.16前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61343</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 e107-0.7.20前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61342</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Mambo-5.5.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61341</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 concrete5-4.0.5前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61340</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHP168-6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61339</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PivotX2.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61338</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ShopNC-6.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61337</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Zen-Cart-1.3.8前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61336</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ilias-4.0.1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61335</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 SMF-1.1.10前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61334</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 OpenCart-1.3.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61333</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 ThinkSNS-1.6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61332</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 SnipSnap-1.0b3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61331</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 wikka-0.12前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61330</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Instiki-0.17前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61329</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHPdtbv1.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61328</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Oddmuse前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61327</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 WebShare 0.6.5 前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61326</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 AjaXplorer 2.5.2 前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61325</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 WebShare 0.6.5 前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61324</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Habari-0.6.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61323</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHPizabi-1.0前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61322</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 SilverStripe-2.3.3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61321</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 PHPizabi-0.848bc1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61320</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 dokuwiki-2009-02-14前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61319</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 elgg1.5前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61318</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Wikiwig 5.01前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61317</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 Laconica 0.8前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61316</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页 MediaWiki1.15.1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61315</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网OpenCRX 2.5前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61314</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网SugarCRM 5.2前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61313</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网vtigercrm 5.0.4前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61312</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网XRMS 1.99.2前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61311</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网c3crm 3.2.1前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61310</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网wordpress 2.8前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61309</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网nucleus 3.4.1前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61308</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网b2evolution 2.4.7前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61307</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网Lifetype 1.2.8前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61306</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网bblog 0.7.6前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61305</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网Textpattern 4.0.8前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61304</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网Typecho 0.6前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61303</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网Movable Type 4.25前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61302</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网bo-blog 2.1.1前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61301</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网sablog-x 1.6前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61300</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网Serendipity 1.4前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61299</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页concrete 5.3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61298</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页typo3 4.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61297</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页TikiWiki 3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61296</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页e107 0.7前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61295</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页MiaCMS 4.8前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61294</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页PHP Fusion 6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61293</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页bbpress 0.9前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61292</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页Zikula 1.1.1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61291</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页toendacms 2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61290</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页Pligg 1前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61289</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页CuteNews 1.4.6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61288</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页Atutor 1.6.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61287</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页eyeOS 1.9前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61286</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页GuppY 4.6.9前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61285</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页JTBC 1.0.0.5前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61284</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源黄页网cmsware 2.7前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61283</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PostNuke 0.764前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61282</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>php168整站系统5前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61281</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ImpressCMS 1.1.2前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61280</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>深喉shlcms前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61279</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>HBCMS1.7前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61278</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>帝国CMS前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61277</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>织梦CMS5.3前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61276</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHPCMS2008前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61275</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MODx 0.9.6前台体验</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61274</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP-NUKE8前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61273</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>CMS Made Simple前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61272</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>UChome1.5前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61271</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Discuz!7.0前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61270</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>XOOPS 2.3前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61269</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Joomla!-1.5前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61268</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mambo 4.6.1 前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61267</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHPWind-7.3前台演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61266</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Drupal 6.10 演示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61265</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>苹果无损音乐格式Apple Lossless宣告开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61264</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google将JavaScript代码覆盖分析工具 ScriptCover 开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61263</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>用于操作图片的PHP类库 – Imagine</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61262</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源Git仓库管理应用 – GitLab</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61261</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MeeGo开始转向Tizen泰泽项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61260</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>台湾客直击挪威Opera 总部办公室</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61259</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Usergrid: 用于移动和富客户端应用数据管理的新开源平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61258</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>一个老外的抱怨：受够了Linux，最终重拾windows</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61257</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux下5款即时战略游戏</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61256</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>简单的社交网络登录/登出统一接口服务 – OneAll</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61255</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>带有下拉列表支持的Google+ 式样的按钮模板</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61254</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google 推出 JavaScript 测试工具 Google JS Test</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61253</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>查看ODF文档的JS库 – WebODF</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61252</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于PHP的开源问题/回答系统（Q&amp;A App）：Coordino</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61251</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ubuntu下的拼音输入法：ibus-pinyin</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61250</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Kivy – 极具创新的开源跨平台用户界面接口库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61249</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>云计算的Web开发平台 - Opa</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61248</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>比较HTML5射频播放器的好网站：VideoSWS</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61247</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>一个漂亮的Apache Auto_Index模板 - h5ai</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61246</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源的Google Reader替代Web工具 - Tiny Tiny RSS</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61245</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>linux 下的新锐音乐播放器 clementine</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61244</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Joshfire: 跨多种设备的Web应用开发框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61243</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Meego可能要改名，大家拭目以待</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61242</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Gitalist – 开源的Git仓库查看工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61241</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu Linux 的视频转换工具：Arista Transcoder</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61240</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>新版雷鸟5（Thunderbird）的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61239</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Oracle将OpenOffice捐赠给Apache基金会</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61238</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Zebra_Form - 创建和验证Web表格的PHP库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61237</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>纯JavaScript MP3 解码器 – jsmad</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61236</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox频繁升级策略将导致用户流失</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61235</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于Subversion的社会化代码开发管理服务工具 – uberSVN</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61234</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>SearchBlox – 功能强大，开源免费的搜索服务软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61233</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>HeidiSQL – 开源 MySQL &amp; MSSQL 数据库管理工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61232</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>drupal,joomla!和dedecms等主流cms中，哪一款适合你</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61231</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>通过对比选择最佳开源的基于Web的项目管理工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61230</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MyDB Studio：免费的MySQL数据库管理工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61229</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Projectfork：基于Joomla的项目管理系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61228</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Easy Basket - 可以集成在任何网站中的免费 Ajax 购物车模块</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61227</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>用7-Zip，代替收费的Winrar和Winzip</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61226</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>新浪发布免费开源的微博系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61225</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>G5 – 构造HTML5网站的框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61224</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>FlashFirebug – 一个调试AS3 Flash文件的Firefox扩展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61223</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHPDevShell: 快速开发PHP应用的后台管理模块</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61222</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐一个同时支持桌面、移动、平板浏览器的灵活的CSS框架 – inuit.css</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61221</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Avactis 电子商务平台提供免费版本</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61220</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Speakker – 一个出色的HTML5音频播放器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61219</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于PHP开发的开源分类信息显示应用: OSClass</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61218</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Skitter – 基于jQuery超级酷炫的图片展示插件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61217</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>AceProject: 基于WEB功能强大的项目管理软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61216</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Maqetta – 用于在线创建HTML5界面的开源所见即所得编辑器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61215</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Bricolage: 使用Perl开发的强大的CMS建站工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61214</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>15款提高表格操作的jQuery插件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61213</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>一个开源的功能丰富的CMS系统 – Textpattern</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61212</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Opera发布两个开源项目OperaWatir和OperaDriver以提高网络兼容性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61211</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>介绍9个很有发展潜力的PHP开源项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61210</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>微软在Windows Phone Marketplace中禁止免费软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61209</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Canonical 依靠 OpenStack 扩展其云计算业务的羽翼</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61208</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Fedora, openSUSE 或将暂时放弃在新版本中使用 Unity</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61207</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>最新php论坛程序介绍与比较评测大全</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61206</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla即将推出Android版火狐4</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61205</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>黑客调查：最流行JavaScript库是什么?</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61204</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>对比 OpenOffice 和 LibreOffice 办公软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61203</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>NOSQL数据库大比拼:Cassandra vs MongoDB vs CouchDB vs Redis vs Riak vs HBase【修正】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61202</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>SimpleViewer 和 ZenPhoto两款开源相册的对比</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61201</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JavaScript, AJAX树形控件大全(all kinds of TreeView Controls by JavaScript, AJAX)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61200</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>36个经典的JQuery导航菜单演示＋下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61199</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐13个 AJAX 验证框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61198</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>国内主流三大B2B建站系统测评</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61197</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>多图：Firefox 5 部分功能界面曝光</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61196</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>几款开源 PHP/FLASH/AJAX 图片管理/相册大全</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61195</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>揭开Wayland的面纱（一）：X Window的前生今世</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61194</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 决定未来将启用 Wayland X-Server</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61193</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>轻型在线办公—eyeOS_袁萌</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61192</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>免费开源的27个图片相册管理系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61191</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Maven新书推荐：《Maven实战》</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61190</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>详解 Android 3.0 最新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61189</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PDF万用工具 - Pdftk (pdf合并、分割、加密等）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61188</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>pinfo: 强大的 manpage/Texinfo 查看软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61187</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几款Linux常用的文件管理器软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61186</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>百度宣布开放其输入法的应用程序接口</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61185</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐5款优秀的开源桌面安全应用程序</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61184</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐10个热门的开源NoSQL数据库软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61183</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>2010年10个受推荐的Web操作系统（WebOS）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61182</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Jolicloud – 适合上网本的 Linux 操作系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61181</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Jolicloud OS 开源免费的新型上网本操作系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61180</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>10个值得推荐的Web操作系统（WebOS）介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61179</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>做自己的&quot;围脖&quot;七大开源微博系统分享</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61178</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>TrueCrypt挂载windows下创建的加密盘</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61177</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>UNIX/Linux的传奇历史</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61176</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>百度JavaScript项目tangram开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61175</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几款免费开源的数据挖掘软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61174</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>支付宝发布Linux版安全控件,并新增iPhone无控件登录</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61173</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>2010年十大最佳jQuery插件揭晓</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61172</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery成为最受欢迎JavaScript库的12大理由</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61171</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>金山“开源”：互联网安全的大同理想</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61170</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>FTK，RT-Thread宣布合并</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61169</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>国内号称开源程序是真的开源吗？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61168</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu One公开Windows客户端的测试版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61167</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>天涯推出开源key-list类型内存数据引擎 — Memlink</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61165</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Red Hat Enterprise Linux 6 下载、安装及使用报告</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61164</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ExtJs学习系列(5)--Ext.TabPanel</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61163</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ExtJs学习系列(4)--Ext.FormPanel</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61162</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ExtJs学习系列(3)--Ext.Window</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61161</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ExtJs学习系列(2)--Ext.Panel</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61160</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ExtJs学习系列(1)--Ext.MessageBox</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61159</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源软件代码托管服务（网站/项目）比较</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61158</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几个多项目协同开发平台管理软件（类sourceforge，googlecode）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61157</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 11.04放弃GNOME Shell采用新界面Unity</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61156</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开发者谈Symbian、iPhone、Android、MeeGo平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61155</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>红旗发布开源云计算方案框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61154</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 将更多的支持和使用 Qt 框架进行软件开发</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61153</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>诺基亚宣布Qt为Symbian和MeeGo唯一开发环境</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61152</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>COOoder — OpenOffice.org插入代码高亮显示扩展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61151</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Apache Cayenne 3.0支持远程对象持久化和ORM建模工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61150</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Atlassian收购代码托管协作(Mercurial)站点Bitbucket.org</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61149</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MySQL 5.5新特性详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61148</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>IE9 对HTML5/CSS3的支持大进步，仍有猫腻</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61147</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenOffice社区正式推出分支--办公套件LibreOffice</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61146</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>国外最流行的PHP MVC框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61145</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>为WEB开发者推荐8款基于 jQuery 和 Ajax 的标签云</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61144</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>简单的jQuery标签页Simple Tabs w（使用CSS及JQuery）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61143</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP中的高性能框架 - YII框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61142</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几个轻量级 PHP Framework 框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61141</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>HTML5 特性的检测工具：Modernizr</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61140</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用Modernizr检测浏览器HTML5兼容性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61139</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>机器学习开源项目Mahout 0.3的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61138</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenNebula Vs Eculayptus</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61137</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源云计算平台 OpenNEbula 介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61136</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>五款流行的开源云计算管理工具推荐</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61135</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Rackspace 联手 NASA 推云计算API(OpenStack)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61134</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源的云计算API受人瞩目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61133</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>国产开源访问控制权限管理中间件Ralasafe介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61132</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ehcache 2.2支持TB级缓存与LDAP认证</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61131</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Nokia基于EPL协议向Symbian基金会捐献手机版Java运行时系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61130</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>编程利器—splint静态代码检查工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61129</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源静态代码检测工具Splint</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61128</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源测试工具介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61127</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源测试工具/社区(Selenium /OpenQA.org)介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61126</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐15个最好的免费/开源电子商务平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61125</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>如何在Android中使用PHP</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61124</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Apache软件基金会选举新一届理事会[附名单/相片]</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61123</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>静态代码分析工具汇总</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61122</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 4 beta 1发布—前端开发者须知</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61121</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MeeGo系统预热中国，相关手机年内推出</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61120</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Red Hat投资开源BI公司JasperSoft</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61119</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>HTML 5案例研究：noVNC使用WebSockets、Canvas与JavaScript构建VNC客户端</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61118</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>《开源中国》电子季刊2010年第2期发布，关注开源许可</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61117</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Gmail将要拥抱HTML 5，并开发更多浏览器新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61116</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MemBase - NoSQL家族的一个新的重量级的成员</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61115</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Windows下最好的开源刻录软件InfraRecorder中文版，堪比Nero</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61114</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Windows环境下开源分布式代码版本管理工具的比较与选择</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61113</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery Pop-up Multiple Selection 弹出式多选窗</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61112</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>专门烧录光盘镜像软件 Imgburn 的一些专业特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61111</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>消息称 PHP 5.4 将引入PHP-FPM nginx</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61110</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Vermis – 基于WEB的开源问题跟踪和项目管理工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61109</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>三款开源免费的PHP加速器：APC、eAccelerator、XCache比较</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61108</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Splashtop将与Intel继续开展基于MeeGo的合作</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61107</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐Web开发神器 Aptana 的一些亮点</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61106</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源邮件服务解决方案 iRedMail-0.6.0 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61105</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>将CouchDB作为个人数据库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61104</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MikTex+lyx - 所见即所得的TEX排版方案</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61103</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MiKTeX 优秀的Tex编辑环境</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61102</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>详解Splashtop:快速启动背后的故事</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61101</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 阅读器: Readability</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61100</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Adobe Flash Player 10.1版正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61099</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>新版开源代码质量管理工具Sonar提供项目设计与架构度量功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61098</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐10款基于Firefox平台开发的实用程序</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61097</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于web的开源企业信息门户 infoScoop 中文版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61096</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>雨林木风开源操作系统 Ylmf OS 3.0 新特性、下载</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61095</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>写在六一儿童节：老人、孩子和Linux 袁萌</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61094</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Android 2.1与2.2两代系统界面和功能比较</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61093</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Android 2.2的亮点与新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61092</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>对于未来64位的Firefox，Flash插件或将成阻碍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61091</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google基于VP8 Codec构建视频标准仍然任重道远</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61090</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>期待已久的Fedora 13 正式发布，新特性介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61089</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Splashtop Remote获CES 2011大奖</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61088</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>最棒的50个开源软件方面的博客</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61087</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>CentOS 5.5正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61086</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐15个JavaScript Web UI库</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61085</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MeeGo项目选择Btrfs作为标准的文件系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61084</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>谷歌发布开源Web安全扫描器 Skipfish</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61083</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源网络分析工具TCP Traffic Analyzer</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61082</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>禅道正式发布！BugFree正式结束！</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61081</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>《开源中国》电子季刊2010年第1期发布，关注云计算</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61080</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐11款采用采用Ajax技术的Web文件管理器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61079</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>医疗卫生行业的开源项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61078</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>NetBeans 6.9发布，带来的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61077</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenOffice.org 3.2 发布，引入众多新功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61076</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu Software Center 新增特色分类和 PPA 支持（转载）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61075</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux Mint 8 Helena KDE 新特性介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61074</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux Mint 8 “Helena” KDE 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61073</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Symbian OS开源的五大好处</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61072</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 特色扩展: Ease Link</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61071</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐22款开源的Web在线编辑器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61070</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Symbian操作系统现在彻底开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61069</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐一款基于GTK+ 的远程桌面客户端：Remmina</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61068</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>介绍Symbian系统开源平台的特性和未来发展[视频]</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61067</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几款开源图片相册管理系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61066</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐10款开源网上教学&amp;课程管理系统/E-learning</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61065</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐17款开源论坛系统/Forum Software</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61064</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几款免费的在线办公套件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61063</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>14款开源文档管理系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61062</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP拥抱Facebook HipHop促其性能飙升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61061</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>asp .net 开源CMS汇总</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61060</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Code上10个有意思的项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61059</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源数据库EnterpriseDB进入中国</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61058</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>红帽入股EnterpriseDB意欲何为</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61057</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Oracle看重Java疏远Sun Cloud</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61056</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>全景透视Oracle对Sun的未来规划</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61055</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>德国PC超过21%选择OpenOffice</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61054</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu Tweak 0.5.1发布,支持Ubuntu 10.04 Lucid</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61053</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>5款出色的 Firefox 书签管理扩展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61052</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 3.6容易崩溃的问题</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61051</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Chrome 4.0 后开始支持GreaseMonkey</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61050</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenOffice.org 3.2 新功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61049</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>丹麦采用ODF为国家标准文档格式</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61048</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Oracle + Sun 产品战略</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61047</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>eyeOS 2.0 网站发布，开放新的SVN服务器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61046</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla Weave 1.0 正式版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61045</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Bacula网络备份还原软件下载超100万</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61044</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>著名的内容管理系统Alfresco放弃GPL</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61043</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>甲骨文透露Sun的战略规划</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61042</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Apache基金会发布SpamAssassin 3.3.0</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61041</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Elementary Desktop：集成新酷软件的Linux桌面源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61040</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla尝试新的“Lorentz”开发模式</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61039</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery.org 推广网站上线</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61038</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Chrome 4.0正式发布，性能大幅提升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61037</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>QEMU-KVM 0.12.2 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61036</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefogg:轻松编码 OGG 视频</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61035</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JBOSS创始人批评“挽救MySQL”运动</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61034</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 3.6 正式发布，加入诸多新功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61033</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>多媒体制作Linux发行版Puredyne 9.10发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61032</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>firefox 扩展 Firebug 1.5发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61031</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>迪斯尼公司发布Ptex且开放源代码</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61030</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MySQL的分支MariaDB即将发布5.1正式版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61029</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>SpringSource宣布将dm Server移交给Eclipse.org</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61028</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Collection 1.0增强了对Java集合框架的支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61027</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Stack Overflow 开源 Markdown/C#</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61026</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Java 6更新，正式支持Windows 7</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61025</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jquery 1.4 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61024</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>加密因特网(转)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61023</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 3.6 速度超越 Chrome</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61022</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源邮件系统Zimbra被VMware收购，以加强其云计算战略</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61021</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu Tweak 0.5.0 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61020</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>万众瞩目！Foobar2000发布1.0正式版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61019</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>火狐中国版2010发布，全新“魔镜”服务网民</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61018</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Opera 10.5速度提升7倍，与Chrome相似</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61017</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Opera 10.5引入HTML5视频支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61016</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在线网页编辑器（富文本） CKEditor 3.1 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61015</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>WPS Office 2009 个人中文免费版 与微软Office高度兼容</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61014</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 10.04 将会提供全新的官方电子手册</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61013</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu系统增强软件 Ailurus 10.01.1 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61012</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>飞利浦MP3播放器将捆绑开源的Songbird</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61011</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenStreetMap用户量达到20万</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61010</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>MySQL创始人征集万人签名反对甲骨文收购Sun</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61009</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>IBM支持 eyeOS 或成Chrome OS最大竞争对手</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61008</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>EyeOS 2.0 将于近期发布，对抗Chrome OS</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61007</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Merge CSS 1.8发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61006</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源ZAP基于应用无线网优化的性能测试工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61005</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>厦门大学提供Gentoo镜像服务</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61004</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux版的飞信 Linux-Fetion 1.3 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61003</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>微软盯上雨林木风开源新系统,称法律很难适用</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61002</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>豆瓣开源数据存储系统BeansDB</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61001</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firebug 1.5和Firefox 3.6修正严重性能缺陷</title>
<link>http://oss.org.cn/?action-viewnews-itemid-61000</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mono引入试验性C#语言扩展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60999</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox路线图:3.6到4.0版本前瞻</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60998</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>SRWare Iron: 基于 Chromium 的网络浏览器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60997</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>LinuxDeepin 9.12 正式版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60996</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>como js 一个国产的js(Javascript)框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60995</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Opera 10.5 新版本预览</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60994</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Dojo 1.4发布：性能改进、稳定性提升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60993</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>GNU Emacs开始使用Bazaar版本控制系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60992</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>新手教程：在Fedora 12上安装谷歌应用程序</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60991</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>圣诞大餐：Sabayon Linux 5.1游戏版发布[附图]</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60990</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>红帽公司报告第三季度业绩</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60989</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mono 2.6、MonoDevelop 2.2和Moonlight 2发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60988</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Xen.org将于2010年公布Xen 4.0</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60987</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>仿XP三枪斗微软，雨林木风Linux拍案惊奇</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60986</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>GWT 2.0：新性能工具——Speed Tracer</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60985</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Terracotta/Quartz集成带来了基于内存集群的分布式任务调度功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60984</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Spring 3.0发布：基于Java5，添加了新的表达式语言和对REST的支持</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60983</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>微软承诺不会起诉Moonlight用户</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60982</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>VideoLAN 项目发布 VLMC 非线性视频编辑器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60981</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JDK 7 将削减依赖、重铸锋芒</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60980</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 4.0最新用户界面设计曝光</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60979</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>系统统计收集守护进程 Collectd 4.9 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60978</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Songbird 1.4.1 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60977</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Red Hat宣布RHEL 6将不再支持安腾</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60976</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Clearbox 3 一个很酷的仿Lightbox脚本</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60975</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google发布Browser Size 助你提高网站可用性和转化率</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60974</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 3.5 超过 IE7 成为最流行浏览器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60973</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源内容管理系统 webEdition 6 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60972</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>超酷的Ajax框架：qooxdoo 1.0 发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60971</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在线文字处理平台EtherPad开源</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60970</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>WordPress 2.9正式版新功能详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60969</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源软件是SOA的未来吗？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60968</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu创始人Marks让出Canonical公司CEO职位</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60967</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>三款桌面虚拟化软件大比拼</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60966</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>适合中小企业信息化建设的开源软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60965</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla规划Firefox未来力促开源发展</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60964</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>操作微软Office文档的JAVA api项目：Apache POI 3.6发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60963</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Spring 3.0.0 GA 正式版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60962</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源SNS软件iwebSNS v0.9beta发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60961</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>3个降低温室气体排放的开源项目</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60960</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox 3.6新功能预览</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60959</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>六大免费在线网络操作系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60958</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla Weave 1.0 即将发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60957</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Sun公司上演帽子戏法，同时发布多款软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60956</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Zend Studio 7.1 正式发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60955</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Dropbox 发布 0.7.79 正式版本，性能有所提升</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60954</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>选择 CentOS 还是 Scientific Linux</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60953</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>谷歌发布 Web Toolkit 2.0</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60952</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>法军方参与 Mozilla Thunderbird 电邮软件开发以对抗微软</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60951</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>D-link发布了基于Linux的IP机顶盒[图]</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60950</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Mozilla Messaging 正式发布最新版本 Thunderbird 3 (雷鸟）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60949</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux系统下10个最好的免费（开源）ERP 软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60948</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux Mint 8最终版发布【截图】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60947</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>微软的云计算平台支持Ruby on Rails</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60946</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Firefox扩展更精彩，Mozilla宣布FireFox扩展评选获胜者</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60945</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>微软和OpenX合作推广网络广告技术</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60944</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源的广告系统 OpenX 试用</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60943</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐11个免费开源的bug追踪软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60942</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐一个 HTML5 视频框架 -- Popcorn.js</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60941</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>介绍一个完整的开源的项目开发跟踪、管理工具 – mtrack</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60940</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐几款语法高亮显示模块来美化网页上的程序显示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60939</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>独立的、功能丰富的 JavaScript 窗口控件(Modal Windows) – TinyBox2</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60938</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>为jQuery简化数据处理 – Amplify</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60937</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>精选前端开发15个国外CSS框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60936</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery 文件上传插件，支持拖曳功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60935</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>qsopcast：Ubuntu Linux下的P2P网络电视</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60934</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Google Reader 的桌面客户端软件 – WebReader</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60933</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>移动WEB应用的编程语言 - mobl</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60932</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>龙芯梦兰:为龙芯开发了Android平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60931</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ECShop网店系统 V2.7.1正式版发布</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60930</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JavaScript Slider(滑动页) – TinySlider 2</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60929</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Timeglider – 一个超酷的jQuery数据驱动时间表插件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60928</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>RedHat系运维/开发必读资源汇总</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60927</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>20步打造最安全的Nginx Web服务器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60926</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>最重要的Nginx Web服务器安全配置详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60925</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ubuntu 11.10 给我们带来一些重要的新特性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60924</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Cron的详细用法：定时执行和间隔时间执行</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60923</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>TaoCode的平台选择思考</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60922</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用Gitolite 构建 Git 服务器</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60921</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ubuntu修改密码提示太短或太简单怎么办？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60920</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>如何配置来完成PostgreSQL数据库远程连接</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60919</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ubuntu 11.04下安装fcitx</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60918</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>如何设置SSH服务中终端的超时时间或不超时</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60917</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>怎么知道当前Ubuntu系统是32位还是64位？</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60916</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>debian中打开exim4的发邮件功能</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60915</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源Python UI框架：Kivy</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60914</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用MongoDB 加速 Drupal7 Field 存储</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60913</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>OpenPublish安装手记</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60912</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>建站系统 Joomla 与 Drupal 概念区别</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60911</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Raphaël 编写的矢量动态图形 Bar Chart</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60910</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用Raphael矢量图形处理程序库进行图形变化(Prototype,jQuery)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60909</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Javascript判断浏览器是否为IE的最短方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60908</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>浏览器加载网页的工作机制</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60907</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>介绍几个非常实用的CSS3实例控件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60906</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用CSS属性text-overflow截断字符串显示</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60905</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux正在迅速增长</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60904</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Unix/Linux下的强大调试工具：lsof</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60903</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Gpg4win使用教程</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60902</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux下如何使用Wget从迅雷离线下载中心下载文件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60901</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>wget命令行下载工具使用详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60900</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Symphony支持指导手册</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60899</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Symphony的“道”</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60898</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>e107内容管理系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60897</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>深喉咙企业网站系统</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60896</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Dedesql数据库类详解(二次开发必备教程)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60895</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>DedeCMS V5.3 模板标签参考手册</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60894</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>关于DedeAMPZ整合包使用的常见问题说明</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60893</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>DedeCMS V5.3系统安装教程</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60892</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>关于 XOOPS</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60891</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Xoops世界简讯</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60890</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>miaCMS概况</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60889</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>内容管理系统单元</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60888</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Tellmatic快速指导</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60887</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>《帝国网站管理系统》使用教程</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60886</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>工作流 moregroupware</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60885</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源LCMS软件——ATutor的功能评估及功能研究</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60884</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源学习平台之Atutor最佳</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60883</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ATutor开源的教学内容管理系统本地安装</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60882</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>ATutor开源的教学内容管理系统本地安装</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60881</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源LCMS软件——ATutor的功能评估及功能研究</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60880</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>龙井Longene-0.3.0安装说明</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60879</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在Squid中限制网络带宽的实例讲解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60878</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>升级安装 Ubuntu 11.04 后该做的20项优化工作</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60877</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>《Modern Perl》中/英文版</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60876</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP单元测试利器：PHPUNIT深入用法(二)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60875</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP单元测试利器：PHPUNIT深入用法(一)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60874</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PHP单元测试利器：PHPUNIT初探</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60873</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>PostgreSQL数据库管理入门之psql工具篇</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60872</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery 1.5 的六大细节改进:DOM操作更简单</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60871</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Scintilla使用指南</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60870</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>scintilla 中的代码折叠功能的使用</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60869</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>如何在 Windows 环境下使用 Scintilla 编辑控件?</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60868</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Scintilla的高级技法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60867</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>用Scintilla让程序支持语法高亮</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60866</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux Kernel（内核）程序架构图</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60865</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 10.10 下编译 Wayland 全过程</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60864</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>揭开Wayland的面纱（二）：Wayland应运而生</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60863</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>GPL 与 Apple App Store 规则的冲突分析</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60862</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>jQuery lightBox plugin 的使用方法详解【修订版】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60861</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JavaScript的js文件压缩和格式化工具</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60860</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>单点登录（SSO）相关技术介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60859</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>CoSign 3.x 介绍及与 CoSign 2.x 的协议比较</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60858</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>开源单点登录架构 CoSign 2.x 协议介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60857</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>CAS的php客户端实践：单点登录整合php程序</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60856</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>CAS单点登录完整教程【good】</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60855</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>单点登录CAS的使用方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60854</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>采用CAS原理构建单点登录</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60853</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在UBUNTU Netbook中使用Empathy进行MSN语音或视频聊天</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60852</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>使用Redmine+Apache+SVN+Postfix搭建项目管理系统的完整配置指南</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60851</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>各种主流浏览器内核引擎的对比分析</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60850</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>JavaScript提交表单数组</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60849</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>javascript动态添加表单元素input,button等(appendChild)</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60848</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>smarty模板与这种变量处理</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60847</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>HTML5本地存储初探</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60846</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>php截取html摘要，自动检查html标签闭合</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60845</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在Jolicloud中使用PPTP连接VPN</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60844</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Ubuntu 10.04 中 Ubuntu One 不能同步的解决方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60843</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Sphinx搜索引擎架构与使用文档(和MySQL结合)全文</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60842</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于Sphinx构建准实时更新的分布式通用搜索引擎平台</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60841</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>基于Sphinx+MySQL全文检索架构设计</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60840</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Lucene：开源全文检索引擎详细介绍</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60839</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>GNU screen 替代品 Tmux 的常用命令详解</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60838</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>浅谈PHP Extension的开发</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60837</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>通过 PHP、XML 和 jQuery 实现即时性</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60836</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>详细介绍CDDL开源协议</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60835</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>&lt; Linux 应用小贴士 &gt; vi/vim 中使用 :s 命令实现字符串替换</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60834</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>WinXp Home版的文件/目录权限设置方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60833</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐十个最有前途的JavaScript（Ajax）框架</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60832</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>天涯社区高性能数据引擎Memlink技术特性分析</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60831</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>php框架YII的目录结构说明</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60830</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>推荐web页面开发中11个Javascript（AJAX）树形菜单（树形控件）</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60829</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>在 Debian 与 Exim4 下安装 Mailman 邮件列表软件</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60828</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Linux下Bugzilla安装与配置</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60827</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>Bugzilla安装问题总汇及解决方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60826</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
<item>
<title>用PHP伪静态隐藏URL传递参数名的四种方法</title>
<link>http://oss.org.cn/?action-viewnews-itemid-60825</link>
<text></text>
<image />
<source>http://oss.org.cn</source>
<author>zhangy</author>
<pubDate>2004-09-25 11:54:06</pubDate>
</item>
</document>